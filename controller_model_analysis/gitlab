Start 2018-08-18 15:15:52 -0500
call_file ../applications/pw-gitlab//calls.txt
ruby main.rb -d ../applications/pw-gitlab/ -p AbuseReportsController,create
Start 2018-08-18 15:15:52 -0500
dir = ../applications/pw-gitlab/
run performance
resolve_upper_class: 0.017208
resolve_upper_class: 0.017215
ADD INDEX: AuditEvent, author_id
ADD INDEX: AuditEvent, entity_id
ADD INDEX: AuditEvent, type
ADD INDEX: Ci::Build, commit_id
ADD INDEX: Ci::Build, commit_id
ADD INDEX: Ci::Build, commit_id
ADD INDEX: Ci::Build, commit_id
ADD INDEX: Ci::Build, commit_id
ADD INDEX: Ci::Build, erased_by_id
ADD INDEX: Ci::Build, gl_project_id
ADD INDEX: Ci::Build, project_id
ADD INDEX: Ci::Build, project_id
ADD INDEX: Ci::Build, runner_id
ADD INDEX: Ci::Build, status
ADD INDEX: Ci::Build, type
read schema: class ci_commits (CiCommit) cannot be found!
INDEX:: TABLE ci_commits - CiCommit field gl_project_id cannot be found
INDEX:: TABLE ci_commits - CiCommit field gl_project_id cannot be found
INDEX:: TABLE ci_commits - CiCommit field gl_project_id cannot be found
INDEX:: TABLE ci_commits - CiCommit field project_id cannot be found
INDEX:: TABLE ci_commits - CiCommit field project_id cannot be found
INDEX:: TABLE ci_commits - CiCommit field project_id cannot be found
INDEX:: TABLE ci_commits - CiCommit field project_id cannot be found
INDEX:: TABLE ci_commits - CiCommit field sha cannot be found
INDEX:: TABLE ci_commits - CiCommit field status cannot be found
ADD INDEX: Event, created_at
ADD INDEX: Event, is_admin
ADD INDEX: Event, project_id
read schema: class ci_jobs (CiJob) cannot be found!
INDEX:: TABLE ci_jobs - CiJob field deleted_at cannot be found
INDEX:: TABLE ci_jobs - CiJob field project_id cannot be found
read schema: class ci_projects (CiProject) cannot be found!
INDEX:: TABLE ci_projects - CiProject field gitlab_id cannot be found
INDEX:: TABLE ci_projects - CiProject field shared_runners_enabled cannot be found
ADD INDEX: Ci::RunnerProject, gl_project_id
ADD INDEX: Ci::RunnerProject, runner_id
ADD INDEX: Ci::Runner, description
ADD INDEX: Ci::Runner, token
ADD INDEX: Ci::Runner, token
ADD INDEX: CiService, project_id
read schema: class ci_sessions (CiSession) cannot be found!
INDEX:: TABLE ci_sessions - CiSession field session_id cannot be found
INDEX:: TABLE ci_sessions - CiSession field updated_at cannot be found
read schema: class ci_taggings (CiTagging) cannot be found!
INDEX:: TABLE ci_taggings - CiTagging field tag_id cannot be found
INDEX:: TABLE ci_taggings - CiTagging field taggable_id cannot be found
read schema: class ci_tags (CiTag) cannot be found!
INDEX:: TABLE ci_tags - CiTag field name cannot be found
ADD INDEX: Ci::Trigger, deleted_at
ADD INDEX: Ci::Trigger, gl_project_id
ADD INDEX: Ci::Variable, gl_project_id
read schema: class ci_web_hooks (CiWebHook) cannot be found!
ADD INDEX: DeployKeysProject, project_id
ADD INDEX: Email, email
ADD INDEX: Email, user_id
ADD INDEX: Event, action
ADD INDEX: Event, author_id
ADD INDEX: Event, created_at
ADD INDEX: Event, project_id
ADD INDEX: Event, target_id
ADD INDEX: Event, target_type
ADD INDEX: ForkedProjectLink, forked_to_project_id
ADD INDEX: Identity, created_at
ADD INDEX: Identity, user_id
ADD INDEX: Issue, assignee_id
ADD INDEX: Issue, author_id
ADD INDEX: Issue, confidential
ADD INDEX: Issue, created_at
ADD INDEX: Issue, created_at
ADD INDEX: Issue, deleted_at
ADD INDEX: Issue, description
ADD INDEX: Issue, due_date
ADD INDEX: Issue, milestone_id
ADD INDEX: Issue, project_id
ADD INDEX: Issue, project_id
ADD INDEX: Issue, state
ADD INDEX: Issue, title
ADD INDEX: Issue, title
ADD INDEX: Key, created_at
ADD INDEX: Key, user_id
ADD INDEX: LabelLink, label_id
ADD INDEX: LabelLink, target_id
ADD INDEX: Label, project_id
ADD INDEX: LfsObject, oid
ADD INDEX: LfsObjectsProject, project_id
ADD INDEX: Member, access_level
ADD INDEX: Member, created_at
ADD INDEX: Member, invite_token
ADD INDEX: Member, source_id
ADD INDEX: Member, type
ADD INDEX: Member, user_id
ADD INDEX: MergeRequestDiff, merge_request_id
ADD INDEX: MergeRequest, assignee_id
ADD INDEX: MergeRequest, author_id
ADD INDEX: MergeRequest, created_at
ADD INDEX: MergeRequest, created_at
ADD INDEX: MergeRequest, deleted_at
ADD INDEX: MergeRequest, description
ADD INDEX: MergeRequest, milestone_id
ADD INDEX: MergeRequest, source_branch
ADD INDEX: MergeRequest, source_project_id
ADD INDEX: MergeRequest, target_branch
ADD INDEX: MergeRequest, target_project_id
ADD INDEX: MergeRequest, title
ADD INDEX: MergeRequest, title
ADD INDEX: Milestone, created_at
ADD INDEX: Milestone, description
ADD INDEX: Milestone, due_date
ADD INDEX: Milestone, project_id
ADD INDEX: Milestone, project_id
ADD INDEX: Milestone, title
ADD INDEX: Milestone, title
ADD INDEX: Namespace, created_at
ADD INDEX: Namespace, name
ADD INDEX: Namespace, name
ADD INDEX: Namespace, owner_id
ADD INDEX: Namespace, path
ADD INDEX: Namespace, path
ADD INDEX: Namespace, type
ADD INDEX: Namespace, visibility_level
read schema: class notes (Note) cannot be found!
INDEX:: TABLE notes - Note field author_id cannot be found
INDEX:: TABLE notes - Note field commit_id cannot be found
INDEX:: TABLE notes - Note field created_at cannot be found
INDEX:: TABLE notes - Note field created_at cannot be found
INDEX:: TABLE notes - Note field is_award cannot be found
INDEX:: TABLE notes - Note field line_code cannot be found
INDEX:: TABLE notes - Note field note cannot be found
INDEX:: TABLE notes - Note field noteable_id cannot be found
INDEX:: TABLE notes - Note field noteable_type cannot be found
INDEX:: TABLE notes - Note field project_id cannot be found
INDEX:: TABLE notes - Note field project_id cannot be found
INDEX:: TABLE notes - Note field updated_at cannot be found
ADD INDEX: NotificationSetting, source_id
ADD INDEX: NotificationSetting, user_id
ADD INDEX: OauthAccessGrant, token
ADD INDEX: OauthAccessToken, refresh_token
ADD INDEX: OauthAccessToken, resource_owner_id
ADD INDEX: OauthAccessToken, token
read schema: class oauth_applications (OauthApplication) cannot be found!
INDEX:: TABLE oauth_applications - OauthApplication field owner_id cannot be found
INDEX:: TABLE oauth_applications - OauthApplication field uid cannot be found
ADD INDEX: Project, builds_enabled
ADD INDEX: Project, builds_enabled
ADD INDEX: Project, ci_id
ADD INDEX: Project, created_at
ADD INDEX: Project, creator_id
ADD INDEX: Project, description
ADD INDEX: Project, last_activity_at
ADD INDEX: Project, last_repository_check_failed
ADD INDEX: Project, name
ADD INDEX: Project, namespace_id
ADD INDEX: Project, path
ADD INDEX: Project, path
ADD INDEX: Project, pending_delete
ADD INDEX: Project, runners_token
ADD INDEX: Project, star_count
ADD INDEX: Project, visibility_level
ADD INDEX: ProtectedBranch, project_id
ADD INDEX: Release, project_id
ADD INDEX: Release, project_id
ADD INDEX: SentNotification, reply_key
ADD INDEX: Service, category
ADD INDEX: Service, created_at
ADD INDEX: Service, default
ADD INDEX: Service, project_id
ADD INDEX: Service, template
ADD INDEX: Snippet, author_id
ADD INDEX: Snippet, created_at
ADD INDEX: Snippet, created_at
ADD INDEX: Snippet, file_name
ADD INDEX: Snippet, project_id
ADD INDEX: Snippet, title
ADD INDEX: Snippet, updated_at
ADD INDEX: Snippet, visibility_level
ADD INDEX: Subscription, subscribable_id
read schema: class taggings (Tagging) cannot be found!
INDEX:: TABLE taggings - Tagging field tag_id cannot be found
INDEX:: TABLE taggings - Tagging field taggable_id cannot be found
read schema: class tags (Tag) cannot be found!
INDEX:: TABLE tags - Tag field name cannot be found
ADD INDEX: Todo, author_id
ADD INDEX: Todo, commit_id
ADD INDEX: Todo, note_id
ADD INDEX: Todo, project_id
ADD INDEX: Todo, state
ADD INDEX: Todo, target_type
ADD INDEX: Todo, user_id
ADD INDEX: User, admin
ADD INDEX: User, authentication_token
ADD INDEX: User, confirmation_token
ADD INDEX: User, created_at
ADD INDEX: User, current_sign_in_at
ADD INDEX: User, email
ADD INDEX: User, email
ADD INDEX: User, name
ADD INDEX: User, name
ADD INDEX: User, reset_password_token
ADD INDEX: User, username
ADD INDEX: User, username
ADD INDEX: UsersStarProject, project_id
ADD INDEX: UsersStarProject, user_id
ADD INDEX: UsersStarProject, user_id
ADD INDEX: WebHook, created_at
ADD INDEX: WebHook, project_id
read_schema: 1.186683
ForkProjectsFinder.initialize, Found super ProjectsFinder
GroupProjectsFinder.initialize, Found super ProjectsFinder
DeferScriptTagHelper.javascript_include_tag, Found super 
LazyImageTagHelper.image_tag, Found super 
ApplicationSetting.default_project_visibility=, Found super ActiveRecord::Base
ApplicationSetting.default_snippet_visibility=, Found super ActiveRecord::Base
ApplicationSetting.default_group_visibility=, Found super ActiveRecord::Base
ApplicationSetting.restricted_visibility_levels=, Found super ActiveRecord::Base
ApplicationSetting.performance_bar_allowed_group_id=, Found super ActiveRecord::Base
ApplicationSetting.performance_bar_allowed_group_id=, Found super ActiveRecord::Base
ApplicationSetting.performance_bar_allowed_group_id=, Found super ActiveRecord::Base
AwardEmoji.downvotes, Found super ActiveRecord::Base
AwardEmoji.upvotes, Found super ActiveRecord::Base
Badge.order_created_at_asc, Found super ActiveRecord::Base
Blob.initialize, Found super SimpleDelegator
Blob.load_all_data!, Found super SimpleDelegator
Ci::Build.unstarted, Found super 
Ci::Build.ignore_failures, Found super 
Ci::Build.with_artifacts_archive, Found super 
Ci::Build.with_artifacts_stored_locally, Found super 
Ci::Build.with_artifacts_not_expired, Found super 
Ci::Build.with_expired_artifacts, Found super 
Ci::Build.last_month, Found super 
Ci::Build.manual_actions, Found super 
Ci::Build.ref_protected, Found super 
Ci::Build.matches_tag_ids, Found super 
Ci::Build.with_any_tags, Found super 
Ci::Build.serializable_hash, Found super 
Ci::GroupVariable.unprotected, Found super 
Ci::JobArtifact.with_files_stored_locally, Found super 
Ci::Pipeline.internal, Found super 
Ci::PipelineSchedule.active, Found super 
Ci::PipelineSchedule.inactive, Found super 
Ci::Runner.specific, Found super 
Ci::Runner.shared, Found super 
Ci::Runner.active, Found super 
Ci::Runner.paused, Found super 
Ci::Runner.online, Found super 
Ci::Runner.ordered, Found super 
Ci::Runner.owned_or_shared, Found super 
Ci::Runner.assignable_for, Found super 
Ci::Variable.unprotected, Found super 
Clusters::Cluster.enabled, Found super 
Clusters::Cluster.disabled, Found super 
Clusters::Cluster.user_provided, Found super 
Clusters::Cluster.gcp_provided, Found super 
Clusters::Cluster.gcp_installed, Found super 
Clusters::Cluster.default_environment, Found super 
Clusters::Concerns::ApplicationStatus.installed, Found super 
Commit.link_reference_pattern, Found super 
CommitRange.link_reference_pattern, Found super 
CommitStatus.failed_but_allowed, Found super ActiveRecord::Base
CommitStatus.exclude_ignored, Found super ActiveRecord::Base
CommitStatus.latest, Found super ActiveRecord::Base
CommitStatus.retried, Found super ActiveRecord::Base
CommitStatus.ordered, Found super ActiveRecord::Base
CommitStatus.latest_ordered, Found super ActiveRecord::Base
CommitStatus.retried_ordered, Found super ActiveRecord::Base
CommitStatus.after_stage, Found super ActiveRecord::Base
CreatedAtFilterable.created_before, Found super 
CreatedAtFilterable.created_after, Found super 
Expirable.expired, Found super 
HasStatus.created, Found super 
HasStatus.relevant, Found super 
HasStatus.running, Found super 
HasStatus.pending, Found super 
HasStatus.success, Found super 
HasStatus.failed, Found super 
HasStatus.canceled, Found super 
HasStatus.skipped, Found super 
HasStatus.manual, Found super 
HasStatus.alive, Found super 
HasStatus.created_or_pending, Found super 
HasStatus.running_or_pending, Found super 
HasStatus.finished, Found super 
HasStatus.failed_or_canceled, Found super 
HasStatus.cancelable, Found super 
HasVariable.order_key_asc, Found super 
HasVariable.key=, Found super 
Issuable::ClassMethods.authored, Found super 
Issuable::ClassMethods.recent, Found super 
Issuable::ClassMethods.of_projects, Found super 
Issuable::ClassMethods.of_milestones, Found super 
Issuable::ClassMethods.with_milestone, Found super 
Issuable::ClassMethods.opened, Found super 
Issuable::ClassMethods.only_opened, Found super 
Issuable::ClassMethods.closed, Found super 
Issuable::ClassMethods.left_joins_milestones, Found super 
Issuable::ClassMethods.order_milestone_due_desc, Found super 
Issuable::ClassMethods.order_milestone_due_asc, Found super 
Issuable::ClassMethods.without_label, Found super 
Issuable::ClassMethods.join_project, Found super 
Issuable::ClassMethods.inc_notes_with_associations, Found super 
Issuable::ClassMethods.references_project, Found super 
Issuable::ClassMethods.non_archived, Found super 
ManualInverseAssociation::ClassMethods.manual_inverse_association, Found super 
ProtectedRefAccess.master, Found super 
ProtectedRefAccess.developer, Found super 
ResolvableNote::ClassMethods.potentially_resolvable, Found super 
ResolvableNote::ClassMethods.resolvable, Found super 
ResolvableNote::ClassMethods.resolved, Found super 
ResolvableNote::ClassMethods.unresolved, Found super 
Routable.with_route, Found super 
Sortable::ClassMethods.order_id_desc, Found super 
Sortable::ClassMethods.order_id_asc, Found super 
Sortable::ClassMethods.order_created_desc, Found super 
Sortable::ClassMethods.order_created_asc, Found super 
Sortable::ClassMethods.order_updated_desc, Found super 
Sortable::ClassMethods.order_updated_asc, Found super 
Sortable::ClassMethods.order_name_asc, Found super 
Sortable::ClassMethods.order_name_desc, Found super 
UpdatedAtFilterable.updated_before, Found super 
UpdatedAtFilterable.updated_after, Found super 
DeployKey.in_projects, Found super Key
DeployKey.are_public, Found super Key
DeployKeysProject.without_project_deleted, Found super ActiveRecord::Base
DeployKeysProject.in_project, Found super ActiveRecord::Base
DeployKeysProject.with_write_access, Found super ActiveRecord::Base
DeployToken.active, Found super ActiveRecord::Base
Email.confirmed, Found super ActiveRecord::Base
Environment.available, Found super ActiveRecord::Base
Environment.stopped, Found super ActiveRecord::Base
Environment.order_by_last_deployed_at, Found super ActiveRecord::Base
Environment.in_review_folder, Found super ActiveRecord::Base
Event.recent, Found super ActiveRecord::Base
Event.code_push, Found super ActiveRecord::Base
Event.in_projects, Found super ActiveRecord::Base
Event.with_associations, Found super ActiveRecord::Base
Event.for_milestone_id, Found super ActiveRecord::Base
GpgKey.with_subkeys, Found super ActiveRecord::Base
GpgKey.key=, Found super ActiveRecord::Base
GroupMilestone.build_collection, Found super GlobalMilestone
GroupMilestone.build, Found super GlobalMilestone
Identity.with_provider, Found super ActiveRecord::Base
Identity.with_extern_uid, Found super ActiveRecord::Base
Issue.in_projects, Found super ActiveRecord::Base
Issue.assigned, Found super ActiveRecord::Base
Issue.unassigned, Found super ActiveRecord::Base
Issue.assigned_to, Found super ActiveRecord::Base
Issue.without_due_date, Found super ActiveRecord::Base
Issue.due_before, Found super ActiveRecord::Base
Issue.due_between, Found super ActiveRecord::Base
Issue.due_tomorrow, Found super ActiveRecord::Base
Issue.order_due_date_asc, Found super ActiveRecord::Base
Issue.order_due_date_desc, Found super ActiveRecord::Base
Issue.preload_associations, Found super ActiveRecord::Base
Issue.public_only, Found super ActiveRecord::Base
Issue.link_reference_pattern, Found super ActiveRecord::Base
Issue.as_json, Found super ActiveRecord::Base
Label.templates, Found super ActiveRecord::Base
Label.with_title, Found super ActiveRecord::Base
Label.with_lists_and_board, Found super ActiveRecord::Base
Label.on_group_boards, Found super ActiveRecord::Base
Label.on_project_boards, Found super ActiveRecord::Base
Label.as_json, Found super ActiveRecord::Base
LfsObject.with_files_stored_locally, Found super ActiveRecord::Base
List.destroyable, Found super ActiveRecord::Base
List.movable, Found super ActiveRecord::Base
List.as_json, Found super ActiveRecord::Base
Member.active, Found super ActiveRecord::Base
Member.active_without_invites_and_requests, Found super ActiveRecord::Base
Member.invite, Found super ActiveRecord::Base
Member.non_invite, Found super ActiveRecord::Base
Member.request, Found super ActiveRecord::Base
Member.non_request, Found super ActiveRecord::Base
Member.has_access, Found super ActiveRecord::Base
Member.guests, Found super ActiveRecord::Base
Member.reporters, Found super ActiveRecord::Base
Member.developers, Found super ActiveRecord::Base
Member.masters, Found super ActiveRecord::Base
Member.owners, Found super ActiveRecord::Base
Member.owners_and_masters, Found super ActiveRecord::Base
Member.order_name_asc, Found super ActiveRecord::Base
Member.order_name_desc, Found super ActiveRecord::Base
Member.order_recent_sign_in, Found super ActiveRecord::Base
Member.order_oldest_sign_in, Found super ActiveRecord::Base
ProjectMember.in_project, Found super Member
MergeRequest.by_source_or_target_branch, Found super ActiveRecord::Base
MergeRequest.by_milestone, Found super ActiveRecord::Base
MergeRequest.of_projects, Found super ActiveRecord::Base
MergeRequest.from_project, Found super ActiveRecord::Base
MergeRequest.merged, Found super ActiveRecord::Base
MergeRequest.closed_and_merged, Found super ActiveRecord::Base
MergeRequest.from_source_branches, Found super ActiveRecord::Base
MergeRequest.by_commit_sha, Found super ActiveRecord::Base
MergeRequest.join_project, Found super ActiveRecord::Base
MergeRequest.references_project, Found super ActiveRecord::Base
MergeRequest.assigned, Found super ActiveRecord::Base
MergeRequest.unassigned, Found super ActiveRecord::Base
MergeRequest.assigned_to, Found super ActiveRecord::Base
MergeRequest.link_reference_pattern, Found super ActiveRecord::Base
MergeRequestDiff.viewable, Found super ActiveRecord::Base
MergeRequestDiff.by_commit_sha, Found super ActiveRecord::Base
MergeRequestDiff.recent, Found super ActiveRecord::Base
Milestone.of_projects, Found super ActiveRecord::Base
Milestone.of_groups, Found super ActiveRecord::Base
Milestone.active, Found super ActiveRecord::Base
Milestone.closed, Found super ActiveRecord::Base
Milestone.for_projects, Found super ActiveRecord::Base
Milestone.for_projects_and_groups, Found super ActiveRecord::Base
Milestone.link_reference_pattern, Found super ActiveRecord::Base
Namespace.for_user, Found super ActiveRecord::Base
Namespace.with_statistics, Found super ActiveRecord::Base
Note::SpecialRole.for_commit_id, Found super ActiveRecord::Base
Note::SpecialRole.system, Found super ActiveRecord::Base
Note::SpecialRole.user, Found super ActiveRecord::Base
Note::SpecialRole.common, Found super ActiveRecord::Base
Note::SpecialRole.fresh, Found super ActiveRecord::Base
Note::SpecialRole.updated_after, Found super ActiveRecord::Base
Note::SpecialRole.inc_author_project, Found super ActiveRecord::Base
Note::SpecialRole.inc_author, Found super ActiveRecord::Base
Note::SpecialRole.inc_relations_for_view, Found super ActiveRecord::Base
Note::SpecialRole.diff_notes, Found super ActiveRecord::Base
Note::SpecialRole.new_diff_notes, Found super ActiveRecord::Base
Note::SpecialRole.non_diff_notes, Found super ActiveRecord::Base
Note::SpecialRole.with_associations, Found super ActiveRecord::Base
Note::SpecialRole.with_metadata, Found super ActiveRecord::Base
Note::SpecialRole.noteable_type=, Found super ActiveRecord::Base
Note::SpecialRole.discussion_id, Found super ActiveRecord::Base
NotificationSetting.for_groups, Found super ActiveRecord::Base
NotificationSetting.for_projects, Found super ActiveRecord::Base
OauthAccessToken.scopes=, Found super Doorkeeper::AccessToken
PagesDomain.enabled, Found super ActiveRecord::Base
PagesDomain.needs_verification, Found super ActiveRecord::Base
PersonalAccessToken.active, Found super ActiveRecord::Base
PersonalAccessToken.inactive, Found super ActiveRecord::Base
PersonalAccessToken.with_impersonation, Found super ActiveRecord::Base
PersonalAccessToken.without_impersonation, Found super ActiveRecord::Base
Project.pending_delete, Found super ActiveRecord::Base
Project.without_deleted, Found super ActiveRecord::Base
Project.with_storage_feature, Found super ActiveRecord::Base
Project.without_storage_feature, Found super ActiveRecord::Base
Project.with_unmigrated_storage, Found super ActiveRecord::Base
Project.sorted_by_activity, Found super ActiveRecord::Base
Project.sorted_by_stars, Found super ActiveRecord::Base
Project.in_namespace, Found super ActiveRecord::Base
Project.personal, Found super ActiveRecord::Base
Project.joined, Found super ActiveRecord::Base
Project.starred_by, Found super ActiveRecord::Base
Project.visible_to_user, Found super ActiveRecord::Base
Project.archived, Found super ActiveRecord::Base
Project.non_archived, Found super ActiveRecord::Base
Project.for_milestones, Found super ActiveRecord::Base
Project.with_push, Found super ActiveRecord::Base
Project.with_project_feature, Found super ActiveRecord::Base
Project.with_statistics, Found super ActiveRecord::Base
Project.with_shared_runners, Found super ActiveRecord::Base
Project.inside_path, Found super ActiveRecord::Base
Project.with_feature_enabled, Found super ActiveRecord::Base
Project.with_feature_access_level, Found super ActiveRecord::Base
Project.with_builds_enabled, Found super ActiveRecord::Base
Project.with_issues_enabled, Found super ActiveRecord::Base
Project.with_issues_available_for_user, Found super ActiveRecord::Base
Project.with_merge_requests_enabled, Found super ActiveRecord::Base
Project.active, Found super ActiveRecord::Base
Project.abandoned, Found super ActiveRecord::Base
Project.excluding_project, Found super ActiveRecord::Base
Project.import_started, Found super ActiveRecord::Base
Project.ci_config_path=, Found super ActiveRecord::Base
Project.import_url=, Found super ActiveRecord::Base
Project.import_url=, Found super ActiveRecord::Base
ProjectAutoDevops.enabled, Found super ActiveRecord::Base
ProjectAutoDevops.disabled, Found super ActiveRecord::Base
ProjectLabel.to_reference, Found super Label
MicrosoftTeamsService.custom_data, Found super ChatNotificationService
ProjectSnippet.fresh, Found super Snippet
ReadmeBlob.initialize, Found super SimpleDelegator
RedirectRoute.matching_path_and_descendants, Found super ActiveRecord::Base
Route.inside_path, Found super ActiveRecord::Base
SentNotification.position=, Found super ActiveRecord::Base
Service.visible, Found super ActiveRecord::Base
Service.issue_trackers, Found super ActiveRecord::Base
Service.external_wikis, Found super ActiveRecord::Base
Service.active, Found super ActiveRecord::Base
Service.without_defaults, Found super ActiveRecord::Base
Service.push_hooks, Found super ActiveRecord::Base
Service.tag_push_hooks, Found super ActiveRecord::Base
Service.issue_hooks, Found super ActiveRecord::Base
Service.confidential_issue_hooks, Found super ActiveRecord::Base
Service.merge_request_hooks, Found super ActiveRecord::Base
Service.note_hooks, Found super ActiveRecord::Base
Service.confidential_note_hooks, Found super ActiveRecord::Base
Service.job_hooks, Found super ActiveRecord::Base
Service.pipeline_hooks, Found super ActiveRecord::Base
Service.wiki_page_hooks, Found super ActiveRecord::Base
Service.external_issue_trackers, Found super ActiveRecord::Base
Service.deployment, Found super ActiveRecord::Base
Snippet.are_internal, Found super ActiveRecord::Base
Snippet.are_private, Found super ActiveRecord::Base
Snippet.are_public, Found super ActiveRecord::Base
Snippet.public_and_internal, Found super ActiveRecord::Base
Snippet.fresh, Found super ActiveRecord::Base
Snippet.link_reference_pattern, Found super ActiveRecord::Base
Todo.pending, Found super ActiveRecord::Base
Todo.done, Found super ActiveRecord::Base
Upload.with_files_stored_locally, Found super ActiveRecord::Base
User.admins, Found super ActiveRecord::Base
User.blocked, Found super ActiveRecord::Base
User.external, Found super ActiveRecord::Base
User.active, Found super ActiveRecord::Base
User.without_projects, Found super ActiveRecord::Base
User.todo_authors, Found super ActiveRecord::Base
User.order_recent_sign_in, Found super ActiveRecord::Base
User.order_oldest_sign_in, Found super ActiveRecord::Base
User.authorized_projects, Found super ActiveRecord::Base
AnalyticsGenericSerializer.represent, Found super BaseSerializer
WithPagination.represent, Found super 
WithPagination.represent, Found super 
ContainerTagsSerializer.represent, Found super BaseSerializer
EnvironmentSerializer.represent, Found super BaseSerializer
EnvironmentSerializer.represent, Found super BaseSerializer
GroupChildSerializer.represent, Found super BaseSerializer
IssueSerializer.represent, Found super BaseSerializer
MergeRequestSerializer.represent, Found super BaseSerializer
PipelineSerializer.represent, Found super BaseSerializer
PipelineSerializer.represent, Found super BaseSerializer
Boards::Issues::CreateService.initialize, Found super 
CreateBranchService.success, Found super BaseService
CreateReleaseService.success, Found super BaseService
DeleteBranchService.error, Found super BaseService
DeleteBranchService.success, Found super BaseService
MergeRequests::CreateFromIssueService.initialize, Found super 
MergeRequests::CreateFromIssueService.success, Found super 
Search::GroupService.initialize, Found super 
Tags::DestroyService.error, Found super 
Tags::DestroyService.success, Found super 
UpdateReleaseService.success, Found super BaseService
UpdateSnippetService.initialize, Found super BaseService
FileUploader.initialize, Found super GitlabUploader
GitlabUploader.initialize, Found super CarrierWave::Uploader::Base
UrlPlaceholderValidator.validate_each, Found super UrlValidator
WaitableWorker::ClassMethods.perform, Found super 
ObjectStorage::MigrateUploadsWorker::Upload.stored_locally, Found super ActiveRecord::Base
ObjectStorage::MigrateUploadsWorker::Upload.stored_remotely, Found super ActiveRecord::Base
ObjectStorage::MigrateUploadsWorker::Report::MigrationFailures.stored_locally, Found super 
ObjectStorage::MigrateUploadsWorker::Report::MigrationFailures.stored_remotely, Found super 
retrieve_func_calls: 1803.44263
CALLS: ["report_params", "new", "reporter", "current_user", "save", "notify", "user"]
CALLS: ["verification_enabled?", "domain", "domain", "info", "notification_service", "domain", "public_send"]
CALLS: ["pages_domain_verification_enabled?"]
CALLS: ["new"]
CALLS: ["new"]
CALLS: ["new"]
CALLS: ["new"]
CALLS: ["pages_domains", "params", "to_s", "find_by!"]
CALLS: ["success?", "upload", "id", "error", "message"]
CALLS: ["errors", "map", "join"]
CALLS: ["error", "nil?"]
CALLS: ["error", "nil?"]
CALLS: []
CALLS: ["", "merge"]
CALLS: ["author_id", "created_at", "update!"]
CALLS: ["version", "date"]
CALLS: ["persisted?", "version"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["raw_repository", "target_branch", "update", "merge", "with_cache_hooks"]
CALLS: ["change_state", "change_subscription", "change_todo", "toggle_award", "filter_params", "associations_before_update", "params", "label_ids", "process_label_ids", "label_ids", "labels_changing?", "params", "changed?", "params", "present?", "params", "current_user", "merge", "assign_attributes", "has_title_or_description_changed?", "now", "current_user", "assign_attributes", "before_update", "project", "update_project_counter_caches?", "save", "with_transaction_returning_status", "project", "current_user", "new", "execute", "no_touching", "handle_changes", "assignees", "to_a", "compact", "invalidate_cache_counts", "after_update", "current_user", "create_new_cross_references!", "execute_hooks", "update_project_counter_caches"]
CALLS: ["move", "update_markdown", "uploader", "record_upload", "uploader", "schedule_background_upload"]
CALLS: ["model", "file", "file", "exists?", "transaction_begin", "uploads", "upload_path", "where", "delete_all", "upload", "upload", "destroy!", "upload", "build_upload", "tap", "transaction_end", "transaction"]
CALLS: ["class", "to_s", "file", "size", "upload_path", "model", "mounted_as", "new"]
CALLS: ["data", "bytesize"]
CALLS: ["snippet", "content"]
CALLS: ["text_data"]
CALLS: ["params", "find_by"]
CALLS: ["skip_cross_project_check"]
CALLS: ["should_skip_cross_project_check", "should_skip_cross_project_check"]
CALLS: ["execute", "find_by"]
CALLS: ["params", "find_by"]
CALLS: ["snippets", "params", "find"]
CALLS: ["skip_cross_project_check"]
CALLS: ["model", "find"]
CALLS: ["load_snippets", "html", "view_to_html_string", "json", "respond_to"]
CALLS: ["current_user", "user", "params", "new", "execute", "params", "page"]
CALLS: ["render_to_string"]
CALLS: []
CALLS: ["path"]
CALLS: ["path"]
CALLS: ["project", "full_path", "name", "select", "join", "downcase"]
CALLS: ["username"]
CALLS: ["id"]
CALLS: ["snippet", "file_name"]
CALLS: ["to_s"]
CALLS: ["full_path"]
CALLS: ["active?", "persisted?", "uncached_full_path", "full_path_key", "uncached_full_path"]
CALLS: ["revoked?", "expired?"]
CALLS: ["domain", "enabled_until", "domain", "enabled_until", "now"]
CALLS: ["x509", "new", "x509", "not_before", "x509", "not_after"]
CALLS: ["certificate", "certificate", "new"]
CALLS: ["action"]
CALLS: ["create?", "remove?"]
CALLS: ["revision_after", "blank_ref?"]
CALLS: ["fetch"]
CALLS: ["revision_before", "blank_ref?"]
CALLS: ["fetch"]
CALLS: ["environment_options"]
CALLS: ["job", "options", "dig"]
CALLS: ["client_url", "parse", "username", "password", "join", "to_s", "path", "chomp", "scheme"]
CALLS: ["flat_map", "flat_map"]
CALLS: ["api_url", "present?", "api_url", "url"]
CALLS: ["domain", "certificate", "present?", "domain", "domain"]
CALLS: ["project", "builds", "params", "find"]
CALLS: ["pipeline", "builds", "name", "where"]
CALLS: ["actual_head_pipeline"]
CALLS: ["head_pipeline", "sha", "diff_head_sha", "head_pipeline"]
CALLS: ["build", "sha"]
CALLS: ["build", "group", "tap"]
CALLS: ["params", "present?", "params", "find_by", "current_user", "can?"]
CALLS: ["allowed?"]
CALLS: ["is_a?", "policy_for", "can?", "user_scope", "can?", "subject_scope", "can?"]
CALLS: ["includes"]
CALLS: ["includes"]
CALLS: ["active?", "policy_for"]
CALLS: ["allowed?"]
CALLS: ["current_user", "action", "subject", "allowed?"]
CALLS: ["x509", "x509", "subject", "to_s"]
CALLS: ["name", "present?", "join", "config", "gitlab", "email_subject_suffix", "present?", "config", "gitlab", "email_subject_suffix"]
CALLS: []
CALLS: ["allowed?"]
CALLS: ["allowed?"]
CALLS: ["parent", "group", "raise_error"]
CALLS: ["new"]
CALLS: []
CALLS: ["project"]
CALLS: []
CALLS: ["group", "project"]
CALLS: ["parent_id", "project", "parent_id", "commit_by", "strong_memoize"]
CALLS: ["key?", "find_commit"]
CALLS: ["is_a?", "raw_repository", "find", "new"]
CALLS: ["repository", "commit_by"]
CALLS: ["repository"]
CALLS: ["full_path", "disk_path", "new"]
CALLS: ["project", "full_path"]
CALLS: ["disk_hash", "base_dir", "disk_hash"]
CALLS: ["options", "base_dir", "model_path_segment", "join"]
CALLS: ["class", "to_s", "underscore", "id", "to_s", "join"]
CALLS: ["id", "to_s", "join"]
CALLS: ["disk_path", "hashed_storage?", "disk_path", "full_path"]
CALLS: ["include?", "storage_version", "storage_version"]
CALLS: []
CALLS: ["options", "base_dir", "model_path_segment", "join"]
CALLS: ["model", "project_id", "to_s", "hexdigest"]
CALLS: ["file", "hexdigest"]
CALLS: ["file", "hexdigest"]
CALLS: ["file", "hexdigest"]
CALLS: ["id"]
CALLS: ["id"]
CALLS: ["project", "id"]
CALLS: ["hexdigest"]
CALLS: ["hexdigest"]
CALLS: ["options", "fetch"]
CALLS: ["class", "object_store", "base_dir"]
CALLS: ["model"]
CALLS: ["model", "store_serialization_column", "try"]
CALLS: ["serialization_column", "compact", "join", "to_sym"]
CALLS: ["class", "model", "class", "mounted_as", "serialization_column"]
CALLS: ["namespace", "full_path"]
CALLS: ["project", "id", "project", "id", "to_s", "hexdigest"]
CALLS: ["disk_hash", "disk_hash", "disk_hash"]
CALLS: ["project", "disk_path"]
CALLS: ["full_path", "disk_path", "new"]
CALLS: ["project", "repository"]
CALLS: []
CALLS: []
CALLS: ["wiki?", "project", "wiki", "repository", "project", "repository"]
CALLS: ["project", "gl_repository", "project", "repository_storage", "disk_path", "new", "exists?", "create_repo!", "new"]
CALLS: ["gitlab_shell", "project", "repository_storage", "disk_path", "create_repository", "exists?", "repository", "after_create"]
CALLS: ["project", "create_repository"]
CALLS: ["todo_service", "current_user", "new_merge_request", "current_user", "cache_merge_request_closes_issues!", "update_merge_requests_head_pipeline"]
CALLS: ["new_issuable"]
CALLS: ["create_assignment_todo", "project", "create_mention_todos"]
CALLS: ["filter_directly_addressed_users", "attributes_for_todo", "create_todos", "filter_mentioned_users", "attributes_for_todo", "create_todos"]
CALLS: ["directly_addressed_users", "filter_todo_users"]
CALLS: ["reject_users_without_access", "uniq"]
CALLS: ["is_a?", "for_issue?", "for_merge_request?", "noteable", "is_a?", "to_ability_name", "select_users", "select_users"]
CALLS: ["to_sym", "can?", "select"]
CALLS: ["for_commit?", "project", "commit_id", "commit"]
CALLS: ["params", "merge_request", "merge_commit_message", "merge_jid", "log_info", "repository", "current_user", "source", "merge_request", "merge", "merge_jid", "log_info", "merge_request", "update", "message", "message", "merge_request", "update"]
CALLS: ["diff_head_sha"]
CALLS: ["logger", "merge_request_info", "info"]
CALLS: ["merge_request", "to_reference"]
CALLS: ["class", "reference_prefix", "username"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["reference_prefix"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["class", "reference_prefix", "id", "project", "present?", "project", "to_reference"]
CALLS: ["to_reference"]
CALLS: ["cross_namespace_reference?", "full_path", "cross_project_reference?", "path"]
CALLS: ["is_a?"]
CALLS: ["namespace", "namespace", "namespace"]
CALLS: ["milestone_format_reference", "class", "reference_prefix", "project", "project", "to_reference"]
CALLS: ["include?", "group_milestone?", "name", "include?", "iid"]
CALLS: ["group_id", "present?"]
CALLS: ["to_s"]
CALLS: []
CALLS: ["class", "reference_prefix", "iid", "project", "to_reference"]
CALLS: ["label_format_reference", "class", "reference_prefix", "to_reference"]
CALLS: ["include?", "name", "include?", "id"]
CALLS: ["class", "reference_prefix", "iid", "project", "to_reference"]
CALLS: ["class", "reference_prefix", "full_path"]
CALLS: ["reference_link_text"]
CALLS: ["title"]
CALLS: ["params", "params"]
CALLS: ["class", "unhyphenize", "unescape_html"]
CALLS: ["gsub"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["properties", "properties", "present?", "properties"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["properties", "properties", "present?", "properties"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["properties", "properties", "present?", "properties"]
CALLS: []
CALLS: []
CALLS: ["properties", "properties", "present?", "properties"]
CALLS: []
CALLS: []
CALLS: []
CALLS: ["label?", "label", "name", "list_type", "humanize"]
CALLS: ["access_level"]
CALLS: ["nil?", "max_member_access_for_user"]
CALLS: ["admin?", "members_with_parents", "where", "reorder", "first", "access_level"]
CALLS: ["parent_id", "self_and_ancestors", "reorder", "select", "id", "active_without_invites_and_requests", "where"]
CALLS: ["parent_id", "class", "id", "where", "class", "id", "where", "new", "base_and_ancestors"]
CALLS: ["", "left_join_users", "where", "non_request", "reorder"]
CALLS: ["arel_table", "arel_table", "join", "eq", "on", "join_sources", "joins"]
CALLS: ["", "where"]
CALLS: ["admin?"]
CALLS: ["access_level_attribute", "public_send"]
CALLS: ["respond_to?", "model_name", "plural", "to_sym", "include?", "to_sym"]
CALLS: ["new"]
CALLS: ["new"]
CALLS: ["new"]
CALLS: ["new"]
CALLS: ["labels", "params", "find"]
CALLS: ["current_user", "project", "id", "new", "execute", "select", "respond_to?", "labels", "pluck", "as_json", "find", "each"]
CALLS: ["new", "current_user", "enabled_keys", "represent", "available_project_keys", "represent", "available_public_keys", "represent"]
CALLS: ["is_a?", "preload", "paginated?", "represent", "represent"]
CALLS: ["present?"]
CALLS: ["paginator", "present?"]
CALLS: ["subgroups", "projects", "with_route", "params", "new"]
CALLS: ["group", "none", "group", "full_path", "inside_path"]
CALLS: ["", "sanitize_sql_like", "where"]
CALLS: ["", "joins", "sanitize_sql_like", "where"]
CALLS: ["current_user", "new", "execute"]
CALLS: ["user", "authorized_projects"]
CALLS: ["", "where"]
CALLS: ["milestoneish_ids", "for_milestones"]
CALLS: ["", "joins", "where", "distinct"]
CALLS: ["id"]
CALLS: ["milestones", "select"]
CALLS: ["id", "group", "group", "id", "new", "execute", "select"]
CALLS: ["milestones?", "project?", "project", "group", "id", "project", "id", "group", "group", "id", "params", "new", "execute", "none"]
CALLS: ["object", "is_a?"]
CALLS: ["params", "present?"]
CALLS: ["params", "present?"]
CALLS: ["params", "present?"]
CALLS: ["params", "present?"]
CALLS: ["search_params", "new", "execute"]
CALLS: ["group", "current_user", "group", "can?", "group", "params", "permit", "id", "id", "merge"]
CALLS: ["params", "permit", "group", "id", "merge"]
CALLS: ["milestones", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["properties", "properties", "present?", "properties"]
CALLS: []
CALLS: ["s_"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["properties", "properties", "present?", "properties"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["properties", "properties", "present?", "properties"]
CALLS: []
CALLS: []
CALLS: ["properties", "properties", "present?", "properties"]
CALLS: []
CALLS: []
CALLS: []
CALLS: ["route", "route", "name", "present?", "route", "name", "persisted?", "update_route", "build_full_name"]
CALLS: ["read_only?", "prepare_route", "route", "save"]
CALLS: ["sync_profile_from_provider?", "synced?"]
CALLS: ["provider", "sync_profile_from_provider?"]
CALLS: ["gcp?", "provider_gcp"]
CALLS: []
CALLS: []
CALLS: ["config_for"]
CALLS: ["read_attribute"]
CALLS: ["route", "build_route", "route", "path", "build_full_path", "route", "name", "build_full_name"]
CALLS: ["parent", "path", "parent", "full_path", "path", "path"]
CALLS: ["parent", "name", "parent", "human_name", "name", "name"]
CALLS: ["owner_name"]
CALLS: ["full_name"]
CALLS: ["full_title", "length", "safe_message", "safe_message", "split", "try"]
CALLS: ["safe_message", "blank?", "no_commit_message", "safe_message", "split", "first"]
CALLS: ["group", "group", "group_title", "namespace", "owner", "name", "simple_sanitize", "user_path", "link_to", "project_path", "avatar_url", "env", "test?", "name", "project_icon", "name", "simple_sanitize", "content_tag", "html_safe", "group", "breadcrumb_list_item", "html_safe"]
CALLS: ["helpers", "content_tag"]
CALLS: ["new", "email", "username", "execute"]
CALLS: ["group", "group", "namespace", "try"]
CALLS: ["avatar_in_git", "url_helpers", "project_avatar_url"]
CALLS: ["url_helpers"]
CALLS: ["repository", "avatar"]
CALLS: ["file_on_head", "path", "allow_n_plus_1_calls"]
CALLS: ["tree", "blobs", "path", "type_of", "find"]
CALLS: ["select"]
CALLS: ["head_commit", "nil?", "head_tree", "head_commit", "sha", "new"]
CALLS: ["head_commit", "head_commit", "sha", "new"]
CALLS: ["root_ref", "commit"]
CALLS: ["raw_repository", "root_ref"]
CALLS: ["head_commit_sha", "project", "head_commit_sha", "commit_by"]
CALLS: ["persisted?", "nil?", "last_commit_sha"]
CALLS: ["last_version", "sha"]
CALLS: ["versions", "first"]
CALLS: ["persisted?", "wiki", "wiki", "path", "page_versions"]
CALLS: ["commit_shas", "first"]
CALLS: ["merge_request_diff_commits", "map"]
CALLS: ["persisted?", "merge_request_diff", "commit_shas", "compare_commits", "compare_commits", "to_a", "reverse", "map", "diff_head_sha"]
CALLS: ["empty?", "association", "loaded?", "latest_merge_request_diff"]
CALLS: ["exists?", "has_visible_content?"]
CALLS: ["raw_size"]
CALLS: ["stored_externally?", "external_size", "size"]
CALLS: []
CALLS: ["external_storage", "external_storage_error?"]
CALLS: []
CALLS: []
CALLS: ["external_storage", "project", "lfs_enabled?"]
CALLS: ["nil?", "namespace", "lfs_enabled?", "config", "lfs", "enabled"]
CALLS: ["", "where"]
CALLS: ["", "now", "where"]
CALLS: ["", "where"]
CALLS: ["config", "lfs", "enabled"]
CALLS: ["config", "lfs", "enabled", "nil?", "config", "lfs", "enabled"]
CALLS: ["commit", "sha"]
CALLS: ["head", "project", "new", "strong_memoize"]
CALLS: ["args", "fetch", "avatar_path"]
CALLS: ["present?", "asset_host", "present?", "respond_to?", "public?", "gitlab_config", "base_url", "gitlab_config", "relative_url_root", "avatar", "local_url"]
CALLS: ["class", "base_dir", "dynamic_segment", "filename", "join"]
CALLS: ["file", "filename"]
CALLS: ["model", "oid", "model", "oid", "join"]
CALLS: ["params", "to_s"]
CALLS: ["model", "oid"]
CALLS: ["model", "id", "model", "created_at", "utc", "strftime", "model", "project_id", "to_s", "model", "id", "to_s", "join"]
CALLS: ["model", "id", "model", "created_at", "utc", "strftime", "disk_hash", "disk_hash", "disk_hash", "model", "job_id", "to_s", "model", "id", "to_s", "join"]
CALLS: ["raise"]
CALLS: ["file", "filename"]
CALLS: ["secret"]
CALLS: ["class", "generate_secret"]
CALLS: ["hex"]
CALLS: ["file", "filename"]
CALLS: ["model", "class", "to_s", "underscore", "mounted_as", "to_s", "model", "id", "to_s", "join"]
CALLS: ["model", "class", "to_s", "underscore", "mounted_as", "to_s", "model", "id", "to_s", "join"]
CALLS: ["config", "gitlab"]
CALLS: ["config", "gitlab"]
CALLS: ["ancestors", "reverse", "group_title_link", "add_to_breadcrumb_dropdown", "group_title_link", "each_with_index", "_", "group_title_link", "html_safe", "simple_sanitize", "link_to", "html_safe"]
CALLS: ["parent_id", "class", "none", "class", "parent_id", "where", "new", "base_and_ancestors"]
CALLS: ["group_path", "try", "env", "test?", "group_icon", "name", "simple_sanitize", "html_safe", "link_to"]
CALLS: ["group_icon_url"]
CALLS: ["is_a?", "find_by_full_path", "try", "helpers", "image_path"]
CALLS: ["for_user", "find_by_full_path", "owner"]
CALLS: ["", "where"]
CALLS: ["mysql?", "connection", "quote", "where_full_path_in", "reorder", "take", "postgresql?", "joins", "find_by", "joins", "find_by"]
CALLS: ["postgresql?", "connection", "quote", "each", "empty?", "none", "joins", "join", "where"]
CALLS: []
CALLS: ["sprite_icon"]
CALLS: ["blank?", "sprite_icon_path", "content_tag", "empty?", "content_tag"]
CALLS: ["asset_host", "config", "gitlab", "url", "helpers", "image_path"]
CALLS: ["sanitize"]
CALLS: ["respond_to?", "find_by_full_path", "avatar_url", "avatar_url", "project_identicon"]
CALLS: ["id", "values", "name", "upcase", "content_tag"]
CALLS: ["constants", "const_get", "map"]
CALLS: ["chart_values_file", "read"]
CALLS: ["root", "name"]
CALLS: ["options", "storage_path"]
CALLS: ["options", "storage_path"]
CALLS: ["options", "storage_path"]
CALLS: ["options", "storage_path", "join"]
CALLS: ["content_values", "to_yaml"]
CALLS: ["chart_values_file", "load_file", "specification", "deep_merge!"]
CALLS: ["gitlab_url", "ensure_runner", "token", "privileged"]
CALLS: ["url_helpers", "root_url"]
CALLS: ["runner", "create_and_assign_runner"]
CALLS: ["transaction_begin", "project", "runners", "create!", "id", "update!", "tap", "transaction_end", "transaction"]
CALLS: ["params", "find"]
CALLS: ["params", "sub"]
CALLS: ["link_to", "breadcrumb_list_item"]
CALLS: ["present?", "squish", "present?", "sanitize", "truncate_words"]
CALLS: ["search_params", "new", "execute", "group", "group_projects", "params", "build_collection", "params", "sort"]
CALLS: ["build_collection", "group", "each"]
CALLS: ["map", "new", "execute", "select", "group_by", "map", "where", "new", "map", "due_date", "sort_by"]
CALLS: ["due_date", "first", "due_date", "all?", "first", "due_date"]
CALLS: ["group_by", "new", "map"]
CALLS: ["discussion_id", "group_by", "values", "build", "map"]
CALLS: ["discussion_class", "override_discussion_id", ""]
CALLS: ["discussion_id"]
CALLS: ["noteable"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["build_discussion_id", "join", "hexdigest"]
CALLS: ["base_discussion_id"]
CALLS: ["noteable_id", "commit_id", "noteable_type", "try"]
CALLS: ["base_discussion_id", "hex"]
CALLS: ["params", "params", "sort_by_attribute", "order_id_desc"]
CALLS: ["to_s", "order_recent_sign_in", "order_oldest_sign_in", "order_by"]
CALLS: ["", "nulls_last_order", "reorder"]
CALLS: ["", "nulls_last_order", "reorder"]
CALLS: ["", "left_join_users", "nulls_last_order", "reorder"]
CALLS: ["", "left_join_users", "nulls_last_order", "reorder"]
CALLS: ["to_s", "order_created_asc", "order_created_desc", "order_created_desc", "order_id_asc", "order_id_desc", "order_name_asc", "order_name_desc", "order_updated_asc", "order_updated_desc", "all"]
CALLS: ["", "left_join_users", "nulls_last_order", "reorder"]
CALLS: ["", "left_join_users", "nulls_last_order", "reorder"]
CALLS: ["", "reorder"]
CALLS: ["", "reorder"]
CALLS: ["", "reorder"]
CALLS: ["", "reorder"]
CALLS: ["", "reorder"]
CALLS: ["", "reorder"]
CALLS: ["", "reorder"]
CALLS: ["include?", "include?", "reverse!", "tap", "first", "public_send", "second", "public_send", "in?", "casecmp", "sort"]
CALLS: ["to_s", "order_by_labels_priority", "order_by", "order"]
CALLS: ["highest_label_priority", "to_sql", "table_name", "select", "nulls_last_order", "order", "order"]
CALLS: ["arel_table", "minimum", "select", "left_join_priorities", "joins", "where", "where", "reorder", "where", "where", "present?", "where", "not"]
CALLS: ["arel_table", "arel_table", "join", "eq", "on", "join_sources", "joins"]
CALLS: ["nulls_last_order", "reorder", "order"]
CALLS: ["to_s", "reorder", "reorder", "reorder", "order_by"]
CALLS: ["to_s", "nulls_last_order", "reorder", "nulls_last_order", "reorder", "nulls_last_order", "reorder", "nulls_last_order", "reorder", "order_by"]
CALLS: ["to_s", "reorder", "reorder", "order_recent_sign_in", "order_oldest_sign_in", "order_created_desc", "order_created_asc", "order_by"]
CALLS: ["to_s", "order_due_date_asc", "order_due_date_asc", "order_due_date_desc"]
CALLS: ["", "reorder"]
CALLS: ["", "reorder"]
CALLS: ["reorder", "order_by"]
CALLS: ["", "reorder"]
CALLS: ["to_s", "order_downvotes_desc", "order_labels_priority", "order_milestone_due_asc", "order_milestone_due_asc", "order_milestone_due_desc", "order_upvotes_desc", "order_due_date_and_labels_priority", "order_upvotes_desc", "order_by", "order"]
CALLS: ["name", "table_name", "table_name", "project_foreign_key", "highest_label_priority", "to_sql", "table_name", "join", "select", "arel_table", "group", "nulls_last_order", "reorder"]
CALLS: []
CALLS: []
CALLS: ["order_milestone_due_asc", "order_labels_priority", "nulls_last_order", "nulls_last_order", "reorder"]
CALLS: ["", "left_joins_milestones", "reorder"]
CALLS: ["", "table_name", "joins"]
CALLS: ["", "left_joins_milestones", "reorder"]
CALLS: ["order_votes_desc"]
CALLS: ["arel_table", "arel_table", "join", "eq", "name", "eq", "eq", "and", "and", "on", "join_sources", "joins", "group", "reorder"]
CALLS: ["order_votes_desc"]
CALLS: ["presence"]
CALLS: ["params", "present?", "params", "sort_by_attribute", "order_id_desc"]
CALLS: ["reorder"]
CALLS: ["params", "params", "label_names", "sort_by_attribute", "reorder"]
CALLS: ["labels", "order", "pluck"]
CALLS: ["labels?", "params", "is_a?", "params", "split", "params"]
CALLS: ["params", "present?"]
CALLS: ["params", "fetch"]
CALLS: ["presence"]
CALLS: ["params", "fetch", "sort_by_attribute"]
CALLS: ["group", "current_user", "new", "execute"]
CALLS: ["params", "build_collection"]
CALLS: ["except"]
CALLS: ["", "includes"]
CALLS: ["target_user", "project_interactions", "joins", "current_user", "where", "select", "target_user", "project_interactions", "where", "select", "new", "to_sql"]
CALLS: ["skip_authorization", "all", "current_user", "new", "execute", "group?", "params", "in_namespace", "projects?", "params", "where", "reorder"]
CALLS: ["", "where"]
CALLS: ["params"]
CALLS: ["params", "present?"]
CALLS: ["instance_variable_defined?"]
CALLS: ["project?", "project", "current_user", "params", "presence", "current_user_related?", "current_user", "authorized_projects", "group", "params", "group", "current_user", "new", "execute", "current_user", "item_project_ids", "new", "execute", "klass", "current_user", "with_feature_available_for_user", "reorder"]
CALLS: ["admin?", "with_feature_enabled", "quoted_access_level_column", "with_project_feature", "authorizations_for_projects", "where", "with_feature_access_level"]
CALLS: ["project_authorizations", "select", "where"]
CALLS: ["connection", "access_level_attribute", "quote_column_name", "connection", "table_name", "quote_table_name"]
CALLS: ["", "access_level_attribute", "with_project_feature", "where"]
CALLS: ["", "access_level_attribute", "with_project_feature", "where"]
CALLS: ["", "joins"]
CALLS: ["reorder", "select"]
CALLS: []
CALLS: ["reorder", "select"]
CALLS: ["includes"]
CALLS: ["params", "params", "params"]
CALLS: ["params", "projects_matching_filter", "direct_child_projects", "with_route", "sort", "order_by"]
CALLS: ["hierarchy_for_parent", "base_and_descendants", "select", "where", "params", "params", "merge", "current_user", "new", "execute"]
CALLS: ["parent_group", "id", "where", "new"]
CALLS: ["parent_group", "current_user", "params", "new", "execute"]
CALLS: ["supports_nested_groups?", "none", "params", "subgroups_matching_filter", "direct_child_groups", "params", "with_selects_for_list", "sort", "order_by"]
CALLS: ["postgresql?"]
CALLS: ["with_route", "with_counts"]
CALLS: ["project_count_sql", "to_sql", "member_count_sql", "to_sql", "subgroup_count_sql", "to_sql", "select"]
CALLS: ["arel_table", "arel_table", "star", "count", "as", "project", "name", "eq", "where", "eq", "where", "eq", "where"]
CALLS: ["cache", "cache_key", "cache_options", "uncached_count", "fetch", "to_i"]
CALLS: ["user", "id"]
CALLS: ["id", "cache_key_name"]
CALLS: []
CALLS: []
CALLS: []
CALLS: ["raise"]
CALLS: ["raw?"]
CALLS: []
CALLS: []
CALLS: []
CALLS: ["relation_for_count", "count"]
CALLS: ["user", "keys"]
CALLS: ["user", "keys", "order_id_desc", "name", "name", "blocked?", "internal?", "admin", "current_user", "can?", "impersonate_admin_user_path", "edit_admin_user_path", "admin_user_path", "nav_link", "projects_admin_user_path", "nav_link", "keys_admin_user_path", "nav_link", "admin_user_identities_path", "nav_link", "admin_user_impersonation_tokens_path", "nav_link", "admin_root_path"]
CALLS: ["class", "internal_attributes", "any?"]
CALLS: []
CALLS: []
CALLS: ["status"]
CALLS: ["all", "status_sql", "pluck", "first"]
CALLS: ["respond_to?", "exclude_ignored", "all", "respond_to?", "failed_but_allowed", "none", "select", "to_sql", "created", "select", "to_sql", "success", "select", "to_sql", "manual", "select", "to_sql", "pending", "select", "to_sql", "running", "select", "to_sql", "skipped", "select", "to_sql", "canceled", "select", "to_sql", "select", "to_sql", "presence"]
CALLS: ["success", "merge"]
CALLS: ["", "merge"]
CALLS: ["success", "delete_artifact!"]
CALLS: ["build", "reload", "build", "has_expiring_artifacts?", "build", "erase_artifacts!"]
CALLS: ["artifacts_expire_at", "present?", "artifacts_expire_at", "now"]
CALLS: ["remove_artifacts_file!", "remove_artifacts_metadata!", "save"]
CALLS: ["job_artifacts_metadata", "job_artifacts_metadata", "destroy", "remove_legacy_artifacts_metadata!"]
CALLS: ["current_user", "can?", "access_denied!", "destroy", "snippets_path", "snippets_path", "current_user"]
CALLS: ["any", "html", "respond_to"]
CALLS: ["current_user", "username", "request", "remote_ip", "info", "flash"]
CALLS: ["options", "fetch"]
CALLS: ["", "where", "not"]
CALLS: ["destroy_confirmation_valid?", "current_user", "current_user", "delete_async", "session", "try", "new_user_session_path", "s_", "profile_account_path", "destroy_confirmation_failure_message"]
CALLS: ["block", "id", "id", "perform_async"]
CALLS: ["block", "update_user", "redirect_back_or_admin_user", "redirect_back_or_admin_user", "admin_root_path"]
CALLS: ["current_user", "user", "new", "execute"]
CALLS: ["default_route", "redirect_back_or_default"]
CALLS: ["root_path", "request", "referer", "present?"]
CALLS: []
CALLS: ["current_user", "confirm_deletion_with_password?", "s_", "s_"]
CALLS: ["password_automatically_set?", "allow_password_authentication?"]
CALLS: ["allow_password_authentication_for_web?", "allow_password_authentication_for_git?"]
CALLS: ["password_authentication_enabled_for_git?", "ldap_user?"]
CALLS: ["identities", "loaded?", "identities", "provider", "ldap_provider?", "extern_uid", "nil?", "find", "identities", "exists?"]
CALLS: ["password_authentication_enabled_for_web?", "ldap_user?"]
CALLS: ["current_user", "confirm_deletion_with_password?", "current_user", "params", "valid_password?", "current_user", "username", "params"]
CALLS: ["current_user", "can?", "access_denied!", "current_user", "new", "async_execute", "flash", "_", "full_name", "dashboard_projects_path", "edit_project_path", "message", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["hook", "id", "data", "hook_name", "perform_async"]
CALLS: ["hooks", "params", "find"]
CALLS: ["hooks", "params", "find"]
CALLS: ["params", "find"]
CALLS: ["params", "find"]
CALLS: ["project", "update_attribute", "project", "id", "current_user", "id", "params", "perform_async", "logger", "current_user", "id", "project", "full_path", "info"]
CALLS: ["group", "id", "current_user", "id", "perform_async", "logger", "current_user", "id", "group", "id", "info"]
CALLS: ["project", "id", "current_user", "id", "perform_async"]
CALLS: ["supported_events", "include?", "id", "perform_async"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["new", "async_execute"]
CALLS: ["params", "find_page", "current_user", "new", "execute", "project_wiki_path", "fluid_layout", "_", "title", "capitalize", "_", "wiki_page_errors", "icon", "persisted?", "title", "capitalize", "project_wiki_path", "title", "capitalize", "persisted?", "s_", "s_", "current_user", "can?", "s_", "persisted?", "project_wiki_history_path", "s_", "current_user", "can?", "project_wiki_path", "s_", "_", "persisted?", "s_", "s_", "title", "namespace", "becomes", "persisted?", "form_errors", "persisted?", "last_commit_sha", "hidden_field", "label", "title", "text_field", "persisted?", "icon", "s_", "icon", "help_page_path", "label", "format", "options_for_select", "select", "label", "slug", "project_wiki_preview_markdown_path", "s_", "slug", "project_wiki_preview_markdown_path", "s_", "html_safe", "s_", "help_page_path", "s_", "html_safe", "label", "text_field", "persisted?", "_", "submit", "_", "project_wiki_path", "s_", "submit", "_", "project_wiki_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["akismet_enabled?", "text", "owner", "name", "owner", "email", "akismet_client", "options", "options", "public_send", "logger", "error"]
CALLS: ["akismet_enabled"]
CALLS: ["akismet_api_key", "config", "gitlab", "url", "new"]
CALLS: ["title", "description", "join"]
CALLS: []
CALLS: ["present?", "wiki", "wiki", "title", "format", "preview_slug"]
CALLS: ["page_title_and_dir", "wiki", "page", "new"]
CALLS: ["split", "pop", "join"]
CALLS: ["format"]
CALLS: ["format"]
CALLS: ["format"]
CALLS: ["presence", "generate_slug"]
CALLS: ["name", "to_s", "downcase", "gsub", "cover?", "gsub!", "end_with?", "chop!", "name", "end_with?", "random_suffix", "slug"]
CALLS: ["sample", "map", "join"]
CALLS: ["s_", "project_wiki_path", "s_", "html_safe", "concat", "s_", "message", "content_tag"]
CALLS: ["current_user", "current_user", "layout"]
CALLS: ["keys", "empty?", "include?", "fa_stacked_icon", "fa_icon"]
CALLS: ["errors", "any?", "errors", "count", "pluralize", "content_tag", "errors", "full_messages", "content_tag", "map", "join", "html_safe", "content_tag", "content_tag"]
CALLS: ["trigger", "destroy", "flash", "flash", "project_settings_ci_cd_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["success?", "merge_when_pipeline_succeeds?", "mergeable?", "todo_service", "merge_request_became_unmergeable", "merge_user_id", "merge_params", "merge_async", "pipeline_merge_requests"]
CALLS: ["merge_when_pipeline_succeeds?", "merge_user", "create_unmergeable_todo"]
CALLS: ["project", "attributes_for_todo", "create_todos"]
CALLS: ["ref", "merge_requests_for", "head_pipeline", "each"]
CALLS: ["fetch"]
CALLS: ["build", "ref"]
CALLS: ["project", "default_branch"]
CALLS: ["wiki", "class", "default_ref"]
CALLS: ["repository", "exists?", "repository", "root_ref"]
CALLS: ["with_state", "id", "where", "preload", "select"]
CALLS: ["params", "try"]
CALLS: ["params", "params", "strip_tags", "sanitize", "unescape", "default_branch"]
CALLS: ["mergeable_state?", "check_if_can_be_merged", "can_be_merged?", "should_be_rebased?"]
CALLS: ["project", "ff_merge_must_be_possible?", "ff_merge_possible?"]
CALLS: ["merge_requests_ff_only_enabled", "merge_requests_rebase_enabled"]
CALLS: ["project", "repository", "target_branch_sha", "diff_head_sha", "ancestor?"]
CALLS: ["nil?", "nil?", "raw_repository", "ancestor?"]
CALLS: ["target_branch_head", "try"]
CALLS: ["target_project", "repository", "target_branch_ref", "commit", "strong_memoize"]
CALLS: ["merge_request", "target_project"]
CALLS: ["target_branch", "target_branch"]
CALLS: ["open?", "work_in_progress?", "broken?", "mergeable_ci_state?", "mergeable_discussions_state?"]
CALLS: ["project", "only_allow_merge_if_pipeline_succeeds?", "head_pipeline", "actual_head_pipeline", "success?", "actual_head_pipeline", "skipped?"]
CALLS: ["has_no_commits?", "branch_missing?", "cannot_be_merged?"]
CALLS: ["has_commits?"]
CALLS: ["merge_request_diff", "commits_count"]
CALLS: ["merge_request_diff_commits", "size"]
CALLS: ["persisted?", "merge_request_diff", "commits_count", "compare_commits", "compare_commits", "size"]
CALLS: ["source_branch_exists?", "target_branch_exists?"]
CALLS: ["target_branch", "blank?", "target_project", "target_branch", "commit"]
CALLS: ["source_branch", "blank?", "source_project", "source_branch", "commit"]
CALLS: ["merge_request", "source_project"]
CALLS: ["project"]
CALLS: ["params", "presence"]
CALLS: ["target_project", "target_project", "repository", "target_branch", "branch_exists?"]
CALLS: ["raw_repository", "branch_names", "include?"]
CALLS: ["source_project", "source_project", "repository", "source_branch", "branch_exists?"]
CALLS: ["project", "only_allow_merge_if_all_discussions_are_resolved?", "discussions_to_be_resolved?"]
CALLS: ["discussions_resolvable?", "discussions_resolved?"]
CALLS: ["discussions_resolvable?", "resolvable_discussions", "none?"]
CALLS: ["select", "discussion_notes", "resolvable", "discussions"]
CALLS: ["all", "includes", "fresh", "build_collection"]
CALLS: ["", "order"]
CALLS: ["fresh", "order"]
CALLS: ["", "order"]
CALLS: ["", "potentially_resolvable", "user"]
CALLS: ["", "where", "where"]
CALLS: ["discussion_notes", "inc_relations_for_view", "discussions"]
CALLS: ["", "includes"]
CALLS: ["notes"]
CALLS: ["none"]
CALLS: ["project", "notes", "id", "for_commit_id"]
CALLS: ["", "where"]
CALLS: ["project", "notes", "sha", "for_commit_id"]
CALLS: ["notes", "non_diff_notes"]
CALLS: ["", "where"]
CALLS: ["issuable", "notes", "inc_relations_for_view", "includes", "fresh", "prepare_notes_for_rendering", "current_user", "cross_reference_not_visible_for?", "reject", "issuable", "build_collection", "discussion_serializer", "represent"]
CALLS: ["issue", "merge_request"]
CALLS: ["current_user", "project", "id", "new", "find_by"]
CALLS: ["target_project", "issue_iid", "current_user", "get_issue"]
CALLS: ["target_project", "external_issue_tracker", "source_branch", "target_project", "external_issue_reference_pattern", "match", "try", "source_branch", "match", "try", "strong_memoize"]
CALLS: ["has_external_issue_tracker", "nil?", "cache_has_external_issue_tracker", "has_external_issue_tracker?", "services", "external_issue_trackers", "first"]
CALLS: ["", "issue_trackers", "active", "without_defaults"]
CALLS: ["", "with_state", "non_internal"]
CALLS: ["internal_attributes", "map", "join", "where"]
CALLS: ["", "where"]
CALLS: ["", "where"]
CALLS: ["", "where"]
CALLS: ["", "joins", "order"]
CALLS: ["", "where"]
CALLS: ["", "with_state"]
CALLS: ["", "arel_table", "eq", "arel_table", "not_eq", "and", "arel_table", "eq", "new", "or", "left_join_users", "where", "where", "reorder"]
CALLS: ["", "where"]
CALLS: ["", "where"]
CALLS: ["", "where"]
CALLS: ["read_write?", "services", "external_issue_trackers", "any?", "update_column"]
CALLS: ["from_services"]
CALLS: ["external_issue_tracker", "class", "issues_enabled?", "reference_pattern"]
CALLS: ["reference_prefix", "escape"]
CALLS: ["reference_pattern", "reference_prefix", "escape"]
CALLS: []
CALLS: ["reference_prefix"]
CALLS: ["issues_access_level"]
CALLS: []
CALLS: ["reference_pattern", "reference_prefix", "escape"]
CALLS: ["reference_pattern", "reference_prefix", "escape"]
CALLS: ["reference_pattern", "reference_prefix", "escape"]
CALLS: ["reference_pattern", "reference_prefix", "escape"]
CALLS: ["reference_pattern"]
CALLS: ["reference_pattern"]
CALLS: ["__method__"]
CALLS: ["reference_pattern", "reference_pattern", "union"]
CALLS: ["find_union", "with_route"]
CALLS: ["length", "select", "map", "new", "table_name", "to_sql", "where", "first"]
CALLS: ["one?", "first", "find_union"]
CALLS: ["reference_pattern", "reference_prefix"]
CALLS: ["reference_pattern", "reference_prefix"]
CALLS: ["issues_enabled?", "id", "new", "find_by", "external_issue_tracker", "new"]
CALLS: ["issue?", "target"]
CALLS: ["note", "noteable"]
CALLS: ["note?", "target"]
CALLS: ["target", "is_a?"]
CALLS: ["snippet", "notes", "params", "find"]
CALLS: ["notes", "params", "find"]
CALLS: []
CALLS: ["for_commit?", "project", "commit_id", "commit"]
CALLS: ["target_type"]
CALLS: []
CALLS: ["allowed?", "commit", "noteables_for_type", "find"]
CALLS: ["id", "new", "execute", "id", "new", "execute", "new", "execute", "all"]
CALLS: ["params", "downcase", "current_user", "id", "new", "params", "find_by", "current_user", "id", "new", "params", "find_by", "params", "commit"]
CALLS: ["issues", "params", "where", "reorder", "take!", "notes", "new", "current_user", "can?", "render_404"]
CALLS: ["current_user", "project", "id", "new", "execute", "select"]
CALLS: ["milestoneish_ids", "of_milestones", "includes"]
CALLS: ["", "where"]
CALLS: ["message", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["issues", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["root", "join"]
CALLS: ["issuables_collection", "non_archived", "params", "page", "collection_type", "issuable_meta_data", "html", "atom", "respond_to"]
CALLS: ["", "where"]
CALLS: ["", "join_project", "where"]
CALLS: ["create_event"]
CALLS: ["transaction_begin", "event_service", "current_user", "reopen_mr", "merge_request_metrics_service", "reopen", "transaction_end", "transaction"]
CALLS: ["reopen_resource_email"]
CALLS: ["build_recipients", "mailer", "user", "id", "id", "id", "reason", "send", "deliver_later", "each"]
CALLS: []
CALLS: ["new", "notification_recipients"]
CALLS: ["build!", "filter!", "recipients", "reason", "priority", "sort_by", "uniq", "freeze"]
CALLS: ["delete", "build!"]
CALLS: ["wiki", "delete_page"]
CALLS: ["wiki", "path", "title", "commit_details", "delete_page", "update_project_activity"]
CALLS: ["touch"]
CALLS: ["touch_noteable"]
CALLS: ["for_commit?", "association", "loaded?", "noteable", "scope", "select", "take", "touch"]
CALLS: ["params", "delete"]
CALLS: ["params", "delete"]
CALLS: ["params", "delete"]
CALLS: ["params", "params", "process_scope"]
CALLS: ["split", "split", "process_registry_access", "new", "process_repository_access"]
CALLS: ["valid?", "repository_project", "can_access?", "select", "present?", "ensure_container_repository!", "to_s"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["container_registry_enabled?", "build_can_pull?", "user_can_pull?", "deploy_token_can_pull?", "build_can_push?", "user_can_push?", "user_can_admin?"]
CALLS: ["has_authentication_ability?", "can_user?"]
CALLS: ["to_a", "include?"]
CALLS: ["current_user", "is_a?", "current_user", "can?"]
CALLS: ["authentication_abilities", "include?"]
CALLS: ["has_authentication_ability?", "project"]
CALLS: ["has_authentication_ability?", "current_user", "is_a?", "current_user", "has_access_to?", "current_user", "read_registry?"]
CALLS: ["active?", "project"]
CALLS: ["deploy_keys_project_for", "present?"]
CALLS: ["deploy_keys_projects", "find_by"]
CALLS: ["has_authentication_ability?", "can_user?"]
CALLS: ["has_authentication_ability?", "can_user?"]
CALLS: ["has_authentication_ability?", "project", "can_user?"]
CALLS: ["config", "registry", "enabled", "current_user", "can?"]
CALLS: ["config", "registry"]
CALLS: ["path", "full_access_token", "config", "registry", "api_url", "config", "registry", "host_port", "new"]
CALLS: ["flatten", "config", "registry", "key", "new", "issuer", "issuer", "audience", "expire_time", "token_expire_at", "map", "encoded"]
CALLS: ["now", "container_registry_token_expire_delay", "minutes"]
CALLS: ["has_repository?", "include?", "create_from_path!"]
CALLS: ["build_from_path", "tap"]
CALLS: ["repository_project", "repository_name", "new"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["project_id", "target_id", "target_type"]
CALLS: ["project"]
CALLS: ["teamcity_url", "build_type", "username", "password"]
CALLS: []
CALLS: []
CALLS: []
CALLS: ["project_url", "issues_url", "new_issue_url"]
CALLS: ["url"]
CALLS: ["url"]
CALLS: ["project", "web_url"]
CALLS: ["url_helpers", "project_wiki_url"]
CALLS: ["url_helpers", "project_url"]
CALLS: ["url_helpers", "group_canonical_url"]
CALLS: ["project", "new_project_issue_url"]
CALLS: ["project", "project_issues_url"]
CALLS: ["project", "web_url"]
CALLS: ["api_key", "user_key", "priority"]
CALLS: ["api_url"]
CALLS: ["token"]
CALLS: ["recipients"]
CALLS: ["username", "token"]
CALLS: []
CALLS: []
CALLS: []
CALLS: ["mock_service_url"]
CALLS: []
CALLS: []
CALLS: []
CALLS: ["api_url", "token", "enforce_namespace_to_lower_case", "namespace"]
CALLS: ["namespace", "namespace", "downcase"]
CALLS: ["namespace", "namespace", "downcase"]
CALLS: ["url", "api_url", "username", "password"]
CALLS: []
CALLS: ["recipients", "get_channels"]
CALLS: ["activated?", "recipients", "nil?", "recipients", "empty?", "map_recipients", "channels", "empty?", "errors", "add"]
CALLS: ["active"]
CALLS: ["channels", "recipients", "split", "format_channel", "map", "channels", "reject!"]
CALLS: ["parse", "consider_uri", "present?", "default_irc_uri", "nil?", "default_irc_uri", "join", "to_s", "parse", "consider_uri", "logger", "default_irc_uri", "error"]
CALLS: ["scheme", "nil?", "is_a?", "scheme", "path", "nil?", "to_s"]
CALLS: ["token"]
CALLS: ["project_url", "issues_url", "new_issue_url"]
CALLS: ["token", "api_key"]
CALLS: ["token"]
CALLS: ["external_wiki_url"]
CALLS: ["recipients"]
CALLS: ["drone_url", "token"]
CALLS: []
CALLS: ["project_url", "issues_url", "new_issue_url"]
CALLS: []
CALLS: ["webhook"]
CALLS: ["token"]
CALLS: []
CALLS: ["project_url", "token"]
CALLS: ["project_url", "issues_url", "new_issue_url"]
CALLS: ["bamboo_url", "build_key", "username", "password"]
CALLS: ["token"]
CALLS: ["api_key"]
CALLS: ["project"]
CALLS: []
CALLS: []
CALLS: ["source_type", "access_level"]
CALLS: ["membershipable", "class", "to_s", "humanize"]
CALLS: []
CALLS: ["source_type"]
CALLS: []
CALLS: []
CALLS: []
CALLS: ["service"]
CALLS: ["kubeclient", "get_service", "strong_memoize"]
CALLS: ["cluster", "kubeclient"]
CALLS: ["provider", "cluster"]
CALLS: ["params"]
CALLS: ["app", "cluster"]
CALLS: ["project", "clusters", "params", "find", "current_user", "present"]
CALLS: ["attributes", "new", "fabricate!"]
CALLS: ["attributes_before_markdown_cache", "delete", "cached_markdown_fields", "html_fields", "delete", "each"]
CALLS: ["markdown_fields", "html_field", "map"]
CALLS: []
CALLS: ["keys"]
CALLS: ["project", "clusters", "params", "find", "render_404"]
CALLS: ["build_kubeclient!"]
CALLS: ["api_url", "username", "password", "join_api_url", "username", "password", "kubeclient_ssl_options", "new"]
CALLS: ["ca_pem", "present?", "new", "ca_pem", "new", "add_cert"]
CALLS: ["api_url", "parse", "path", "sub", "path", "join", "to_s"]
CALLS: ["api_url", "parse", "path", "sub", "path", "join", "to_s"]
CALLS: ["ca_pem", "present?", "new", "ca_pem", "new", "add_cert"]
CALLS: ["api_url", "parse", "path", "sub", "path", "join", "to_s"]
CALLS: ["ca_pem", "present?", "new", "ca_pem", "new", "add_cert"]
CALLS: ["api_url", "actual_namespace", "token", "join_api_url", "kubeclient_auth_options", "kubeclient_ssl_options", "new"]
CALLS: ["token"]
CALLS: ["namespace", "present?", "namespace", "default_namespace"]
CALLS: ["project", "project", "path", "project", "id", "downcase", "gsub", "gsub"]
CALLS: ["project", "project", "path", "project", "id", "downcase", "gsub", "gsub"]
CALLS: ["token"]
CALLS: ["namespace", "present?", "namespace", "default_namespace"]
CALLS: ["api_url", "actual_namespace", "username", "password", "token", "join_api_url", "kubeclient_auth_options", "kubeclient_ssl_options", "new"]
CALLS: ["build_kubeclient!"]
CALLS: ["kubernetes?", "platform_kubernetes", "kubeclient"]
CALLS: ["params", "find_or_initialize_service"]
CALLS: ["find_or_initialize_services", "to_param", "find"]
CALLS: ["username"]
CALLS: []
CALLS: ["reply_key"]
CALLS: ["hex"]
CALLS: ["reply_key"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["where", "available_services_names", "services", "find_service", "find_service", "nil?", "public_send", "id", "build_from_template", "map"]
CALLS: ["dup", "valid?", "active", "template", "project_id"]
CALLS: ["env", "development?", "sort_by"]
CALLS: ["to_param", "find"]
CALLS: ["persisted?", "errors", "include?", "path_was", "path"]
CALLS: ["domain"]
CALLS: ["full_path"]
CALLS: ["iid", "to_s"]
CALLS: ["sha_start", "sha_to"]
CALLS: ["sha_from", "exclude_start?", "sha_from", "sha_from"]
CALLS: ["id"]
CALLS: []
CALLS: ["id"]
CALLS: ["name"]
CALLS: ["find_or_initialize_service"]
CALLS: ["params", "where", "first"]
CALLS: ["project"]
CALLS: []
CALLS: ["group"]
CALLS: ["variables", "two_factor_grace_period"]
CALLS: ["params", "to_h", "map"]
CALLS: ["markdown_name", "secure_url", "markdown_link"]
CALLS: ["base_dir", "secret", "file", "filename", "join"]
CALLS: ["file", "filename", "join"]
CALLS: ["image_or_video?", "filename", "filename", "extname", "basename", "filename", "gsub"]
CALLS: ["image?", "video?"]
CALLS: ["extension_match?"]
CALLS: ["file", "file", "try", "file", "path", "extname", "delete", "downcase", "include?"]
CALLS: ["extension_match?"]
CALLS: ["extension", "include?"]
CALLS: ["extname", "downcase", "delete"]
CALLS: ["uploader", "uploader", "exists?", "uploader", "image_or_video?"]
CALLS: ["markdown_name", "secure_url", "image_or_video?", "dangerous?", "prepend"]
CALLS: ["extension_match?"]
CALLS: ["new", "persisted_variables", "concat", "scoped_variables", "concat", "persisted_environment_variables", "concat", "to_runner_variables"]
CALLS: ["new", "persisted?", "persisted_environment", "present?", "persisted_environment", "predefined_variables", "concat", "environment_url", "environment_url", "append", "tap"]
CALLS: ["environment_options"]
CALLS: ["kubeconfig", "dump", "new", "api_url", "append", "token", "append", "actual_namespace", "append", "append", "ca_pem", "present?", "ca_pem", "append", "ca_pem", "append", "tap"]
CALLS: ["api_url", "actual_namespace", "token", "ca_pem", "to_kubeconfig"]
CALLS: ["api_url", "actual_namespace", "token", "ca_pem", "to_kubeconfig"]
CALLS: []
CALLS: ["new", "has_domain?", "domain", "presence", "instance_domain", "append", "tap"]
CALLS: ["domain", "present?", "instance_domain", "present?"]
CALLS: ["auto_devops_domain"]
CALLS: ["visibility_level", "string_level", "new", "id", "to_s", "append", "path", "append", "full_path", "append", "full_path_slug", "append", "namespace", "full_path", "append", "web_url", "append", "append", "container_registry_variables", "concat", "auto_devops_variables", "concat"]
CALLS: ["auto_devops_enabled?", "auto_devops", "build_auto_devops", "predefined_variables"]
CALLS: ["auto_devops", "enabled", "nil?", "auto_devops_enabled?", "auto_devops", "enabled?"]
CALLS: ["pages_domain_verification_enabled?", "enabled_until", "present?"]
CALLS: ["new", "config", "registry", "enabled", "config", "registry", "host_port", "append", "container_registry_enabled?", "container_registry_url", "append", "tap"]
CALLS: ["config", "registry", "enabled", "config", "registry", "host_port", "full_path", "downcase"]
CALLS: ["full_path", "to_s", "slugify"]
CALLS: ["new", "name", "append", "slug", "append"]
CALLS: ["kubeconfig", "dump", "new", "api_url", "append", "token", "append", "actual_namespace", "append", "append", "ca_pem", "present?", "ca_pem", "append", "ca_pem", "append", "tap"]
CALLS: ["new", "id", "to_s", "append", "description", "append", "tag_list", "to_s", "append"]
CALLS: ["tag_list", "tag_path", "link_to", "each", "html_safe"]
CALLS: []
CALLS: ["new", "id", "to_s", "append", "ci_yaml_file_path", "append", "source", "to_s", "append"]
CALLS: ["project", "ci_config_path", "blank?", "project", "ci_config_path"]
CALLS: ["options", "dig", "persisted_environment", "external_url"]
CALLS: ["external_link?", "full_path", "partition", "last", "id", "path", "join", "pages_group_url"]
CALLS: ["config", "pages", "url", "pages_subdomain", "sub", "downcase"]
CALLS: ["wiki", "pages", "new", "map"]
CALLS: ["full_path", "partition", "first"]
CALLS: ["pages", "paginate_array", "params", "page", "group_by_directory", "get_project_wiki_path", "s_", "s_", "_", "container_class", "s_", "project_wikis_git_access_path", "icon", "_", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["blank?", "directory", "slug", "sort_by", "group_by", "present?", "new", "map", "flatten"]
CALLS: ["wiki", "slug", "page_title_and_dir", "last", "to_s"]
CALLS: ["fluid_layout", "blank_container"]
CALLS: ["nil?"]
CALLS: ["external_wiki", "properties", "project_wiki_path"]
CALLS: ["has_external_wiki", "nil?", "cache_has_external_wiki", "has_external_wiki", "services", "external_wikis", "first"]
CALLS: ["", "where", "active"]
CALLS: ["read_write?", "services", "external_wikis", "any?", "update_column"]
CALLS: ["pages_config", "enabled", "pages_config", "artifacts_server", "name", "extname", "include?", "project", "public?"]
CALLS: ["pages_domains_config", "project", "pages_https_only?"]
CALLS: ["enabled_pages_domains", "domain", "certificate", "key", "project", "pages_https_only?", "https?", "map"]
CALLS: ["pages_domain_verification_enabled?", "project", "pages_domains", "enabled", "project", "pages_domains"]
CALLS: ["certificate", "present?"]
CALLS: ["config", "pages", "external_https"]
CALLS: ["config", "pages"]
CALLS: ["new", "append", "append", "project", "licensed_features", "join", "append", "append", "append", "append", "name", "append", "stage", "append", "sha", "append", "ref", "append", "ref_slug", "append", "tag?", "ref", "append", "trigger_request", "append", "action?", "append", "legacy_variables", "concat", "tap"]
CALLS: []
CALLS: ["new", "sha", "append", "before_sha", "append", "ref", "append", "ref_slug", "append", "name", "append", "stage", "append", "tag?", "ref", "append", "trigger_request", "append", "action?", "append", "tap"]
CALLS: ["pipeline", "before_sha"]
CALLS: ["ref", "to_s", "slugify"]
CALLS: ["when"]
CALLS: ["read_attribute", "build_attributes_from_config"]
CALLS: ["pipeline", "config_processor", "pipeline", "config_processor", "name", "build_attributes"]
CALLS: ["ci_yaml_file", "ci_yaml_file", "new", "yaml_errors", "message", "yaml_errors"]
CALLS: ["auto_devops_source?", "implied_ci_yaml_file", "ci_yaml_from_repo", "yaml_errors", "sha"]
CALLS: ["project", "project", "auto_devops_enabled?", "find", "content"]
CALLS: ["project", "sha", "project", "repository", "sha", "ci_yaml_file_path", "gitlab_ci_yml_for"]
CALLS: ["blob_data_at"]
CALLS: ["blob_at", "load_all_data!", "data"]
CALLS: ["raw_repository", "blob_at", "project", "decorate"]
CALLS: ["is_a?", "new"]
CALLS: ["is_a?", "new", "map"]
CALLS: ["nil?", "new"]
CALLS: []
CALLS: ["project", "", "allow_n_plus_1_calls"]
CALLS: ["action", "present?", "to_action_id"]
CALLS: ["action", "to_sym", "key"]
CALLS: ["pipeline", "params", "legacy_stage", "not_found", "view_to_html_string", "json", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["new", "statuses_count", "zero?"]
CALLS: ["statuses", "count"]
CALLS: ["pipeline", "statuses", "name", "where"]
CALLS: ["render_404"]
CALLS: ["has_environment?", "expanded_environment_name", "project", "find_by", "strong_memoize"]
CALLS: ["environment", "present?"]
CALLS: ["job", "persisted_environment"]
CALLS: ["project", "environments", "params", "find"]
CALLS: ["project", "current_user", "new", "execute"]
CALLS: ["builds", "where", "not", "success", "pluck", "uniq"]
CALLS: ["project", "environments", "params", "find"]
CALLS: ["has_environment?", "environment", "simple_variables", "expand", "strong_memoize"]
CALLS: ["scoped_variables", "to_runner_variables", "strong_memoize"]
CALLS: ["new", "persisted?", "id", "to_s", "append", "token", "append", "id", "to_s", "append", "token", "append", "append", "token", "append", "repo_url", "append", "tap"]
CALLS: ["ensure_token!", "project", "http_url_to_repo", "sub"]
CALLS: ["config", "gitlab", "url", "full_path"]
CALLS: ["web_url"]
CALLS: ["expanded_environment_name", "new", "predefined_variables", "concat", "project", "predefined_variables", "concat", "pipeline", "predefined_variables", "concat", "runner", "runner", "predefined_variables", "concat", "project", "deployment_variables", "concat", "yaml_variables", "concat", "user_variables", "concat", "secret_group_variables", "concat", "secret_project_variables", "concat", "trigger_request", "trigger_request", "user_variables", "concat", "pipeline", "variables", "concat", "pipeline", "pipeline_schedule", "pipeline", "pipeline_schedule", "job_variables", "concat", "tap"]
CALLS: ["deployment_platform", "predefined_variables"]
CALLS: ["project", "name", "deployment_platform"]
CALLS: ["find_deployment_platform"]
CALLS: ["find_cluster_platform_kubernetes", "find_kubernetes_service_integration", "build_cluster_and_deployment_platform"]
CALLS: ["kubernetes_service_template", "cluster_attributes_from_service_template", "create", "persisted?", "platform_kubernetes"]
CALLS: ["request", "spammable", "request", "env", "request", "env", "to_s", "create_user_agent_detail"]
CALLS: ["class", "__method__"]
CALLS: ["params", "new", "params", "new", "verify_params!", "params", "access_levels", "access_levels", "new", "execute"]
CALLS: []
CALLS: ["ce_style_access_level"]
CALLS: ["params", "type"]
CALLS: ["object", "class", "name", "downcase"]
CALLS: ["params"]
CALLS: ["sym_options_with_owner"]
CALLS: ["sym_options"]
CALLS: []
CALLS: ["handle_quick_actions_on_create", "filter_params", "params", "delete", "params", "current_user", "params", "process_label_ids", "params", "assign_attributes", "before_create", "params", "present?", "params", "create_issuable", "after_create", "execute_hooks", "assignees", "invalidate_cache_counts", "update_project_counter_caches"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["handle_wip_event"]
CALLS: ["params", "delete", "params", "title", "params", "wip_title", "wipless_title"]
CALLS: ["class", "title", "wip_title"]
CALLS: ["class", "title", "wipless_title"]
CALLS: ["current_user", "id", "id", "perform_async", "run_after_commit"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["current_user", "spam_check", "move_to_end", "current_user", "id", "id", "perform_async", "run_after_commit"]
CALLS: ["new", "spam_logs", "find_by", "update!", "when_recaptcha_verified"]
CALLS: ["spammable", "spam", "check", "spammable", "spam_log", "spam_log"]
CALLS: ["has_pushes?", "repository", "git_fsck", "wiki_enabled?", "create_wiki", "wiki", "repository", "git_fsck"]
CALLS: ["with_push", "id", "exists?"]
CALLS: ["", "joins", "where"]
CALLS: ["exists?", "raw_repository", "fsck", "message", "error"]
CALLS: ["wiki_access_level"]
CALLS: ["owner", "new", "wiki", "errors", "add"]
CALLS: ["txt_records", "parse", "domain", "keyed_verification_code", "domain", "verification_code", "any?", "domain", "domain", "log_error"]
CALLS: ["logger", "class", "error"]
CALLS: ["getresources"]
CALLS: ["class", "name", "merge_request", "to_reference", "error", "merge_request", "update"]
CALLS: ["error"]
CALLS: ["verification_code", "present?", "verification_code"]
CALLS: ["request", "check_for_spam?", "akismet", "spam?", "create_spam_log"]
CALLS: ["spammable_owner_id", "spammable", "spam_title", "spammable", "spam_description", "options", "options", "spammable", "class", "to_s", "create!"]
CALLS: ["spammable", "respond_to?", "spammable", "author_id", "spammable", "respond_to?", "spammable", "creator_id"]
CALLS: ["class", "spammable_attrs", "fetch", "find", "first", "to_sym", "respond_to?", "first", "public_send"]
CALLS: ["class", "spammable_attrs", "fetch", "find", "first", "to_sym", "respond_to?", "first", "public_send"]
CALLS: ["spammable", "check_for_spam?"]
CALLS: ["spammable_owner", "spammable", "spammable_text", "options", "new"]
CALLS: ["spammable_owner_id", "find"]
CALLS: ["class", "spammable_attrs", "first", "public_send", "map", "reject", "join"]
CALLS: ["spam_log", "user", "spam_log", "text", "spam_log", "source_ip", "spam_log", "user_agent", "new"]
CALLS: ["akismet_enabled?", "text", "now", "owner", "name", "owner", "email", "options", "akismet_client", "options", "options", "check", "logger", "error"]
CALLS: ["visibility_level_changed?", "public?", "title_changed?", "content_changed?"]
CALLS: ["title", "present?", "class", "url_path", "unhyphenize", "title"]
CALLS: ["project", "public?", "title_changed?", "description_changed?"]
CALLS: []
CALLS: ["relative_position", "max_relative_position", "position_between"]
CALLS: ["sort"]
CALLS: ["class", "parent_ids", "in_parents", "maximum"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["save", "update_attributes", "with_transaction_returning_status"]
CALLS: ["present?", "process_title", "slice!", "merge!"]
CALLS: ["blank?", "deep_title_squish", "dirname", "present?", "directory", "presence", "compact", "join"]
CALLS: ["split", "map", "join"]
CALLS: ["merge_when_pipeline_succeeds_active?", "mergeable?", "params", "diff_head_sha", "update", "params", "present?", "actual_head_pipeline", "actual_head_pipeline", "active?", "current_user", "merge_params", "new", "execute", "actual_head_pipeline", "success?", "current_user", "id", "params", "merge_async", "current_user", "id", "params", "merge_async"]
CALLS: ["params", "present?", "head_pipeline", "head_pipeline", "active?"]
CALLS: ["merge_quick_actions_into_params!"]
CALLS: ["params", "description", "fetch", "project", "current_user", "new", "execute", "params", "params", "merge!"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["delete_conflicting_redirects"]
CALLS: ["conflicting_redirects", "delete_all"]
CALLS: ["path", "matching_path_and_descendants"]
CALLS: ["", "postgresql?", "sanitize_sql_like", "where"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["track_user_interacted_projects", "set_last_repository_updated_at", "reset_project_activity"]
CALLS: ["created_at", "update_column"]
CALLS: ["available?", "track"]
CALLS: ["current_version"]
CALLS: ["project_id", "project_id", "author_id", "transaction_begin", "where", "select", "first", "create!", "transaction_end", "transaction", "cached_exists?"]
CALLS: ["cache", "fetch"]
CALLS: ["current_version"]
CALLS: ["unscoped", "project_id", "where", "created_at", "update_all"]
CALLS: ["project", "recent_update?", "unscoped", "project_id", "where", "ago", "where", "created_at", "update_all"]
CALLS: ["project", "last_activity_at", "ago"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["create_project_feature", "set_last_activity_at", "set_last_repository_updated_at", "check_repository_absence!", "ensure_storage_path_exists"]
CALLS: ["namespace", "gitlab_shell", "repository_storage_path", "base_dir", "add_namespace"]
CALLS: ["repository_storage_path"]
CALLS: ["config", "repositories", "storages", "repository_storage", "legacy_disk_path"]
CALLS: ["gitlab_shell", "repository_storage_path", "base_dir", "add_namespace"]
CALLS: ["created_at", "update_column"]
CALLS: ["skip_disk_validation", "repository_storage_path", "blank?", "repository_with_same_path_already_exists?", "errors", "add"]
CALLS: ["gitlab_shell", "repository_storage_path", "disk_path", "exists?"]
CALLS: []
CALLS: []
CALLS: ["update_daemon"]
CALLS: ["project", "new", "execute"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["sync_share_with_group_lock_with_parent"]
CALLS: ["parent", "share_with_group_lock?", "share_with_group_lock"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["save_git_content"]
CALLS: ["merge_request_id", "id", "where", "id", "update_all", "ensure_commit_shas", "save_commits", "save_diffs", "save", "keep_around_commits"]
CALLS: ["repository", "merge_request", "source_project", "repository", "uniq", "start_commit_sha", "keep_around", "head_commit_sha", "keep_around", "base_commit_sha", "keep_around", "each"]
CALLS: ["present?", "commit_by", "kept_around?", "raw_repository", "keep_around_ref_name", "write_ref", "logger", "path", "error"]
CALLS: []
CALLS: ["keep_around_ref_name", "ref_exists?"]
CALLS: ["raw_repository", "ref_exists?"]
CALLS: ["start_commit", "head_commit", "project", "start_commit", "id", "head_commit", "id", "merge_base_commit", "sha", "strong_memoize"]
CALLS: ["repository", "merge_base", "commit_by"]
CALLS: ["commit", "try", "commit", "try", "raw_repository", "merge_base"]
CALLS: ["start_commit_sha", "project", "start_commit_sha", "commit_by"]
CALLS: ["base", "project", "new", "strong_memoize"]
CALLS: ["start_commit", "sha"]
CALLS: ["id", "compare", "commits", "reverse", "create_bulk", "merge_request_diff_commits", "commits_count", "size"]
CALLS: ["raw_repository", "length", "where", "present?", "decorate", "project", "new"]
CALLS: ["commits_between", "sha", "sha", "message", "author_name", "author_email", "map"]
CALLS: ["raw_repository", "between", "present?", "decorate"]
CALLS: ["user", "name"]
CALLS: ["new", "map", "to_hash", "except", "delete", "serialize", "sanitize_timestamp", "sanitize_timestamp", "merge", "with_index", "table_name", "bulk_insert"]
CALLS: ["as_json", "diff", "merge", "with_indifferent_access"]
CALLS: ["binary?", "unpack", "first"]
CALLS: ["binary"]
CALLS: []
CALLS: ["binary"]
CALLS: ["st_diff", "respond_to?", "st_diff", "new"]
CALLS: ["apply_diff_view_cookie!", "load_all_data!", "path", "data", "highlight", "lines", "params", "new", "since", "to", "map", "bottom?", "length", "since", "join", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["length", "highlight"]
CALLS: ["params", "present?", "cookies", "permanent", "params", "delete"]
CALLS: ["public_send", "each_with_object"]
CALLS: ["repository", "raw_repository", "safe_start_commit_sha", "head_commit_sha", "new"]
CALLS: ["start_commit_sha", "merge_request", "target_branch_sha"]
CALLS: ["load_commits"]
CALLS: ["merge_request_diff_commits", "to_hash", "project", "from_hash", "map", "merge_request", "source_project", "merge_request", "source_branch", "new"]
CALLS: ["repository", "raw", "new", "new"]
CALLS: ["trace_artifact_file", "trace_artifact_file", "raw_send_params", "raw_redirect_params", "send_upload", "build", "trace", "file?", "path", "raw", "read"]
CALLS: ["new"]
CALLS: ["build", "job_artifacts_trace", "file"]
CALLS: []
CALLS: []
CALLS: ["build", "trace", "id", "status", "complete?", "valid?", "limit", "params", "presence", "html_with_state", "to_h", "merge!", "json", "respond_to", "read", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["total_items_count", "total_items_count", "closed_items_count"]
CALLS: ["total_issues_count", "merge_requests", "size", "memoize_per_user"]
CALLS: ["merge_requests", "map"]
CALLS: ["current_user", "project", "id", "new", "execute", "select"]
CALLS: ["milestoneish_ids", "of_milestones", "includes"]
CALLS: ["projects", "where"]
CALLS: ["memoized_users", "id"]
CALLS: ["new"]
CALLS: ["count_issues_by_state", "values", "sum"]
CALLS: ["issues_visible_to_user", "reorder", "group", "count", "memoize_per_user"]
CALLS: ["issues_finder_params", "new", "execute", "preload", "milestoneish_ids", "where", "memoize_per_user"]
CALLS: ["project_id"]
CALLS: ["group", "id"]
CALLS: []
CALLS: []
CALLS: ["project", "merge_requests", "sha", "by_commit_sha"]
CALLS: ["", "joins", "where", "reorder"]
CALLS: ["", "select", "where", "by_commit_sha", "where", "reorder"]
CALLS: ["merge_requests", "iid", "merge_request_path", "title", "map", "to_json", "json", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["class", "name"]
CALLS: ["project", "project_merge_request_path"]
CALLS: ["merge_requests", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["milestone_redirect_path", "html", "sorted_merge_requests", "tabs_json", "json", "respond_to"]
CALLS: ["merge_requests", "sort_by_attribute"]
CALLS: ["project_milestone_path", "safe_title", "title", "group_milestone_path", "safe_title", "title", "dashboard_milestone_path"]
CALLS: ["title", "to_slug", "normalize", "to_s"]
CALLS: ["to_slug", "normalize", "to_s"]
CALLS: ["view_to_html_string"]
CALLS: ["issuables_collection", "params", "page", "collection_type", "issuable_meta_data"]
CALLS: ["count_issues_by_state", "merge_requests", "closed_and_merged", "size", "memoize_per_user"]
CALLS: ["", "with_states"]
CALLS: ["status", "include?"]
CALLS: ["inspect", "merge!", "file_storage?", "path", "class", "proxy_download_enabled?", "headers", "url", "send_url", "store", "url"]
CALLS: ["storage", "is_a?"]
CALLS: ["object_store", "storage_for"]
CALLS: ["class", "object_store_enabled?", "new", "new"]
CALLS: ["object_store_options", "enabled"]
CALLS: ["options", "object_store"]
CALLS: ["hashed_storage?", "new", "new"]
CALLS: ["object_store_options", "proxy_download"]
CALLS: ["storage"]
CALLS: ["class", "merge_request", "to_reference"]
CALLS: ["class", "name"]
CALLS: []
CALLS: ["class", "name", "id", "commit_id", "path"]
CALLS: ["project", "job", "raw_project_job_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project", "job", "params", "raw_project_job_artifacts_path"]
CALLS: ["params", "new", "build", "send_artifacts_entry"]
CALLS: ["headers", "send_artifacts_entry", "store"]
CALLS: ["params", "content", "convert_line_endings", "sanitized_file_name", "send_data"]
CALLS: ["file_name", "gsub"]
CALLS: ["params", "gsub"]
CALLS: ["persisted?", "merge_request_diff", "commits", "compare_commits", "compare_commits", "reverse"]
CALLS: ["commits", "project", "decorate"]
CALLS: ["commits", "with_pipeline_status", "prepare_commits_for_rendering", "view_to_html_string", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project", "pipelines", "map", "ref", "latest_status_per_commit", "ref", "id", "set_status_for_ref", "each"]
CALLS: []
CALLS: ["project", "pipelines", "sha", "where"]
CALLS: ["arel_table", "arel_table", "alias", "eq", "eq", "and", "lt", "and", "eq", "and", "join", "on", "select", "where", "eq", "where", "join_sources", "joins", "where", "each_with_object"]
CALLS: ["all_pipelines", "response", "set_header", "new", "represent", "count", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["source_project", "none", "source_project", "pipelines", "all_commit_shas", "source_branch", "where", "order"]
CALLS: ["persisted?", "commit_shas", "all_commits", "pluck", "uniq"]
CALLS: ["postgresql?", "merge_request_diffs", "recent", "merge_request_diffs", "where", "limit"]
CALLS: ["", "order", "limit"]
CALLS: ["", "reorder"]
CALLS: ["", "reorder"]
CALLS: ["recent_branches"]
CALLS: ["all_pipelines", "response", "set_header", "new", "represent", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["pipelines", "order", "params", "params", "where", "html", "response", "set_header", "new", "represent", "count", "json", "respond_to", "title", "short_id", "id", "project_commit_path", "size", "nav_link", "current_user", "can?", "id", "pipelines_project_commit_path", "pipelines", "size", "nav_link", "id", "pipelines_project_commit_path", "id", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["short_id"]
CALLS: ["current_user", "render"]
CALLS: ["full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["compare", "commits", "size", "zero?", "compare", "max_diff_options", "diffs", "real_size", "any?", "create_merge_request_diff_files", "overflow?", "assign_attributes"]
CALLS: ["map", "to_hash", "id", "merge", "encoding", "ascii_only?", "pack", "tap", "with_index", "bulk_insert"]
CALLS: ["new"]
CALLS: ["compare", "compare", "merge", "diffs", "merge_request_diff", "diffs"]
CALLS: ["project", "diff_refs", "new"]
CALLS: ["start_commit_sha", "base_commit_sha", "base_commit_sha", "start_commit_sha", "head_commit_sha", "new"]
CALLS: ["persisted?", "merge_request_diff", "diff_refs", "diff_base_sha", "diff_start_sha", "diff_head_sha", "new"]
CALLS: ["persisted?", "merge_request_diff", "base_commit_sha", "branch_merge_base_commit", "try"]
CALLS: ["target_branch_sha", "source_branch_sha", "target_project", "merge_base_commit"]
CALLS: ["source_branch_head", "try"]
CALLS: ["source_project", "source_branch_ref", "source_project", "repository", "source_branch_ref", "commit", "strong_memoize"]
CALLS: ["source_branch", "source_branch"]
CALLS: ["persisted?", "merge_request_diff", "start_commit_sha", "target_branch_head", "try"]
CALLS: ["start_commit_sha", "base_commit_sha", "start_commit_sha", "head_commit_sha", "new"]
CALLS: ["parent_id", "sha", "new"]
CALLS: ["new"]
CALLS: []
CALLS: ["can_be_created", "diff_options", "diffs", "current_user", "environments_for", "last", "view_to_html_string", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["diff_head_commit", "target_project", "target_branch", "diff_head_commit", "new", "execute", "source_project", "source_project", "source_branch", "diff_head_commit", "new", "execute", "concat", "uniq", "new"]
CALLS: ["persisted?", "merge_request_diff", "head_commit", "source_branch_head"]
CALLS: ["hide_whitespace?", "diffs_expanded?", "action_name", "params", "values_at"]
CALLS: ["action"]
CALLS: ["push?", "push_action_name", "closed?", "merged?", "joined?", "left?", "expired?", "destroyed?", "commented?", "created_project?", "created_project_action_name"]
CALLS: []
CALLS: ["state"]
CALLS: ["milestones", "state", "each"]
CALLS: ["project", "external_import?"]
CALLS: ["import_url", "present?"]
CALLS: ["import_data", "present?", "import_data", "credentials", "new", "full_url"]
CALLS: ["has_importer?", "project", "gitlab_project_import?", "project", "repository", "expire_content_cache", "importer", "execute"]
CALLS: ["importer_class", "project", "new"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["project", "import_type", "importer"]
CALLS: ["importer_names", "project", "import_type", "include?"]
CALLS: ["expire_tags_cache", "expire_branches_cache", "expire_root_ref_cache", "expire_emptiness_caches", "expire_exists_cache", "expire_statistics_caches"]
CALLS: ["expire_method_caches"]
CALLS: ["empty?", "expire_method_caches", "raw_repository", "expire_has_local_branches_cache"]
CALLS: ["expire_method_caches"]
CALLS: ["expire_method_caches"]
CALLS: ["expire_method_caches"]
CALLS: ["expire_method_caches"]
CALLS: ["import_type"]
CALLS: ["new", "create!"]
CALLS: ["session", "session", "session", "session"]
CALLS: ["new_ref?", "rm_ref?"]
CALLS: ["push_event_payload", "removed?"]
CALLS: ["push_event_payload", "created?"]
CALLS: ["action"]
CALLS: ["status_name"]
CALLS: ["provider", "provider", "status_name"]
CALLS: ["created?", "target", "target_type", "nil?"]
CALLS: ["action"]
CALLS: ["action"]
CALLS: ["action"]
CALLS: ["action"]
CALLS: ["action"]
CALLS: ["action"]
CALLS: []
CALLS: ["params"]
CALLS: ["params", "present?"]
CALLS: ["start_commit_sha", "merge_request", "target_branch_sha", "head_commit_sha", "merge_request", "source_branch_sha", "base_commit_sha", "find_base_sha"]
CALLS: ["head_commit_sha", "start_commit_sha", "project", "head_commit_sha", "start_commit_sha", "merge_base_commit", "try"]
CALLS: ["project", "repository", "original_position", "base_sha", "keep_around", "project", "repository", "original_position", "start_sha", "keep_around", "project", "repository", "original_position", "head_sha", "keep_around", "position", "original_position", "project", "repository", "position", "base_sha", "keep_around", "project", "repository", "position", "start_sha", "keep_around", "project", "repository", "position", "head_sha", "keep_around"]
CALLS: ["project", "project", "repository", "sha", "keep_around", "project", "repository", "before_sha", "keep_around"]
CALLS: ["ensure_merge_request_diff"]
CALLS: ["merge_request_diff", "create_merge_request_diff"]
CALLS: ["fetch_ref!", "merge_request_diffs", "create", "reload_merge_request_diff", "allow_n_plus_1_calls"]
CALLS: ["target_project", "repository", "source_project", "repository", "source_branch", "ref_path", "fetch_source_branch!"]
CALLS: ["raw_repository", "raw_repository", "fetch_source_branch!"]
CALLS: ["iid"]
CALLS: ["slug"]
CALLS: ["environment", "ref_path", "iid", "to_s", "join"]
CALLS: ["merge_request_diff"]
CALLS: []
CALLS: ["post_create_hook", "create_notification_setting", "send_request", "send_invite"]
CALLS: ["owner?", "event_service", "project", "user", "join_project", "notification_service", "new_project_member"]
CALLS: ["notifiable?", "mailer", "real_source_type", "id", "member_access_granted_email", "deliver_later"]
CALLS: ["notifiable?"]
CALLS: ["new", "notifiable?"]
CALLS: ["has_access?", "own_activity?", "unsubscribed?", "suitable_notification_level?", "unsubscribed?"]
CALLS: ["user", "can?", "user", "can?", "user", "can?", "read_ability", "has_policy?", "user", "read_ability", "can?", "subject_scope"]
CALLS: ["instance_variable_defined?", "to_ability_name", "class", "model_name", "name", "underscore"]
CALLS: ["user", "notified_of_own_activity?"]
CALLS: ["respond_to?", "subscriptions", "id", "find_by_user_id", "subscribed"]
CALLS: ["notification_level", "custom_enabled?", "include?", "action_excluded?"]
CALLS: ["excluded_watcher_action?", "excluded_participating_action?"]
CALLS: ["notification_level", "include?"]
CALLS: ["notification_level", "include?"]
CALLS: ["notification_setting", "event_enabled?"]
CALLS: ["respond_to?", "public_send"]
CALLS: ["find_notification_setting"]
CALLS: ["user", "notification_settings_for", "nil?", "global?", "user", "notification_settings_for", "nil?", "global?", "user", "global_notification_setting"]
CALLS: ["notification_settings", "find_or_initialize_by", "persisted?", "levels", "update_attributes"]
CALLS: ["notification_settings", "loaded?", "notification_settings", "source", "find", "notification_settings", "find_or_initialize_by"]
CALLS: ["user", "source", "notification_settings_for"]
CALLS: ["notification_setting", "level", "to_sym"]
CALLS: []
CALLS: ["user", "blank?", "user", "notifiable_options", "merge", "notifiable?"]
CALLS: ["project"]
CALLS: ["group"]
CALLS: []
CALLS: ["source_type"]
CALLS: ["member", "user", "notification_email", "member_source", "human_name", "member_source", "model_name", "singular", "subject", "mail"]
CALLS: ["member", "source"]
CALLS: ["find"]
CALLS: ["params", "find_by_invite_token", "render_404"]
CALLS: ["token_generator", "digest", "find_by"]
CALLS: ["project", "owner", "user"]
CALLS: ["notification_service", "invite_project_member"]
CALLS: ["notifiable?", "mailer", "real_source_type", "id", "member_invited_email", "deliver_later"]
CALLS: ["member", "invite_email", "member_source", "human_name", "member_source", "model_name", "singular", "subject", "mail"]
CALLS: ["notification_service", "new_group_member"]
CALLS: ["notifiable?", "mailer", "real_source_type", "id", "member_access_granted_email", "deliver_later"]
CALLS: ["notification_service", "invite_group_member"]
CALLS: ["mailer", "real_source_type", "id", "member_invited_email", "deliver_later"]
CALLS: ["system_hook_service", "execute_hooks_for"]
CALLS: ["build_event_data", "new", "execute_hooks", "run_after_commit_or_now"]
CALLS: ["build_event_name", "created_at", "xmlschema", "updated_at", "xmlschema", "key", "id", "merge!", "user", "user", "username", "project_data", "merge!", "old_path_with_namespace", "user_data", "merge!", "username_was", "state", "project_member_data", "merge!", "group_data", "merge!", "path_was", "full_path_was", "merge!", "group_member_data", "merge!"]
CALLS: ["name", "email", "id", "username"]
CALLS: ["group", "name", "group", "path", "group", "id", "user", "username", "user", "name", "user", "email", "user", "id", "human_access"]
CALLS: ["class", "access_options", "group_access", "key"]
CALLS: ["options"]
CALLS: ["owner", "name", "path", "full_path", "id", "try", "try"]
CALLS: ["project", "unscoped", "source_id", "find", "name", "path", "full_path", "id", "user", "username", "user", "name", "user", "email", "user", "id", "human_access", "visibility_levels", "visibility_level_value", "key", "downcase"]
CALLS: ["options"]
CALLS: ["owner", "name", "path", "full_path", "id", "name", "respond_to?", "email", "visibility", "downcase"]
CALLS: ["class", "name", "downcase"]
CALLS: ["namespace", "full_path", "previous_changes", "first", "join"]
CALLS: ["parent_id_was", "nil?", "path_was", "parent_id_was", "find_by", "full_path", "path_was"]
CALLS: ["new"]
CALLS: ["new"]
CALLS: ["new"]
CALLS: ["new"]
CALLS: ["notification_service", "new_access_request"]
CALLS: ["notifiable?", "source", "members", "active_without_invites_and_requests", "owners_and_masters", "fallback_to_group_owners_masters?", "source", "group", "members", "active_without_invites_and_requests", "owners_and_masters", "deliver_access_request_email", "each"]
CALLS: ["present?", "source", "respond_to?", "source", "group"]
CALLS: ["mailer", "real_source_type", "id", "user", "notification_email", "member_access_requested_email", "deliver_later"]
CALLS: ["member_source", "human_name", "member_source", "model_name", "singular", "subject", "mail"]
CALLS: ["fetch_members"]
CALLS: ["project", "authorized_users", "where"]
CALLS: ["", "active", "where"]
CALLS: ["current_user", "new", "target", "execute", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: []
CALLS: ["user", "notification_settings", "source", "find_or_create_for"]
CALLS: ["find_or_initialize_by", "persisted?", "save"]
CALLS: ["new", "execute_hooks_for"]
CALLS: ["name", "info", "system_hook_service", "execute_hooks_for"]
CALLS: ["post_create_hook", "create_notification_setting", "send_request", "send_invite", "update_two_factor_requirement"]
CALLS: ["expanded_groups_requiring_two_factor_authentication", "pluck", "require_two_factor_authentication_from_group", "any?", "two_factor_grace_period", "min", "column_defaults", "save"]
CALLS: ["all_expanded_groups", "where"]
CALLS: ["groups", "new", "all_groups"]
CALLS: ["current_user", "authorized_groups", "sort_by", "users", "count", "full_path", "full_name", "avatar_url", "map"]
CALLS: ["groups", "select", "authorized_projects", "select", "new", "to_sql", "where"]
CALLS: ["params", "current_user", "new", "execute", "new", "represent"]
CALLS: ["statuses", "ordered", "latest", "sort_by", "group_by", "new", "map"]
CALLS: ["", "order"]
CALLS: ["", "where"]
CALLS: ["", "order"]
CALLS: ["authorized_groups", "visible_to_user", "authorized_groups", "public_to_user"]
CALLS: ["", "authorized_projects", "select", "reorder", "where"]
CALLS: ["authorized_groups", "select", "reorder", "where"]
CALLS: ["params", "owned_groups", "current_user", "full_private_access?", "all", "current_user", "groups_for_ancestors", "groups_for_descendants", "new", "all_groups", "include_public_groups?", "unscoped", "current_user", "public_to_user", "empty?", "none"]
CALLS: ["admin?"]
CALLS: ["current_user", "nil?", "params", "fetch"]
CALLS: ["current_user", "owned_groups", "none"]
CALLS: ["current_user", "groups"]
CALLS: ["current_user", "authorized_groups"]
CALLS: ["load_groups", "html", "view_to_html_string", "json", "respond_to"]
CALLS: ["user", "new", "current_user", "execute", "prepare_groups_for_rendering"]
CALLS: ["preload_max_member_access_for_collection"]
CALLS: ["current_user", "blank?", "name", "underscore", "current_user", "ids", "public_send"]
CALLS: ["require_two_factor_authentication_changed?", "two_factor_grace_period_changed?", "users", "find_each"]
CALLS: ["send_invite", "send_request", "create_notification_setting", "post_create_hook"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["set_diff"]
CALLS: ["for_merge_request?", "diff_for_line_code", "find_diff", "st_diff", "to_hash"]
CALLS: ["noteable_type", "line_code", "for_commit?", "commit_id", "noteable_id", "class", "where", "last", "try"]
CALLS: ["noteable", "noteable", "max_diff_options", "raw_diffs", "new_path", "new_path", "hexdigest", "diff_file_hash", "find"]
CALLS: ["compare", "diffs", "load_diffs"]
CALLS: ["merge_request_diff_files", "map", "include?", "include?", "select", "new"]
CALLS: ["merge_request_diff", "merge_request_diff", "raw_diffs", "compare", "raw_diffs"]
CALLS: ["line_code", "line_code", "split"]
CALLS: ["diffs"]
CALLS: ["raw", "diffs"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["post_create_hook", "refresh_user_cache"]
CALLS: ["user", "user", "new", "refresh_cache"]
CALLS: ["count_service", "new", "count_stored?", "global_count", "id", "to_i", "refresh_cache", "each"]
CALLS: []
CALLS: ["count_service", "project_ids", "query", "group", "count"]
CALLS: ["hours", "ago", "where", "limit", "pluck", "month", "ago", "where", "reorder", "limit", "pluck"]
CALLS: ["opened", "public_only", "where"]
CALLS: ["", "where"]
CALLS: ["", "with_state"]
CALLS: ["where"]
CALLS: ["raise"]
CALLS: ["map"]
CALLS: []
CALLS: ["collection", "map", "uniq"]
CALLS: ["can_query?", "to_s", "classify", "const_get", "map!", "name", "method", "with_reactive_cache"]
CALLS: []
CALLS: ["cache", "full_reactive_cache_key", "read", "present?", "within_reactive_cache_lifetime", "cache", "alive_reactive_cache_key", "class", "reactive_cache_lifetime", "write", "class", "id", "perform_async"]
CALLS: ["cache", "alive_reactive_cache_key", "read"]
CALLS: ["full_reactive_cache_key"]
CALLS: ["class", "reactive_cache_key", "respond_to?", "call", "flatten", "join"]
CALLS: ["prometheus_client", "present?"]
CALLS: ["api_url", "manual_configuration?", "active?", "api_url", "new"]
CALLS: []
CALLS: ["kube_client", "kube_client", "service_name", "service_port", "proxy_url", "kube_client", "rest_client", "options", "kube_client", "headers", "merge", "new"]
CALLS: ["cluster", "kubeclient"]
CALLS: []
CALLS: []
CALLS: ["except", "select", "mysql?", "except", "select", "to_sql", "from"]
CALLS: []
CALLS: ["count_service", "project_ids", "query", "group", "count"]
CALLS: []
CALLS: []
CALLS: ["cache", "cache_key", "read", "present?"]
CALLS: ["cache", "cache_key", "block_given?", "uncached_count", "raw?", "write"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["sync_share_with_group_lock_with_parent", "post_create_hook"]
CALLS: []
CALLS: []
CALLS: ["generate_subkeys"]
CALLS: ["key", "subkeys_from_key", "primary_keyid", "subkeys", "create!", "each"]
CALLS: ["upcase"]
CALLS: []
CALLS: []
CALLS: ["before_create_do_block"]
CALLS: ["project", "user", "new", "id", "perform_async", "run_after_commit", "execute", "queued_at", "now", "started_at", "now", "any", "finished_at", "now", "any", "args", "first", "failure_reason", "project", "loopback?", "pipeline_id", "complete?", "manual?", "pipeline_id", "perform_async", "pipeline_id", "perform_async", "stage_id", "perform_async", "id", "perform_async", "run_after_commit", "after_transition", "any", "project", "project", "new", "execute", "run_after_commit"]
CALLS: ["pipeline", "failure_reason?", "pipeline", "failure_reason", "to_sym", "pipeline", "failure_reason"]
CALLS: ["all", "maximum"]
CALLS: ["all", "minimum"]
CALLS: ["id", "perform_async", "run_after_commit"]
CALLS: []
CALLS: []
CALLS: ["add_root_as_member"]
CALLS: ["projects", "root_project"]
CALLS: []
CALLS: []
CALLS: ["reset_project_activity", "set_last_repository_updated_at", "track_user_interacted_projects"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["create_ref", "invalidate_cache"]
CALLS: ["raw_repository", "write_ref"]
CALLS: ["environment", "expire_etag_cache"]
CALLS: ["noteable", "discussions_rendered_on_frontend?", "new", "etag_key", "touch"]
CALLS: ["url_helpers", "project", "noteable_type", "underscore", "noteable_id", "project_noteable_notes_path"]
CALLS: []
CALLS: []
CALLS: ["url_helpers", "project", "realtime_changes_project_issue_path", "new", "touch"]
CALLS: ["new", "etag_cache_key", "touch", "tap"]
CALLS: ["url_helpers", "project", "project_environments_path"]
CALLS: ["awardable", "try"]
CALLS: []
CALLS: ["project", "repository", "ref", "ref_path", "create_ref"]
CALLS: []
CALLS: []
CALLS: ["refresh_user_cache", "post_create_hook"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["refresh_markdown_cache"]
CALLS: ["skip_project_check?", "cached_markdown_fields", "markdown_fields", "cached_markdown_fields", "html_field", "cacheless_render_field", "map", "to_h", "latest_cached_markdown_version", "write_attribute", "each"]
CALLS: ["for_project_noteable?"]
CALLS: ["for_personal_snippet?"]
CALLS: ["noteable", "is_a?"]
CALLS: []
CALLS: ["cached_markdown_version", "cached_markdown_version"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["before_create_do_block"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["keep_around_commits"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["ensure_metadata", "before_create_do_block"]
CALLS: ["metadata", "project", "build_metadata"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["update_attributes", "title", "wiki", "title", "content", "format", "message", "create_page", "save"]
CALLS: ["commit_details", "wiki", "to_sym", "write_page", "update_project_activity", "message"]
CALLS: ["platform_kubernetes_attributes_from_service_template"]
CALLS: ["kubernetes_service_template", "api_url", "kubernetes_service_template", "ca_pem", "kubernetes_service_template", "token", "kubernetes_service_template", "namespace"]
CALLS: ["active", "find_by_template"]
CALLS: ["find_by"]
CALLS: ["ensure_callout", "persisted?", "json", "respond_to", "json", "respond_to"]
CALLS: ["current_user", "callouts", "feature_names", "feature_name", "find_or_create_by"]
CALLS: ["params", "require"]
CALLS: ["snippet_params", "spammable_params", "merge", "current_user", "new", "execute", "valid?", "params", "move_temporary_files", "recaptcha_check_with_fallback", "snippets_path", "current_user"]
CALLS: ["params", "new", "execute", "each"]
CALLS: ["params", "require", "permit"]
CALLS: ["params", "require", "permit"]
CALLS: ["request", "params", "ensure_spam_config_loaded!", "verify_recaptcha", "params", "merge"]
CALLS: ["load_configurations!", "strong_memoize"]
CALLS: ["spammable", "valid?", "spammable_path", "render_recaptcha?", "ensure_spam_config_loaded!", "params", "flash", "html", "spammable", "render_to_string", "json", "respond_to"]
CALLS: ["snippet_path"]
CALLS: ["project_snippet_path"]
CALLS: ["project_issue_path"]
CALLS: ["spammable", "errors", "count", "enabled?", "spammable", "spam"]
CALLS: ["class", "__method__"]
CALLS: ["reset_password_token", "present?", "update_attributes", "flash", "current_user", "authentication_method", "log_audit_event", "current_user", "log_user_activity"]
CALLS: ["user_params", "user_params"]
CALLS: ["params", "require", "permit"]
CALLS: ["params", "require", "permit"]
CALLS: ["params", "require", "permit"]
CALLS: ["params", "require", "permit"]
CALLS: ["params", "require", "user_params_ce", "permit"]
CALLS: []
CALLS: ["login_counter", "increment", "new", "execute"]
CALLS: ["counter"]
CALLS: ["counter"]
CALLS: ["counter"]
CALLS: ["counter_name", "counter_description", "counter"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["username", "request", "remote_ip", "admin?", "info", "new", "for_authentication", "security_event"]
CALLS: ["id", "id", "class", "name", "create"]
CALLS: ["id", "name"]
CALLS: ["user", "new", "execute"]
CALLS: ["new", "for_authentication", "security_event"]
CALLS: ["params", "resource_name", "present?", "params", "resource_name", "blank?", "params", "resource_name", "params", "resource_name", "delete", "load_configurations!", "verify_recaptcha", "flash", "flash", "delete", "new_user_session_path", "redirect_to"]
CALLS: []
CALLS: ["controller_name", "singularize"]
CALLS: ["current_user", "project_params", "new", "execute", "saved?", "cookies", "project_path", "at", "custom_import_params", "project_path", "_", "name", "redirect_to", "active_new_project_tab", "active_new_project_tab", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["id", "persisted?"]
CALLS: ["project_params", "present?"]
CALLS: []
CALLS: ["params", "require", "project_params_attributes", "permit"]
CALLS: []
CALLS: ["params", "require", "permit"]
CALLS: ["params", "permit"]
CALLS: ["current_user", "wiki_params", "new", "execute", "persisted?", "project_wiki_path", "redirect_to", "fluid_layout", "_", "title", "capitalize", "_", "wiki_page_errors", "icon", "persisted?", "title", "capitalize", "project_wiki_path", "title", "capitalize", "persisted?", "s_", "s_", "current_user", "can?", "s_", "persisted?", "project_wiki_history_path", "s_", "current_user", "can?", "project_wiki_path", "s_", "_", "persisted?", "s_", "s_", "title", "namespace", "becomes", "persisted?", "form_errors", "persisted?", "last_commit_sha", "hidden_field", "label", "title", "text_field", "persisted?", "icon", "s_", "icon", "help_page_path", "label", "format", "options_for_select", "select", "label", "slug", "project_wiki_preview_markdown_path", "s_", "slug", "project_wiki_preview_markdown_path", "s_", "html_safe", "s_", "help_page_path", "s_", "html_safe", "label", "text_field", "persisted?", "_", "submit", "_", "project_wiki_path", "s_", "submit", "_", "project_wiki_path", "wiki_params", "build_page", "fluid_layout", "_", "title", "capitalize", "_", "wiki_page_errors", "icon", "persisted?", "title", "capitalize", "project_wiki_path", "title", "capitalize", "persisted?", "s_", "s_", "current_user", "can?", "s_", "persisted?", "project_wiki_history_path", "s_", "current_user", "can?", "project_wiki_path", "s_", "_", "persisted?", "s_", "s_", "title", "namespace", "becomes", "persisted?", "form_errors", "persisted?", "last_commit_sha", "hidden_field", "label", "title", "text_field", "persisted?", "icon", "s_", "icon", "help_page_path", "label", "format", "options_for_select", "select", "label", "slug", "project_wiki_preview_markdown_path", "s_", "slug", "project_wiki_preview_markdown_path", "s_", "html_safe", "s_", "help_page_path", "s_", "html_safe", "label", "text_field", "persisted?", "_", "submit", "_", "project_wiki_path", "s_", "submit", "_", "project_wiki_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["with_reactive_cache"]
CALLS: ["mock_service_url", "project", "namespace", "path", "project", "path", "join", "to_s"]
CALLS: ["drone_url", "project", "full_path", "to_s", "encode", "join", "to_s"]
CALLS: []
CALLS: ["project_url"]
CALLS: ["with_reactive_cache"]
CALLS: ["new", "update_attributes", "tap"]
CALLS: ["params", "require", "permit"]
CALLS: ["project", "triggers", "trigger_params", "current_user", "merge", "create", "valid?", "flash", "flash", "project_settings_ci_cd_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["params", "require", "permit"]
CALLS: ["new", "issuable", "current_user", "mark_todo", "current_user", "new", "execute", "count", "dashboard_todo_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project", "attributes_for_todo", "create_todos"]
CALLS: ["current_user", "new", "params", "params", "params", "params", "execute", "name", "project_tag_path", "params", "params", "s_", "params", "default_branch", "s_", "namespace_project_tags_path", "params", "s_", "s_", "s_", "preview_markdown_path", "s_", "preview_markdown_path", "s_", "s_", "s_", "project_tags_path", "repository", "ref_names", "to_json", "html_safe", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["branch_names", "tag_names"]
CALLS: ["refs", "map"]
CALLS: ["repository", "public_send"]
CALLS: ["ref_names", "join", "notes", "id", "pluralize"]
CALLS: ["params", "nil?", "include?", "include?", "include?", "params", "new", "execute", "take", "map", "s_", "tag_count", "nonzero?", "params", "new", "execute", "take", "map", "s_", "params", "unescape", "flatten", "exclude?", "to_json", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["is_a?", "group_preview_markdown_path", "is_a?", "preview_markdown_snippets_path", "preview_markdown_project_path"]
CALLS: ["snippet_params", "spammable_params", "merge", "current_user", "new", "execute", "recaptcha_check_with_fallback", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["params", "find", "current_user", "can?", "head", "project", "runners_path", "project", "current_user", "assign_to", "persisted?", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["shared?", "is_shared", "save", "runner_projects", "id", "create"]
CALLS: ["is_shared"]
CALLS: ["project_runners_path"]
CALLS: ["create_repository", "project_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["create_service_class", "current_user", "protected_ref_params", "new", "execute", "persisted?", "flash", "errors", "full_messages", "join", "html_safe", "redirect_to_repository_settings"]
CALLS: ["params", "require", "access_level_attributes", "permit"]
CALLS: []
CALLS: ["service_namespace"]
CALLS: []
CALLS: []
CALLS: ["params", "require", "access_level_attributes", "access_level_attributes", "permit"]
CALLS: ["project_settings_repository_path"]
CALLS: ["project", "current_user", "create_params", "new", "execute", "persisted?", "project", "project_pipeline_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["url_helpers", "project_pipeline_path"]
CALLS: ["url_helpers", "project_pipeline_path"]
CALLS: ["params", "require", "permit"]
CALLS: ["params", "require", "permit"]
CALLS: ["params", "require", "permit", "dig", "id", "merge!"]
CALLS: ["params", "require", "permit"]
CALLS: ["params", "require", "permit", "merge"]
CALLS: ["params", "require", "permit", "merge"]
CALLS: ["params", "require", "permit"]
CALLS: ["current_user", "schedule_params", "new", "execute", "persisted?", "pipeline_schedules_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project_pipeline_schedules_path"]
CALLS: ["params", "require", "permit"]
CALLS: ["pages_domains", "create_params", "create", "valid?", "project_pages_domain_path", "project_pages_path", "namespace", "becomes", "errors", "any?", "errors", "full_messages", "each", "label", "persisted?", "text_field", "config", "pages", "external_https", "label", "text_area", "label", "text_area", "submit", "_", "project_pages_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project", "current_user", "milestone_params", "new", "execute", "valid?", "project_milestone_path", "container_class", "namespace", "becomes", "form_errors", "label", "text_field", "label", "preview_markdown_path", "preview_markdown_path", "label", "text_field", "label", "text_field", "new_record?", "submit", "project_milestones_path", "submit", "project_milestone_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["params", "require", "permit"]
CALLS: ["params", "require", "permit"]
CALLS: ["project", "current_user", "merge_request_params", "new", "execute", "valid?", "merge_request_path", "redirect_to", "source_project", "target_project", "define_new_vars", "can_be_created", "params", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project", "id", "branch_name", "project", "id", "ref", "issue", "milestone_id"]
CALLS: ["issue", "to_branch_name"]
CALLS: ["confidential?", "iid", "iid", "title", "parameterize"]
CALLS: ["noteable", "try"]
CALLS: ["params", "ref_name"]
CALLS: ["push_event_payload", "ref"]
CALLS: ["target_project", "target_project", "repository", "branch_names", "target_project", "source_project", "commits", "prepare_commits_for_rendering", "diff_head_commit", "current_user", "id", "new", "execute", "set_pipeline_variables"]
CALLS: ["all_pipelines", "head_pipeline", "present?", "statuses", "relevant", "count"]
CALLS: ["", "where"]
CALLS: ["params", "require", "merge_request_params_attributes", "permit"]
CALLS: []
CALLS: ["current_user", "configure_params", "configure", "flash", "service", "edit_project_service_path", "flash", "new_project_mattermost_path"]
CALLS: ["new", "command", "create", "update", "message"]
CALLS: ["bitmaps_enabled?", "git", "bitmaps_enabled?", "git", "git", "inspect"]
CALLS: []
CALLS: ["housekeeping_bitmaps_enabled"]
CALLS: ["project", "full_name", "merge"]
CALLS: ["params", "require", "permit", "service_trigger_url", "asset_url", "merge"]
CALLS: ["gitlab", "url", "project_id", "to_param"]
CALLS: ["project", "user", "params", "new", "execute", "render_json"]
CALLS: ["build_payload", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["new", "represent", "error_payload"]
CALLS: ["help_url", "merge"]
CALLS: ["label_params", "new", "execute", "valid?", "project_labels_path", "html", "json", "respond_to", "html", "errors", "messages", "json", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: []
CALLS: ["repo", "tags", "new", "to_hashes"]
CALLS: ["raw_repository", "tags"]
CALLS: []
CALLS: []
CALLS: ["manifest", "manifest", "manifest", "new", "map"]
CALLS: ["client", "path", "repository_tags"]
CALLS: ["options", "new"]
CALLS: ["api_key", "authentication", "new"]
CALLS: ["session", "new"]
CALLS: ["session", "new"]
CALLS: ["session", "access_token_key", "client_options", "new"]
CALLS: []
CALLS: ["provider"]
CALLS: ["session", "host_key"]
CALLS: ["provider"]
CALLS: ["session", "session", "new"]
CALLS: ["provider", "app_id", "provider", "app_secret", "options", "new"]
CALLS: ["project", "repository", "tag_names"]
CALLS: ["image", "tags", "new"]
CALLS: ["from_image"]
CALLS: ["project", "container_repositories", "params", "find"]
CALLS: ["project", "container_repositories", "params", "find"]
CALLS: ["params", "require", "permit"]
CALLS: ["params", "require", "permit"]
CALLS: ["params", "permit"]
CALLS: ["issue_params", "spammable_params", "merge", "params", "params", "merge", "project", "current_user", "new", "execute", "discussions_to_resolve", "count", "flash", "discussion_to_resolve_id", "recaptcha_check_with_fallback", "html", "attachment", "url", "to_js", "js", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["issue_params_with_info_from_discussions", "whitelisted_issue_params", "merge"]
CALLS: ["current_user", "project", "can?", "params", "slice", "params", "slice"]
CALLS: ["merge_request_to_resolve_discussions_of", "title_from_merge_request", "description_for_discussions"]
CALLS: ["discussions_to_resolve", "empty?", "merge_request_to_resolve_discussions_of", "to_reference", "discussions_to_resolve", "size", "pluralize", "merge_request_to_resolve_discussions_of", "to_reference", "items_for_discussions", "join"]
CALLS: ["discussions_to_resolve", "item_for_discussion", "map"]
CALLS: ["first_note_to_resolve", "first_note", "first_note", "build", "notes", "size", "author", "to_reference", "pluralize", "note", "new", "call", "lines", "map", "join", "join"]
CALLS: ["resolvable?", "notes", "find", "strong_memoize"]
CALLS: ["potentially_resolvable?", "system?"]
CALLS: ["class", "name", "include?", "noteable", "supports_resolvable_notes?"]
CALLS: ["base_class_name", "include?"]
CALLS: ["class", "base_class", "name"]
CALLS: ["potentially_resolvable?", "notes", "any?", "strong_memoize"]
CALLS: ["notes", "first", "strong_memoize"]
CALLS: ["author_email", "downcase", "find_by_any_email"]
CALLS: ["by_any_email", "take"]
CALLS: ["where", "joins", "where", "new", "to_sql", "table_name", "from"]
CALLS: ["author?", "params", "params", "find"]
CALLS: ["params", "present?"]
CALLS: ["author_id?", "params", "find_by", "author_username?", "params", "find_by"]
CALLS: ["params", "present?", "params"]
CALLS: ["params", "present?", "params"]
CALLS: ["merge_request_to_resolve_discussions_of", "title"]
CALLS: ["current_user", "project", "id", "new", "execute", "merge_request_to_resolve_discussions_of_iid", "find_by", "strong_memoize"]
CALLS: ["merge_request_to_resolve_discussions_of", "discussion_to_resolve_id", "merge_request_to_resolve_discussions_of", "discussion_to_resolve_id", "find_discussion", "merge_request_to_resolve_discussions_of", "discussions_to_be_resolved"]
CALLS: ["project", "project", "notes", "find_discussion", "find_discussion", "noteable", "noteable_without_project?"]
CALLS: ["is_a?", "current_user", "can?"]
CALLS: ["where", "fresh", "to_a", "empty?", "build"]
CALLS: ["resolvable_discussions", "select"]
CALLS: ["move_between_lists?", "add_label_ids", "remove_label_ids", "issue_state", "merge!", "move_between_ids", "move_between_ids", "board", "group", "id"]
CALLS: ["params", "params", "params", "params"]
CALLS: ["moving_to_list", "movable?", "moving_from_list", "label_id", "board", "group_board?", "parent", "id", "on_group_boards", "pluck", "parent", "id", "on_project_boards", "pluck", "compact"]
CALLS: ["board", "lists", "params", "find_by"]
CALLS: ["board", "lists", "params", "find_by"]
CALLS: ["label?"]
CALLS: ["", "with_lists_and_board", "where"]
CALLS: ["", "joins", "movable", "merge"]
CALLS: ["", "list_types", "where"]
CALLS: ["", "with_lists_and_board", "where"]
CALLS: ["group_id", "present?"]
CALLS: ["moving_to_list", "label_id", "compact"]
CALLS: ["moving_from_list", "closed?", "moving_to_list", "closed?"]
CALLS: ["moving_from_list", "present?", "moving_to_list", "present?", "moving_from_list", "moving_to_list"]
CALLS: ["parent", "boards", "params", "find"]
CALLS: ["parent", "boards"]
CALLS: ["parent", "boards", "params", "find"]
CALLS: ["parent", "boards", "params", "delete", "find"]
CALLS: ["first"]
CALLS: ["params", "find"]
CALLS: ["params", "require", "issue_params_attributes", "permit"]
CALLS: []
CALLS: ["params", "require", "permit", "params", "params", "request", "merge"]
CALLS: ["import_url", "params", "save", "reload", "import_schedule", "project_import_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["errors", "empty?", "import?", "bare_repository_import?", "import_schedule", "errors", "full_messages", "join", "fail"]
CALLS: ["dup", "id", "id", "logger", "error", "errors", "add", "import?", "mark_import_as_failed"]
CALLS: ["errors", "dup", "sanitize", "import_fail", "update_column", "logger", "message", "error"]
CALLS: ["import_type"]
CALLS: ["external_import?", "forked?", "gitlab_project_import?", "bare_repository_import?"]
CALLS: ["fork_network", "fork_network", "root_project", "forked_project_link", "nil?", "forked_project_link", "forked_from_project", "nil?"]
CALLS: ["fork_network", "fork_network", "forked_from_project", "fork_network", "create_root_of_fork_network", "create_root_of_fork_network"]
CALLS: ["hooks", "hook_params", "new", "save", "valid?", "hooks", "select", "flash", "errors", "full_messages", "join", "html_safe", "project_settings_integrations_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["params", "require", "triggers", "values", "permit"]
CALLS: ["params", "require", "triggers", "values", "permit"]
CALLS: ["params", "present?", "params", "find", "current_user", "can?", "render_404", "project", "current_user", "group_link_create_params", "new", "execute", "flash", "project", "project_project_members_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["params", "permit"]
CALLS: ["params", "find", "projects", "project", "path", "find_by", "forked_from_project", "project", "project", "current_user", "new", "execute", "saved?", "forked?", "import_in_progress?", "continue_params", "project_import_path", "continue_params", "continue_params", "continue_params", "project_path", "name", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["import_started?", "import_scheduled?"]
CALLS: ["import_status"]
CALLS: ["import_status", "import?"]
CALLS: ["params", "permit", "start_with?", "start_with?"]
CALLS: ["project", "environments", "environment_params", "create", "persisted?", "project", "project_environment_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["params", "require", "permit"]
CALLS: ["current_user", "create_params", "new", "execute", "valid?", "flash", "errors", "full_messages", "join", "html_safe", "redirect_to_repository_settings", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["params", "blank?", "params", "blank?", "flash", "params", "presence", "params", "presence", "project_compare_index_path", "params", "params", "project_compare_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project", "current_user", "create_params", "new", "execute", "persisted?", "project", "project_cluster_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project", "current_user", "create_params", "new", "token_in_session", "execute", "persisted?", "project", "project_cluster_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["session", "session_key_for_token"]
CALLS: ["project", "current_user", "new", "execute"]
CALLS: ["params", "yaml_processor_options", "validation_message", "blank?", "blank?", "yaml_processor_options", "new", "stages", "builds", "jobs", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["prepare!", "blob", "data", "new", "message"]
CALLS: ["new", "decorate"]
CALLS: ["diff_file", "old_blob", "load_all_data!", "diff_file", "new_blob", "load_all_data!"]
CALLS: ["diff", "diff", "project_repository", "new"]
CALLS: ["active?", "project_id", "project", "repository", "fetch", "project", "repository"]
CALLS: ["original_position", "project", "repository", "diff_file"]
CALLS: []
CALLS: []
CALLS: ["new"]
CALLS: ["blob", "load_all_data!"]
CALLS: []
CALLS: ["id", "blob_at", "id", "tree", "entries", "any?", "join", "project_tree_path", "render_404"]
CALLS: ["namespace", "repository", "root_ref", "namespace_project_tree_path"]
CALLS: ["prepare!", "blob", "data", "validation_message"]
CALLS: ["project", "repository", "commit", "sha"]
CALLS: ["current_user", "created_projects", "where", "to_json"]
CALLS: ["current_user", "created_projects", "where", "to_json"]
CALLS: ["current_user", "created_projects", "provider", "where", "to_json"]
CALLS: ["current_user", "created_projects", "where", "to_json"]
CALLS: ["current_user", "created_projects", "where", "to_json"]
CALLS: ["params", "strip_tags", "sanitize", "unescape", "project", "empty_repo?", "project", "deployment_platform", "present?", "project", "current_user", "new", "ref", "execute", "params", "current_user", "id", "new", "params", "find_by", "current_user", "new_issue_branch", "project", "url_to_autodeploy_setup", "view_context", "autodeploy_flash_notice", "project_tree_path", "params", "default_branch", "namespace_project_branches_path", "params", "icon", "project_branches_path", "repository", "ref_names", "to_json", "html_safe", "html", "project_tree_url", "json", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["url_helpers", "default_branch", "project_compare_url", "new", "create_note"]
CALLS: ["note", "merge", "create", "metadata?", "system_note_metadata", "metadata", "new"]
CALLS: ["metadata", "present?"]
CALLS: ["state", "target_project", "current_user", "change_status"]
CALLS: ["dup", "gfm_reference", "new", "create_note"]
CALLS: ["class", "to_s", "underscore", "humanize", "downcase", "to_reference"]
CALLS: ["state", "project", "current_user", "change_status"]
CALLS: ["project", "current_user", "state", "change_status"]
CALLS: ["repository", "empty?"]
CALLS: ["_", "sanitize", "truncate", "link_to_autodeploy_doc", "html_safe"]
CALLS: ["project", "truncate_team"]
CALLS: ["id"]
CALLS: ["_", "help_page_path"]
CALLS: ["project_new_blob_path"]
CALLS: ["join", "project_blob_path", "project_new_blob_path", "create_commit", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["user_access", "branch_name_or_ref", "can_push_to_branch?", "current_user", "fork_of", "repository", "next_branch", "merge", "current_user", "new", "execute", "update_flash_notice", "final_success_path", "html", "json", "respond_to", "flash", "respond_to?", "call", "html", "json", "respond_to"]
CALLS: ["namespace", "find_fork_of"]
CALLS: ["fork_network", "active?", "id", "fork_network", "projects", "find_forks_in", "first", "new", "fetch", "fork_network", "projects", "find_forks_in", "first"]
CALLS: ["projects", "where"]
CALLS: ["branch_names", "match", "to_i", "map", "compact", "max"]
CALLS: []
CALLS: ["create_merge_request?", "merge_request_exists?", "existing_merge_request_path", "new_merge_request_path", "respond_to?", "call"]
CALLS: ["params", "present?", "different_project?"]
CALLS: []
CALLS: ["current_user", "id", "new", "execute", "opened", "find_by", "strong_memoize"]
CALLS: ["project_merge_request_path"]
CALLS: ["id", "id", "project_new_merge_request_path"]
CALLS: ["flash", "create_merge_request?", "merge_request_exists?", "flash", "different_project?", "flash"]
CALLS: ["current_user", "new"]
CALLS: ["current_user", "params", "validate_and_consume_otp!", "current_user", "current_user", "new", "generate_otp_backup_codes!", "execute!", "build_qr_code", "setup_u2f_registration", "header_title", "profile_path"]
CALLS: ["execute", "new"]
CALLS: ["can_see_access_requests?", "source", "requesters"]
CALLS: ["source", "source", "class", "to_s", "underscore", "source", "allowed?"]
CALLS: ["new", "current_user", "u2f_registrations", "u2f_app_id", "new", "registration_requests", "map", "authentication_requests", "session", "map", "gon", "session", "u2f_app_id", "push"]
CALLS: ["transaction_begin", "create_event", "new", "execute", "transaction_end", "transaction", "new", "cache_last_push_event", "new", "execute"]
CALLS: ["project", "project_cache_key", "user_cache_key", "project", "forked_from_project", "project_cache_key", "id", "set_key", "each"]
CALLS: ["cache", "write"]
CALLS: ["id", "id"]
CALLS: ["id"]
CALLS: ["request", "base_url"]
CALLS: ["current_user", "account_string", "issuer_host", "otp_provisioning_uri", "render_qrcode"]
CALLS: ["config", "gitlab", "host"]
CALLS: ["gitlab", "host"]
CALLS: ["issuer_host", "current_user", "email"]
CALLS: ["finder", "personal_access_token_params", "build", "save", "current_user", "id", "token", "redis_store!", "profile_personal_access_tokens_path", "set_index_vars", "header_title", "profile_path"]
CALLS: ["redis_shared_state_key", "set", "with"]
CALLS: []
CALLS: ["current_user", "available_scopes", "finder", "execute", "finder", "execute", "order", "current_user", "id", "redis_getdel"]
CALLS: ["redis_shared_state_key", "get", "redis_shared_state_key", "del", "with"]
CALLS: ["params", "require", "permit"]
CALLS: ["current_user", "merge", "new"]
CALLS: ["current_user", "oauth_applications", "current_user", "oauth_authorized_tokens", "reject", "map", "uniq", "reject", "new"]
CALLS: ["id", "where"]
CALLS: ["finder_type", "issuable_finder_for", "strong_memoize"]
CALLS: []
CALLS: []
CALLS: []
CALLS: ["action_name"]
CALLS: ["action_name"]
CALLS: ["current_user", "filter_params", "new"]
CALLS: ["current_user", "available_scopes", "finder", "build", "finder", "execute", "finder", "execute", "order"]
CALLS: ["user", "merge", "new"]
CALLS: ["params", "find"]
CALLS: ["password_automatically_set", "user_params", "valid_password?", "new_profile_password_path", "user_params", "user_params", "current_user", "merge", "new", "execute", "current_user", "new", "execute", "root_path", "header_title", "profile_path"]
CALLS: ["current_user", "key_params", "request", "remote_ip", "merge", "new", "execute", "persisted?", "profile_key_path", "current_user", "keys", "select", "header_title", "profile_path"]
CALLS: ["params", "require", "permit"]
CALLS: ["params", "require"]
CALLS: ["current_user", "gpg_key_params", "new", "execute", "persisted?", "profile_gpg_keys_path", "current_user", "gpg_keys", "select", "header_title", "profile_path"]
CALLS: ["params", "require", "permit"]
CALLS: ["current_user", "email_params", "current_user", "merge", "new", "execute", "errors", "blank?", "flash", "errors", "full_messages", "first", "profile_emails_url", "header_title", "profile_path"]
CALLS: ["params", "require", "permit"]
CALLS: ["current_user", "chat_names", "chat_name_params", "new", "save", "flash", "chat_name", "flash", "delete_chat_name_token", "profile_chat_names_path"]
CALLS: ["id"]
CALLS: ["current_user", "chat_names"]
CALLS: ["chat_name_token", "get", "render_404"]
CALLS: ["new"]
CALLS: ["params", "render_404", "render_404", "params", "new"]
CALLS: ["chat_name_token", "delete"]
CALLS: ["current_user", "create_application_params", "new", "request", "execute", "persisted?", "flash", "t", "oauth_application_url", "set_index_vars", "header_title", "profile_path"]
CALLS: ["application_params", "current_user", "tap"]
CALLS: ["params", "require", "permit"]
CALLS: ["resource", "can_read?", "render_404", "current_user", "resource", "notification_settings_for", "notification_setting_params", "update_attributes", "render_response"]
CALLS: ["current_user", "sign_up_params", "new", "execute"]
CALLS: ["params", "require", "permit"]
CALLS: ["dup", "params", "require", "permit"]
CALLS: ["view_to_html_string"]
CALLS: ["class", "name", "downcase", "to_sym", "current_user", "can?"]
CALLS: ["params", "present?", "params", "find", "params", "present?", "params", "find"]
CALLS: ["client", "params", "repo", "session", "current_user", "namespace", "current_user", "new", "execute", "persisted?", "new", "represent", "errors", "full_messages"]
CALLS: ["file_is_valid?", "redirect_back_or_default", "current_user", "project_params", "new", "execute", "saved?", "project_path", "name", "redirect_to", "errors", "full_messages", "join", "redirect_back_or_default"]
CALLS: ["project_params", "project_params", "respond_to?"]
CALLS: ["client", "params", "to_i", "project", "client", "user", "find_or_create_namespace", "current_user", "can?", "current_user", "access_params", "new", "execute", "persisted?", "new", "represent", "errors", "full_messages"]
CALLS: ["session"]
CALLS: ["session", "access_token_key"]
CALLS: ["params", "presence", "current_user", "namespace", "current_user", "new", "execute", "errors", "any?", "current_user", "namespace", "error", "current_user", "namespace"]
CALLS: ["client", "params", "to_i", "repo", "params", "presence", "name", "params", "presence", "current_user", "namespace_path", "current_user", "namespace_path", "find_or_create_namespace", "current_user", "can?", "current_user", "access_params", "provider", "new", "extra_project_attrs", "execute", "persisted?", "new", "represent", "errors", "full_messages"]
CALLS: []
CALLS: ["client", "params", "repo", "session", "session", "session", "client", "user_map", "current_user", "namespace", "current_user", "new", "execute", "persisted?", "new", "represent", "errors", "full_messages"]
CALLS: ["client", "user_map", "session", "update", "sort"]
CALLS: ["client", "user_map", "session", "update"]
CALLS: ["credentials", "new", "params", "to_s", "gsub", "repo", "params", "presence", "name", "owner", "user", "username", "current_user", "username", "params", "presence", "current_user", "find_or_create_namespace", "current_user", "can?", "session", "connection", "token", "current_user", "credentials", "new", "execute", "persisted?", "new", "represent", "errors", "full_messages"]
CALLS: ["current_user", "group_params", "new", "execute", "persisted?", "chat_team", "present?", "name", "name", "dashboard_groups_path", "dashboard_groups_path", "form_errors", "label", "_", "_", "file_field", "_", "default_group_visibility", "default_group_visibility", "local_assigns", "fetch", "icon", "help_page_path", "label", "can_change_visibility_level", "form_model", "values", "form_model", "disallowed_visibility_level?", "restricted_visibility_levels", "include?", "form", "model_method", "form", "model_method", "selected_level", "radio_button", "visibility_level_icon", "visibility_level_label", "form_model", "visibility_level_description", "restricted_visibility_level_description", "form_model", "disallowed_visibility_level_description", "label", "each", "form_model", "render", "visibility_level_icon", "visibility_level_label", "form_model", "visibility_level_description", "config", "mattermost", "enabled", "custom_icon", "label", "check_box", "label", "mattermost", "host", "submit", "dashboard_groups_path", "name", "page_description", "description", "header_title", "group_title", "current_user"]
CALLS: ["respond_to?", "visibility_level_allowed?"]
CALLS: ["visibility_level", "visibility_level_allowed_as_fork?", "visibility_level_allowed_by_group?"]
CALLS: ["visibility_level", "group", "group", "visibility_level"]
CALLS: ["visibility_level", "forked?", "forked_project_link", "forked_from_project", "visibility_level"]
CALLS: ["visibility_level", "visibility_level_allowed_by_parent?", "visibility_level_allowed_by_projects?", "visibility_level_allowed_by_sub_groups?"]
CALLS: ["visibility_level", "children", "where", "exists?"]
CALLS: ["paginator", "params", "paginate"]
CALLS: ["visibility_level", "projects", "where", "exists?"]
CALLS: ["visibility_level", "parent_id", "parent_id", "nonzero?", "parent", "visibility_level"]
CALLS: ["current_user", "admin?", "restricted_visibility_levels"]
CALLS: ["visibility_levels", "key", "s_"]
CALLS: ["disallowed_project_visibility_level_description", "disallowed_group_visibility_level_description"]
CALLS: ["level_name", "downcase", "visibility_level_allowed_by_projects?", "visibility_level_allowed_by_sub_groups?", "visibility_level_allowed_by_parent?", "parent", "visibility_level_errors_for_group", "any?", "to_sentence", "html_safe"]
CALLS: ["name", "group_path", "edit_group_path", "visibility"]
CALLS: ["level_name", "downcase", "visibility_level_allowed_as_fork?", "visibility_level_allowed_by_group?", "group", "visibility_level_errors_for_group", "any?", "to_sentence", "html_safe"]
CALLS: ["level_name", "capitalize"]
CALLS: ["project_visibility_level_description", "group_visibility_level_description", "snippet_visibility_level_description"]
CALLS: ["is_a?"]
CALLS: []
CALLS: ["_", "_", "_"]
CALLS: ["icon"]
CALLS: []
CALLS: ["params", "require", "group_params_attributes", "permit"]
CALLS: []
CALLS: ["params", "require", "group_params_ce", "permit"]
CALLS: []
CALLS: ["group", "current_user", "milestone_params", "new", "execute", "persisted?", "milestone_path", "form_errors", "label", "text_field", "label", "group_preview_markdown_path", "group_preview_markdown_path", "label", "text_field", "label", "text_field", "new_record?", "submit", "group_milestones_path", "submit", "group_milestone_path", "name", "page_description", "description", "header_title", "group_title", "current_user"]
CALLS: ["group_milestone?", "group", "group_milestone_path", "project_milestone?", "project", "project_milestone_path"]
CALLS: ["project_id", "present?"]
CALLS: []
CALLS: ["legacy_group_milestone?", "group", "safe_title", "title", "group_milestone_path", "group", "iid", "group_milestone_path"]
CALLS: []
CALLS: []
CALLS: ["label_params", "new", "group", "execute", "valid?", "group_labels_path", "html", "new", "represent_appearance", "json", "respond_to", "name", "page_description", "description", "header_title", "group_title", "current_user"]
CALLS: ["represent"]
CALLS: ["model", "params", "uploader_class", "new", "execute", "json", "json", "respond_to"]
CALLS: ["uploader", "const_get"]
CALLS: ["uploader", "const_get"]
CALLS: ["uploader", "const_get"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["note_params", "params", "params", "merge", "note_project", "current_user", "new", "execute", "is_a?", "current_user", "new", "execute", "note_json", "json", "redirect_back_or_default", "html", "respond_to"]
CALLS: ["params", "merge"]
CALLS: ["project", "params", "present?", "find", "project", "current_user", "can?", "access_denied!", "strong_memoize"]
CALLS: ["params", "require", "permit"]
CALLS: ["commands_changes", "persisted?", "use_note_serializer?", "note_serializer", "represent", "merge!", "id", "noteable", "discussion_id", "note_html", "note", "try", "merge!", "noteable", "to_discussion", "individual_note?", "resolvable?", "diff_discussion_html", "discussion_html", "merge!", "diff_discussion?", "line_code", "errors", "merge!"]
CALLS: ["build"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["params", "noteable", "is_a?", "cookies", "noteable", "discussions_rendered_on_frontend?"]
CALLS: ["project", "noteable", "current_user", "new"]
CALLS: ["individual_note?", "render_to_string"]
CALLS: ["diff_discussion?", "on_image?", "params", "params", "render_to_string"]
CALLS: []
CALLS: []
CALLS: ["position", "position_type"]
CALLS: ["render_to_string"]
CALLS: ["params", "permit", "current_user", "new", "membershipable", "execute", "members_page_url", "members_page_url"]
CALLS: ["membershipable", "membershipable", "polymorphic_url", "membershipable", "project_project_members_path", "membershipable"]
CALLS: ["board", "parent", "current_user", "list_params", "new", "board", "execute", "valid?", "serialize_as_json", "errors"]
CALLS: ["as_json"]
CALLS: ["as_json"]
CALLS: ["as_json"]
CALLS: ["as_json"]
CALLS: ["params", "require", "permit"]
CALLS: ["board", "group_board?", "as_json"]
CALLS: ["board_parent", "project", "current_user", "issue_params", "new", "execute", "valid?", "serialize_as_json", "errors"]
CALLS: ["board", "parent"]
CALLS: ["current_user", "user_params", "merge", "new", "execute", "persisted?", "html", "json", "form_errors", "label", "text_field", "label", "text_field", "label", "text_field", "new_record?", "label", "label", "object", "force_random_password", "password_field", "label", "object", "force_random_password", "password_field", "label", "number_field", "label", "check_box", "label", "current_user", "radio_button", "radio_button", "label", "check_box", "label", "file_field", "label", "text_field", "label", "text_field", "label", "text_field", "label", "text_field", "new_record?", "submit", "admin_users_path", "submit", "admin_user_path", "html", "errors", "json", "respond_to", "admin_root_path"]
CALLS: ["params", "find", "current_user", "assign_to", "persisted?", "admin_runner_path", "admin_runner_path", "admin_root_path"]
CALLS: ["label_params", "new", "execute", "persisted?", "admin_labels_url", "admin_root_path"]
CALLS: ["finder", "impersonation_token_params", "build", "save", "admin_user_impersonation_tokens_path", "set_index_vars", "admin_root_path"]
CALLS: ["params", "require", "permit"]
CALLS: ["identity_params", "new", "user_id", "user", "id", "save", "admin_user_identities_path", "admin_root_path"]
CALLS: ["params", "require", "permit"]
CALLS: ["hook_params", "new", "save", "admin_hooks_path", "all", "admin_root_path"]
CALLS: ["group_params", "new", "name", "name", "path", "dup", "save", "current_user", "add_owner", "name", "default_group_visibility", "form_errors", "label", "_", "_", "file_field", "_", "visibility_level", "can_change_group_visibility_level?", "visibility_level", "local_assigns", "fetch", "icon", "help_page_path", "label", "can_change_visibility_level", "form_model", "values", "form_model", "disallowed_visibility_level?", "restricted_visibility_levels", "include?", "form", "model_method", "form", "model_method", "selected_level", "radio_button", "visibility_level_icon", "visibility_level_label", "form_model", "visibility_level_description", "restricted_visibility_level_description", "form_model", "disallowed_visibility_level_description", "label", "each", "form_model", "render", "visibility_level_icon", "visibility_level_label", "form_model", "visibility_level_description", "form", "form", "check_box", "label", "current_user", "admin?", "label", "lfs_enabled?", "check_box", "icon", "help_page_path", "label", "current_user", "label", "check_box", "icon", "help_page_path", "label", "text_field", "new_record?", "submit", "admin_groups_path", "submit", "admin_group_path", "admin_root_path"]
CALLS: ["add_user"]
CALLS: ["project", "add_user"]
CALLS: ["retrieve_member", "retrieve_access_level", "can_update_member?", "attributes", "created_by", "request?", "new", "execute", "save"]
CALLS: ["created_by_id", "created_by_id", "find_by"]
CALLS: ["owner?", "new_record?"]
CALLS: ["requested_at", "present?"]
CALLS: ["type", "underscore", "can?"]
CALLS: ["access_levels", "to_i", "fetch"]
CALLS: ["retrieve_user", "is_a?", "id", "members", "id", "build", "members_and_requesters", "id", "find_or_initialize_by", "members", "build"]
CALLS: ["is_a?", "find_by", "find_by"]
CALLS: ["add_user"]
CALLS: ["current_user", "can?"]
CALLS: ["current_user", "create_params", "merge", "new", "execute", "persisted?", "admin_deploy_keys_path", "local_assigns", "fetch", "local_assigns", "fetch", "deploy_keys_project_for", "form_errors", "label", "text_field", "new_record?", "label", "help_page_path", "text_area", "label", "text_field", "present?", "check_box", "label", "fields_for", "submit", "admin_deploy_keys_path", "admin_root_path"]
CALLS: ["broadcast_message_params", "new", "save", "admin_broadcast_messages_path", "admin_root_path"]
CALLS: ["params", "require", "permit"]
CALLS: ["current_user", "application_params", "new", "request", "execute", "persisted?", "flash", "t", "admin_application_url", "admin_root_path"]
CALLS: ["appearance_params", "new", "save", "admin_appearances_path", "admin_appearances_path", "form_errors", "label", "header_logo?", "header_logo_url", "persisted?", "header_logos_admin_appearances_path", "hidden_field", "file_field", "label", "text_field", "label", "text_area", "label", "logo?", "logo_url", "persisted?", "logo_admin_appearances_path", "hidden_field", "file_field", "label", "text_area", "submit", "persisted?", "preview_sign_in_admin_appearances_path", "new_project_path", "updated_at", "admin_root_path"]
CALLS: ["params", "require", "allowed_appearance_params", "permit"]
CALLS: []
CALLS: ["services", "deployment", "reorder", "find_by"]
CALLS: ["", "where"]
CALLS: ["environment", "deployments", "params", "find_by"]
CALLS: ["clusters", "enabled", "default_environment", "last", "platform_kubernetes"]
CALLS: ["", "where"]
CALLS: ["variables", "variables", "map"]
CALLS: ["variables", "map"]
CALLS: ["persisted_environment", "project", "ref", "secret_variables_for"]
CALLS: ["protected_for?", "variables", "variables", "unprotected"]
CALLS: ["repository", "branch_exists?", "protected?", "repository", "tag_exists?", "protected?"]
CALLS: ["raw_repository", "tag_names", "include?"]
CALLS: ["protected_tags", "select", "matching", "present?"]
CALLS: ["name", "matches?", "select"]
CALLS: ["name", "blank?", "exact_match?", "wildcard_match?"]
CALLS: ["wildcard?", "wildcard_regex"]
CALLS: ["name", "gsub", "quote", "gsub"]
CALLS: ["name", "name", "include?"]
CALLS: ["name"]
CALLS: ["matching"]
CALLS: ["empty_repo?", "default_branch_protected?", "protected_branches", "select", "matching", "present?"]
CALLS: ["default_branch_protection", "default_branch_protection"]
CALLS: ["", "where"]
CALLS: ["", "where"]
CALLS: ["ancestors", "where", "protected_for?", "unprotected", "group_by", "reverse", "id", "map", "compact", "flatten"]
CALLS: ["project", "group", "project", "group", "ref", "project", "secret_variables_for"]
CALLS: ["new", "user", "blank?", "user", "id", "to_s", "append", "user", "email", "append", "user", "username", "append", "user", "name", "append", "tap"]
CALLS: ["read_attribute", "build_attributes_from_config"]
CALLS: ["two_factor_grace_period", "current_user", "try", "current_user", "two_factor_grace_period", "min"]
CALLS: ["set_default_values", "target_url"]
CALLS: ["context", "stage", "stage_idx"]
CALLS: ["token", "blank?", "token", "hex"]
CALLS: ["token", "blank?", "token", "hex"]
CALLS: []
CALLS: []
CALLS: []
CALLS: ["validation_message", "blank?"]
CALLS: ["validation_message", "blank?"]
CALLS: ["project"]
CALLS: ["group"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["current_user", "admin?"]
CALLS: ["zone", "now", "updated_at"]
CALLS: []
CALLS: ["default_message", "id", "username", "name", "email", "new"]
CALLS: ["username"]
CALLS: []
CALLS: ["recipients", "select!"]
CALLS: ["note", "author", "add_participants", "note", "author", "note", "add_mentions", "note", "for_project_noteable?", "add_project_watchers", "add_custom_notifications", "add_subscribed_users"]
CALLS: ["target", "respond_to?", "target", "project", "subscribers", "add_recipients"]
CALLS: ["is_a?", "includes", "compact", "recipients", "make_recipient", "map", "concat"]
CALLS: ["project", "custom_action", "target", "acting_user", "new"]
CALLS: []
CALLS: ["note", "author"]
CALLS: ["action", "target", "class", "model_name", "name", "underscore", "to_sym"]
CALLS: ["skip_current_user", "current_user"]
CALLS: []
CALLS: ["current_user"]
CALLS: ["project", "custom_action", "target", "acting_user", "new"]
CALLS: ["is_a?", "includes", "compact", "recipients", "make_recipient", "map", "concat"]
CALLS: ["subscriptions_available", "where", "map"]
CALLS: ["arel_table", "subscriptions", "eq", "try", "eq", "or", "where"]
CALLS: ["project_watchers", "add_recipients"]
CALLS: ["project", "user_ids_notifiable_on", "project", "user_ids_notifiable_on", "project", "group", "user_ids_notifiable_on", "uniq", "user_ids_with_global_level_watch", "select_project_members_ids", "project", "group", "select_group_members_ids", "user_scope", "concat", "uniq", "where"]
CALLS: ["settings_with_global_level_of", "pluck"]
CALLS: ["levels", "where"]
CALLS: ["levels", "where"]
CALLS: ["user_ids_notifiable_on"]
CALLS: ["project", "user_ids_notifiable_on"]
CALLS: ["notification_settings", "levels", "where", "pluck"]
CALLS: ["settings_with_global_level_of", "pluck"]
CALLS: ["user_ids_notifiable_on"]
CALLS: ["project", "user_ids_notifiable_on"]
CALLS: ["notification_settings", "levels", "where", "pluck"]
CALLS: ["project", "user_ids_notifiable_on", "project", "user_ids_notifiable_on", "project", "group", "user_ids_notifiable_on", "uniq", "user_ids_with_global_level_watch", "select_project_members_ids", "project", "group", "select_group_members_ids", "user_scope", "concat", "uniq", "where"]
CALLS: ["project", "user_ids_notifiable_on", "project", "group", "user_ids_notifiable_on", "project", "user_ids_notifiable_on", "project", "group", "user_ids_notifiable_on", "concat", "custom_action", "user_ids_with_global_level_custom", "user_scope", "where", "add_recipients"]
CALLS: ["settings_with_global_level_of", "pluck"]
CALLS: ["settings_with_global_level_of", "pluck"]
CALLS: ["respond_to?", "mentioned_users", "add_recipients"]
CALLS: ["all_references", "users"]
CALLS: ["extractors", "extractors", "project", "new", "reset_memoized_values", "class", "mentionable_attrs", "__send__", "author", "skip_project_check?", "merge", "analyze", "each"]
CALLS: []
CALLS: ["target", "respond_to?", "target", "participants", "add_recipients"]
CALLS: ["joins", "id", "where", "uniq"]
CALLS: ["milestones", "map", "flatten", "uniq"]
CALLS: ["all_participants"]
CALLS: ["raw_participants", "new"]
CALLS: ["author", "project", "new", "new", "empty?", "pop", "class", "participant_attrs", "respond_to?", "instance_exec", "__send__", "each", "reverse_each", "users", "merge", "to_a", "users_that_can_read_personal_snippet", "to_a", "project", "users_that_can_read_project"]
CALLS: ["allowed?", "select", "subject_scope"]
CALLS: ["allowed?", "select", "subject_scope"]
CALLS: ["milestone_redirect_path", "html", "participants", "tabs_json", "json", "respond_to"]
CALLS: ["target", "respond_to?", "target", "project", "subscribers", "add_recipients"]
CALLS: ["project_watchers", "add_recipients"]
CALLS: ["project", "user_ids_notifiable_on", "project", "group", "user_ids_notifiable_on", "project", "user_ids_notifiable_on", "project", "group", "user_ids_notifiable_on", "concat", "custom_action", "user_ids_with_global_level_custom", "user_scope", "where", "add_recipients"]
CALLS: ["respond_to?", "mentioned_users", "add_recipients"]
CALLS: ["target", "respond_to?", "target", "participants", "add_recipients"]
CALLS: ["current_user", "add_participants", "add_project_watchers", "add_custom_notifications", "custom_action", "previous_assignee", "add_recipients", "target", "assignee", "add_recipients", "previous_assignee", "add_recipients", "target", "assignees", "add_recipients", "add_subscribed_users", "custom_action", "include?", "current_user", "target", "add_mentions", "custom_action", "target", "assignees", "target", "assignee", "add_recipients", "add_labels_subscribers"]
CALLS: ["target", "respond_to?", "target", "labels", "project", "subscribers", "add_recipients", "each"]
CALLS: ["target", "respond_to?", "target", "labels", "project", "subscribers", "add_recipients", "each"]
CALLS: ["assignee_id?", "params", "find_by", "assignee_username?", "params", "find_by"]
CALLS: ["params", "present?", "params"]
CALLS: ["params", "present?", "params"]
CALLS: []
CALLS: ["recipients", "select!"]
CALLS: []
CALLS: ["index", "length"]
CALLS: ["params", "present?", "params", "find_by", "render_404", "current_user", "params", "new", "execute", "params", "page", "current_user", "dashboard_snippets_path", "explore_snippets_path", "redirect_to", "snippets_path", "current_user"]
CALLS: ["collection", "newest_first"]
CALLS: ["order", "where"]
CALLS: ["allow_n_plus_1_calls", "header_title", "root_path"]
CALLS: ["current_user", "root_path", "explore_root_path", "redirect_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project_settings_ci_cd_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["params", "params", "presence", "sort_value_recently_updated", "params", "params", "new", "execute", "paginate_array", "params", "page", "map", "pipelines", "latest_successful_for_refs", "project", "releases", "where", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["newest_first", "success", "ref", "each_with_object"]
CALLS: []
CALLS: ["current_user", "params", "new", "execute", "params", "page", "out_of_range?", "total_pages", "total_pages", "project_snippets_path", "current_user", "team", "current_user", "member?", "current_user", "admin?", "local_assigns", "current_user", "fetch", "local_assigns", "fetch", "params", "nil?", "active_when", "subject_snippets_path", "snippets", "count", "snippets", "public_and_internal", "count", "params", "active_when", "subject_snippets_path", "snippets", "are_private", "count", "params", "active_when", "subject_snippets_path", "snippets", "are_internal", "count", "params", "active_when", "subject_snippets_path", "snippets", "are_public", "count", "current_user", "can?", "new_project_snippet_path", "local_assigns", "fetch", "each", "empty?", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["", "where"]
CALLS: ["", "where"]
CALLS: ["", "where"]
CALLS: ["", "where"]
CALLS: ["id", "max_member_access"]
CALLS: ["max_member_access_for_user_ids"]
CALLS: ["project", "id", "project", "project_authorizations", "where", "group", "maximum", "max_member_access_for_resource_ids"]
CALLS: ["id", "block_given?", "uniq", "max_member_access_for_resource_key", "active?", "store", "store", "keys", "empty?", "merge!", "keys", "each"]
CALLS: ["name", "underscore", "pluralize"]
CALLS: ["new"]
CALLS: ["max_member_access_for_user"]
CALLS: ["", "where"]
CALLS: ["is_a?", "project_snippets_path", "dashboard_snippets_path"]
CALLS: []
CALLS: ["id", "api_v4_projects_badges_path", "_", "_"]
CALLS: ["project_settings_ci_cd_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["new", "request", "response", "with_pagination", "tags", "represent", "json", "respond_to"]
CALLS: ["new", "tap"]
CALLS: ["paginator", "new", "tap"]
CALLS: ["project", "container_repositories", "html", "project", "current_user", "new", "represent", "json", "respond_to"]
CALLS: ["redirect_to_repository_settings"]
CALLS: ["params", "presence", "sort_value_name", "project_group_links", "pluck", "personal?", "namespace_id", "group", "group", "ancestors", "pluck", "current_user", "new", "execute", "params", "present?", "joins", "params", "search", "merge", "invited_groups", "params", "search", "select", "where", "sort_by_attribute", "params", "page", "present_members", "new", "current_user", "execute", "present_members", "project_members", "new", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["where", "ago", "where", "includes", "limit", "to_a", "empty?", "each", "loop"]
CALLS: ["namespace", "try"]
CALLS: ["blank?", "none", "downcase", "fuzzy_arel_match", "fuzzy_arel_match", "or", "arel_table", "eq", "or", "where", "connection", "quote", "reorder"]
CALLS: ["fuzzy_search"]
CALLS: ["group"]
CALLS: ["fuzzy_search"]
CALLS: ["fuzzy_search"]
CALLS: ["fuzzy_search"]
CALLS: ["fuzzy_search"]
CALLS: ["joins", "search", "merge"]
CALLS: ["fuzzy_search"]
CALLS: ["fuzzy_search"]
CALLS: []
CALLS: ["presence"]
CALLS: ["search"]
CALLS: ["params", "presence"]
CALLS: ["presence"]
CALLS: ["current_user", "new", "fabricate!"]
CALLS: ["params", "project", "new", "execute", "params", "page", "per", "project", "new", "execute", "count", "project", "new", "execute", "count", "project", "new", "execute", "count", "project", "new", "execute", "count", "map", "html", "response", "set_header", "new", "request", "response", "with_pagination", "represent", "json", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["params", "new", "execute", "new", "params", "execute", "includes", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["params", "milestones", "sort_by_attribute", "namespace", "becomes", "for_projects", "params", "page", "html", "to_json", "json", "respond_to", "container_class", "milestones", "milestone_counts", "milestones", "params", "milestone_class_for_state", "milestones_filter_path", "counts", "params", "milestone_class_for_state", "milestones_filter_path", "counts", "params", "milestone_class_for_state", "milestones_filter_path", "counts", "current_user", "can?", "new_project_milestone_path", "blank?", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["", "includes", "references", "where", "where", "not"]
CALLS: ["noteable", "part_of_discussion?", "discussion", "notes", "id", "id", "take_while"]
CALLS: ["to_discussion", "individual_note?"]
CALLS: ["part_of_discussion?", "noteable", "notes", "discussion_id", "find_discussion", "to_discussion"]
CALLS: ["params", "find_discussion", "render_404"]
CALLS: ["", "where", "includes"]
CALLS: ["blank?"]
CALLS: ["reorder", "group", "count", "values", "sum"]
CALLS: ["project_milestones_path", "group_milestones_path", "dashboard_milestones_path"]
CALLS: ["html", "view_to_html_string", "as_json", "json", "respond_to", "current_user", "can?", "merge_request_source_project_for_project", "project_new_merge_request_path", "current_user", "new_issuable_address", "container_class", "merge_requests", "exists?", "container_class", "exists?", "local_assigns", "fetch", "local_assigns", "fetch", "_", "_", "_", "_", "_", "_", "present?", "merge_request", "local_assigns", "fetch", "local_assigns", "fetch", "_", "_", "_", "_", "_", "_", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["supports_issue_creation?", "ensure_incoming_email_token!", "full_path", "incoming_email_token", "reply_address"]
CALLS: ["current_user", "can?", "current_user", "can?", "current_user", "fork_of"]
CALLS: ["supports_issue_creation?", "render_404", "current_user", "reset_incoming_email_token!", "current_user", "params", "new_issuable_address", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project", "user", "params", "new", "execute", "render_json"]
CALLS: ["prioritized", "unprioritized", "params", "page", "html", "new", "represent_appearance", "json", "respond_to", "current_user", "can?", "exists?", "exists?", "container_class", "new_project_label_path", "empty?", "params", "present?", "params", "set_priorities_project_labels_path", "empty?", "present?", "each", "present?", "each", "_", "_", "current_user", "can?", "_", "new_project_label_path", "_", "_", "generate_project_labels_path", "_", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["arel_table", "arel_table", "join", "eq", "id", "eq", "and", "on", "join_sources", "joins", "eq", "where"]
CALLS: ["joins", "where", "reorder"]
CALLS: ["params", "project", "builds", "relevant", "order", "pending", "reverse_order", "running", "reverse_order", "finished", "includes", "params", "page", "per", "without_count", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["", "where"]
CALLS: ["html", "atom", "view_to_html_string", "as_json", "json", "respond_to", "current_user", "can?", "current_user", "new_issuable_address", "safe_params", "rss_url_options", "merge", "to_h", "name", "auto_discovery_link_tag", "project_issues", "exists?", "container_class", "local_assigns", "fetch", "each", "blank?", "present?", "issue", "new_project_issue_path", "local_assigns", "fetch", "local_assigns", "fetch", "current_user", "_", "_", "_", "_", "_", "new_user_session_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["params", "respond_to?", "params", "except", "permit!", "params"]
CALLS: ["current_user", "try"]
CALLS: ["current_user", "id", "new", "execute"]
CALLS: ["project_settings_integrations_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["namespace_project_settings_members_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project", "forks", "includes", "project", "params", "params", "merge", "current_user", "new", "execute", "size", "size", "params", "page", "html", "view_to_html_string", "json", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project", "environments", "params", "with_state", "html", "response", "set_header", "new", "request", "response", "with_pagination", "within_folders", "represent", "project", "environments", "available", "count", "project", "environments", "stopped", "count", "json", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["tap"]
CALLS: ["", "with_state"]
CALLS: ["", "with_state"]
CALLS: ["environment", "deployments", "reorder", "params", "to_time", "params", "to_time", "where", "project", "new", "represent_concise", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["represent"]
CALLS: ["redirect_to_repository_settings", "html", "current_user", "new", "as_json", "json", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["container_class", "_", "capture", "capture", "_", "html_safe", "_", "html_safe", "project_compare_index_path", "params", "params", "icon", "params", "params", "s_", "params", "params", "refs_project_path", "params", "params", "_", "local_assigns", "fetch", "dropdown_content", "dropdown_loading", "s_", "params", "params", "refs_project_path", "params", "params", "_", "local_assigns", "fetch", "dropdown_content", "dropdown_loading", "s_", "present?", "_", "project_merge_request_path", "create_mr_button?", "_", "create_mr_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["icon"]
CALLS: ["capture", "content_tag"]
CALLS: ["params", "params", "project_new_merge_request_path"]
CALLS: ["params", "params", "present?", "present?", "current_user", "can?", "repository", "branch_exists?", "repository", "branch_exists?"]
CALLS: ["project", "current_user", "new", "execute", "params", "page", "per", "empty?", "s_", "_", "help_page_path", "link_to", "s_", "html_safe", "current_user", "can?", "s_", "new_project_cluster_path", "s_", "s_", "s_", "s_", "current_user", "present", "present", "each", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project", "project_jobs_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["params", "presence", "sort_value_recently_updated", "params", "presence", "fetch_branches_by_mode", "pipelines", "map", "latest_successful_for_refs", "repository", "map", "merged_branch_names", "repository", "diverging_commit_counts", "max", "reduce", "allow_n_plus_1_calls", "render", "html", "params", "new", "execute", "paginate_array", "params", "page", "map", "json", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["raw_repository", "root_ref", "commit", "id", "cache", "name", "raw_repository", "dereferenced_target", "sha", "count_commits_between", "fetch"]
CALLS: ["sort_value_recently_updated", "new", "execute", "partition", "first", "first", "params", "merge", "new", "execute", "include?", "state", "to_s", "select", "paginate_array", "params", "page"]
CALLS: ["project", "current_user", "new", "execute", "respond_with_boards", "first", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["respond_with"]
CALLS: ["html", "serialize_as_json", "json", "respond_to"]
CALLS: ["set_index_vars", "finder", "build", "fluid_layout", "page_title", "clipboard_button", "profile_personal_access_tokens_path", "impersonation", "token", "path", "token", "form_errors", "label", "text_field", "label", "text_field", "label", "token", "scopes", "submit", "current_user", "rss_token", "incoming_email_token_enabled?", "current_user", "incoming_email_token", "header_title", "profile_path"]
CALLS: ["ensure_rss_token!"]
CALLS: ["read_attribute", "select"]
CALLS: ["any?", "compact", "push", "any?", "last", "join"]
CALLS: ["delete", "delete", "delete", "merge", "icon", "concat", "concat"]
CALLS: ["current_user", "incoming_email_token", "supports_issue_creation?"]
CALLS: ["current_user", "keys", "order_id_desc", "new", "fluid_layout", "page_title", "help_page_path", "help_page_path", "form_errors", "label", "text_area", "label", "text_field", "submit", "local_assigns", "fetch", "any?", "header_title", "profile_path"]
CALLS: ["current_user", "gpg_keys", "with_subkeys", "new", "fluid_layout", "page_title", "help_page_path", "form_errors", "label", "text_area", "submit", "local_assigns", "fetch", "any?", "emails_with_verified_status", "map", "fingerprint", "subkeys", "present?", "subkeys", "fingerprint", "each", "profile_gpg_key_path", "icon", "revoke_profile_gpg_key_path", "each", "header_title", "profile_path"]
CALLS: ["upcase"]
CALLS: ["user_infos", "user", "verified_email?", "map", "to_h"]
CALLS: ["downcase", "email", "primary_email_verified?", "emails", "confirmed", "where", "exists?"]
CALLS: ["confirmed?", "temp_oauth_email?"]
CALLS: ["email", "start_with?"]
CALLS: ["", "where", "not"]
CALLS: ["key", "user_infos_from_key"]
CALLS: ["upcase"]
CALLS: ["", "includes"]
CALLS: ["current_user", "email", "current_user", "emails", "order_id_desc", "fluid_layout", "page_title", "profile_emails_path", "label", "text_field", "submit", "current_user", "confirmed?", "current_user", "confirmed?", "current_user", "public_email", "current_user", "notification_email", "email", "confirmed?", "email", "confirmed?", "email", "current_user", "public_email", "email", "current_user", "notification_email", "confirmed?", "confirmation_sent_at", "resend_confirmation_instructions_profile_email_path", "profile_email_path", "icon", "each", "header_title", "profile_path"]
CALLS: ["current_user", "chat_names", "fluid_layout", "page_title", "present?", "header_title", "profile_path"]
CALLS: ["set_index_vars"]
CALLS: ["prometheus_metrics_enabled?", "metrics_service", "metrics_text", "help_page_url"]
CALLS: ["prometheus_metrics_text", "health_metrics_text", "concat"]
CALLS: ["flat_map", "formatter", "marshal"]
CALLS: ["new"]
CALLS: ["multiprocess_metrics_path", "marshal_multiprocess"]
CALLS: ["configuration", "multiprocess_files_dir"]
CALLS: ["new"]
CALLS: ["root", "join", "read", "icon", "koding_project_url", "koding_url", "koding_path"]
CALLS: ["full_path", "default_branch", "commit", "short_id", "koding_url", "join", "to_s", "koding_url"]
CALLS: []
CALLS: ["root", "join", "read", "sub", "config", "gitlab", "relative_url_root", "gsub!", "help_page_text", "present?", "current_application_settings", "markdown_field", "user_signed_in?", "namespace_project_commits_path", "version_status_badge", "help_page_hide_commercial_content?", "help_instance_configuration_url", "markdown", "support_url", "help_page_hide_commercial_content?", "help_path"]
CALLS: ["project", "render", "merge!", "render", "post_process", "sanitize", "truncate"]
CALLS: ["env", "production?", "version_check_enabled", "new", "url"]
CALLS: ["respond_to?", "for_display", "try", "present?", "render_field", "respond_to?", "banzai_render_context", "reverse_merge!", "prepare_for_rendering"]
CALLS: ["noteable", "merge"]
CALLS: []
CALLS: []
CALLS: []
CALLS: ["cached_markdown_fields", "markdown_fields", "include?", "inspect", "new", "respond_to?", "project", "respond_to?", "group", "cached_markdown_fields", "merge", "respond_to?", "author", "markdown_engine"]
CALLS: ["latest_cached_markdown_version"]
CALLS: ["project", "author", "author"]
CALLS: ["present?", "current_user", "current_user", "merge!", "post_process", "preserve"]
CALLS: ["present?", "markdown_unsafe", "prepare_for_rendering"]
CALLS: ["render"]
CALLS: ["current_application_settings", "help_page_support_url", "presence", "promo_url"]
CALLS: ["promo_host"]
CALLS: []
CALLS: ["current_user", "dashboard_groups_path", "explore_groups_path", "redirect_to", "name", "page_description", "description", "header_title", "group_title", "current_user"]
CALLS: ["id", "api_v4_groups_badges_path", "_", "_"]
CALLS: ["group_projects", "group", "states_count", "milestones", "paginate_array", "params", "page", "html", "milestones", "for_display", "slice", "map", "json", "respond_to", "params", "milestone_class_for_state", "milestones_filter_path", "counts", "params", "milestone_class_for_state", "milestones_filter_path", "counts", "params", "milestone_class_for_state", "milestones_filter_path", "counts", "current_user", "can?", "new_group_milestone_path", "blank?", "each", "name", "page_description", "description", "header_title", "group_title", "current_user"]
CALLS: ["legacy_group_milestone_states_count", "group_milestones_states_count", "merge"]
CALLS: ["map", "new", "execute", "reorder", "group", "count", "count_by_state", "count_by_state", "map", "uniq", "count"]
CALLS: ["count"]
CALLS: ["params", "merge", "label_names", "any?", "label_names", "count", "class", "current_user", "new", "new", "execute", "reorder", "group", "count", "last", "to_sym", "each", "values", "sum"]
CALLS: ["id", "new", "execute", "reorder", "group", "count", "values", "sum"]
CALLS: ["labels", "params", "page", "html", "current_user", "id", "params", "params", "params", "new", "execute", "new", "represent_appearance", "json", "respond_to", "_", "to_sentence", "current_user", "can?", "new_group_label_path", "present?", "each", "_", "name", "page_description", "description", "header_title", "group_title", "current_user"]
CALLS: ["params", "presence", "sort_value_name", "params", "projects", "params", "find", "new", "execute", "current_user", "can?", "non_invite", "params", "present?", "params", "search", "sort_by_attribute", "params", "page", "per", "includes", "present_members", "new", "current_user", "execute", "present_members", "group_members", "new", "current_user", "can?", "name", "group_group_members_path", "users_select_tag", "access_level_roles", "access_level", "options_for_select", "help_page_path", "submit", "local_assigns", "fetch", "local_assigns", "fetch", "local_assigns", "fetch", "empty?", "name", "size", "each", "group_group_members_path", "params", "icon", "member_sort_options_hash", "dropdown_toggle", "member_sort_options_hash", "filter_group_project_member_path", "each", "name", "total_count", "each", "name", "page_description", "description", "header_title", "group_title", "current_user"]
CALLS: ["member", "class", "access_level_roles"]
CALLS: ["options"]
CALLS: ["options_with_owner"]
CALLS: ["", "where"]
CALLS: ["sort_value_access_level_asc", "sort_title_access_level_asc", "sort_value_access_level_desc", "sort_title_access_level_desc", "sort_value_last_joined", "sort_title_last_joined", "sort_value_name", "sort_title_name_asc", "sort_value_name_desc", "sort_title_name_desc", "sort_value_oldest_joined", "sort_title_oldest_joined", "sort_value_oldest_signin", "sort_title_oldest_signin", "sort_value_recently_signin", "sort_title_recently_signin"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["users_select_data_attributes", "id", "id", "hidden_field_tag"]
CALLS: ["current_user", "current_user", "username", "map"]
CALLS: ["params", "slice", "merge", "request", "path", "to_param"]
CALLS: ["key?", "key?", "content_tag", "icon", "html_safe", "content_tag"]
CALLS: ["params", "present?", "current_user", "new", "params", "execute", "nil?", "render_404", "setup_children", "current_user", "new", "request", "response", "with_pagination", "params", "present?", "expand_hierarchy", "represent", "json", "respond_to"]
CALLS: []
CALLS: ["current_user", "params", "new", "execute", "params", "page"]
CALLS: ["group", "current_user", "new", "execute", "respond_with_boards", "first", "name", "page_description", "description", "header_title", "group_title", "current_user"]
CALLS: ["current_user", "new", "execute", "params", "page", "snippets_path", "current_user", "dashboard_snippets_path", "dashboard_snippets_path", "nav_link", "explore_snippets_path", "explore_snippets_path", "nav_link", "current_user", "new_snippet_path", "current_user", "explore_root_path"]
CALLS: ["params", "params", "load_projects", "html", "view_to_html_string", "json", "respond_to", "dashboard_projects_path", "current_user", "cookies", "blank?", "current_user", "hide_project_limit", "current_user", "can_create_project?", "current_user", "projects_limit", "profile_path", "icon", "icon", "dashboard_projects_path", "root_path", "dashboard_projects_path", "nav_link", "starred_dashboard_projects_path", "starred_dashboard_projects_path", "nav_link", "explore_root_path", "trending_explore_projects_path", "starred_explore_projects_path", "explore_projects_path", "explore_root_path", "nav_link", "sort_value_latest_activity", "projects_sort_options_hash", "dropdown_toggle", "projects_sort_options_hash", "filter_projects_path", "each", "filter_projects_path", "params", "present?", "filter_projects_path", "params", "to_boolean", "filter_projects_path", "params", "current_user", "filter_projects_path", "params", "present?", "filter_projects_path", "params", "present?", "shared_projects", "present?", "filter_projects_path", "params", "present?", "filter_projects_path", "params", "filter_projects_path", "params", "current_user", "can_create_project?", "new_project_path", "trending_explore_projects_path", "explore_root_path", "trending_explore_projects_path", "nav_link", "starred_explore_projects_path", "starred_explore_projects_path", "nav_link", "explore_projects_path", "explore_projects_path", "nav_link", "current_user", "sort_value_latest_activity", "projects_sort_options_hash", "dropdown_toggle", "projects_sort_options_hash", "filter_projects_path", "each", "filter_projects_path", "params", "present?", "filter_projects_path", "params", "to_boolean", "filter_projects_path", "params", "current_user", "filter_projects_path", "params", "present?", "filter_projects_path", "params", "present?", "shared_projects", "present?", "filter_projects_path", "params", "present?", "filter_projects_path", "params", "filter_projects_path", "params", "projects", "current_user", "current_user", "explore_root_path"]
CALLS: ["projects_limit_left"]
CALLS: ["projects_limit", "personal_projects_count"]
CALLS: ["cache", "id", "hours", "personal_projects", "count", "fetch", "to_i"]
CALLS: []
CALLS: ["sort_value_latest_activity", "sort_title_latest_activity", "sort_value_name", "sort_title_name", "sort_value_oldest_activity", "sort_title_oldest_activity", "sort_value_oldest_created", "sort_title_oldest_created", "sort_value_recently_created", "sort_title_recently_created", "current_controller?", "sort_value_largest_repo", "sort_title_largest_repo"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["to_s", "downcase", "controller", "controller_name", "to_s", "downcase", "controller", "controller_path", "any?"]
CALLS: ["params", "params", "params", "params", "params", "params", "params", "params", "params", "params", "merge", "blank?", "delete_if", "request_path_with_options"]
CALLS: ["request", "path", "to_param"]
CALLS: ["group", "shared_projects"]
CALLS: ["user", "new", "current_user", "execute", "params", "page", "prepare_projects_for_rendering"]
CALLS: ["preload_max_member_access_for_collection"]
CALLS: ["current_user", "params", "new", "execute", "includes", "params", "page", "without_count", "prepare_projects_for_rendering"]
CALLS: ["current_user", "new", "execute", "includes", "prepare_projects_for_rendering"]
CALLS: ["current_user", "new", "execute", "dashboard_groups_path", "current_user", "dashboard_groups_path", "dashboard_groups_path", "_", "nav_link", "explore_groups_path", "explore_groups_path", "_", "nav_link", "request", "path", "params", "s_", "local_assigns", "groups_sort_options_hash", "fetch", "local_assigns", "fetch", "present?", "params", "params", "sort_value_recently_created", "icon", "_", "filter_groups_path", "each", "filter_groups_path", "params", "present?", "filter_groups_path", "params", "to_boolean", "filter_groups_path", "params", "current_user", "can_create_group?", "_", "new_group_path", "explore_groups_path", "explore_groups_path", "nav_link", "request", "path", "params", "s_", "local_assigns", "groups_sort_options_hash", "fetch", "local_assigns", "fetch", "present?", "params", "params", "sort_value_recently_created", "icon", "_", "filter_groups_path", "each", "filter_groups_path", "params", "present?", "filter_groups_path", "params", "to_boolean", "filter_groups_path", "params", "cookies", "icon", "custom_icon", "params", "blank?", "empty?", "current_user", "explore_root_path"]
CALLS: ["subgroup?", "current_user", "parent", "can?", "parent", "errors", "add", "current_user", "can?", "errors", "add"]
CALLS: ["has_parent?"]
CALLS: ["parent", "present?"]
CALLS: ["can?"]
CALLS: ["sort_value_name", "sort_title_name", "sort_value_name_desc", "sort_title_name_desc", "sort_value_recently_created", "sort_title_recently_created", "sort_value_oldest_created", "sort_title_oldest_created", "sort_value_recently_updated", "sort_title_recently_updated", "sort_value_oldest_updated", "sort_title_oldest_updated"]
CALLS: []
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["request_path_with_options"]
CALLS: ["params", "params", "page", "redirect_out_of_range", "header_title", "root_path"]
CALLS: ["todo_params", "except", "empty?", "current_user", "todos_pending_count", "to_f", "limit_value", "ceil", "total_pages", "zero?", "current_page", "safe_params", "merge", "url_for"]
CALLS: ["cache", "id", "minutes", "new", "execute", "count", "fetch"]
CALLS: []
CALLS: ["current_user", "todos_pending_count"]
CALLS: ["params", "permit"]
CALLS: ["nil?", "zero?", "current_page", "params", "merge", "url_for", "redirect_to"]
CALLS: ["current_user", "current_user", "params", "new", "execute", "params", "page", "dashboard_snippets_path", "dashboard_snippets_path", "dashboard_snippets_path", "nav_link", "explore_snippets_path", "explore_snippets_path", "nav_link", "current_user", "new_snippet_path", "new_snippet_path", "header_title", "root_path"]
CALLS: ["params", "merge", "load_projects", "params", "page", "html", "load_events", "atom", "view_to_html_string", "json", "respond_to", "rss_url_options", "dashboard_projects_url", "auto_discovery_link_tag", "dashboard_projects_path", "container_class", "params", "show_projects?", "cookies", "blank?", "current_user", "hide_project_limit", "current_user", "can_create_project?", "current_user", "projects_limit", "profile_path", "icon", "icon", "dashboard_projects_path", "root_path", "dashboard_projects_path", "nav_link", "starred_dashboard_projects_path", "starred_dashboard_projects_path", "nav_link", "explore_root_path", "trending_explore_projects_path", "starred_explore_projects_path", "explore_projects_path", "explore_root_path", "nav_link", "sort_value_latest_activity", "projects_sort_options_hash", "dropdown_toggle", "projects_sort_options_hash", "filter_projects_path", "each", "filter_projects_path", "params", "present?", "filter_projects_path", "params", "to_boolean", "filter_projects_path", "params", "current_user", "filter_projects_path", "params", "present?", "filter_projects_path", "params", "present?", "shared_projects", "present?", "filter_projects_path", "params", "present?", "filter_projects_path", "params", "filter_projects_path", "params", "current_user", "can_create_project?", "new_project_path", "params", "present?", "s_", "dashboard_projects_path", "nav_link", "params", "present?", "s_", "filter_projects_path", "nav_link", "current_user", "current_user", "admin?", "current_user", "admin?", "new_project_path", "custom_icon", "current_user", "can_create_group?", "new_group_path", "custom_icon", "new_admin_user_path", "custom_icon", "admin_root_path", "custom_icon", "current_user", "new", "execute", "count", "current_user", "can_create_project?", "new_project_path", "custom_icon", "custom_icon", "current_user", "can_create_group?", "new_group_path", "custom_icon", "trending_explore_projects_path", "custom_icon", "number_with_delimiter", "custom_icon", "header_title", "root_path"]
CALLS: ["any_projects?"]
CALLS: ["is_a?", "any?", "limit_value", "to_a", "any?", "except", "any?"]
CALLS: ["current_user", "user", "params", "new", "execute", "current_user", "new", "request", "format", "atom?", "execute"]
CALLS: ["id", "where", "params", "to_i", "event_filter", "new", "to_a", "current_user", "new", "request", "format", "atom?", "execute"]
CALLS: ["cookies", "present?", "cookies", "split", "new"]
CALLS: ["params", "params", "params", "params", "group", "current_user", "new", "execute", "includes", "params", "to_i", "event_filter", "new", "to_a", "current_user", "new", "request", "format", "atom?", "execute"]
CALLS: ["params", "current_user", "new", "execute", "current_user", "authorized_projects", "params", "to_i", "new", "to_a", "current_user", "new", "execute"]
CALLS: ["params", "merge", "load_projects", "params", "to_i", "event_filter", "new", "to_a", "current_user", "new", "request", "format", "atom?", "execute"]
CALLS: ["states_count", "milestones", "paginate_array", "params", "page", "html", "milestones", "json", "respond_to", "dashboard_milestones_path", "params", "milestone_class_for_state", "milestones_filter_path", "counts", "params", "milestone_class_for_state", "milestones_filter_path", "counts", "params", "milestone_class_for_state", "milestones_filter_path", "counts", "blank?", "each", "header_title", "root_path"]
CALLS: ["new", "labels", "represent_appearance", "json", "respond_to", "header_title", "root_path"]
CALLS: ["current_user", "new", "execute", "render_group_tree", "dashboard_groups_path", "dashboard_groups_path", "dashboard_groups_path", "_", "nav_link", "explore_groups_path", "explore_groups_path", "_", "nav_link", "request", "path", "params", "s_", "local_assigns", "groups_sort_options_hash", "fetch", "local_assigns", "fetch", "present?", "params", "params", "sort_value_recently_created", "icon", "_", "filter_groups_path", "each", "filter_groups_path", "params", "present?", "filter_groups_path", "params", "to_boolean", "filter_groups_path", "params", "current_user", "can_create_group?", "_", "new_group_path", "params", "blank?", "empty?", "header_title", "root_path"]
CALLS: ["params", "present?", "params", "search", "select", "where", "new", "base_and_ancestors", "params", "where", "params", "with_selects_for_list", "params", "sort_by_attribute", "params", "page", "html", "current_user", "new", "request", "response", "with_pagination", "params", "present?", "expand_hierarchy", "represent", "json", "respond_to"]
CALLS: ["now", "to_i", "notes_finder", "execute", "inc_relations_for_view", "prepare_notes_for_rendering", "current_user", "cross_reference_not_visible_for?", "reject", "use_note_serializer?", "note_serializer", "represent", "note_json", "map"]
CALLS: ["project", "current_user", "finder_params", "new"]
CALLS: ["params", "last_fetched_at", "snippet", "id", "merge"]
CALLS: ["request", "headers"]
CALLS: ["params", "last_fetched_at", "merge"]
CALLS: ["board", "parent", "current_user", "new", "board", "execute", "serialize_as_json"]
CALLS: ["board_parent", "current_user", "filter_params", "new", "execute", "params", "page", "params", "per", "read_write?", "make_sure_position_is_set", "preload", "serialize_as_json", "total_count"]
CALLS: ["relative_position", "move_to_end", "save", "each"]
CALLS: ["order_name_asc", "params", "filter", "params", "present?", "params", "search_with_secondary_emails", "params", "sort_by_attribute", "params", "page", "container_class", "admin_users_path", "params", "present?", "params", "h", "params", "icon", "present?", "sort_options_hash", "sort_title_name", "dropdown_toggle", "sort_value_name", "params", "admin_users_path", "sort_title_name", "sort_value_recently_signin", "params", "admin_users_path", "sort_title_recently_signin", "sort_value_oldest_signin", "params", "admin_users_path", "sort_title_oldest_signin", "sort_value_recently_created", "params", "admin_users_path", "sort_title_recently_created", "sort_value_oldest_created", "params", "admin_users_path", "sort_title_oldest_created", "sort_value_recently_updated", "params", "admin_users_path", "sort_title_recently_updated", "sort_value_oldest_updated", "params", "admin_users_path", "sort_title_oldest_updated", "new_admin_user_path", "icon", "icon", "params", "nil?", "active_when", "admin_users_path", "active", "count", "number_with_delimiter", "nav_link", "params", "active_when", "admin_users_path", "admins", "count", "number_with_delimiter", "nav_link", "params", "active_when", "admin_users_path", "with_two_factor", "count", "number_with_delimiter", "nav_link", "params", "active_when", "admin_users_path", "without_two_factor", "count", "number_with_delimiter", "nav_link", "params", "active_when", "admin_users_path", "external", "count", "number_with_delimiter", "nav_link", "params", "active_when", "admin_users_path", "blocked", "count", "number_with_delimiter", "nav_link", "params", "active_when", "admin_users_path", "without_projects", "count", "number_with_delimiter", "nav_link", "empty?", "each", "admin_root_path"]
CALLS: ["blank?", "none", "downcase", "arel_table", "project", "eq", "where", "fuzzy_arel_match", "fuzzy_arel_match", "or", "arel_table", "eq", "or", "arel_table", "in", "or", "where"]
CALLS: ["admins", "blocked", "without_two_factor", "with_two_factor", "without_projects", "external", "active"]
CALLS: ["joins", "where"]
CALLS: ["joins", "where", "arel_table", "distinct"]
CALLS: ["", "where"]
CALLS: ["", "where"]
CALLS: ["", "with_states"]
CALLS: ["", "where"]
CALLS: ["sort_value_created_date", "sort_title_created_date", "sort_value_downvotes", "sort_title_downvotes", "sort_value_due_date", "sort_title_due_date", "sort_value_due_date_later", "sort_title_due_date_later", "sort_value_due_date_soon", "sort_title_due_date_soon", "sort_value_label_priority", "sort_title_label_priority", "sort_value_largest_group", "sort_title_largest_group", "sort_value_largest_repo", "sort_title_largest_repo", "sort_value_milestone", "sort_title_milestone", "sort_value_milestone_later", "sort_title_milestone_later", "sort_value_milestone_soon", "sort_title_milestone_soon", "sort_value_name", "sort_title_name", "sort_value_name_desc", "sort_title_name_desc", "sort_value_oldest_created", "sort_title_oldest_created", "sort_value_oldest_signin", "sort_title_oldest_signin", "sort_value_oldest_updated", "sort_title_oldest_updated", "sort_value_recently_created", "sort_title_recently_created", "sort_value_recently_signin", "sort_title_recently_signin", "sort_value_recently_updated", "sort_title_recently_updated", "sort_value_popularity", "sort_title_popularity", "sort_value_priority", "sort_title_priority", "sort_value_upvotes", "sort_title_upvotes"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["order", "params", "page", "present?", "admin_root_path"]
CALLS: ["services_templates", "sort_by", "activated?", "id", "edit_admin_application_settings_service_path", "title", "description", "updated_at", "each", "admin_root_path"]
CALLS: ["available_services_names", "concat", "camelize", "constantize", "where", "first_or_create", "map"]
CALLS: ["params", "order", "params", "present?", "params", "search", "params", "page", "per", "online", "count", "admin_root_path"]
CALLS: ["", "contact_time_deadline", "where"]
CALLS: ["ago"]
CALLS: ["profile_token", "all", "group_by", "container_class", "page_title", "present?", "time", "to_s", "admin_requests_profile_path", "each", "each", "admin_root_path"]
CALLS: ["params", "params", "params", "current_user", "new", "execute", "html", "view_to_html_string", "json", "respond_to", "params", "container_class", "params", "present?", "params", "params", "find", "kind", "full_path", "dropdown_toggle", "dropdown_title", "dropdown_filter", "dropdown_content", "dropdown_loading", "sort_value_latest_activity", "projects_sort_options_hash", "dropdown_toggle", "projects_sort_options_hash", "filter_projects_path", "each", "filter_projects_path", "params", "present?", "filter_projects_path", "params", "to_boolean", "filter_projects_path", "params", "current_user", "filter_projects_path", "params", "present?", "filter_projects_path", "params", "present?", "shared_projects", "present?", "filter_projects_path", "params", "present?", "filter_projects_path", "params", "filter_projects_path", "params", "new_project_path", "params", "present?", "admin_projects_path", "admin_projects_path", "nav_link", "params", "to_s", "active_when", "admin_projects_path", "nav_link", "params", "to_s", "active_when", "admin_projects_path", "nav_link", "params", "to_s", "active_when", "admin_projects_path", "nav_link", "admin_root_path"]
CALLS: ["type"]
CALLS: ["icon", "icon", "html_safe"]
CALLS: ["fetch", "icon", "content_tag", "content_tag", "fetch", "icon", "content_tag", "html_safe"]
CALLS: ["templates", "params", "page", "new_admin_label_path", "present?", "admin_root_path"]
CALLS: ["", "where"]
CALLS: ["params", "order", "pending", "reverse_order", "running", "reverse_order", "finished", "params", "page", "per", "admin_root_path"]
CALLS: ["set_index_vars", "name", "name", "blocked?", "internal?", "admin", "current_user", "can?", "impersonate_admin_user_path", "edit_admin_user_path", "admin_user_path", "nav_link", "projects_admin_user_path", "nav_link", "keys_admin_user_path", "nav_link", "admin_user_identities_path", "nav_link", "admin_user_impersonation_tokens_path", "nav_link", "admin_user_impersonation_tokens_path", "impersonation", "token", "path", "token", "form_errors", "label", "text_field", "label", "text_field", "label", "token", "scopes", "submit", "admin_root_path"]
CALLS: ["identities", "name", "name", "blocked?", "internal?", "admin", "current_user", "can?", "impersonate_admin_user_path", "edit_admin_user_path", "admin_user_path", "nav_link", "projects_admin_user_path", "nav_link", "keys_admin_user_path", "nav_link", "admin_user_identities_path", "nav_link", "admin_user_impersonation_tokens_path", "nav_link", "new_admin_user_identity_path", "present?", "admin_root_path"]
CALLS: ["all", "new", "admin_root_path"]
CALLS: ["with_statistics", "with_route", "params", "sort_by_attribute", "params", "present?", "params", "search", "params", "page", "container_class", "admin_groups_path", "params", "present?", "params", "icon", "admin_groups_sort_options_hash", "local_assigns", "groups_sort_options_hash", "fetch", "local_assigns", "fetch", "present?", "params", "params", "sort_value_recently_created", "icon", "_", "filter_groups_path", "each", "filter_groups_path", "params", "present?", "filter_groups_path", "params", "to_boolean", "filter_groups_path", "params", "new_admin_group_path", "admin_root_path"]
CALLS: ["", "includes"]
CALLS: ["", "joins", "group", "select"]
CALLS: ["groups_sort_options_hash", "sort_value_largest_group", "sort_title_largest_group", "merge"]
CALLS: ["all", "_", "_", "any?", "_", "n_", "_", "_", "_", "storage", "address", "server_version", "git_binary_version", "up_to_date?", "boolean_to_icon", "each", "_", "admin_root_path"]
CALLS: ["icon", "icon"]
CALLS: ["new_admin_deploy_key_path", "any?", "title", "fingerprint", "projects_with_write_access", "full_name", "admin_project_path", "each", "edit_admin_deploy_key_path", "admin_deploy_key_path", "each", "admin_root_path"]
CALLS: ["preload", "deploy_keys_projects", "with_write_access", "select", "where"]
CALLS: ["", "where"]
CALLS: ["order_id_desc", "without_deleted", "with_route", "limit", "order_id_desc", "limit", "order_id_desc", "with_route", "limit", "admin_root_path"]
CALLS: ["", "where"]
CALLS: ["usage_ping_enabled", "cache", "day", "new", "execute", "fetch", "new", "represent", "container_class", "icon", "help_page_path", "times", "each", "each", "help_page_path", "admin_application_settings_path", "admin_root_path"]
CALLS: ["usage_ping_can_be_configured?"]
CALLS: ["gitlab", "usage_ping_enabled"]
CALLS: ["order", "params", "page", "new", "any?", "broadcast_message_status", "broadcast_message", "starts_at", "ends_at", "icon", "edit_admin_broadcast_message_path", "icon", "admin_broadcast_message_path", "each", "admin_root_path"]
CALLS: ["active?", "ended?"]
CALLS: ["ends_at", "zone", "now"]
CALLS: ["present?", "broadcast_message_style", "icon", "render_broadcast_message"]
CALLS: ["render_field", "html_safe"]
CALLS: ["color", "present?", "color", "font", "present?", "font", "present?", "font"]
CALLS: []
CALLS: ["where", "new_admin_application_path", "id", "name", "admin_application_path", "redirect_uri", "access_tokens", "map", "uniq", "count", "trusted?", "edit_admin_application_path", "admin_application_path", "each", "admin_root_path"]
CALLS: ["order", "params", "page", "includes", "present?", "admin_root_path"]
CALLS: ["priorities", "loaded?", "priorities", "project", "first", "priorities", "find_by", "try"]
CALLS: ["build!", "filter!", "recipients", "reason", "priority", "sort_by", "uniq", "freeze"]
CALLS: ["metrics", "new"]
CALLS: ["merge_requests", "where"]
CALLS: ["root", "read", "parse"]
CALLS: ["has_metrics?", "prometheus_adapter", "query"]
CALLS: ["service_prometheus_adapter", "can_query?", "service_prometheus_adapter", "cluster_prometheus_adapter"]
CALLS: ["deployment_platform", "respond_to?", "deployment_platform", "cluster", "application_prometheus", "installed?", "application_prometheus"]
CALLS: ["project", "find_or_initialize_service"]
CALLS: ["project", "deployment_platform", "new", "prometheus_adapter"]
CALLS: ["prometheus_adapter", "can_query?", "available?", "last_deployment", "present?"]
CALLS: ["environment", "prometheus_adapter"]
CALLS: ["prometheus_adapter", "can_query?"]
CALLS: ["project", "new", "prometheus_adapter"]
CALLS: ["has_metrics?", "prometheus_adapter", "query", "created_at", "to_i", "merge"]
CALLS: ["environment", "metrics", "html", "any?", "json", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["deployment", "has_metrics?", "render_404", "deployment", "metrics", "any?", "render_404", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["update!"]
CALLS: ["create_record_event"]
CALLS: ["project", "id", "class", "name", "create_event"]
CALLS: ["new"]
CALLS: ["new"]
CALLS: ["transaction_begin", "current_user", "create_merge_event", "merge_request_metrics_service", "merge", "transaction_end", "transaction"]
CALLS: ["new", "merge_mr"]
CALLS: ["merge_when_pipeline_succeeds?", "close_resource_email"]
CALLS: ["build_recipients", "mailer", "user", "id", "id", "id", "reason", "send", "deliver_later", "each"]
CALLS: ["create_record_event"]
CALLS: ["transaction_begin", "event_service", "current_user", "close_mr", "merge_request_metrics_service", "close", "transaction_end", "transaction"]
CALLS: ["close_resource_email"]
CALLS: ["todo_service", "merge_request_build_retried", "commit_status_merge_requests"]
CALLS: ["author", "mark_pending_todos_as_done", "merge_when_pipeline_succeeds?", "merge_user", "mark_pending_todos_as_done"]
CALLS: ["attributes_for_target", "pending_todos", "update_all", "update_todos_count_cache"]
CALLS: ["todos", "pending", "slice", "where"]
CALLS: ["project", "id", "id", "class", "name", "is_a?", "id", "merge!"]
CALLS: ["todos_done_count", "todos_pending_count"]
CALLS: ["cache", "id", "minutes", "new", "execute", "count", "fetch"]
CALLS: ["current_user", "todos_done_count"]
CALLS: ["ref", "merge_requests_for", "head_pipeline", "sha", "sha", "each"]
CALLS: ["author_id", "created_at", "update!"]
CALLS: ["create_record_event"]
CALLS: ["id", "reverse_merge!", "create!"]
CALLS: ["", "joins"]
CALLS: ["", "joins"]
CALLS: ["finder"]
CALLS: ["finder", "execute", "preload_for_collection", "preload"]
CALLS: ["collection_type"]
CALLS: ["root", "join", "html", "js", "any", "respond_to"]
CALLS: ["cycle_analytics", "events", "render_events"]
CALLS: ["project", "events_params", "options", "new"]
CALLS: ["params", "present?", "params", "permit"]
CALLS: ["html", "json", "respond_to"]
CALLS: ["issues_finder", "params", "find"]
CALLS: ["board", "group_board?", "current_user", "board_parent", "id", "new", "current_user", "board_parent", "id", "new"]
CALLS: ["cross_reference?", "has_referenced_mentionables?"]
CALLS: ["cross_reference_note_prefix"]
CALLS: []
CALLS: ["user_visible_reference_count", "present?", "user_visible_reference_count", "referenced_mentionables", "any?"]
CALLS: ["author", "matches_cross_reference_regex?", "all_references", "issues", "merge_requests", "commits", "local_reference", "reject"]
CALLS: ["project", "project", "default_issues_tracker?", "class", "mentionable_attrs", "__send__", "any?"]
CALLS: ["external_issue_tracker"]
CALLS: []
CALLS: ["system?", "force_cross_reference_regex_check?", "matches_cross_reference_regex?", "note", "cross_reference?"]
CALLS: ["system?", "system_note_metadata", "action", "include?"]
CALLS: ["params", "current_user", "id", "new", "params", "find", "current_user", "id", "new", "params", "find"]
CALLS: ["preload_noteable_for_regular_notes", "preload_max_access_for_authors", "preload_first_time_contribution_for_authors", "current_user", "new", "execute"]
CALLS: ["is_a?", "first_contribution?", "specialize_for_first_contribution!", "each"]
CALLS: ["author_id", "author_id", "special_role"]
CALLS: ["project", "team", "author_id", "max_member_access", "project", "merge_requests", "merged", "author_id", "where", "empty?"]
CALLS: ["", "with_state"]
CALLS: []
CALLS: ["new", "reject", "preload"]
CALLS: ["map", "team", "max_member_access_for_user_ids"]
CALLS: ["project", "issuable", "current_user", "new"]
CALLS: ["resolvable_discussions", "any?"]
CALLS: ["class", "title", "work_in_progress?"]
CALLS: ["opened?"]
CALLS: ["title"]
CALLS: ["unchecked?", "read_write?", "broken?", "project", "repository", "diff_head_sha", "target_branch", "can_be_merged?", "mark_as_mergeable", "mark_as_unmergeable"]
CALLS: ["check_if_can_be_merged"]
CALLS: ["id", "perform_async", "update_column"]
CALLS: ["diff_head_sha", "merge_params_ee", "merge"]
CALLS: []
CALLS: ["params", "merge_params_attributes", "permit"]
CALLS: []
CALLS: ["valid_token?", "find_chat_user", "user", "project", "new", "execute", "authorize_chat_name_url", "new", "authorize"]
CALLS: ["new", "execute"]
CALLS: ["new", "execute"]
CALLS: ["respond_to?", "token", "present?", "token", "variable_size_secure_compare"]
CALLS: ["respond_to?", "token", "present?", "token", "variable_size_secure_compare"]
CALLS: ["token", "token", "variable_size_secure_compare"]
CALLS: ["params", "presence", "request", "headers", "present?", "health_check_access_token", "variable_size_secure_compare"]
CALLS: ["ensure_health_check_access_token!"]
CALLS: ["is_a?", "format", "tap"]
CALLS: ["project", "triggers", "params", "find", "render_404"]
CALLS: ["project", "current_user", "new", "params", "execute", "project_tags_path", "html", "js", "project_tags_path", "html", "js", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["current_user", "can?", "access_denied!", "destroy", "project_snippets_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project", "only_for?", "destroy", "runners_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["projects"]
CALLS: ["project", "runner_projects", "params", "find", "destroy", "project", "runners_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["tag", "delete", "json", "respond_to", "json", "respond_to"]
CALLS: ["new"]
CALLS: ["params", "find_tag"]
CALLS: ["tags", "name", "find"]
CALLS: ["image", "params", "tag"]
CALLS: ["image", "destroy", "json", "respond_to", "json", "respond_to"]
CALLS: ["destroy_service_class", "current_user", "new", "execute", "redirect_to_repository_settings", "html", "js", "respond_to"]
CALLS: ["service_namespace"]
CALLS: ["schedule", "destroy", "pipeline_schedules_path", "pipeline_schedules_path", "_"]
CALLS: ["project", "pipeline_schedules", "params", "find"]
CALLS: ["destroy", "project_pages_path", "html", "js", "respond_to"]
CALLS: ["project", "remove_pages", "project", "pages_domains", "destroy_all", "project_pages_path", "html", "respond_to"]
CALLS: ["namespace", "new", "execute", "path", "hex", "new", "path", "namespace", "full_path", "rename_project", "minutes", "namespace", "full_path", "perform_in"]
CALLS: ["new", "execute"]
CALLS: ["collection", "clear"]
CALLS: ["new", "current_user", "mark_todos_as_done", "dashboard_todos_path", "html", "js", "todos_counts", "merge", "json", "respond_to", "header_title", "root_path"]
CALLS: ["update_todos_state"]
CALLS: ["where", "not", "pluck", "unscope", "update_all", "update_todos_count_cache"]
CALLS: ["current_user", "todos_pending_count", "number_with_delimiter", "current_user", "todos_done_count", "number_with_delimiter"]
CALLS: ["current_user", "can?", "access_denied!", "project", "current_user", "new", "milestone", "execute", "namespace_project_milestones_path", "html", "js", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["milestone?", "target"]
CALLS: ["target_type"]
CALLS: ["milestones", "params", "find_by!"]
CALLS: ["params", "group", "group_projects", "params", "build", "group", "milestones", "params", "find_by_iid", "render_404"]
CALLS: ["params", "build", "render_404"]
CALLS: ["destroy", "find_labels", "project_labels_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["extract_references", "current_user", "project", "id", "split", "new", "execute"]
CALLS: ["project", "current_user", "new", "current_user", "analyze", "references"]
CALLS: ["current_user", "id", "params", "new", "execute"]
CALLS: ["hook", "destroy", "project_settings_integrations_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project", "project_group_links", "params", "find", "project", "current_user", "new", "execute", "project", "project_project_members_path", "html", "js", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["cluster", "destroy", "flash", "_", "project", "project_clusters_path", "flash", "_", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["params", "unescape", "project", "current_user", "new", "execute", "flash", "project_branches_path", "html", "js", "json", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project_tree_path", "project_blob_path", "create_commit", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["remove_avatar!", "save", "edit_project_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["current_user", "u2f_registrations", "params", "find", "destroy", "profile_two_factor_auth_path"]
CALLS: ["current_user", "disable_two_factor!", "profile_account_path", "header_title", "profile_path"]
CALLS: ["transaction_begin", "update_attributes", "u2f_registrations", "destroy_all", "transaction_end", "transaction"]
CALLS: ["current_user", "keys", "params", "find", "destroy", "profile_keys_url", "html", "js", "respond_to", "header_title", "profile_path"]
CALLS: ["destroy", "profile_gpg_keys_url", "html", "js", "respond_to"]
CALLS: ["current_user", "current_user", "new", "execute", "profile_emails_url", "html", "js", "respond_to", "header_title", "profile_path"]
CALLS: ["chat_names", "params", "find", "destroy", "flash", "chat_name", "flash", "chat_name", "profile_chat_names_path"]
CALLS: ["current_user", "current_user", "new", "remove_avatar!", "execute", "profile_path", "header_title", "profile_path"]
CALLS: ["params", "present?", "current_resource_owner", "oauth_authorized_tokens", "params", "find", "revoke", "params", "current_resource_owner", "revoke_all_for", "applications_profile_url", "t"]
CALLS: ["with_key_and_subkeys", "where", "verification_statuses", "not", "verification_statuses", "zone", "now", "update_all", "destroy"]
CALLS: ["subkeys", "pluck", "arel_table", "id", "eq", "arel_table", "in", "or", "where"]
CALLS: ["deploy_tokens", "params", "find", "revoke!", "project", "project_settings_repository_path"]
CALLS: ["update!"]
CALLS: ["update!"]
CALLS: ["finder", "params", "find", "revoke!", "flash", "name", "flash", "name", "profile_personal_access_tokens_path"]
CALLS: ["revoke", "profile_gpg_keys_url", "html", "js", "respond_to"]
CALLS: ["finder", "params", "find", "revoke!", "flash", "name", "flash", "name", "admin_user_impersonation_tokens_path"]
CALLS: ["current_user", "new", "async_execute", "root_path", "name", "name", "page_description", "description", "header_title", "group_title", "current_user"]
CALLS: ["destroy", "group_labels_path", "name", "html", "js", "respond_to"]
CALLS: ["remove_avatar!", "save", "edit_group_path", "name", "page_description", "description", "header_title", "group_title", "current_user"]
CALLS: ["new", "params", "current_user", "mark_todos_as_done_by_ids", "dashboard_todos_path", "html", "js", "todos_counts", "json", "respond_to", "header_title", "root_path"]
CALLS: ["todos_by_ids", "mark_todos_as_done"]
CALLS: ["todos", "where"]
CALLS: ["note", "editable?", "project", "current_user", "new", "note", "execute", "js", "respond_to"]
CALLS: []
CALLS: ["manual_configuration?", "prometheus_installed?"]
CALLS: ["template?", "project", "project", "clusters", "enabled", "application_prometheus", "installed?", "any?"]
CALLS: ["template"]
CALLS: ["template"]
CALLS: ["system?"]
CALLS: ["membershipable", "members_and_requesters", "params", "find", "current_user", "new", "execute", "source_type", "members_page_url", "html", "js", "respond_to"]
CALLS: ["issuable", "project", "current_user", "new", "issuable", "execute", "issuable", "human_class_name", "flash", "parent", "issuable", "class", "polymorphic_path", "html", "json", "respond_to"]
CALLS: ["base_class_name", "titleize", "downcase"]
CALLS: ["board", "lists", "destroyable", "params", "find", "board_parent", "current_user", "new", "execute"]
CALLS: ["", "list_types", "where"]
CALLS: ["user", "current_user", "params", "permit", "delete_async", "admin_users_path", "html", "json", "respond_to", "admin_root_path"]
CALLS: ["params", "find", "params", "current_user", "remove_user", "admin_spam_logs_path", "user", "username", "destroy", "admin_root_path"]
CALLS: ["user", "delete_async"]
CALLS: ["user", "delete_async"]
CALLS: ["destroy", "admin_runners_path", "admin_root_path"]
CALLS: ["params", "find", "runner", "destroy", "admin_runner_path", "admin_root_path"]
CALLS: ["destroy", "templates", "admin_labels_path", "html", "js", "respond_to", "admin_root_path"]
CALLS: ["user", "keys", "params", "find", "destroy", "user", "keys_admin_user_path", "html", "user", "keys_admin_user_path", "html", "respond_to", "admin_root_path"]
CALLS: ["current_user", "warden", "impersonator", "set_user", "impersonator", "username", "username", "info", "session", "admin_user_path", "admin_root_path"]
CALLS: ["find_by", "log_error"]
CALLS: ["current_user"]
CALLS: ["session", "session", "find"]
CALLS: ["params", "find_by", "nil?", "root_path", "blocked?"]
CALLS: ["destroy", "new", "execute", "admin_user_identities_path", "admin_user_identities_path", "admin_root_path"]
CALLS: ["hook", "destroy", "admin_hooks_path", "admin_root_path"]
CALLS: ["current_user", "new", "async_execute", "admin_groups_path", "name", "admin_root_path"]
CALLS: ["deploy_key", "destroy", "admin_deploy_keys_path", "html", "json", "respond_to", "admin_root_path"]
CALLS: ["params", "find"]
CALLS: ["deploy_keys", "params", "find"]
CALLS: ["are_public"]
CALLS: ["destroy", "redirect_back_or_default", "html", "js", "respond_to", "admin_root_path"]
CALLS: ["destroy", "admin_applications_url", "admin_root_path"]
CALLS: ["params", "find", "params", "current_user", "remove_user", "destroy", "admin_root_path"]
CALLS: ["job_artifacts_archive", "job_artifacts_archive", "destroy", "remove_legacy_artifacts_file!"]
CALLS: ["", "merge"]
CALLS: ["success", "merge"]
CALLS: ["success", "merge"]
CALLS: ["success", "merge"]
CALLS: []
CALLS: ["", "with_state"]
CALLS: ["", "where"]
CALLS: ["", "where"]
CALLS: ["", "where"]
CALLS: ["", "where"]
CALLS: ["", "where"]
CALLS: ["", "where"]
CALLS: ["", "where"]
CALLS: ["", "all_state_names", "where"]
CALLS: ["state_machines", "values", "flat_map", "map", "flat_map"]
CALLS: ["", "where"]
CALLS: ["key?", "project", "pipelines", "id", "latest_status_per_commit", "id"]
CALLS: ["contacted_at", "nil?", "active?", "online?"]
CALLS: ["contacted_at", "contacted_at", "class", "contact_time_deadline"]
CALLS: ["statuses", "latest", "status"]
CALLS: ["commit_statuses", "status"]
CALLS: ["jobs", "map", "where"]
CALLS: ["new", "represent_status", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["present?", "represent", "dig"]
CALLS: ["represent"]
CALLS: ["represent", "fetch"]
CALLS: ["new", "represent_status", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["response", "set_header", "new", "represent_status", "json", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["client", "valid?", "new_import_google_code_path", "client", "repos", "client", "incompatible_repos", "current_user", "created_projects", "where", "pluck", "name", "include?", "reject!"]
CALLS: ["client", "projects", "current_user", "created_projects", "where", "pluck", "to_a", "include?", "reject"]
CALLS: ["client", "repos", "current_user", "created_projects", "provider", "where", "pluck", "full_name", "include?", "reject!", "has_ci_cd_only_params?", "_", "_", "root_path", "import_github_title"]
CALLS: ["_"]
CALLS: []
CALLS: ["session", "host_key", "root_path", "custom_icon"]
CALLS: ["client", "valid?", "new_import_fogbugz_path", "client", "repos", "current_user", "created_projects", "where", "pluck", "name", "include?", "reject!"]
CALLS: ["credentials", "new", "repos", "valid?", "partition", "current_user", "created_projects", "where", "pluck", "to_a", "full_name", "include?", "reject!"]
CALLS: ["active_nav_link?", "delete", "strip!", "block_given?", "capture", "content_tag", "content_tag"]
CALLS: ["delete", "respond_to?", "current_path?", "any?", "delete", "respond_to?", "current_page?", "any?", "delete", "delete", "current_controller?", "current_action?", "current_controller?", "current_action?"]
CALLS: ["split", "current_controller?", "current_action?"]
CALLS: ["to_s", "downcase", "action_name", "any?"]
CALLS: ["merge_requests", "opened"]
CALLS: ["class", "id", "query"]
CALLS: ["raise"]
CALLS: ["new"]
CALLS: ["class", "table_name", "id", "read_attribute_before_type_cast"]
CALLS: ["options", "project", "jobs_cache_index", "project", "jobs_cache_index", "merge"]
CALLS: ["arel_table", "alias", "star", "count", "as", "project", "from", "eq", "where"]
CALLS: ["arel_table", "arel_table", "star", "count", "as", "project", "eq", "where", "eq", "where", "to_boolean", "not_eq", "where"]
CALLS: ["supports_nested_groups?"]
CALLS: ["all_visible_descendant_groups", "params", "search"]
CALLS: ["arel_table", "current_user", "levels_for_user", "in", "current_user", "current_user", "new", "execute", "as", "project", "from", "eq", "where", "exists", "or", "hierarchy_for_parent", "descendants", "where"]
CALLS: ["class", "id", "where", "new", "base_and_descendants"]
CALLS: ["params", "find_by_path_or_name"]
CALLS: ["downcase", "find_by"]
CALLS: ["current_user", "parent_group", "new", "execute"]
CALLS: ["load_projects", "html", "view_to_html_string", "json", "respond_to"]
CALLS: ["projects", "with_statistics", "params", "page", "name", "current_user", "id", "new_project_path", "visibility_level", "visibility_level_color", "visibility_level", "visibility_level_icon", "full_name", "archived", "statistics", "storage_size", "storage_counter", "project_project_members_path", "dom_id", "edit_project_path", "dom_id", "remove_project_message", "each", "blank?", "name", "page_description", "description", "header_title", "group_title", "current_user"]
CALLS: ["", "where"]
CALLS: []
CALLS: ["megabyte", "number_to_human_size"]
CALLS: ["_", "full_name"]
CALLS: ["current_user", "authorized_projects", "sorted_by_activity", "non_archived"]
CALLS: ["", "reorder"]
CALLS: ["params", "find_by_id", "projects_finder", "params", "params", "execute", "to_json"]
CALLS: ["current_user", "new"]
CALLS: ["user", "personal_projects", "user", "projects", "joined", "admin_root_path"]
CALLS: ["", "namespace_id", "where"]
CALLS: ["represent"]
CALLS: ["represent"]
CALLS: ["should_expand_hierarchy", "paginated?", "paginator", "paginate", "represent_hierarchies", "represent"]
CALLS: ["is_a?", "hierarchy_root", "hierarchy", "represent_hierarchy", "first", "hierarchy_root", "build_hierarchy", "wrap", "represent_hierarchy"]
CALLS: ["class", "params", "new", "is_a?", "represent", "represent_hierarchy", "wrap", "merge", "map", "is_a?", "represent_hierarchy", "flat_map", "represent"]
CALLS: ["wrap", "uniq", "empty?", "is_a?", "all?", "new", "hierarchy", "map", "merge"]
CALLS: ["ancestors_upto", "expand_hierarchy_for_child"]
CALLS: ["namespace_id", "where", "new", "base_and_ancestors"]
CALLS: ["class", "id", "where", "new", "ancestors"]
CALLS: ["parent_id", "id", "is_a?", "id", "parent_id", "detect", "nil?", "parent_id", "nil?", "parent", "new", "map", "track_exception", "nil?", "present?", "new", "expand_hierarchy_for_child"]
CALLS: ["itemized?", "itemize", "name", "size", "represent", "map", "represent"]
CALLS: ["order", "group", "select", "paginated?", "paginate", "map", "where", "index_by", "folder", "size", "last_id", "new", "map"]
CALLS: ["project", "environments", "params", "where", "params", "with_state", "order", "params", "html", "new", "request", "response", "with_pagination", "represent", "available", "count", "stopped", "count", "json", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: []
CALLS: ["paginated?", "paginate", "represent"]
CALLS: ["paginated?", "respond_to?", "", ""]
CALLS: ["class", "entity_class", "merge", "represent", "as_json"]
CALLS: []
CALLS: ["symbolize_keys!", "represent"]
CALLS: ["are_public", "includes", "enabled_keys", "available_project_keys"]
CALLS: ["current_user", "project_deploy_keys", "includes", "enabled_keys"]
CALLS: ["unscoped", "authorized_projects", "pluck", "in_projects", "distinct"]
CALLS: ["unscoped", "where", "select", "unscoped", "where", "select", "new", "to_sql", "where"]
CALLS: ["", "where"]
CALLS: ["", "except", "select", "where", "where", "recent"]
CALLS: ["", "joins", "where"]
CALLS: ["project", "deploy_keys", "includes"]
CALLS: ["members", "current_user", "present", "each"]
CALLS: ["", "key?", "label", "board", "project", "as_json", "tap"]
CALLS: ["", "try", "key?", "priority", "tap"]
CALLS: ["", "key?", "project", "url_helpers", "to_reference", "to_reference", "project", "project_issue_path", "project", "project_issue_path", "project", "toggle_subscription_project_issue_path", "merge!", "key?", "labels", "project", "as_json", "tap"]
CALLS: ["commits", "each"]
CALLS: ["milestones", "includes", "map", "flatten", "build_collection", "sort_by!"]
CALLS: ["labels?", "filter_by_no_label?", "current_user", "projects", "label_names", "new", "execute", "none"]
CALLS: ["labels?", "params", "title", "include?"]
CALLS: ["target", "labels", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["projects", "select", "current_user", "new", "execute", "build_collection"]
CALLS: ["milestone_redirect_path", "html", "labels", "tabs_json", "json", "respond_to"]
CALLS: ["current_user", "id", "new", "execute"]
CALLS: ["labels", "params", "find"]
CALLS: []
CALLS: ["full_title", "length", "full_title", "full_title", "truncate"]
CALLS: ["params", "params"]
CALLS: ["id", "id", "id"]
CALLS: ["to_reference"]
CALLS: ["project", "to_reference", "ref_from", "notation", "ref_to", "present?", "class", "reference_prefix"]
CALLS: ["short_id", "commit_reference"]
CALLS: ["project", "to_reference", "present?", "class", "reference_prefix"]
CALLS: []
CALLS: ["project", "to_reference", "present?", "class", "reference_prefix", "id", "id"]
CALLS: ["id", "commit_reference"]
CALLS: ["project", "current_user", "merge_request_params", "new", "execute"]
CALLS: ["params"]
CALLS: ["params"]
CALLS: ["info"]
CALLS: ["info"]
CALLS: ["closes_issues", "target_project", "to_reference", "map", "source_branch", "target_branch", "title", "present?", "to_sentence", "description", "present?", "description", "to_reference", "join"]
CALLS: ["params", "merge_request", "current_user", "closes_issues"]
CALLS: ["author", "target_branch", "project", "default_branch", "title", "description", "merge_request_diff", "commits", "map", "concat", "project", "new", "join", "closed_by_message"]
CALLS: ["committer", "project", "new", "safe_message", "closed_by_message"]
CALLS: ["committer_email", "downcase", "find_by_any_email"]
CALLS: ["merge_request?", "target"]
CALLS: ["target_type"]
CALLS: ["includes", "ref", "pipeline", "project", "where", "reorder", "commit_shas", "pipeline", "sha", "include?", "find"]
CALLS: ["merge_requests", "params", "find_by!"]
CALLS: ["current_user", "id", "new", "params", "find_by!"]
CALLS: ["current_user", "id", "new", "execute", "opened", "find_by"]
CALLS: ["repository", "current_user", "source", "merge_request", "target_branch", "merge_request", "ff_merge", "message", "message", "merge_request", "update"]
CALLS: ["commit", "id", "nil?", "update", "raw", "ff_merge", "with_cache_hooks"]
CALLS: ["project", "origin_sha", "origin_ref", "commit"]
CALLS: ["target_type"]
CALLS: ["noteable_type"]
CALLS: ["exists?", "is_a?", "find_commit"]
CALLS: ["commit_to", "commit_from"]
CALLS: ["repository", "commit"]
CALLS: ["commit_id", "present?", "project", "commit_id", "commit"]
CALLS: ["noteable_type"]
CALLS: ["project", "commit_sha", "commit"]
CALLS: ["project", "sha", "commit"]
CALLS: ["project", "name", "commit"]
CALLS: ["project", "sha", "lazy"]
CALLS: ["for", "group_by", "map", "repository", "commits_by", "project", "id", "call", "each", "each", "batch"]
CALLS: ["find_by"]
CALLS: ["present?", "raw_repository", "batch_by_oid", "present?", "decorate"]
CALLS: ["objects", "present?", "render_lfs_not_found", "download_request?", "download_objects!", "upload_request?", "upload_objects!", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["action_name", "include?"]
CALLS: ["action_name"]
CALLS: ["params", "include?"]
CALLS: ["params"]
CALLS: ["objects", "existing_oids", "include?", "upload_actions", "each", "objects"]
CALLS: ["project", "http_url_to_repo", "request", "headers", "compact"]
CALLS: ["project", "all_lfs_objects", "objects", "to_s", "map", "where", "pluck"]
CALLS: ["lfs_storage_project", "lfs_objects"]
CALLS: ["forked?", "fork_source"]
CALLS: ["forked?", "forked_from_project", "fork_network", "root_project"]
CALLS: ["objects", "existing_oids", "include?", "download_actions", "project", "can?", "each", "objects"]
CALLS: ["project", "http_url_to_repo", "request", "headers", "compact"]
CALLS: ["params"]
CALLS: ["params"]
CALLS: ["upload_pack?"]
CALLS: ["git_command"]
CALLS: ["action_name", "params", "action_name", "dasherize"]
CALLS: []
CALLS: []
CALLS: ["params", "to_a"]
CALLS: ["help_url", "render"]
CALLS: ["for", "group_by", "values_at", "map", "repository", "blobs_at", "project", "commit_id", "path", "call", "each", "each", "batch"]
CALLS: ["raw_repository", "batch_blobs", "project", "decorate", "map"]
CALLS: ["params"]
CALLS: ["commit"]
CALLS: ["params", "presence", "all_commits", "exists?", "commit"]
CALLS: ["params", "commit_by"]
CALLS: ["commit", "render_404"]
CALLS: ["for_personal_snippet?", "noteable_type", "underscore"]
CALLS: ["for_commit?", "commit"]
CALLS: ["noteable_type"]
CALLS: ["noteable_type"]
CALLS: ["class", "to_ability_name"]
CALLS: ["notes_finder", "target", "noteable"]
CALLS: ["all_references", "directly_addressed_users"]
CALLS: ["mentioned_users", "filter_todo_users"]
CALLS: ["attributes_for_target", "id", "id", "merge!"]
CALLS: ["pending_todos", "exists?", "id", "merge", "create", "update_todos_count_cache", "map"]
CALLS: ["assignees", "any?", "assignees", "project", "attributes_for_todo", "create_todos"]
CALLS: ["new_resource_email"]
CALLS: ["author", "build_recipients", "mailer", "user", "id", "id", "reason", "send", "deliver_later", "each"]
CALLS: ["head_pipeline_for", "id", "update"]
CALLS: ["source_project", "source_branch_sha", "source_project", "pipelines", "source_branch", "where", "order", "first"]
CALLS: ["new"]
CALLS: ["project", "issues_enabled?", "transaction_begin", "merge_requests_closing_issues", "delete_all", "closes_issues", "is_a?", "merge_requests_closing_issues", "create!", "each", "transaction_end", "transaction"]
CALLS: ["todo_service", "current_user", "new_issue", "user_agent_detail_service", "create", "resolve_discussions_with_issue"]
CALLS: ["new_issuable"]
CALLS: ["new_resource_email"]
CALLS: ["new"]
CALLS: ["discussions_to_resolve", "empty?", "project", "current_user", "merge_request_to_resolve_discussions_of", "new", "discussions_to_resolve", "execute"]
CALLS: []
CALLS: ["expire_exists_cache", "expire_root_ref_cache", "expire_emptiness_caches", "repository_event"]
CALLS: ["full_path", "merge", "add_event"]
CALLS: ["forked?", "gitlab_shell", "repository_storage", "disk_path", "create_repository", "repository", "after_create", "errors", "add"]
CALLS: ["gl_repository"]
CALLS: ["repository_storages", "first"]
CALLS: ["read_attribute"]
CALLS: ["owner", "new"]
CALLS: ["parse_repo_path"]
CALLS: ["params", "params", "parse"]
CALLS: ["project", "repository"]
CALLS: ["group", "project"]
CALLS: []
CALLS: []
CALLS: ["group?", "group", "project", "strong_memoize"]
CALLS: ["project", "group"]
CALLS: ["source"]
CALLS: ["params", "present?", "params", "find"]
CALLS: ["params", "params", "find_routable!"]
CALLS: ["request", "get?", "find_by_full_path", "routable_authorized?", "ensure_canonical_path", "handle_not_found_or_authorized"]
CALLS: ["request", "get?", "full_path", "casecmp", "flash", "class", "to_s", "titleize", "build_canonical_path"]
CALLS: ["safe_params", "to_param", "merge", "url_for"]
CALLS: ["params", "namespace", "to_param", "params", "to_param", "safe_params", "url_for"]
CALLS: ["params", "namespace", "to_param", "params", "to_param", "params", "url_for"]
CALLS: ["action_name", "group_path", "params", "to_param", "safe_params", "url_for"]
CALLS: ["params", "to_param", "params", "url_for"]
CALLS: ["class", "to_s", "underscore", "current_user", "can?", "call"]
CALLS: ["route_not_found"]
CALLS: ["current_user", "not_found", "authenticate_user!"]
CALLS: ["current_user", "request", "get?", "request", "xhr?", "request", "fullpath", "new_user_session_path"]
CALLS: ["current_user", "allow_signup?", "request", "fullpath", "new_user_session_path"]
CALLS: ["signup_enabled?", "password_authentication_enabled_for_web?"]
CALLS: ["group"]
CALLS: ["params", "find_by_full_path"]
CALLS: ["of_projects", "where", "blank?", "new"]
CALLS: ["", "where"]
CALLS: ["", "where"]
CALLS: ["", "where"]
CALLS: ["first", "discussion_class", "new"]
CALLS: ["project", "builds", "params", "find", "current_user", "present"]
CALLS: ["build_from_id", "build_from_ref", "current_user", "present"]
CALLS: ["project", "latest_successful_builds_for", "params", "find_by"]
CALLS: ["default_branch", "pipelines", "latest_successful_for", "builds", "latest", "with_artifacts_archive", "builds", "none"]
CALLS: ["newest_first", "success", "take"]
CALLS: ["", "select", "where", "archive", "where"]
CALLS: ["current_user", "can?", "access_denied!", "archive!", "project_path", "html", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["update_attribute"]
CALLS: ["params", "path", "tr", "params", "logger", "class", "name", "error", "git_not_found!", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: []
CALLS: ["params", "project", "builds", "params", "find_by"]
CALLS: ["commit", "try"]
CALLS: ["persisted?", "merge_request_diff", "head_commit_sha", "source_branch_head", "try"]
CALLS: ["project", "pipelines", "params", "find_by!", "current_user", "present"]
CALLS: ["project", "params", "new"]
CALLS: ["render_show"]
CALLS: ["current_user", "new", "deploy_tokens", "active", "define_deploy_token", "define_protected_refs", "fluid_layout", "current_user", "can?", "empty?", "each", "env", "test?", "current_user", "current_user", "can?", "each", "env", "test?", "current_user", "expand_deploy_tokens_section?", "s_", "s_", "persisted?", "s_", "deploy_token", "username", "deploy_token", "username", "s_", "clipboard_button", "s_", "deploy_token", "token", "deploy_token", "token", "s_", "clipboard_button", "s_", "s_", "s_", "token", "project", "namespace", "project", "create_deploy_token_namespace_project_settings_repository_path", "token", "form_errors", "label", "text_field", "label", "object", "expires_at", "text_field", "label", "check_box", "s_", "project", "container_registry_enabled?", "check_box", "s_", "s_", "submit", "s_", "active_tokens", "length", "active_tokens", "present?", "s_", "s_", "s_", "s_", "s_", "active_tokens", "name", "username", "created_at", "to_date", "to_s", "expires?", "expires_soon?", "scopes", "present?", "scopes", "join", "s_", "id", "project", "project", "each", "s_"]
CALLS: ["read_attribute", "date"]
CALLS: ["due_date", "due_date", "past?", "due_date", "to_s", "due_date", "to_s"]
CALLS: ["expires?", "expires_at", "days", "from_now"]
CALLS: ["expires_at", "present?"]
CALLS: ["persisted?", "errors", "present?", "env", "test?"]
CALLS: ["new"]
CALLS: ["protected_branches", "order", "params", "page", "protected_tags", "order", "params", "page", "protected_branches", "new", "protected_tags", "new", "repository", "branches", "matching", "size", "reduce", "repository", "tags", "matching", "size", "reduce", "load_gon_index"]
CALLS: ["project", "repository", "branch_names"]
CALLS: ["gon", "protectable_tags_for_dropdown", "push", "gon", "protectable_branches_for_dropdown", "push", "gon", "access_levels_options", "push"]
CALLS: ["new", "hash"]
CALLS: ["protectable_ref_names", "map"]
CALLS: ["ref_names", "non_wildcard_protected_ref_names"]
CALLS: ["protections", "reject", "map"]
CALLS: ["public_send"]
CALLS: ["class", "to_s", "hash"]
CALLS: ["new", "hash"]
CALLS: ["levels_for_dropdown", "levels_for_dropdown", "levels_for_dropdown"]
CALLS: ["map"]
CALLS: ["repository", "branch_count", "repository", "commit", "id", "branch_names_contains", "repository", "tag_count", "repository", "commit", "id", "tag_names_contains", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["raw_repository", "tag_names_contains_sha"]
CALLS: ["raw_repository", "branch_names_contains_sha"]
CALLS: ["html", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["job_from_id", "job_from_ref"]
CALLS: ["project", "latest_successful_builds_for", "params", "find_by"]
CALLS: ["params", "project", "builds", "params", "find_by"]
CALLS: ["default_options", "deep_symbolize_keys"]
CALLS: []
CALLS: ["start_date", "current_user"]
CALLS: ["start_date", "first", "start_date", "all?", "first", "start_date"]
CALLS: ["days", "ago", "days", "ago", "days", "ago"]
CALLS: ["params"]
CALLS: ["due_date", "due_date", "past?"]
CALLS: ["expires?", "expires_at", "current"]
CALLS: ["cache", "cache_expires_in", "current_and_future_messages", "to_a", "fetch", "empty?", "select", "empty?", "cache", "delete", "select"]
CALLS: []
CALLS: ["zone", "now", "where", "order_id_asc"]
CALLS: ["ensure_cache_setup", "cache", "last", "tap", "fetch", "last"]
CALLS: ["define_attribute_methods"]
CALLS: ["cache", "first", "fetch"]
CALLS: []
CALLS: ["for_commit?", "diff_line", "noteable", "noteable", "diff_refs", "find_noteable_diff", "new", "diff", "each_line", "parse", "text", "diff_line", "text", "any?"]
CALLS: ["noteable", "max_diff_options", "raw_diffs", "new_path", "diff", "new_path", "find"]
CALLS: ["diff_file", "line_code", "line_for_line_code"]
CALLS: ["diff_file", "original_position", "line_for_position"]
CALLS: []
CALLS: ["present?", "first_note", "active?"]
CALLS: ["state"]
CALLS: ["supported?", "for_commit?", "noteable", "diff_refs", "position", "diff_refs"]
CALLS: ["class", "supported?"]
CALLS: ["for_commit?", "noteable", "has_complete_diff_refs?"]
CALLS: ["diff_refs", "diff_refs", "complete?"]
CALLS: ["revoked"]
CALLS: ["class", "name", "id"]
CALLS: ["route", "route", "path", "present?", "route", "path", "persisted?", "update_route", "build_full_path"]
CALLS: []
CALLS: ["status", "include?"]
CALLS: ["started?", "ended?"]
CALLS: ["status", "include?", "started_at"]
CALLS: ["zone", "now", "starts_at"]
CALLS: []
CALLS: ["class", "application_name"]
CALLS: ["to_s", "demodulize", "underscore"]
CALLS: []
CALLS: ["binary?", "encode"]
CALLS: ["exists?", "raw_repository", "size"]
CALLS: ["real_size", "presence", "raw_diffs", "size"]
CALLS: []
CALLS: ["entry", "metadata"]
CALLS: ["build", "params", "artifacts_metadata_entry", "exists?", "render_404"]
CALLS: ["artifacts_metadata", "options", "new", "to_entry", "use_file"]
CALLS: ["unsafe_use_file", "with_exclusive_lease"]
CALLS: ["file_storage?", "path", "cache_stored_file!", "cache_path", "cache_path", "rm_f", "cache_storage", "cache_path", "delete_dir!"]
CALLS: ["exclusive_lease_key", "hour", "to_i", "new", "try_obtain", "exclusive_lease_key", "cancel"]
CALLS: ["model", "class", "model", "id"]
CALLS: ["merge_when_pipeline_succeeds?", "open?", "reset_merge_when_pipeline_succeeds", "cancel_merge_when_pipeline_succeeds", "success", "error"]
CALLS: ["new", "create_note"]
CALLS: ["merge_requests_for_source_branch", "each"]
CALLS: ["merge_requests_for"]
CALLS: ["merge_when_pipeline_succeeds?", "merge_when_pipeline_succeeds", "merge_user", "merge_params", "merge_params", "delete", "merge_params", "delete", "save"]
CALLS: ["to_reference", "new", "create_note"]
CALLS: ["current_user", "can_cancel_merge_when_pipeline_succeeds?", "access_denied!", "current_user", "new", "cancel", "serialize_widget", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["can_be_merged_by?", "author"]
CALLS: ["project", "new", "target_branch", "can_update_branch?"]
CALLS: ["serializer", "represent"]
CALLS: ["current_user", "merge_request", "project", "new"]
CALLS: ["current_user", "issue", "project", "new"]
CALLS: []
CALLS: ["pipeline", "cancel_running", "project", "project_pipelines_path", "html", "json", "respond_to"]
CALLS: ["url_helpers", "project_pipelines_path"]
CALLS: ["cancelable_statuses", "block_given?", "cancel", "find_each", "retry_optimistic_lock"]
CALLS: ["cancelable?", "respond_422", "cancel", "build_path"]
CALLS: ["build", "cancelable?", "request", "current_user", "build", "can?"]
CALLS: []
CALLS: ["cancelable_statuses", "any?"]
CALLS: ["active?"]
CALLS: ["project", "project_job_path"]
CALLS: ["url_helpers", "id", "project_build_path"]
CALLS: []
CALLS: ["job_artifacts_metadata", "file", "legacy_artifacts_metadata"]
CALLS: ["params", "to_i"]
CALLS: ["order", "class", "to_s", "where"]
CALLS: ["store_dir", "filename", "to_s", "join"]
CALLS: ["store_dirs", "object_store"]
CALLS: ["base_dir", "dynamic_segment", "join", "class", "model", "model_path_segment", "dynamic_segment", "join"]
CALLS: ["base_dir", "dynamic_segment", "join", "dynamic_segment", "join"]
CALLS: ["base_dir", "dynamic_segment", "join", "class", "model", "model_path_segment", "dynamic_segment", "join"]
CALLS: ["base_dir", "dynamic_segment", "join", "base_dir", "dynamic_segment", "join"]
CALLS: ["store_dirs", "object_store"]
CALLS: ["store_dirs", "object_store"]
CALLS: ["dynamic_segment"]
CALLS: ["dynamic_segment"]
CALLS: ["dynamic_segment"]
CALLS: ["file", "present?"]
CALLS: ["store", "object_store", "tap"]
CALLS: ["store", "object_store", "tap"]
CALLS: ["file", "present?"]
CALLS: ["secret", "secret", "tap"]
CALLS: ["file_storage?", "dynamic_segment", "identifier", "join", "store_dir", "identifier", "join"]
CALLS: ["path", "basename"]
CALLS: ["path", "basename"]
CALLS: ["filename"]
CALLS: ["path", "basename"]
CALLS: ["model", "avatar", "file", "model", "avatar", "file", "present?"]
CALLS: ["full_path", "raw_repository", "exists?"]
CALLS: ["execute", "model"]
CALLS: ["project", "job", "params", "file_project_job_artifacts_path"]
CALLS: ["blob", "conditionally_expand_blob", "build", "external_link?", "build", "external_url", "name", "id", "browse_project_job_artifacts_path", "truncate", "file_project_job_artifacts_path", "browse_project_job_artifacts_path", "path_breadcrumbs", "blob", "mode", "name", "name", "path", "copy_file_path_button", "raw_size", "number_to_human_size", "stored_externally?", "external_storage", "copy_blob_source_button", "open_raw_blob_button", "simple_viewer", "rich_viewer", "params", "html", "render_blob_json", "json", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: []
CALLS: ["entry", "metadata"]
CALLS: ["rich_viewer_class", "new"]
CALLS: ["viewer_class_from"]
CALLS: ["empty?", "external_storage_error?", "stored_externally?", "can_render?", "find"]
CALLS: ["old_blob", "can_render_blob?", "new_blob", "can_render_blob?"]
CALLS: ["nil?", "binary?", "binary?", "extensions", "extension", "include?", "file_types", "file_type", "include?"]
CALLS: ["path", "basename", "path", "type_of", "type_of"]
CALLS: ["binary?", "binary?", "extensions", "extension", "include?", "file_types", "file_type", "include?"]
CALLS: ["simple_viewer_class", "new"]
CALLS: ["empty?", "raw_binary?"]
CALLS: ["stored_externally?", "rich_viewer", "rich_viewer", "binary?", "name", "find_by_extension", "any?", "_mime_type", "_mime_type", "binary?", "binary?"]
CALLS: ["present?", "split", "count", "count", "first", "join", "empty?", "join", "empty?", "count", "last", "include?", "each"]
CALLS: ["empty?", "raw_binary?", "stored_externally?", "sprite_icon", "icon", "blob_raw_path"]
CALLS: ["blob_raw_url"]
CALLS: ["path", "raw_project_job_artifacts_url", "project_id", "raw_project_snippet_url", "raw_snippet_url", "project_raw_url"]
CALLS: ["rendered_as_text?", "id", "clipboard_button"]
CALLS: ["simple_viewer", "is_a?", "simple_viewer", "render_error", "nil?"]
CALLS: []
CALLS: ["diff_file", "stored_externally?"]
CALLS: ["too_large?"]
CALLS: ["diff_file", "too_large?", "size_limit", "diff_file", "raw_size", "size_limit"]
CALLS: ["size_limit", "blob", "raw_size", "size_limit"]
CALLS: []
CALLS: ["blob", "stored_externally?"]
CALLS: ["project", "has_external_wiki?", "project", "wiki_enabled?", "project", "wiki", "has_home_page?"]
CALLS: ["find_page"]
CALLS: ["license"]
CALLS: ["license_key", "license_key", "new"]
CALLS: ["exists?", "raw_repository", "license_short_name"]
CALLS: ["repository", "license", "nickname", "name"]
CALLS: ["project", "repository", "license"]
CALLS: ["project", "repository", "tag_count"]
CALLS: ["too_large?", "collapsed?"]
CALLS: ["active?"]
CALLS: ["resolved?"]
CALLS: ["resolvable?", "resolved_at", "present?"]
CALLS: ["resolvable?", "notes", "none?", "strong_memoize"]
CALLS: ["diff_file", "collapsed?", "diff_file", "expanded?", "collapse_limit", "diff_file", "raw_size", "collapse_limit"]
CALLS: ["collapsed?"]
CALLS: []
CALLS: ["blob", "expanded?", "collapse_limit", "blob", "raw_size", "collapse_limit"]
CALLS: ["errors", "full_messages", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["errors", "full_messages"]
CALLS: ["clipboard_button"]
CALLS: ["params", "expand!"]
CALLS: []
CALLS: ["blob_json", "render_404"]
CALLS: ["params", "rich_viewer", "auxiliary_viewer", "simple_viewer", "view_to_html_string"]
CALLS: ["auxiliary_viewer_class", "new"]
CALLS: ["viewer_class_from"]
CALLS: ["find_model", "strong_memoize"]
CALLS: ["params", "upload_model_class", "params", "find"]
CALLS: ["params", "raise"]
CALLS: []
CALLS: []
CALLS: ["params", "params", "find_by_full_path"]
CALLS: ["params", "find_by_full_path"]
CALLS: []
CALLS: ["schedule_background_upload?", "class", "name", "model", "class", "name", "mounted_as", "model", "id", "perform_async"]
CALLS: ["class", "object_store_enabled?", "class", "background_upload_enabled?", "file_storage?"]
CALLS: ["object_store_options", "background_upload"]
CALLS: ["any?", "send", "schedule_background_upload", "each", "run_after_commit"]
CALLS: ["any?", "send", "schedule_background_upload", "each", "run_after_commit"]
CALLS: ["schedule_background_upload?", "upload", "class", "name", "upload", "class", "to_s", "mounted_as", "upload", "id", "perform_async"]
CALLS: ["model", "secret", "new"]
CALLS: ["model", "update_field", "read_attribute", "temp_file_uploader", "markdown_link", "uploader", "markdown_link", "gsub", "model", "update_field", "update_attribute", "revert"]
CALLS: ["logger", "model", "warn", "file_path", "temp_file_path", "move"]
CALLS: ["uploader", "file_name", "retrieve_from_store!", "uploader", "file", "path"]
CALLS: ["store_dirs", "join", "map", "model", "current_upload_satisfies?", "upload", "uploads", "model", "find_by"]
CALLS: ["upload", "upload", "path", "include?", "upload", "model_id", "id", "upload", "model_type", "class", "base_class", "sti_name"]
CALLS: []
CALLS: ["upload", "upload", "path", "include?", "upload", "model_id", "id", "upload", "model_type", "class", "base_class", "sti_name"]
CALLS: ["store_dirs", "join", "map", "model", "current_upload_satisfies?", "upload", "uploads", "model", "find_by"]
CALLS: ["temp_file_uploader", "file_name", "retrieve_from_store!", "temp_file_uploader", "file", "path"]
CALLS: ["secret", "new"]
CALLS: ["project", "raw_repository", "raw", "repository", "raw_repository", "revert", "with_cache_hooks"]
CALLS: ["assign_change_commit_vars", "blank?", "render_404", "create_new_branch?", "revert_branch_name", "current_user", "change_type_title", "successful_change_path", "failed_change_path", "create_commit", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["merged_merge_request?"]
CALLS: ["merged_merge_request"]
CALLS: ["merged_merge_request_no_cache", "new"]
CALLS: ["merge_commit?", "project", "id", "new", "id", "find_by"]
CALLS: ["parents", "size"]
CALLS: ["parent_ids", "values_at", "compact"]
CALLS: ["parent_ids", "project", "lazy", "map"]
CALLS: ["short_id"]
CALLS: ["params"]
CALLS: ["referenced_merge_request_url", "params", "project_commit_url"]
CALLS: ["current_user", "merged_merge_request", "target_project", "project_merge_request_url"]
CALLS: ["referenced_merge_request_url", "project_commits_url"]
CALLS: ["params", "present?", "current_user", "can?"]
CALLS: ["file_path", "dirname", "mkdir_p", "temp_file_path", "file_path", "move"]
CALLS: ["params", "require", "params", "to_i", "params", "find", "issue", "current_user", "can_move?", "render_404", "project", "current_user", "new", "issue", "execute", "render_issue_json", "json", "respond_to", "render_conflict_response"]
CALLS: ["can?", "moved?", "persisted?", "project", "can?"]
CALLS: ["moved_to", "nil?"]
CALLS: []
CALLS: ["valid?", "serializer", "represent", "errors", "full_messages", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["html", "issuable", "human_class_name", "json", "respond_to"]
CALLS: ["uploader_mounted?", "model", "upload_mount", "public_send", "build_uploader_from_upload", "build_uploader_from_params", "strong_memoize"]
CALLS: ["build_uploader", "params", "retrieve_from_store!"]
CALLS: ["uploader_class", "model", "new", "upload", "identifier", "retrieve_from_store!", "tap"]
CALLS: ["uploader_class", "model", "new", "upload", "identifier", "retrieve_from_store!", "tap"]
CALLS: ["build_uploader", "send"]
CALLS: ["uploader_class", "model", "mount_point", "new", "upload", "identifier", "retrieve_from_store!", "tap"]
CALLS: ["to_sym"]
CALLS: ["params", "params", "uploader_class", "model", "params", "new", "model_valid?"]
CALLS: []
CALLS: ["model"]
CALLS: ["build_uploader", "params", "upload_paths", "uploader_class", "to_s", "find_by", "build_uploader"]
CALLS: ["secret", "join", "base_dir", "secret", "join"]
CALLS: ["upload_model_class", "upload_mount", "nil?"]
CALLS: ["params", "include?"]
CALLS: ["update", "execute_hooks"]
CALLS: ["delete", "execute_hooks"]
CALLS: ["current_user", "new", "new", "create", "execute_hooks"]
CALLS: ["current_user", "build", "execute_hooks", "execute_services"]
CALLS: ["services", "public_send", "async_execute", "each", "run_after_commit_or_now"]
CALLS: ["now", "parsed_url", "userinfo", "blank?", "hook", "url", "make_request", "make_request_with_auth", "hook_name", "hook", "url", "data", "now", "log_execution", "code", "to_s", "hook_name", "hook", "url", "data", "new", "now", "to_s", "log_execution", "logger", "error", "to_s"]
CALLS: ["hook", "is_a?", "hook", "hook_name", "build_headers", "format_response_headers", "safe_response_body", "code", "create"]
CALLS: ["body", "body", "encode"]
CALLS: ["note", "present?", "note", "note", "target", "title"]
CALLS: ["headers", "each_capitalized", "to_h"]
CALLS: ["singularize", "titleize", "hook", "token", "present?", "hook", "token", "remove_line_breaks", "tap"]
CALLS: ["hook", "url", "parsed_url", "userinfo", "gsub", "parsed_url", "user", "unescape", "parsed_url", "password", "unescape", "make_request"]
CALLS: ["data", "to_json", "hook_name", "build_headers", "hook", "enable_ssl_verification", "request_options", "post"]
CALLS: ["hook", "url", "parse"]
CALLS: ["path"]
CALLS: ["cycle_analytics", "events", "render_events"]
CALLS: ["domain", "verification_code", "present?", "domain", "domain", "error", "verification_enabled?", "dns_record_present?", "verify_domain!", "expired?", "disable_domain!", "unverify_domain!"]
CALLS: ["timeouts", "domain", "domain", "check", "domain", "verification_domain", "check", "open"]
CALLS: ["file_storage?", "path", "path", "open", "url", "url", "cached_size", "new"]
CALLS: ["model", "size", "present?", "model", "file_changed?", "model", "size", "size"]
CALLS: ["domain", "present?", "domain"]
CALLS: ["domain", "assign_attributes", "domain", "save!", "notify", "domain", "domain", "error"]
CALLS: ["domain", "verified?", "domain", "assign_attributes", "domain", "save!", "notify", "domain", "domain", "error"]
CALLS: ["verified_at"]
CALLS: ["emails_with_verified_status", "values", "any?"]
CALLS: ["domain", "enabled?", "domain", "unverified?", "domain", "enabled_until", "from_now", "compact", "max", "domain", "now", "assign_attributes", "domain", "save!", "notify", "notify", "success"]
CALLS: ["verified?"]
CALLS: ["validate", "error", "project", "repository", "branch_exists?", "error", "success", "message", "error"]
CALLS: ["token", "expired?", "token", "revoked?", "include_any_scope?"]
CALLS: ["blank?", "token", "scopes", "map", "is_a?", "new", "request", "sufficient?", "any?"]
CALLS: ["user_synced_attributes_metadata", "params", "user_synced_attributes_metadata", "read_only_attributes", "except!", "params", "any?", "params", "assign_attributes"]
CALLS: ["sync_profile_from_provider?", "synced?", "select"]
CALLS: ["block_given?", "persisted?", "assign_attributes", "save", "notify_success", "errors", "full_messages", "uniq", "join", "error"]
CALLS: ["notify_new_user", "success"]
CALLS: ["name", "email", "log_info", "notification_service", "new_user", "system_hook_service", "execute_hooks_for"]
CALLS: ["notifiable?", "identities", "any?", "mailer", "id", "new_user_email", "deliver_later"]
CALLS: ["find", "user_url", "notification_email", "subject", "mail"]
CALLS: ["logger", "project", "name", "project", "id", "info"]
CALLS: ["user", "id", "new", "try_obtain", "sleep", "execute_without_lease", "cancel"]
CALLS: ["current_authorizations_per_project", "fresh_access_levels_per_project", "access_level", "project_id", "each_with_object", "access_level", "user", "id", "each_with_object", "update_authorizations"]
CALLS: ["current_authorizations", "index_by"]
CALLS: ["user", "project_authorizations", "select"]
CALLS: ["fresh_authorizations", "project_id", "access_level", "each_with_object"]
CALLS: ["supports_nested_groups?", "user", "new", "calculate"]
CALLS: ["empty?", "empty?", "transaction_begin", "empty?", "user", "remove_project_authorizations", "empty?", "insert_authorizations", "transaction_end", "transaction", "user", "reload"]
CALLS: ["project_authorizations", "where", "delete_all"]
CALLS: ["connection", "quote", "map", "map", "connection", "')}\n      EOF", "execute", "each_slice"]
CALLS: ["user", "block_transition", "user", "transaction_begin", "user", "block", "migrate_records_in_transaction", "rollback", "user", "save!", "transaction_end", "transaction", "user", "reload"]
CALLS: ["user", "transaction_begin", "ghost", "migrate_records", "transaction_end", "transaction"]
CALLS: ["migrate_issues", "migrate_merge_requests", "migrate_notes", "migrate_abuse_reports", "migrate_award_emojis"]
CALLS: ["user", "award_emoji", "ghost_user", "id", "update_all"]
CALLS: ["user", "reported_abuse_reports", "ghost_user", "id", "update_all"]
CALLS: ["user", "notes", "ghost_user", "id", "update_all"]
CALLS: ["user", "merge_requests", "ghost_user", "id", "update_all", "user", "id", "where", "ghost_user", "id", "update_all"]
CALLS: ["user", "issues", "ghost_user", "id", "update_all", "user", "id", "where", "ghost_user", "id", "update_all"]
CALLS: ["where", "bio", "name", "unique_internal"]
CALLS: ["first", "create_unique_internal"]
CALLS: ["minute", "to_i", "new", "try_obtain", "sleep", "first", "uncached", "present?", "new", "find_by_username", "string", "sprintf", "find_by_email", "string", "build", "new", "execute", "cancel"]
CALLS: ["iwhere", "take"]
CALLS: ["postgresql?", "connection", "quote_table_name", "where", "each"]
CALLS: ["base_string", "increment_counter!", "base_string"]
CALLS: []
CALLS: ["respond_to?", "call"]
CALLS: ["fetch", "current_user", "allowed?", "current_user", "solo_owned_groups", "present?", "errors", "members", "run_callbacks", "find_each", "solo_owned_groups", "current_user", "new", "execute", "each", "namespace", "prepare_for_destroy", "personal_projects", "current_user", "legacy_storage?", "new", "execute", "each", "block_given?", "new", "execute", "destroy", "destroy"]
CALLS: ["active_external_issue_tracker?", "where", "update_all", "active_external_wiki?", "where", "update_all"]
CALLS: ["type"]
CALLS: ["issue_tracker?", "default"]
CALLS: ["category"]
CALLS: ["read_attribute", "to_sym"]
CALLS: ["owned_groups", "owners", "select"]
CALLS: ["group", "group", "owners", "project", "owner"]
CALLS: ["", "active", "where"]
CALLS: ["storage_version", "include?"]
CALLS: ["old_repository_storage_paths"]
CALLS: ["repository_storage_paths"]
CALLS: ["all_projects", "select", "to_a", "map", "unscoped"]
CALLS: ["full_path", "inside_path"]
CALLS: ["personal_projects", "visible_to_user", "personal_projects", "public_to_user"]
CALLS: ["contributed_projects", "visible_to_user", "contributed_projects", "public_to_user"]
CALLS: ["select", "contributions", "where", "now", "year", "where", "uniq", "reorder", "where"]
CALLS: ["where"]
CALLS: ["user", "new", "current_user", "execute"]
CALLS: ["current_user", "params", "new", "execute", "recently_sent_password_reset?", "generate_reset_token", "save", "notify_new_user"]
CALLS: ["reset_password_sent_at", "present?", "reset_password_sent_at", "minute", "ago"]
CALLS: ["token_generator", "class", "generate", "reset_password_token", "reset_password_sent_at", "now", "utc"]
CALLS: ["subject", "transaction_begin", "lookup", "create_record", "maximum_iid", "increment_and_save!", "transaction_end", "transaction"]
CALLS: ["init", "subject", "call"]
CALLS: ["subject", "transaction_begin", "scope", "usage_value", "maximum_iid", "create!", "transaction_end", "transaction", "lookup"]
CALLS: ["usages", "usage", "to_s"]
CALLS: ["scope", "usage_value", "find_by"]
CALLS: ["lock!", "last_value", "last_value", "max", "save!", "last_value"]
CALLS: ["generate", "params", "project_issues_path", "params", "project_merge_requests_path", "project_labels_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["board_parent", "current_user", "new", "board", "execute", "board", "lists", "movable", "serialize_as_json"]
CALLS: ["can_create_user?", "build_user_params", "new", "current_user", "admin?", "params", "generate_reset_token", "friendly_token", "password_length", "min", "first", "password", "password_confirmation", "params", "slice", "any?", "identities", "build"]
CALLS: ["current_user", "admin?", "params", "admin_create_params", "slice", "current_user", "id", "params", "merge!", "signup_params", "params", "slice", "nil?", "skip_user_confirmation_email_from_setting"]
CALLS: ["send_user_confirmation_email"]
CALLS: []
CALLS: []
CALLS: ["current_user", "nil?", "allow_signup?", "current_user", "admin?"]
CALLS: ["is_a?", "record_activity"]
CALLS: ["read_write?", "id", "record", "logger", "id", "username", "debug"]
CALLS: ["reply_key", "is_a?", "id", "id", "project", "class", "name", "reverse_merge!", "create"]
CALLS: ["map", "bulk_perform_and_wait", "bulk_perform_async"]
CALLS: ["size", "bulk_perform_inline", "size", "new", "key", "map", "bulk_perform_async", "wait"]
CALLS: ["new", "perform", "each", "present?", "bulk_perform_async"]
CALLS: ["find", "with_indifferent_access", "new", "execute"]
CALLS: ["find_by_id", "provider", "gcp?", "new", "execute", "try", "try"]
CALLS: ["find", "calculate_checksum!", "save!", "logger", "error"]
CALLS: ["checksum", "checksummable?", "checksum", "class", "absolute_path", "hexdigest"]
CALLS: ["checksum", "nil?", "local?", "exist?"]
CALLS: ["store", "nil?", "store"]
CALLS: ["absolute_path", "exist?"]
CALLS: ["store", "nil?", "store"]
CALLS: ["absolute_path", "exist?"]
CALLS: ["store", "nil?", "store"]
CALLS: ["absolute_path", "exist?"]
CALLS: ["local?", "relative_path?", "path", "uploader_class", "absolute_path"]
CALLS: ["path", "start_with?"]
CALLS: ["path", "start_with?"]
CALLS: ["path", "start_with?"]
CALLS: ["checksum", "nil?", "local?", "exist?"]
CALLS: ["local?", "relative_path?", "path", "uploader_class", "absolute_path"]
CALLS: ["root", "path", "join"]
CALLS: ["class", "absolute_path"]
CALLS: ["checksum", "nil?", "local?", "exist?"]
CALLS: ["local?", "relative_path?", "path", "uploader_class", "absolute_path"]
CALLS: ["checksum", "checksummable?", "checksum", "class", "absolute_path", "hexdigest"]
CALLS: ["checksum", "checksummable?", "checksum", "absolute_path", "file", "hexdigest"]
CALLS: ["cast_data", "keys", "length", "where", "to_a", "flatten", "update_all", "new", "delete"]
CALLS: ["to_i", "to_i", "at", "to_s", "each_with_object"]
CALLS: ["find_by", "find_by", "new", "execute", "measure", "real", "join", "real", "logger", "info"]
CALLS: ["find", "source_project", "source_branch", "where", "last", "latest?", "diff_head_sha", "sha", "log_error_message_for", "id", "update_attribute"]
CALLS: ["logger", "id", "source_branch", "diff_head_sha", "error"]
CALLS: ["sha", "latest_sha"]
CALLS: ["project", "build", "ref", "commit", "try", "to_s", "project", "cleanup"]
CALLS: ["cleanup"]
CALLS: ["cleanup"]
CALLS: ["historical?"]
CALLS: ["historical?", "last_version", "sha", "version", "sha"]
CALLS: ["id", "merge_request", "latest_merge_request_diff_id"]
CALLS: ["ref", "commit", "present?", "project", "ref", "commit", "commit"]
CALLS: ["retried?"]
CALLS: ["logger", "info", "refresh!"]
CALLS: ["transaction_begin", "delete_all", "connection", "months", "ago", "quote", "connection", "T};\n      EOF", "execute", "transaction_end", "transaction"]
CALLS: ["blank?", "include?", "public_send", "each", "save!"]
CALLS: ["new", "execute_hooks"]
CALLS: ["stuck_merge_requests", "map", "completed_jids", "any?", "merge_jid", "include?", "select", "map", "apply_current_state!", "find_in_batches"]
CALLS: ["select", "with_state", "where", "not", "reorder"]
CALLS: ["where", "where", "not", "update_all", "where", "each", "logger", "join", "info"]
CALLS: ["mark_projects_without_jid_as_failed!", "mark_projects_with_jid_as_failed!", "add_event"]
CALLS: ["enqueued_projects_with_jid", "pluck", "to_h", "keys", "completed_jids", "any?", "values_at", "enqueued_projects_with_jid", "where", "logger", "map", "join", "info", "error_message", "mark_import_as_failed", "each", "count"]
CALLS: []
CALLS: ["enqueued_projects", "where", "not"]
CALLS: ["with_import_status"]
CALLS: ["enqueued_projects_without_jid", "error_message", "mark_import_as_failed", "each", "count"]
CALLS: ["enqueued_projects", "where"]
CALLS: ["try_obtain_lease", "logger", "class", "info", "remove_lease"]
CALLS: ["cancel"]
CALLS: ["minutes", "new", "try_obtain"]
CALLS: ["hours", "new", "try_obtain"]
CALLS: ["new", "try_obtain"]
CALLS: ["new", "try_obtain"]
CALLS: ["lease_key", "new", "try_obtain", "measure"]
CALLS: []
CALLS: ["id"]
CALLS: ["app", "id", "new", "try_obtain"]
CALLS: ["build_relation", "with_route", "logger", "full_path", "id", "info", "migrate_to_hashed_storage!", "logger", "message", "full_path", "id", "backtrace", "error", "find_each"]
CALLS: ["arel_table", "gteq", "where", "lteq", "where"]
CALLS: ["hashed_storage?", "update!", "repo_reference_count", "wiki_reference_count", "id", "perform_in", "id", "perform_async"]
CALLS: ["reference_counter", "value"]
CALLS: ["gl_repository", "new"]
CALLS: ["reference_counter", "value"]
CALLS: ["find_by", "update_status", "try"]
CALLS: ["statuses", "latest", "status", "enqueue", "run", "succeed", "drop", "cancel", "block", "skip", "skip", "retry_optimistic_lock"]
CALLS: ["search"]
CALLS: ["popen"]
CALLS: ["two_factor_grace_period_expired?", "new_profile_two_factor_auth_path", "session", "current_user", "otp_grace_period_started_at", "two_factor_grace_period", "hours", "root_path", "header_title", "profile_path"]
CALLS: ["current_user", "otp_grace_period_started_at", "two_factor_grace_period", "hours", "current"]
CALLS: ["latest_builds_status", "enqueue", "run", "succeed", "drop", "cancel", "skip", "block", "retry_optimistic_lock"]
CALLS: ["yaml_errors", "blank?", "statuses", "latest", "status"]
CALLS: ["new", "perform_async", "each_slice"]
CALLS: ["find_by", "find_by", "run_pipeline_schedule"]
CALLS: ["project", "ref", "new", "execute"]
CALLS: ["remove_all_profiles"]
CALLS: ["find", "start_import", "import_url", "full_path", "add_event", "creator", "new", "execute", "async?", "gitlab_project_import?", "fail_import", "after_import"]
CALLS: ["mark_import_as_failed"]
CALLS: ["start", "logger", "full_path", "import_status", "info"]
CALLS: ["import_started?", "import_jid", "jid", "import_start"]
CALLS: ["has_importer?", "importer_class", "try"]
CALLS: ["expire_content_cache"]
CALLS: ["repository", "after_import", "import_finish", "remove_import_jid", "update_project_counter_caches", "after_create_default_branch", "refresh_markdown_cache!"]
CALLS: ["import_jid", "import_jid", "unset", "update_column"]
CALLS: ["default_branch", "default_branch", "change_head", "default_branch_protection", "default_branch", "protected?", "default_branch", "default_branch_protection", "default_branch_protection", "creator", "new", "execute"]
CALLS: ["repository", "branch_exists?", "repository", "before_change_head", "repository", "raw_repository", "write_ref", "repository", "copy_gitattributes", "repository", "after_change_head", "reload_default_branch", "errors", "add"]
CALLS: ["root_ref", "raw_repository", "copy_gitattributes"]
CALLS: ["keys", "expire_method_caches"]
CALLS: ["expire_branch_cache", "expire_root_ref_cache", "repository_event"]
CALLS: ["root_ref", "branches", "cache", "name", "expire", "cache", "name", "expire", "each", "cache", "expire", "cache", "expire"]
CALLS: ["cache", "delete"]
CALLS: ["default_branch"]
CALLS: ["refresh_markdown_cache", "persisted?", "read_write?", "update_columns"]
CALLS: ["shift", "find", "empty?", "forked_from_project", "mark_import_as_failed", "repository_storage", "disk_path", "fork_repository", "logger", "id", "info", "config", "repositories", "storages", "legacy_disk_path", "find", "first", "raise", "fork_repository"]
CALLS: ["start_fork", "disk_path", "add_event", "gitlab_shell", "repository_storage", "disk_path", "fork_repository", "id", "disk_path", "after_import"]
CALLS: ["start", "logger", "full_path", "import_status", "info"]
CALLS: ["find", "check", "now", "update_columns"]
CALLS: ["select", "map", "where", "update_all", "find_in_batches"]
CALLS: ["now", "project_ids", "now", "current_settings", "repository_checks_enabled", "try_obtain_lease", "new", "perform", "each"]
CALLS: ["env", "test?", "fake_application_settings", "current"]
CALLS: ["new", "execute"]
CALLS: ["destroy_unreferenced"]
CALLS: ["table_name", "joins", "where", "destroy_all"]
CALLS: ["now", "destroy_all"]
CALLS: ["expired", "new", "execute", "logger", "id", "error", "find_each"]
CALLS: ["", "current", "where"]
CALLS: ["expired", "destroy_all"]
CALLS: ["find", "find", "source_project", "new", "execute"]
CALLS: ["const_get", "find_by", "try"]
CALLS: ["unscoped", "unscoped", "months", "day", "ago", "where", "select", "limit", "where", "delete_all"]
CALLS: ["try_obtain_lease_for", "find_by", "propagate"]
CALLS: ["new", "try_obtain"]
CALLS: ["new", "try_obtain"]
CALLS: ["hash", "new", "try_obtain"]
CALLS: ["active?", "logger", "id", "info", "propagate_projects_with_template"]
CALLS: ["project_ids_batch", "empty?", "bulk_create_from_template", "size", "loop"]
CALLS: ["connection", "select_values"]
CALLS: ["service_hash", "values", "map", "transaction_begin", "service_hash", "keys", "bulk_insert_services", "run_callbacks", "transaction_end", "transaction"]
CALLS: ["as_json", "except", "is_a?", "to_json", "connection", "quote_column_name", "sanitize", "each_with_object"]
CALLS: ["connection", "')}\n      SQL", "execute"]
CALLS: ["with_indifferent_access", "find", "execute"]
CALLS: ["find_by", "nil?", "pending_delete?", "lease_for", "try_obtain", "logger", "new", "execute", "cancel_lease_for"]
CALLS: ["lease_key", "cancel"]
CALLS: ["lease_key", "new"]
CALLS: ["class", "name", "new"]
CALLS: ["find", "find", "build!", "new", "execute"]
CALLS: ["find", "find", "symbolize_keys", "new", "execute", "logger", "message", "error"]
CALLS: ["find_by", "repository", "exists?", "map", "update_statistics", "repository", "map", "refresh_method_caches", "cleanup"]
CALLS: ["id", "try_obtain_lease_for", "logger", "id", "info", "statistics", "refresh!"]
CALLS: ["to_sym", "concat", "each", "expire_method_caches", "send", "each"]
CALLS: ["find_by", "commit_exists_in_upstream?", "find_by", "build_commit", "author", "process_commit_message", "update_issue_metrics"]
CALLS: ["forked?", "forked_from_project", "with_indifferent_access", "commit", "present?"]
CALLS: ["to_s", "end_with?", "is_a?", "parse", "each", "from_hash"]
CALLS: ["all_references", "issues", "empty?", "map", "where", "committed_date", "update_all"]
CALLS: ["merged_merge_request?", "closes_issues", "any?", "close_issues", "create_cross_references!"]
CALLS: ["new", "updatable_by_user", "new", "close_issue", "each"]
CALLS: ["mark_pending_todos_as_done"]
CALLS: ["close_resource_email"]
CALLS: ["new", "execute"]
CALLS: ["project", "jira_tracker?", "project", "jira_service", "active", "is_a?", "project", "jira_service", "close_issue", "todo_service", "current_user", "close_issue", "project", "issues_enabled?", "close", "current_user", "update", "event_service", "current_user", "close_issue", "create_note", "notification_service", "current_user", "close_issue", "todo_service", "current_user", "close_issue", "execute_hooks", "assignees", "invalidate_cache_counts", "update_project_counter_caches"]
CALLS: ["issues_tracker", "to_param"]
CALLS: ["config", "issues_tracker", "to_param"]
CALLS: ["external_issue_tracker", "external_issue_tracker", "default_issue_tracker"]
CALLS: ["gitlab_issue_tracker_service", "create_gitlab_issue_tracker_service"]
CALLS: ["create_record_event"]
CALLS: ["client", "iid", "find", "jira_request", "nil?", "has_resolution?", "jira_issue_transition_id", "present?", "is_a?", "id", "is_a?", "diff_head_sha", "build_entity_url", "transition_issue", "client", "key", "find", "jira_request", "has_resolution?", "add_issue_solved_comment"]
CALLS: ["message", "logger", "class", "name", "client_url", "info"]
CALLS: ["project", "namespace", "becomes", "project", "to_sym", "gitlab", "base_url", "polymorphic_url"]
CALLS: ["respond_to?", "resolution", "present?"]
CALLS: ["build_remote_link_props", "send_message"]
CALLS: ["gitlab_config", "url", "asset_url"]
CALLS: ["client_url", "present?", "find_remote_link", "save!", "comments", "build", "save!", "remotelink", "build", "save!", "class", "name", "client_url", "logger", "info", "jira_request"]
CALLS: ["remotelink", "all", "jira_request", "object", "find"]
CALLS: ["transitions", "build", "jira_issue_transition_id", "save"]
CALLS: ["admin?", "collection", "project_ids", "projects_with_reporter_access_limited_to", "pluck", "collection", "project_id", "include?", "is_a?", "assignee_or_author?", "select"]
CALLS: ["authorized_projects", "where"]
CALLS: ["author_id", "id", "assignee_id", "id"]
CALLS: ["author_id", "id", "assignees", "id", "exists?"]
CALLS: ["target_branch", "project", "default_branch", "current_user", "closes_issues", "current_user", "can?", "project", "current_user", "new", "execute", "each"]
CALLS: ["author", "referenced_mentionables", "include?", "cross_reference_exists?", "reject!", "local_reference", "cross_reference", "each"]
CALLS: ["notes", "system", "notes_for_mentioner", "exists?"]
CALLS: ["is_a?", "cross_reference_note_prefix", "to_reference", "capitalize", "where", "project", "group", "gfm_reference", "cross_reference_note_content", "capitalize", "where"]
CALLS: ["cross_reference_note_prefix"]
CALLS: ["", "where"]
CALLS: ["cross_reference_disallowed?", "project", "group", "gfm_reference", "cross_reference_note_content", "is_a?", "project", "issues_tracker", "create_cross_reference_note", "project", "new", "create_note"]
CALLS: ["is_a?", "project", "jira_tracker_active?", "is_a?", "is_a?", "commits", "include?"]
CALLS: ["jira_tracker?", "jira_service", "active"]
CALLS: ["can_cross_reference?", "model_name", "plural", "humanize", "client", "id", "find", "jira_request", "present?", "respond_to?", "iid", "id", "noteable_name", "build_entity_url", "name", "user_path", "resource_url", "project", "full_path", "project", "namespace", "project", "namespace_project_path", "resource_url", "humanize", "downcase", "title", "add_comment"]
CALLS: ["model_name", "singular"]
CALLS: ["gitlab", "base_url", "chomp"]
CALLS: ["chomp", "build_remote_link_props", "comment_exists?", "send_message"]
CALLS: ["comments", "jira_request", "present?", "body", "include?", "any?"]
CALLS: ["commit_events", "merge_requests_events"]
CALLS: ["local_reference", "cross_reference_exists?"]
CALLS: ["parse", "nil?", "log", "include?", "decode64", "logger", "inspect", "info", "new", "process_wiki_changes", "process_project_changes"]
CALLS: ["error"]
CALLS: ["project", "touch"]
CALLS: ["new", "identify", "identifier", "log", "tag_ref?", "project", "new", "execute", "branch_ref?", "project", "new", "execute", "single_change", "changes_refs", "to_a", "after_project_changes_hooks"]
CALLS: ["project", "update", "new", "execute_hooks"]
CALLS: ["execute", "error"]
CALLS: ["find_by", "try"]
CALLS: ["find_by", "project", "new", "trigger", "try"]
CALLS: ["active", "now", "where", "preload", "project", "owner", "ref", "new", "execute", "persisted?", "deactivate!", "logger", "id", "message", "error", "schedule_next_run!", "find_each"]
CALLS: ["save!", "update_attribute"]
CALLS: ["update_attribute"]
CALLS: ["find_by", "try"]
CALLS: ["find_by", "new", "pipeline_finished"]
CALLS: ["status", "mailer", "respond_to?", "user", "status", "notifiable_users", "map", "any?", "mailer", "public_send", "deliver_later"]
CALLS: ["notifiable_users"]
CALLS: ["compact", "new", "map", "select", "map"]
CALLS: ["find_by", "active?", "update_metrics_for_active_pipeline", "success?", "update_metrics_for_succeeded_pipeline", "try"]
CALLS: ["metrics", "started_at", "finished_at", "id", "update_all"]
CALLS: ["metrics", "started_at", "id", "update_all"]
CALLS: ["find_by", "try"]
CALLS: ["send"]
CALLS: ["find_by", "new", "execute"]
CALLS: ["needs_verification", "id", "perform_async", "find_each"]
CALLS: ["", "arel_table", "arel_table", "now", "eq", "eq", "lt", "or", "or", "where"]
CALLS: ["constantize", "constantize", "object_store_enabled?", "background_upload_enabled?", "find", "public_send", "migrate!"]
CALLS: ["unsafe_migrate!", "with_exclusive_lease"]
CALLS: ["object_store", "file", "file", "object_store", "object_store", "file_storage?", "cache_stored_file!", "storage", "file", "store!", "persist_object_store!", "file", "with_callbacks", "with_callbacks", "file", "nil?", "delete", "object_store", "file"]
CALLS: ["class", "object_store_enabled?", "class", "direct_upload_enabled?", "object_store"]
CALLS: ["object_store_options", "direct_upload"]
CALLS: ["persist_object_store?", "model", "store_serialization_column", "object_store", "update_column"]
CALLS: ["model", "store_serialization_column", "respond_to?"]
CALLS: ["args_check!", "constantize", "to_sym", "preload", "where", "sanity_check!", "migrate", "report!", "logger", "class", "message", "warn"]
CALLS: ["build_uploaders", "method", "map"]
CALLS: ["build_uploader", "map"]
CALLS: ["count", "count"]
CALLS: ["class", "sanity_check!"]
CALLS: ["partition", "logger", "header", "info", "logger", "failures", "warn", "any?", "map", "new"]
CALLS: ["map", "join"]
CALLS: ["count", "count", "count"]
CALLS: ["statuses", "latest", "failed", "present?", "render_show", "pipeline_path"]
CALLS: ["", "where"]
CALLS: ["project", "id", "project_pipeline_path"]
CALLS: ["constantize", "constantize", "object_store_enabled?", "background_upload_enabled?", "find", "to_sym", "build_uploader", "migrate!"]
CALLS: ["find_by", "can_create_notification?", "new", "new_note", "new", "execute", "logger", "error"]
CALLS: ["handle_note"]
CALLS: ["can_create_todo?", "project", "noteable", "mark_pending_todos_as_done", "create_mention_todos"]
CALLS: ["system?", "for_snippet?"]
CALLS: ["noteable_type", "end_with?"]
CALLS: ["noteable_type"]
CALLS: ["noteable_type", "present?", "cross_reference?", "system?", "to_ability_name", "to_sym", "build_new_note_recipients", "mailer", "user", "id", "id", "send", "deliver_later", "each"]
CALLS: ["new", "notification_recipients"]
CALLS: []
CALLS: ["objects_found?", "new", "issuable", "user", "open_mr", "new", "issuable", "user", "new_merge_request", "issuable", "user", "create_cross_references!"]
CALLS: ["set_user", "set_issuable", "user", "issuable"]
CALLS: ["issuable_class", "find_by", "issuable_class", "log_error"]
CALLS: []
CALLS: []
CALLS: ["create_record_event"]
CALLS: ["objects_found?", "new", "issuable", "user", "open_issue", "new", "issuable", "user", "new_issue", "issuable", "user", "create_cross_references!"]
CALLS: ["create_record_event"]
CALLS: ["unscoped", "find", "namespace", "team", "truncate", "forked?", "unlink_fork", "destroy!"]
CALLS: ["forked_from_project", "merge_requests", "opened", "from_project", "update_all", "forked_project_link", "destroy"]
CALLS: ["", "id", "where"]
CALLS: ["with_indifferent_access", "find", "find", "target_project", "new", "execute"]
CALLS: ["new", "opened", "due_tomorrow", "in_projects", "preload", "issue_due", "find_each"]
CALLS: ["author", "build_recipients", "mailer", "user", "id", "id", "reason", "send", "deliver_later", "each"]
CALLS: ["", "tomorrow", "where"]
CALLS: ["opened", "due_tomorrow", "group", "pluck", "map", "bulk_perform_async"]
CALLS: ["find", "gsub", "close_connection"]
CALLS: ["close"]
CALLS: ["find_by", "new", "run"]
CALLS: ["new", "execute"]
CALLS: ["find", "find", "new", "execute"]
CALLS: ["try_obtain_lease", "new", "execute"]
CALLS: ["gitlab_shell", "__send__"]
CALLS: ["find_project", "running?", "refresh_import_jid_expiration", "class", "perform_in_the_future"]
CALLS: ["select", "import_started", "find_by"]
CALLS: ["", "where"]
CALLS: ["perform_in"]
CALLS: ["select", "import_started", "find_by"]
CALLS: ["import_started", "find_by"]
CALLS: ["import_jid", "import_jid", "set"]
CALLS: ["find_project", "wait_for_jobs", "empty?", "refresh_import_jid_expiration", "to_sym", "fetch", "perform_async", "class", "perform_in"]
CALLS: ["new", "wait", "jobs_remaining", "positive?", "key", "jobs_remaining", "each_with_object"]
CALLS: ["find", "get_lease_uuid", "renew_lease", "try_obtain_lease", "to_sym", "command", "repository", "raw_repository", "gitaly_call", "repository", "path_to_repo", "join", "info", "popen", "zero?", "error", "gitaly_migrate", "flush_ref_caches", "cleanup", "present?", "present?", "cancel_lease"]
CALLS: ["migrate", "error", "new", "error", "new"]
CALLS: ["repository", "after_create_branch", "repository", "branch_names", "repository", "has_visible_content?"]
CALLS: ["expire_branches_cache", "repository_event"]
CALLS: ["new", "bitmaps_enabled?", "garbage_collect", "bitmaps_enabled?", "repack_full", "repack_incremental"]
CALLS: ["get_uuid"]
CALLS: ["cancel"]
CALLS: ["new", "renew"]
CALLS: ["repository_storage_path", "disk_path", "join", "expand_path"]
CALLS: ["find_by", "project", "new", "project_pipelines_path", "touch", "project_pipeline_path", "touch", "commit", "nil?", "commit", "commit_pipelines_path", "touch", "new_merge_request_pipelines_path", "touch", "touch", "each_pipelines_merge_request_path", "update_for_pipeline"]
CALLS: ["all_merge_requests", "url_helpers", "pipelines_project_merge_request_path", "each"]
CALLS: ["project", "merge_requests", "ref", "where"]
CALLS: ["url_helpers", "project_new_merge_request_path"]
CALLS: ["url_helpers", "id", "pipelines_project_commit_path"]
CALLS: ["joins", "find_by", "pipeline", "project", "new", "project_pipeline_path", "touch", "project_job_path", "touch", "tap"]
CALLS: ["with_expired_artifacts", "reorder", "find_by", "project", "project", "pending_delete", "logger", "id", "info", "erase_artifacts!"]
CALLS: ["", "where"]
CALLS: ["", "with_artifacts_archive", "now", "where"]
CALLS: ["logger", "info", "with_expired_artifacts", "pluck", "map", "bulk_perform_async"]
CALLS: ["symbolize_keys!", "reverse_merge!", "find", "blank_ref?", "blank_ref?", "new", "execute", "diff_refs", "same", "commits", "empty?", "new", "execute", "diff_refs", "commits", "empty?", "split", "send_email", "logger", "full_name", "info", "each", "start"]
CALLS: ["email", "present?", "repository_push_email", "email", "to", "email", "add_message_id", "skip_premailer", "email", "header", "email", "deliver_now"]
CALLS: ["new", "target_url", "find", "add_project_headers", "headers", "author_username", "author_id", "send_from_committer_email?", "sender", "reply_to", "subject", "mail"]
CALLS: ["send_from_committer_email", "to_boolean"]
CALLS: ["headers", "name", "headers", "id", "headers", "full_path"]
CALLS: ["find", "default_sender_address", "display_name", "name", "can_send_from_user_email?", "address", "email", "format"]
CALLS: ["description", "blank?", "short_sha", "description"]
CALLS: ["sha", "truncate_sha"]
CALLS: []
CALLS: []
CALLS: ["truncate_sha"]
CALLS: ["token", "token"]
CALLS: ["sha", "truncate_sha"]
CALLS: ["truncate_sha"]
CALLS: ["email", "split", "last", "class", "allowed_email_domains", "include?"]
CALLS: ["config", "gitlab", "host", "split", "length", "tld_length", "join", "shift"]
CALLS: ["config", "gitlab", "email_from", "new", "display_name", "config", "gitlab", "email_display_name"]
CALLS: ["enabled?", "new", "execute", "handle_failure"]
CALLS: ["logger", "warn", "present?", "message", "rejection", "deliver_later"]
CALLS: ["new", "from", "from", "subject", "hex", "config", "gitlab", "host", "message_id", "message_id", "to", "first", "mail"]
CALLS: ["class", "model_name", "singular_route_key", "id", "config", "gitlab", "host"]
CALLS: ["find", "find", "new", "symbolize_keys", "execute", "logger", "warn"]
CALLS: ["find", "find", "new", "execute"]
CALLS: ["find", "find", "deep_symbolize_keys", "new", "execute"]
CALLS: ["find_by", "commit", "new", "signature"]
CALLS: ["gpg_commit", "signature"]
CALLS: ["commit", "commit", "new"]
CALLS: ["last", "key?", "pop", "", "jid", "notify"]
CALLS: ["find_project", "new_client_for", "try_import"]
CALLS: ["import", "class", "rate_limit_resets_in", "id", "perform_in"]
CALLS: ["id", "jid", "perform_in_the_future", "new", "execute", "counter", "increment", "id", "perform_async"]
CALLS: ["new", "execute", "refresh_import_jid_expiration", "id", "key", "jobs_remaining", "perform_async"]
CALLS: ["new", "execute", "id", "key", "jobs_remaining", "perform_async"]
CALLS: ["new", "execute", "key", "jobs_remaining", "each_with_object", "id", "perform_async"]
CALLS: ["new", "execute", "each", "refresh_import_jid_expiration", "id", "perform_async"]
CALLS: ["after_import", "report_import_time"]
CALLS: ["zone", "now", "created_at", "full_path", "histogram", "observe", "counter", "increment", "logger", "round", "info"]
CALLS: ["histogram"]
CALLS: ["representation_class", "from_json_hash", "importer_class", "new", "execute", "counter", "full_path", "increment"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["project", "project_members", "to_a", "project_members", "pluck", "invite?", "user_id", "include?", "reject!", "dup", "id", "source", "created_by", "map!", "transaction_begin", "save", "each", "transaction_end", "transaction"]
CALLS: ["invite_token", "present?"]
CALLS: ["current_user", "authorized_projects", "order_id_desc", "apply_import_project_project_members_path", "options_from_collection_for_select", "select_tag", "project_project_members_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["import"]
CALLS: ["find_by", "notify_waiter", "new_client_for", "try_import", "notify_waiter", "class", "rate_limit_resets_in", "id", "perform_in"]
CALLS: ["jid", "notify"]
CALLS: ["new", "execute", "find_application"]
CALLS: ["find", "try"]
CALLS: ["new", "execute", "find_application"]
CALLS: ["find_by_id", "provider", "gcp?", "new", "execute", "try", "try"]
CALLS: ["new", "execute", "find_application"]
CALLS: ["class", "get_session_token", "try_obtain_lease_for", "new", "execute", "empty?", "class", "get_billing_state", "update_billing_change_counter", "class", "set_billing_state"]
CALLS: ["billing_changed_counter", "state_transition", "increment"]
CALLS: ["nil?", "nil?"]
CALLS: ["counter"]
CALLS: ["redis_shared_state_key_for", "set", "with"]
CALLS: ["hexdigest"]
CALLS: ["redis_shared_state_key_for", "get", "new", "type_cast_from_user", "with"]
CALLS: ["get_redis_session_key", "get", "with"]
CALLS: []
CALLS: ["find_by", "parse_trace_sections!"]
CALLS: ["project", "user", "new", "execute"]
CALLS: ["find_by", "has_environment?", "create_deployment", "try"]
CALLS: ["new", "execute"]
CALLS: ["find_by", "new", "execute", "try"]
CALLS: ["find_by", "try"]
CALLS: ["find_by", "new", "id", "perform", "new", "id", "perform", "id", "perform_async", "id", "perform_async", "try"]
CALLS: ["find_by", "update_coverage"]
CALLS: ["trace", "coverage_regex", "extract_coverage", "present?", "update_attributes"]
CALLS: ["project", "try"]
CALLS: ["perform_and_ttl", "perform", "class", "perform_in"]
CALLS: ["always_perform?", "lease_for", "try_obtain", "ttl"]
CALLS: ["env", "test?"]
CALLS: ["find_by", "refresh_authorized_projects"]
CALLS: ["new", "execute"]
CALLS: ["find_by", "trace", "archive!", "try"]
CALLS: ["where", "count", "zero?", "notify", "deliver_now"]
CALLS: ["push_bulk"]
CALLS: []
CALLS: ["size", "max_attachment_size", "new", "store!", "to_h"]
CALLS: ["max_attachment_size", "megabytes", "to_i"]
CALLS: ["max_attachment_size", "megabytes", "to_i"]
CALLS: ["params", "to_i", "snippet", "visibility_level", "current_user", "allowed_for?", "snippet", "deny_visibility_level", "snippet", "filter_spam_check_params", "snippet", "params", "assign_attributes", "snippet", "current_user", "spam_check", "snippet", "save"]
CALLS: ["params", "delete", "params", "delete", "params", "delete", "params", "delete"]
CALLS: ["visibility_level", "level_name", "downcase", "errors", "add"]
CALLS: ["project", "repository", "find_tag", "project", "releases", "find_by", "update_attributes", "success", "error", "error"]
CALLS: ["hook", "project"]
CALLS: ["hook", "class", "triggers", "trigger", "to_sym", "key", "trigger", "nil?", "respond_to?", "error", "__send__", "hook", "execute", "catch", "error"]
CALLS: ["project", "repository", "find_tag", "error", "current_user", "rm_tag", "project", "releases", "find_by", "destroy", "build_push_data", "new", "project", "current_user", "push", "project", "dup", "execute_hooks", "project", "dup", "execute_services", "success", "error", "message", "error"]
CALLS: ["project", "current_user", "dereferenced_target", "sha", "name", "build"]
CALLS: ["params", "blank_ref?", "params", "ref_name", "project", "repository", "find_tag", "target", "params", "project", "dereferenced_target", "commit", "compact", "message", "project", "current_user", "params", "params", "params", "build"]
CALLS: ["current_user", "params", "params", "params", "build"]
CALLS: ["project", "current_user", "dereferenced_target", "sha", "name", "build"]
CALLS: ["before_remove_tag", "raw_repository", "rm_tag", "after_remove_tag"]
CALLS: ["expire_tags_cache"]
CALLS: ["expire_tags_cache", "expire_statistics_caches", "repository_event"]
CALLS: ["validate", "error", "project", "repository", "strip!", "current_user", "add_tag", "error", "message", "error", "new", "execute", "success", "merge", "error"]
CALLS: ["raw_repository", "add_tag"]
CALLS: ["hooks_for", "async_execute", "find_each", "execute_all_async"]
CALLS: ["triggers", "keys", "include?", "none", "public_send"]
CALLS: ["usage_ping_enabled?", "to_json", "post", "store_metrics", "logger", "info"]
CALLS: ["present?", "slice", "create!"]
CALLS: ["params", "present?", "params", "find_by", "current_user", "can?"]
CALLS: ["current_user", "new", "execute", "params", "new"]
CALLS: ["current_user", "project", "params", "params", "new"]
CALLS: ["current_user", "projects", "params", "default_project_filter", "new"]
CALLS: ["increment!"]
CALLS: ["increment_pushes_since_gc", "measure"]
CALLS: ["pushes_since_gc_redis_shared_state_key", "incr", "with"]
CALLS: ["id"]
CALLS: ["path", "directory?", "clean_up_old_archives", "clean_up_empty_directories", "measure"]
CALLS: ["path", "path", "run"]
CALLS: ["path", "path", "mmin", "run"]
CALLS: ["ldap_hard_blocked?", "user", "block"]
CALLS: ["user", "ldap_blocked?", "user", "ldap_user?"]
CALLS: ["current_user", "can?", "extractor", "extract_commands", "extract_updates"]
CALLS: ["class", "definition_by_name", "execute", "each"]
CALLS: ["class", "command_definitions", "new"]
CALLS: ["supported?", "note", "project", "current_user", "new", "note", "noteable", "execute"]
CALLS: ["commit_count", "action", "ref_type", "commit_from_id", "commit_to_id", "trimmed_ref", "commit_title", "id", "build_push_event_payload", "push_event_payload", "save!", "push_event_payload"]
CALLS: ["commit"]
CALLS: ["ref", "tag_ref?"]
CALLS: ["ref", "ref_name"]
CALLS: ["fetch"]
CALLS: ["remove?", "revision_after"]
CALLS: ["create?", "revision_before"]
CALLS: ["fetch", "last", "index", "strip", "truncate"]
CALLS: ["root_ref", "raw_repository", "root_ref", "commit_count"]
CALLS: ["commit", "try"]
CALLS: ["current_user", "project", "can?", "params", "update"]
CALLS: ["destroy"]
CALLS: ["current_user", "project", "can?", "project", "protected_tags", "params", "create"]
CALLS: ["current_user", "can?", "params", "update"]
CALLS: ["params", "delete", "params", "delete", "transaction_begin", "delete_redundant_access_levels", "params", "params", "params", "params", "new", "execute", "transaction_end", "transaction"]
CALLS: ["nil?", "merge_access_levels", "destroy_all", "nil?", "push_access_levels", "destroy_all"]
CALLS: ["params", "delete", "params", "delete", "merge!", "new", "execute"]
CALLS: ["current_user", "can?", "destroy"]
CALLS: ["authorized?", "protected_branch", "save", "protected_branch"]
CALLS: ["project", "protected_branches", "params", "new"]
CALLS: ["current_user", "protected_branch", "can?"]
CALLS: ["project", "params", "valid_visibility_level_change?", "error", "renaming_project_with_container_registry_tags?", "error", "changing_default_branch?", "project", "params", "change_head", "error", "enabling_wiki?", "ensure_wiki_exists", "project", "params", "except", "update_attributes", "project", "previous_changes", "include?", "project", "rename_repo", "system_hook_service", "project", "execute_hooks_for", "changing_pages_https_only?", "update_pages_config", "success", "project", "errors", "full_messages", "to_sentence", "presence", "error"]
CALLS: ["project", "previous_changes", "include?"]
CALLS: ["project", "new", "execute"]
CALLS: ["project", "project", "owner", "new", "wiki", "project", "full_name", "log_error", "counter"]
CALLS: ["wiki_enabled?", "params", "dig", "to_i"]
CALLS: ["params", "project", "repository", "exists?", "project", "default_branch"]
CALLS: ["params", "project", "path", "project", "has_container_registry_tags?"]
CALLS: ["container_repositories", "to_a", "any?", "has_root_container_repository_tags?"]
CALLS: ["config", "registry", "enabled", "build_root_repository", "has_tags?"]
CALLS: ["new"]
CALLS: ["tags", "any?"]
CALLS: ["tag_list", "any?"]
CALLS: ["tag_list", "any?"]
CALLS: ["to_i", "visibility_level", "current_user", "can?", "current_user", "allowed_for?", "deny_visibility_level"]
CALLS: ["project", "build_full_path", "gitlab_shell", "repository_storage_path", "project", "full_path_was", "mv_repository", "gitlab_shell", "repository_storage_path", "project", "full_path_was", "mv_repository", "logger", "project", "full_path_was", "error"]
CALLS: ["gitlab_shell", "project", "repository_storage_path", "exists?", "gitlab_shell", "project", "repository_storage_path", "mv_repository"]
CALLS: []
CALLS: ["build_full_path", "logger", "full_path_was", "error", "has_container_registry_tags?", "logger", "full_path_was", "error", "new", "full_path_was", "expire_caches_before_rename", "storage", "rename_repo", "full_path_was", "info", "rename_repo_notify!", "after_rename_repo", "logger", "full_path_was", "error", "new"]
CALLS: ["started?", "full_path_was", "send_move_instructions", "expires_full_path_cache", "old_path_with_namespace", "full_path_was", "new", "execute_hooks_for", "reload_repository!"]
CALLS: ["new", "project_was_moved", "run_after_commit"]
CALLS: ["team", "members", "notifiable_users", "mailer", "id", "id", "project_was_moved_email", "deliver_later", "each"]
CALLS: ["find", "find", "project_url", "notification_email", "subject", "mail"]
CALLS: ["active?", "full_path_key", "delete"]
CALLS: ["write_repository_config", "previous_changes", "first", "hashed_storage?", "new", "path", "namespace", "full_path", "rename_project", "new", "path", "namespace", "full_path", "rename_project"]
CALLS: ["project", "write_repository_config"]
CALLS: ["full_path", "repository", "raw_repository", "write_config", "logger", "full_path", "id", "message", "error"]
CALLS: ["new", "new", "exists?", "before_delete", "exists?", "before_delete"]
CALLS: ["expire_exists_cache", "expire_all_method_caches", "exists?", "expire_branch_cache", "expire_content_cache", "repository_event"]
CALLS: ["expire_method_caches"]
CALLS: ["register_attempt", "create_status", "enqueue!", "run!", "build", "artifacts?", "latest?", "tmp_path", "mkdir_p", "tmp_path", "extract_archive!", "join", "exist?", "latest?", "deploy_page!", "success", "mktmpdir", "message", "error", "message", "error"]
CALLS: ["sanity_check!", "ids", "to_s", "perform_async"]
CALLS: ["pages_deployments_total_counter", "increment"]
CALLS: ["counter"]
CALLS: ["pages", "path", "join"]
CALLS: ["pages_path", "mkdir_p", "public_path", "previous_public_path", "move", "public_path", "move", "previous_public_path", "rm_r"]
CALLS: ["pages_path", "hex", "join"]
CALLS: ["pages_path", "join"]
CALLS: ["project", "pages_path"]
CALLS: ["project", "pages_path"]
CALLS: ["pages", "path", "full_path", "join"]
CALLS: ["artifacts", "ends_with?", "extract_zip_archive!"]
CALLS: ["build", "artifacts_file", "path"]
CALLS: ["job_artifacts_archive", "file", "legacy_artifacts_file"]
CALLS: ["build", "artifacts_file"]
CALLS: ["build", "artifacts_metadata?", "build", "artifacts_metadata_entry", "total_size", "max_size", "total_size", "join", "build", "artifacts_file", "system", "use_file"]
CALLS: ["max_pages_size", "megabytes", "zero?", "min"]
CALLS: ["artifacts?", "artifacts_metadata", "exists?"]
CALLS: ["statuses", "count"]
CALLS: ["options"]
CALLS: ["project", "build", "pipeline", "build", "user", "build", "ref", "new"]
CALLS: ["artifacts_expired?", "artifacts_file", "exists?"]
CALLS: ["artifacts_expire_at", "artifacts_expire_at", "now"]
CALLS: ["pages_config_file", "pages_config", "to_json", "update_file", "reload_daemon", "success", "message", "error"]
CALLS: ["remove", "hex", "write", "open", "move", "remove"]
CALLS: ["pages", "path", "join", "rm_r"]
CALLS: ["pages_path", "join"]
CALLS: ["pages_update_file", "hex", "update_file"]
CALLS: ["pages", "path", "join"]
CALLS: ["options", "delete", "options", "options", "multi_action"]
CALLS: ["options", "delete", "options", "repository", "raw_repository", "raw", "options", "multi_action", "with_cache_hooks"]
CALLS: ["forked?", "fork_source", "lfs_objects", "projects", "include?", "projects", "find_each", "refresh_forks_count", "fork_network", "merge_requests", "opened", "where", "not", "from_project", "new", "execute", "each", "fork_network_member", "destroy", "forked_project_link", "destroy"]
CALLS: ["new", "refresh_cache"]
CALLS: ["new", "refresh_cache"]
CALLS: ["new", "refresh_cache"]
CALLS: ["blank?", "current_user", "project", "allowed_transfer?", "project", "transfer", "current_user", "invalidate_personal_projects_count", "project", "reload", "project", "errors", "message", "add"]
CALLS: ["can?", "id", "namespace_id", "can?"]
CALLS: ["full_path", "group", "try", "path", "join", "namespace", "path", "try", "where", "exists?", "new", "has_container_registry_tags?", "new", "attempt_transfer_transaction"]
CALLS: ["transaction_begin", "project", "expire_caches_before_rename", "update_namespace_and_visibility", "project", "send_move_instructions", "project", "move_project_folders", "current_user", "project", "new", "execute", "project", "move_project_uploads", "new", "project", "path", "full_path", "full_path", "move_project", "project", "old_path_with_namespace", "project", "expires_full_path_cache", "write_repository_config", "execute_system_hooks", "transaction_end", "transaction", "rollback_side_effects", "raise", "refresh_permissions"]
CALLS: ["hashed_storage?", "new", "path", "full_path", "full_path", "move_project"]
CALLS: ["hashed_storage?", "move_repo_folder", "new", "reload_repository!", "move_repo_folder"]
CALLS: ["gitlab_shell", "project", "repository_storage_path", "mv_repository"]
CALLS: ["new", "project", "execute_hooks_for"]
CALLS: ["rollback_folder_move", "update_namespace_and_visibility", "write_repository_config"]
CALLS: ["move_repo_folder", "move_repo_folder"]
CALLS: ["move_repository", "move_repository"]
CALLS: ["gitlab_shell", "project", "repository_storage_path", "exists?", "gitlab_shell", "project", "repository_storage_path", "exists?", "logger", "project", "full_path", "project", "id", "warn", "gitlab_shell", "project", "repository_storage_path", "mv_repository"]
CALLS: ["user_ids_for_project_authorizations", "user_ids_for_project_authorizations", "new", "execute"]
CALLS: ["owner_id"]
CALLS: ["members_with_parents", "pluck"]
CALLS: ["project", "namespace", "project", "visibility_level_allowed_by_group?", "project", "visibility_level", "visibility_level", "project", "save!"]
CALLS: ["cache", "id", "delete"]
CALLS: ["current_user", "can?", "access_denied!", "params", "find_by", "project", "current_user", "new", "execute", "errors", "present?", "flash", "errors", "first", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["params", "find_by", "current_user", "new", "execute", "flash", "name", "group_path", "flash", "now", "error", "name", "page_description", "description", "header_title", "group_title", "current_user"]
CALLS: ["params", "find_by", "current_user", "params", "dup", "new", "execute", "reload", "admin_project_path", "admin_root_path"]
CALLS: ["project", "team", "members", "sorted", "noteable_owner", "participants_in_noteable", "all_members", "groups", "uniq"]
CALLS: ["project", "team", "members", "flatten", "count"]
CALLS: ["uniq", "to_a", "compact", "sort_by", "username", "name", "avatar_url", "map"]
CALLS: ["noteable", "noteable", "current_user", "participants", "sorted"]
CALLS: ["noteable", "noteable", "author", "present?", "noteable", "author", "name", "noteable", "author", "username", "noteable", "author", "avatar_url"]
CALLS: ["namespace", "namespace", "transaction_begin", "move_before_destroy_relationships", "destroy_old_project", "name", "path", "rename_project", "transaction_end", "transaction", "attempt_restore_repositories", "class", "message", "raise"]
CALLS: ["new", "attempt_repositories_rollback"]
CALLS: ["flush_caches", "repo_path", "removal_path", "repo_path", "mv_repository", "raise_error", "wiki_path", "removal_path", "wiki_path", "mv_repository", "raise_error"]
CALLS: ["repository", "before_delete", "wiki_path", "repo_path", "new", "before_delete", "new", "delete_cache"]
CALLS: ["cache", "cache_key", "delete"]
CALLS: ["project", "id"]
CALLS: ["project", "wiki", "disk_path"]
CALLS: ["project", "disk_path"]
CALLS: ["new", "execute"]
CALLS: ["new", "execute", "new", "execute", "new", "execute", "new", "execute", "new", "execute", "new", "execute", "add_source_project_to_fork_network"]
CALLS: ["fork_network", "fork_network", "create!"]
CALLS: ["users_star_projects", "any?", "transaction_begin", "id", "update_all", "id", "reset_counters", "id", "reset_counters", "success", "transaction_end", "transaction"]
CALLS: ["transaction_begin", "move_project_members", "remove_remaining_members", "success", "transaction_end", "transaction"]
CALLS: ["source_project", "project_members", "destroy_all"]
CALLS: ["non_existent_members", "prepare_relation", "id", "update_all"]
CALLS: ["source_project", "members", "select", "where", "project_members", "select", "not"]
CALLS: ["postgresql?", "model", "pluck", "where"]
CALLS: ["transaction_begin", "move_group_links", "remove_remaining_project_group_links", "success", "transaction_end", "transaction"]
CALLS: ["source_project", "reload", "project_group_links", "destroy_all"]
CALLS: ["non_existent_group_links", "prepare_relation", "id", "update_all"]
CALLS: ["source_project", "project_group_links", "where", "group_links_in_target_project", "not"]
CALLS: ["project_group_links", "select"]
CALLS: ["transaction_begin", "move_project_authorizations", "remove_remaining_authorizations", "success", "transaction_end", "transaction"]
CALLS: ["source_project", "project_authorizations", "delete_all"]
CALLS: ["non_existent_authorization", "prepare_relation", "id", "update_all"]
CALLS: ["source_project", "project_authorizations", "select", "where", "authorized_users", "not"]
CALLS: ["transaction_begin", "move_notification_settings", "remove_remaining_notification_settings", "success", "transaction_end", "transaction"]
CALLS: ["source_project", "notification_settings", "destroy_all"]
CALLS: ["non_existent_notifications", "prepare_relation", "id", "update_all"]
CALLS: ["source_project", "notification_settings", "select", "where", "users_in_target_project", "not"]
CALLS: ["notification_settings", "select"]
CALLS: ["transaction_begin", "move_lfs_objects_projects", "remove_remaining_lfs_objects_project", "success", "transaction_end", "transaction"]
CALLS: ["source_project", "lfs_objects_projects", "destroy_all"]
CALLS: ["non_existent_lfs_objects_projects", "prepare_relation", "lfs_storage_project", "id", "update_all"]
CALLS: ["source_project", "lfs_objects_projects", "where", "lfs_objects", "not"]
CALLS: ["fork_network", "transaction_begin", "move_forked_project_links", "move_fork_network_members", "update_root_project", "refresh_forks_count", "success", "transaction_end", "transaction"]
CALLS: ["source_project", "where", "id", "update_all"]
CALLS: ["source_project", "where", "id", "update_all", "source_project", "where", "id", "update_all"]
CALLS: ["source_project", "where", "id", "update_all", "source_project", "where", "id", "update_all"]
CALLS: ["transaction_begin", "move_deploy_keys_projects", "remove_remaining_deploy_keys_projects", "success", "transaction_end", "transaction"]
CALLS: ["source_project", "deploy_keys_projects", "destroy_all"]
CALLS: ["non_existent_deploy_keys_projects", "prepare_relation", "id", "update_all"]
CALLS: ["source_project", "deploy_keys_projects", "joins", "where", "deploy_keys", "select", "not"]
CALLS: ["namespace", "namespace", "namespace", "refresh_project_authorizations", "namespace", "refresh_project_authorizations", "run_after_commit", "new", "execute", "new", "execute", "new", "execute", "success", "with_transaction_returning_status"]
CALLS: ["owner", "refresh_authorized_projects"]
CALLS: ["refresh_members_authorized_projects"]
CALLS: ["user_ids_for_project_authorizations", "new", "execute"]
CALLS: ["add_repository_to_project", "import_data", "success", "project", "import_url", "project", "full_path", "message", "error"]
CALLS: ["project", "external_import?", "unknown_url?", "project", "import_url", "validate!", "message", "has_importer?", "importer_class", "try", "unknown_url?", "create_repository", "project", "repository_exists?", "import_repository"]
CALLS: ["project", "import_url"]
CALLS: ["has_importer?", "importer_class", "try", "project", "ensure_repository", "project", "repository", "project", "import_url", "fetch_as_mirror", "gitlab_shell", "project", "repository_storage", "project", "disk_path", "project", "import_url", "import_repository", "project", "repository_exists?", "project", "repository", "expire_content_cache", "message"]
CALLS: ["hex", "add_remote", "fetch_remote", "remove_remote"]
CALLS: ["gitlab_shell", "raw_repository", "fetch_remote"]
CALLS: ["wiki", "repository_exists?"]
CALLS: ["repository_exists?", "create_repository"]
CALLS: ["file_has_changed?"]
CALLS: ["repository", "last_for_path", "sha"]
CALLS: ["params", "validate_file_status!", "each"]
CALLS: ["include?", "file_has_changed?", "raise_error"]
CALLS: ["file_has_changed?"]
CALLS: ["validate_permissions!", "validate_on_branch!", "validate_branch_existance!", "different_branch?", "validate_new_branch_name!"]
CALLS: ["project", "current_user", "new", "execute", "raise_error"]
CALLS: ["project", "empty_repo?", "different_branch?", "repository", "branch_exists?", "raise_error"]
CALLS: ["empty_repo?", "repository", "branch_exists?", "raise_error"]
CALLS: ["current_user", "project", "new", "can_push_to_branch?", "raise_error"]
CALLS: []
CALLS: ["repository", "exists?"]
CALLS: ["repository", "exists?"]
CALLS: ["project", "import_export_shared", "save_all!", "execute_after_export_action"]
CALLS: ["save_services", "project", "save", "notify_success", "cleanup_and_notify_error!"]
CALLS: ["cleanup_and_notify_error", "errors", "join", "new"]
CALLS: ["logger", "project", "name", "project", "id", "errors", "join", "error", "export_path", "rm_rf", "notify_error"]
CALLS: ["notification_service", "errors", "project_not_exported"]
CALLS: ["notifiable?", "mailer", "project_was_not_exported_email", "deliver_later"]
CALLS: ["notification_email", "subject", "mail"]
CALLS: ["namespace", "present?", "hashed_storage?", "import_export_shared", "archive_path"]
CALLS: ["version_saver", "avatar_saver", "project_tree_saver", "uploads_saver", "repo_saver", "wiki_repo_saver", "lfs_saver", "all?"]
CALLS: ["project", "new"]
CALLS: ["project", "new"]
CALLS: ["project", "new"]
CALLS: ["project", "new"]
CALLS: ["project", "new"]
CALLS: ["project", "new"]
CALLS: ["new"]
CALLS: ["current_user", "project", "execute", "cleanup_and_notify_error"]
CALLS: ["new"]
CALLS: ["try_obtain_lease", "present?", "block_given?", "execute_gitlab_shell_gc"]
CALLS: ["id", "task", "lease_key", "perform_async", "pushes_since_gc", "gc_period", "reset_pushes_since_gc", "measure"]
CALLS: ["housekeeping_gc_period"]
CALLS: ["pushes_since_gc", "gc_period", "pushes_since_gc", "full_repack_period"]
CALLS: ["housekeeping_full_repack_period"]
CALLS: ["pushes_since_gc"]
CALLS: ["pushes_since_gc_redis_shared_state_key", "del", "with"]
CALLS: ["pushes_since_gc_redis_shared_state_key", "get", "to_i", "with"]
CALLS: ["project", "hashed_storage?", "project", "logger", "new", "execute", "project", "hashed_storage?", "project", "logger", "new", "execute"]
CALLS: ["project", "disk_path", "project", "wiki", "repository_exists?", "project", "storage_version", "project", "storage_version", "project", "ensure_storage_path_exists", "project", "disk_path", "move_repository", "move_repository", "project", "write_repository_config", "rollback_folder_move", "project", "storage_version", "project", "repository_read_only", "project", "save!", "block_given?"]
CALLS: ["project", "full_path", "project", "disk_path", "project", "absolute_base_dir", "project", "storage_version", "project", "absolute_base_dir", "move_folder!", "project", "save!", "block_given?"]
CALLS: ["root", "base_dir", "join"]
CALLS: ["directory?", "logger", "project", "id", "info", "exist?", "logger", "project", "id", "error", "dirname", "mkdir_p", "mv", "logger", "project", "id", "info"]
CALLS: ["destroy"]
CALLS: ["project", "project_group_links", "params", "params", "create"]
CALLS: ["import_upload_path", "dirname", "mkdir_p", "params", "delete", "path", "import_upload_path", "copy_entry", "params", "delete", "overwrite_project?", "params", "params", "tmp_filename", "params", "params", "import_upload_path", "present?", "params", "current_user", "params", "new", "execute"]
CALLS: ["project_with_same_full_path?"]
CALLS: ["current_namespace", "full_path", "params", "find_by_full_path", "present?"]
CALLS: ["params", "find_by"]
CALLS: ["hex"]
CALLS: ["tmp_filename", "import_upload_path"]
CALLS: ["link_existing_project", "fork_new_project"]
CALLS: ["id", "allowed_visibility_level", "description", "name", "path", "shared_runners_enabled", "target_namespace", "id", "avatar", "present?", "avatar", "image?", "avatar", "current_user", "new", "execute", "persisted?", "project_feature", "builds_access_level", "project_feature", "update_attributes", "link_fork_network"]
CALLS: ["visibility_level", "target_namespace", "visibility_level", "min", "closest_allowed_level"]
CALLS: ["current_user", "namespace"]
CALLS: ["fork_network", "fork_network_members", "create", "forked_project_link", "create_forked_project_link", "refresh_forks_count"]
CALLS: ["forked?", "link_fork_network"]
CALLS: ["accessible_keys", "params", "params", "find_by", "project", "deploy_keys", "include?", "project", "deploy_keys"]
CALLS: ["current_user", "accessible_deploy_keys"]
CALLS: ["project_deploy_keys", "pluck", "are_public", "pluck", "push", "where"]
CALLS: ["valid_url?", "new", "download!", "store!", "to_h"]
CALLS: ["nil?", "default_options", "options", "merge", "strip!", "regexp"]
CALLS: ["valid_protocol?", "valid_uri?"]
CALLS: ["options", "merge", "regexp"]
CALLS: ["valid?"]
CALLS: ["http?", "valid_domain?"]
CALLS: ["parse", "host", "any?"]
CALLS: ["regexp"]
CALLS: ["current_user", "project", "can?", "project", "flush_caches", "project", "current_user", "new", "execute", "project", "root_of_fork_network", "project", "full_name", "update", "project", "attempt_destroy_transaction", "system_hook_service", "project", "execute_hooks_for", "project", "full_path", "log_info", "current_user", "invalidate_personal_projects_count", "project", "message", "attempt_rollback", "project", "message", "attempt_rollback", "raise"]
CALLS: ["transaction_begin", "remove_legacy_registry_tags", "raise_error", "trash_repositories!", "team", "truncate", "destroy!", "transaction_end", "transaction"]
CALLS: ["config", "registry", "enabled", "project", "build_root_repository", "has_tags?", "delete_tags!", "tap"]
CALLS: ["has_tags?", "tags", "digest", "map", "to_set", "client", "path", "delete_repository_tag", "all?"]
CALLS: ["repo_path", "remove_repository", "raise_error", "wiki_path", "remove_repository", "raise_error"]
CALLS: ["params", "removal_path", "mv_repository", "log_info", "project", "minutes", "repository_storage_path", "perform_in", "run_after_commit"]
CALLS: ["destroyed?", "update_attributes", "full_path", "log_error"]
CALLS: ["present?", "current_user", "params", "new", "execute", "params", "delete", "params", "delete", "params", "delete", "params", "new", "current_user", "visibility_level", "allowed_for?", "deny_visibility_level", "allowed_fork?", "errors", "add", "set_project_name_from_path", "params", "current_user", "allowed_namespace?", "namespace_id", "deny_namespace", "namespace_id", "current_user", "namespace_id", "block_given?", "creator", "current_user", "build_forked_project_link", "save_project_and_import_data", "persisted?", "after_create_actions", "import_schedule", "record", "type", "record", "errors", "full_messages", "join", "fail", "message", "fail"]
CALLS: ["name", "present?", "path", "present?", "path", "present?", "name", "path", "dup", "name", "present?", "path", "name", "dup", "parameterize"]
CALLS: ["transaction_begin", "create_or_update_import_data", "save", "gitlab_project_import?", "create_services_from_active_templates", "create_labels", "import?", "create_repository", "transaction_end", "transaction"]
CALLS: ["where", "id", "build_from_template", "save!", "each"]
CALLS: ["templates", "attributes", "except", "new", "execute", "each"]
CALLS: ["nil?", "nil?", "import_data", "build_import_data", "data", "data", "data", "merge", "credentials", "credentials", "credentials", "merge"]
CALLS: ["owner", "name", "full_name", "log_info", "gitlab_project_import?", "write_repository_config", "skip_wiki?", "create_wiki", "event_service", "current_user", "create_project", "system_hook_service", "execute_hooks_for", "setup_authorizations", "current_user", "invalidate_personal_projects_count"]
CALLS: ["current_user", "feature_available?"]
CALLS: ["project", "project_feature", "access_level", "guest?", "admin?"]
CALLS: ["id", "max_member_access"]
CALLS: ["access_level", "get_permission"]
CALLS: ["project", "team", "member?", "full_private_access?"]
CALLS: ["group", "group", "refresh_members_authorized_projects", "current_user", "refresh_authorized_projects", "namespace", "owner", "current_user", "add_master"]
CALLS: ["add_user"]
CALLS: ["add_user"]
CALLS: ["create_event"]
CALLS: ["find_by", "current_user", "can?"]
CALLS: ["nil?", "find_by", "current_user", "can?"]
CALLS: ["errors", "add"]
CALLS: ["params", "delete", "find", "file", "params", "dup", "params", "current_user", "params", "new", "execute", "close"]
CALLS: ["blank?"]
CALLS: ["new", "repository", "delete_all_refs_except", "execute", "logger", "full_path", "id", "info"]
CALLS: ["params", "explain_quick_actions", "find_user_references", "join", "success"]
CALLS: ["project", "current_user", "new", "current_user", "analyze", "users", "map"]
CALLS: ["commands_target_type", "include?", "project", "current_user", "new", "find_commands_target", "explain"]
CALLS: ["current_user", "can?", "extractor", "extract_commands", "explain_commands"]
CALLS: ["class", "definition_by_name", "explain", "map", "compact"]
CALLS: ["params"]
CALLS: ["commands_target_id", "present?", "commands_target_type", "current_user", "project", "id", "new", "commands_target_id", "find", "commands_target_type", "project", "issues", "project", "merge_requests", "build"]
CALLS: ["params"]
CALLS: ["pages", "enabled", "data", "data", "data", "perform_async"]
CALLS: ["note", "project"]
CALLS: ["target", "project"]
CALLS: ["editable?", "mentioned_users", "to_a", "params", "current_user", "merge", "update_attributes", "current_user", "create_new_cross_references!", "previous_changes", "include?", "new", "current_user", "update_note"]
CALLS: ["handle_note"]
CALLS: ["current_user", "new", "render"]
CALLS: ["empty?", "supported?", "class", "noteable_update_service", "project", "current_user", "new", "noteable", "execute"]
CALLS: ["noteable_type"]
CALLS: ["system?", "new", "author", "leave_note", "for_personal_snippet?", "create_cross_references!", "execute_note_hooks"]
CALLS: ["project", "hook_data", "confidential?", "project", "execute_hooks", "project", "execute_services"]
CALLS: ["author", "build"]
CALLS: ["current_user", "to_hook_data", "blank_ref?"]
CALLS: ["previous_changes", "fetch", "fetch", "labels", "map", "labels", "map", "assignees", "is_a?", "map", "assignees", "map", "first", "hook_attrs", "assignee", "hook_attrs", "respond_to?", "fetch", "total_time_spent", "total_time_spent", "new", "build"]
CALLS: ["attributes"]
CALLS: ["name", "username", "avatar_url"]
CALLS: ["attributes"]
CALLS: ["web_url", "ssh_url_to_repo", "http_url_to_repo", "full_path", "default_branch"]
CALLS: ["url_to_repo"]
CALLS: ["gitlab_shell", "full_path", "url_to_repo"]
CALLS: ["gitlab_shell", "full_path", "url_to_repo"]
CALLS: ["url_to_repo"]
CALLS: ["id", "name", "description", "web_url", "avatar_url", "ssh_url_to_repo", "http_url_to_repo", "namespace", "name", "visibility_level", "full_path", "default_branch", "ci_config_path", "web_url", "url_to_repo", "ssh_url_to_repo", "http_url_to_repo", "merge!"]
CALLS: ["attributes"]
CALLS: ["new", "build"]
CALLS: ["attributes"]
CALLS: ["new", "build"]
CALLS: ["timelogs", "sum"]
CALLS: ["id", "safe_message", "committed_date", "xmlschema", "build", "author_name", "author_email", "repo_changes", "merge!"]
CALLS: ["raw_deltas", "deleted_file", "old_path", "renamed_file", "new_file", "new_path", "new_path", "each"]
CALLS: ["project", "lfs_enabled?", "lfs_file?", "decode64", "new", "create_lfs_object!", "link_lfs_object!", "pointer", "new", "new"]
CALLS: ["project", "lfs_objects"]
CALLS: ["sha256", "size", "file", "new", "find_or_create_by"]
CALLS: ["cached_attributes", "attributes"]
CALLS: ["repository", "branch_name", "new"]
CALLS: ["cache_attribute_key", "get", "parse", "with", "strong_memoize"]
CALLS: ["class", "name", "id"]
CALLS: ["raw", "deltas"]
CALLS: ["current_user", "to_hook_data"]
CALLS: ["create_record_event"]
CALLS: ["new", "destroy", "destroy_target"]
CALLS: ["todos", "pending", "select", "where", "to_a", "each"]
CALLS: ["params", "delete", "project", "current_user", "params", "new", "execute", "valid?", "allow_n_plus_1_calls", "project", "current_user", "new", "supported?", "extract_commands", "empty?", "note", "id", "perform_async", "run_after_commit", "save", "todo_service", "current_user", "new_note", "present?", "execute", "errors", "add", "commands_changes"]
CALLS: ["params", "delete", "present?", "find_discussion", "new", "errors", "add", "params", "reply_attributes", "merge!", "params", "new", "project", "project", "author", "current_user"]
CALLS: ["delete", "tap"]
CALLS: ["line_code", "merge"]
CALLS: ["delete", "tap"]
CALLS: ["first_note", "slice"]
CALLS: ["original_position", "to_json", "position", "to_json", "merge"]
CALLS: ["params", "parent", "current_user", "new", "execute", "parent", "current_user", "new", "execute", "params", "present?", "params", "except", "update_attributes"]
CALLS: ["activate", "project_milestone?", "event_service", "current_user", "reopen_milestone"]
CALLS: ["create_record_event"]
CALLS: ["check_project_milestone!", "transaction_begin", "clone_project_milestone", "move_children_to_group_milestone", "destroy_old_milestones", "valid?", "errors", "full_messages", "to_sentence", "raise_error", "transaction_end", "transaction"]
CALLS: ["milestone_ids_for_merge", "where", "destroy_all"]
CALLS: ["title", "group_project_ids", "new", "execute", "pluck"]
CALLS: ["group", "projects", "pluck"]
CALLS: ["slice", "group", "current_user", "new", "execute", "save"]
CALLS: ["project_milestone?", "raise_error"]
CALLS: ["milestone_ids_for_merge", "update_children", "in_groups_of"]
CALLS: ["group_project_ids", "where", "group_project_ids", "where", "id", "update_all", "each"]
CALLS: ["project_milestone?", "transaction_begin", "issues", "parent", "current_user", "new", "execute", "each", "merge_requests", "parent", "current_user", "new", "execute", "each", "event_service", "current_user", "destroy_milestone", "id", "for_milestone_id", "target_id", "save", "each", "destroy", "transaction_end", "transaction"]
CALLS: ["create_record_event"]
CALLS: ["", "where"]
CALLS: ["parent", "milestones", "params", "new", "save", "project_milestone?", "event_service", "current_user", "open_milestone"]
CALLS: ["create_record_event"]
CALLS: ["close", "project_milestone?", "event_service", "current_user", "close_milestone"]
CALLS: ["create_record_event"]
CALLS: ["current_user", "cache_merge_request_closes_issues!"]
CALLS: ["fetch", "fetch", "fetch", "has_changes?", "todo_service", "current_user", "mark_pending_todos_as_done", "previous_changes", "include?", "previous_changes", "include?", "todo_service", "current_user", "update_merge_request", "previous_changes", "include?", "previous_changes", "first", "target_branch", "create_branch_change_note", "previous_changes", "include?", "create_assignee_note", "notification_service", "current_user", "reassigned_merge_request", "todo_service", "current_user", "reassigned_merge_request", "previous_changes", "include?", "previous_changes", "include?", "mark_as_unchecked", "labels", "present?", "notification_service", "current_user", "relabeled_merge_request", "mentioned_users", "present?", "notification_service", "current_user", "new_mentions_in_merge_request"]
CALLS: ["create_assignment_todo"]
CALLS: ["update_issuable"]
CALLS: ["toggling_tasks?", "project", "create_mention_todos"]
CALLS: ["previous_changes", "include?", "tasks?", "updated_tasks", "any?"]
CALLS: ["tasks", "summary", "items?"]
CALLS: ["new", "data"]
CALLS: ["new"]
CALLS: ["previous_changes", "first", "description", "get_updated_tasks"]
CALLS: ["get_tasks", "get_tasks", "select", "source", "source", "complete?", "complete?", "with_index"]
CALLS: ["to_s", "scan", "strip", "new", "map"]
CALLS: ["relabeled_resource_email"]
CALLS: ["project", "subscribers", "flat_map", "uniq", "notifiable_users", "map", "mailer", "id", "id", "id", "send", "deliver_later", "each"]
CALLS: ["reassign_resource_email"]
CALLS: ["previous_record", "find_by", "build_recipients", "mailer", "user", "id", "id", "id", "reason", "send", "deliver_later", "each"]
CALLS: ["previous_changes", "include?", "previous_changes", "first"]
CALLS: ["new_mentions_in_resource_email"]
CALLS: ["build_recipients", "user", "include?", "select", "mailer", "user", "id", "id", "id", "reason", "send", "deliver_later", "each"]
CALLS: ["project", "current_user", "change_branch"]
CALLS: ["new", "create_note"]
CALLS: ["project", "current_user", "assignee", "change_assignee"]
CALLS: ["nil?", "to_reference", "new", "create_note"]
CALLS: ["project", "current_user", "change_issue_assignees"]
CALLS: ["assignees", "assignees", "to_a", "any?", "map", "to_sentence", "any?", "map", "to_sentence", "join", "new", "create_note"]
CALLS: ["previous_changes", "to_s", "include?", "any?", "labels", "assignees"]
CALLS: ["params", "except!", "params", "except!", "params", "except!", "params", "merge_from_quick_action", "closed_without_fork?", "params", "except!", "params", "present?", "merge_params", "params", "delete", "handle_wip_event", "update"]
CALLS: ["params", "delete", "current_user", "mergeable_with_quick_action?", "update", "head_pipeline", "head_pipeline", "active?", "project", "current_user", "new", "execute", "current_user", "id", "merge_async"]
CALLS: ["can_be_merged_by?", "mergeable?", "actual_head_pipeline", "actual_head_pipeline", "success?", "actual_head_pipeline", "active?", "diff_head_sha"]
CALLS: ["closed?", "source_project_missing?"]
CALLS: ["for_fork?", "source_project", "source_project", "target_project", "in_fork_network_of?"]
CALLS: ["forked_from?", "fork_network", "nil?", "fork_network", "nil?", "fork_network", "fork_network"]
CALLS: ["forked?", "forked_from_project"]
CALLS: ["target_project", "source_project"]
CALLS: ["discussions_resolved?", "project", "current_user", "resolve_all_discussions", "notification_service", "current_user", "resolve_all_discussions"]
CALLS: ["new", "create_note"]
CALLS: ["build_recipients", "mailer", "user", "id", "id", "id", "reason", "resolved_all_discussions_email", "deliver_later", "each"]
CALLS: ["setup_merge_request_mail", "find", "merge_request_thread_options", "mail_answer_thread"]
CALLS: ["hex", "config", "gitlab", "host", "message_id", "message_id", "prepend", "mail_thread"]
CALLS: ["add_project_headers", "add_unsubscription_headers_and_links", "class", "name", "id", "reply_key", "enabled?", "reply_key", "reply_address", "new", "display_name", "full_name", "reply_key", "config", "gitlab", "host", "freeze", "mail"]
CALLS: ["unsubscribable?", "unsubscribe_sent_notification_url", "enabled?", "supports_wildcard?", "reply_key", "unsubscribe_address", "headers", "map", "join", "unsubscribe_sent_notification_url"]
CALLS: ["for_commit?", "for_snippet?"]
CALLS: ["sender", "recipient", "title", "to_reference", "subject"]
CALLS: ["find", "notification_email"]
CALLS: ["find", "project", "project_merge_request_url", "reply_key", "record"]
CALLS: ["current_user", "can?", "reopen", "create_event", "create_note", "notification_service", "current_user", "reopen_mr", "execute_hooks", "current_user", "reload_diff", "mark_as_unchecked", "assignees", "invalidate_cache_counts", "update_project_counter_caches"]
CALLS: ["open?", "diff_refs", "create_merge_request_diff", "new", "execute", "diff_refs", "update_diff_discussion_positions"]
CALLS: ["has_complete_diff_refs?", "notes", "new_diff_notes", "discussions", "active?", "select", "empty?", "diff_file", "paths", "flat_map", "uniq", "project", "new", "execute", "each", "project", "resolve_outdated_diff_discussions?", "project", "new", "execute"]
CALLS: ["", "where"]
CALLS: ["branch_ref?", "ref_name", "method", "allow_n_plus_1_calls", "close_upon_missing_source_branch_ref", "post_merge_manually_merged", "reload_merge_requests", "reset_merge_when_pipeline_succeeds", "mark_pending_todos_done", "cache_merge_requests_closing_issues", "branch_added?", "branch_removed?", "comment_mr_branch_presence_changed", "notify_about_push", "mark_mr_as_wip_from_commits", "execute_mr_web_hooks"]
CALLS: ["blank_ref?"]
CALLS: ["blank_ref?"]
CALLS: ["merge_requests", "where", "cache_merge_request_closes_issues!", "each"]
CALLS: ["merge_requests_for_source_branch", "execute_hooks", "each"]
CALLS: ["present?", "merge_requests_for_source_branch", "commit_shas", "work_in_progress?", "sha", "include?", "detect", "work_in_progress?", "wip_title", "update", "project", "add_merge_request_wip_from_commit", "each"]
CALLS: ["to_reference", "new", "create_note"]
CALLS: ["present?", "merge_requests_for_source_branch", "commit_shas", "new", "id", "include?", "partition", "project", "add_commits", "notification_service", "push_to_merge_request", "each"]
CALLS: ["length", "length", "pluralize", "commits_list", "diff_comparison_url", "new", "create_note"]
CALLS: ["merge_request_diff", "id", "url_helpers", "diffs_project_merge_request_url"]
CALLS: ["existing_commit_summary", "new_commit_summary", "join", "html_safe", "content_tag"]
CALLS: ["empty?", "size", "first", "short_id", "blank_ref?", "truncate_sha", "last", "short_id", "first", "short_id", "last", "short_id", "pluralize", "target_branch", "for_fork?", "target_project_namespace", "content_tag", "html_safe", "content_tag"]
CALLS: ["target_project", "target_project", "namespace", "target_project", "namespace", "full_path"]
CALLS: ["short_id", "title", "content_tag", "collect"]
CALLS: ["short_id", "title", "map", "short_id", "title", "map", "build_recipients", "mailer", "user", "id", "id", "id", "reason", "send", "deliver_later", "each"]
CALLS: ["branch_added?", "merge_requests_for_source_branch", "project", "change_branch_presence", "each"]
CALLS: ["new", "create_note"]
CALLS: ["merge_requests_for_source_branch", "todo_service", "merge_request_push", "each"]
CALLS: ["mark_pending_todos_as_done"]
CALLS: ["merge_requests", "opened", "by_source_or_target_branch", "to_a", "opened", "where", "where", "not", "to_a", "filter_merge_requests", "source_branch", "force_push?", "current_user", "reload_diff", "commit_shas", "map", "any?", "current_user", "reload_diff", "mark_as_unchecked", "id", "perform_async", "each", "merge_requests_for_source_branch"]
CALLS: ["uniq", "select"]
CALLS: ["force_push?"]
CALLS: ["", "where"]
CALLS: ["map", "merge_requests", "preload", "opened", "where", "to_a", "select", "diff_head_sha", "include?", "merge_request_diff", "state", "select", "filter_merge_requests", "target_project", "new", "execute", "each"]
CALLS: ["merge_requests_for_source_branch", "reject", "target_project", "new", "execute", "each"]
CALLS: ["rebase", "success", "error"]
CALLS: ["merge_request", "rebase_in_progress?", "log_error", "repository", "current_user", "merge_request", "rebase", "merge_request", "update_attributes", "log_error", "message", "log_error"]
CALLS: ["source_project", "source_project", "repository", "id", "rebase_in_progress?", "strong_memoize"]
CALLS: ["raw", "id", "source_branch", "source_branch_sha", "target_project", "repository", "raw", "target_branch", "rebase"]
CALLS: ["id", "current_user", "id", "perform_async", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["close_issues", "todo_service", "current_user", "merge_merge_request", "mark_as_merged", "create_event", "create_note", "notification_service", "current_user", "merge_mr", "execute_hooks", "assignees", "invalidate_cache_counts", "update_project_counter_caches"]
CALLS: ["mark_pending_todos_as_done"]
CALLS: ["merge_params", "params", "merge!", "merge_when_pipeline_succeeds?", "merge_when_pipeline_succeeds", "merge_user", "diff_head_commit", "merge_when_pipeline_succeeds", "save"]
CALLS: ["project", "merge_requests_ff_only_enabled", "is_a?", "project", "current_user", "params", "new", "execute", "error_check!", "commit", "after_merge", "clean_merge_jid", "success", "in_locked_state", "merge_jid", "state", "log_info", "message", "handle_merge_error"]
CALLS: ["logger", "merge_request_info", "error", "update"]
CALLS: ["merge_request", "update_column"]
CALLS: ["merge_jid", "state", "log_info", "project", "current_user", "new", "merge_request", "execute", "merge_jid", "state", "log_info", "delete_source_branch?", "source_project", "branch_deletion_user", "new", "merge_request", "source_branch", "execute"]
CALLS: ["params", "force_remove_source_branch?", "fetch", "branch_deletion_user", "can_remove_source_branch?"]
CALLS: ["merge_params", "to_boolean"]
CALLS: ["source_project", "source_branch", "protected?", "source_project", "source_branch", "root_ref?", "source_project", "allowed?", "diff_head_sha", "source_branch_head", "try"]
CALLS: ["repository", "root_ref"]
CALLS: ["force_remove_source_branch?", "author", "current_user"]
CALLS: ["should_be_rebased?", "mergeable?", "source"]
CALLS: ["lock_mr", "unlock_mr"]
CALLS: ["diffs", "diff_files", "to_a", "where", "diffs", "clear_cache!", "each"]
CALLS: ["project", "printing_merge_request_link_enabled", "get_branches", "opened_merge_requests_from_source_branches", "url_for_existing_merge_request", "url_for_new_merge_request", "map"]
CALLS: ["target_project", "url_helpers", "project_merge_request_url", "source_branch"]
CALLS: ["url_helpers", "project", "project_new_merge_request_url"]
CALLS: ["project", "empty_repo?", "project", "merge_requests_enabled?", "new", "branch_ref?", "blank_ref?", "branch_name", "project", "default_branch", "map", "compact"]
CALLS: ["merge_requests_access_level"]
CALLS: ["project", "from_project", "opened", "from_source_branches", "index_by"]
CALLS: ["", "where"]
CALLS: ["set_projects!", "new", "target_project", "source_project", "source_branch", "params", "merge_params", "params", "delete", "create"]
CALLS: ["params", "params", "find", "params", "delete", "params", "delete", "current_user", "can?", "current_user", "can?"]
CALLS: ["present?", "issue", "present?", "error", "issue", "label_ids", "any?", "params", "issue", "label_ids", "project", "current_user", "new", "branch_name", "ref", "execute", "issue", "project", "current_user", "branch_name", "new_issue_branch", "merge_request", "create", "valid?", "success", "errors", "error"]
CALLS: ["merge_request", "new", "resolve"]
CALLS: ["note", "resolvable?", "render_404", "note", "current_user", "resolve!", "project", "current_user", "new", "note", "noteable", "execute", "note", "discussion", "serialize_notes?", "render_json_with_notes_serializer", "note", "resolved_by", "try", "view_to_html_string", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["resolve_without_save", "save!"]
CALLS: ["resolvable?", "resolved?", "resolved_at", "now", "resolved_by", "resolved_by_push"]
CALLS: ["resolvable?", "resolve!", "update"]
CALLS: ["has_vue_discussions_cookie?", "params"]
CALLS: ["cookies"]
CALLS: ["current_user", "new", "note", "execute", "note_serializer", "note", "represent", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project", "current_user", "merge_request", "new", "discussion", "execute", "render_discussion"]
CALLS: ["serialize_notes?", "discussion", "notes", "merge_request", "prepare_notes_for_rendering", "render_json_with_discussions_serializer", "render_json_with_html"]
CALLS: ["discussion", "resolved_by", "try", "discussion", "view_to_html_string", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project", "discussion", "noteable", "current_user", "new", "discussion", "represent", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["current_user", "can?", "allow_broken", "close", "create_event", "create_note", "notification_service", "current_user", "close_mr", "todo_service", "current_user", "close_merge_request", "execute_hooks", "assignees", "invalidate_cache_counts", "update_project_counter_caches"]
CALLS: ["mark_pending_todos_as_done"]
CALLS: ["params", "delete", "merge_request", "params", "new", "merge_request", "author", "current_user", "merge_request", "compare_commits", "merge_request", "source_project", "find_source_project", "merge_request", "target_project", "find_target_project", "merge_request", "target_branch", "find_target_branch", "merge_request", "can_be_created", "branches_valid?", "merge_request", "can_be_created", "compare_branches", "assign_title_and_description", "merge_request"]
CALLS: ["assign_title_and_description_from_single_commit", "target_project", "issues_enabled?", "target_project", "external_issue_tracker", "assign_title_from_issue", "merge_request", "title", "source_branch", "titleize", "humanize", "compare_commits", "empty?", "merge_request", "title", "wip_title", "append_closes_description"]
CALLS: ["issue", "issue", "is_a?", "merge_request", "title", "issue", "title", "merge_request", "title", "present?", "issue_iid", "present?", "merge_request", "title", "issue", "to_reference", "source_branch", "downcase", "issue_iid", "downcase", "remove", "titleize", "humanize", "present?", "merge_request", "title"]
CALLS: ["compare_commits", "count", "first", "merge_request", "title", "title", "merge_request", "description", "description", "try"]
CALLS: ["issue", "to_reference", "present?", "issue", "to_reference", "description", "present?", "merge_request", "description", "prepend", "merge_request", "description"]
CALLS: ["source_project", "source_branch_ref", "new", "target_project", "target_branch_ref", "execute", "merge_request", "compare_commits", "commits", "merge_request", "compare"]
CALLS: ["source_branch_specified?", "target_branch_specified?", "validate_branches", "errors", "blank?"]
CALLS: ["branches_present?", "add_error", "same_source_and_target?", "add_error", "source_branch_exists?", "source_branch", "add_error", "target_branch_exists?", "target_branch", "add_error"]
CALLS: ["source_project", "target_project", "target_branch", "source_branch"]
CALLS: ["target_branch", "present?", "source_branch", "present?"]
CALLS: ["errors", "add"]
CALLS: ["params", "present?"]
CALLS: ["params", "present?"]
CALLS: ["target_project", "source_project", "target_branch", "source_branch", "errors", "add", "opened?", "target_project", "merge_requests", "source_branch", "target_branch", "source_project", "try", "where", "opened", "id", "id", "where", "any?", "errors", "pluck", "add"]
CALLS: ["target_branch", "target_project", "default_branch"]
CALLS: ["target_project", "present?", "current_user", "target_project", "can?", "target_project", "project", "default_merge_request_target"]
CALLS: ["forked_from_project", "merge_requests_enabled?", "forked_from_project"]
CALLS: ["source_project", "present?", "current_user", "source_project", "can?", "source_project", "project"]
CALLS: ["current_user", "can_allow_maintainer_to_push?", "params", "delete"]
CALLS: ["maintainer_push_possible?", "source_project", "allowed?"]
CALLS: ["source_project", "present?", "for_fork?", "target_project", "visibility_level", "source_project", "visibility_level", "source_project", "source_branch", "protected?"]
CALLS: ["project", "hook_data", "project", "execute_hooks", "project", "execute_services"]
CALLS: ["assignable_issues", "project", "current_user", "current_user", "id", "new", "execute", "each", "assignable_issues", "count"]
CALLS: ["current_user", "merge_request", "author", "closes_issues", "is_a?", "assignees", "present?", "current_user", "can?", "select"]
CALLS: ["allow_failure?", "retried?", "todo_service", "merge_request_build_failed", "commit_status_merge_requests"]
CALLS: ["author", "create_build_failed_todo", "merge_when_pipeline_succeeds?", "merge_user", "create_build_failed_todo"]
CALLS: ["project", "attributes_for_todo", "create_todos"]
CALLS: ["current_user", "action_member_permission", "can?", "human_access", "params", "update_attributes", "after_execute"]
CALLS: ["update_member_permission", "override_member_permission"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["can_request_access?", "members", "current_user", "now", "utc", "create"]
CALLS: ["current_user", "can?"]
CALLS: ["can_destroy_member?", "is_a?", "source", "user", "last_owner?", "destroy", "user", "invalidate_cache_counts", "request?", "user", "current_user", "notification_service", "decline_access_request", "after_execute"]
CALLS: ["notifiable?", "mailer", "real_source_type", "source_id", "user_id", "member_access_denied_email", "deliver_later"]
CALLS: ["member_source_class", "find", "find", "notification_email", "member_source", "human_name", "member_source", "model_name", "singular", "subject", "mail"]
CALLS: ["classify", "constantize"]
CALLS: ["current_user", "destroy_member_permission", "can?"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["owners", "include?", "owners", "size"]
CALLS: ["params", "blank?", "error", "params", "split", "uniq", "user_limit", "size", "user_limit", "user_limit", "error", "params", "params", "current_user", "add_users", "after_execute", "each", "success"]
CALLS: ["params", "fetch"]
CALLS: ["project", "add_users"]
CALLS: ["present?", "parse_users_list", "transaction_begin", "add_user", "map!", "transaction_end", "transaction"]
CALLS: ["to_i", "email_regexp", "each", "present?", "where", "concat", "members_and_requesters", "where", "index_by"]
CALLS: ["add_users"]
CALLS: ["can_update_access_requester?", "params", "access_level", "params", "accept_request", "after_execute"]
CALLS: ["current_user", "update_member_permission", "can?"]
CALLS: ["request?", "update", "after_accept_request"]
CALLS: ["post_create_hook"]
CALLS: ["current_user", "new", "mattermost_team_params", "create", "errors", "message", "add"]
CALLS: ["path", "name", "public?"]
CALLS: ["current_user", "project", "can?", "unlock_file", "message", "error", "error", "message", "error"]
CALLS: ["params", "lock", "current_user", "can_be_unlocked_by?", "lock", "destroy!", "lock", "success", "error", "lock", "path", "lock", "user_id", "error"]
CALLS: ["params", "present?", "project", "lfs_file_locks", "params", "find", "params", "present?", "project", "lfs_file_locks", "params", "find_by!"]
CALLS: ["id", "user_id", "project", "can?"]
CALLS: ["find_locks", "success", "message", "error"]
CALLS: ["params", "slice", "compact", "symbolize_keys", "project", "lfs_file_locks", "where"]
CALLS: ["current_user", "project", "can?", "create_lock!", "current_lock", "error", "message", "error", "message", "error"]
CALLS: ["project", "lfs_file_locks", "current_user", "params", "create!", "success"]
CALLS: ["project", "lfs_file_locks", "params", "find_by"]
CALLS: ["params", "present?", "params", "convert_color_name_to_hex", "params", "update"]
CALLS: ["params", "strip", "downcase", "start_with?", "to_sym"]
CALLS: ["old_group", "present?", "transaction_begin", "labels_to_transfer", "find_or_create_label!", "id", "group_labels_applied_to_issues", "id", "update_label_links", "group_labels_applied_to_merge_requests", "id", "update_label_links", "id", "update_label_priorities", "find_each", "transaction_end", "transaction"]
CALLS: ["project", "id", "where", "update_all"]
CALLS: ["pluck", "where", "update_all"]
CALLS: ["attributes", "slice", "current_user", "project", "new", "execute", "id"]
CALLS: ["joins", "project", "id", "old_group", "id", "where"]
CALLS: ["joins", "project", "id", "old_group", "id", "where"]
CALLS: ["group_labels_applied_to_issues", "select", "group_labels_applied_to_merge_requests", "select", "new", "to_sql", "where", "reorder", "uniq"]
CALLS: ["project", "group", "is_a?", "transaction_begin", "clone_label_to_group_label", "label_ids_for_merge", "update_issuables", "update_issue_board_lists", "update_priorities", "subscribe_users", "update_project_labels", "find_in_batches", "valid?", "new", "transaction_end", "transaction"]
CALLS: ["attributes", "slice", "project", "group", "merge", "new", "save"]
CALLS: ["where", "destroy_all"]
CALLS: ["where", "update_all"]
CALLS: ["where", "update_all"]
CALLS: ["where", "update_all"]
CALLS: ["current_user", "title", "project", "group", "id", "new", "execute", "where", "not", "select"]
CALLS: ["where", "group", "pluck", "where", "id", "update_all"]
CALLS: ["find_or_create_label"]
CALLS: ["available_labels", "title", "find_by", "nil?", "skip_authorization", "current_user", "parent", "allowed?", "params", "new", "parent_type", "to_sym", "parent", "execute"]
CALLS: ["parent", "model_name", "param_key"]
CALLS: ["current_user", "parent_type", "to_sym", "parent", "id", "parent_is_group?", "new", "skip_authorization", "execute"]
CALLS: ["parent_type"]
CALLS: ["current_user", "id", "new", "execute"]
CALLS: ["current_user", "parent", "new", "execute"]
CALLS: ["params", "present?", "params", "convert_color_name_to_hex", "present?", "labels", "params", "create", "params", "new", "template", "save", "logger", "warn"]
CALLS: ["update?", "key", "zone", "now", "update_column"]
CALLS: ["read_only?", "key", "last_used_at", "zone", "now", "redis_lease", "try_obtain"]
CALLS: ["key", "id", "new"]
CALLS: []
CALLS: []
CALLS: ["user", "keys", "params", "create", "persisted?", "notification_service", "new_key"]
CALLS: ["user", "can?", "mailer", "id", "new_ssh_key_email", "deliver_later"]
CALLS: ["find_by", "user", "user_url", "notification_email", "subject", "mail"]
CALLS: ["new", "deploy_keys_projects", "build", "tap"]
CALLS: ["fetch", "fetch", "fetch", "fetch", "has_changes?", "todo_service", "current_user", "mark_pending_todos_as_done", "previous_changes", "include?", "previous_changes", "include?", "todo_service", "current_user", "update_issue", "assignees", "create_assignee_note", "notification_service", "current_user", "reassigned_issue", "todo_service", "current_user", "reassigned_issue", "previous_changes", "include?", "create_confidentiality_note", "labels", "present?", "notification_service", "current_user", "relabeled_issue", "mentioned_users", "present?", "notification_service", "current_user", "new_mentions_in_issue"]
CALLS: ["create_assignment_todo"]
CALLS: ["update_issuable"]
CALLS: ["relabeled_resource_email"]
CALLS: ["build_recipients", "map", "mailer", "user", "id", "id", "id", "reason", "send", "deliver_later", "each"]
CALLS: ["new_mentions_in_resource_email"]
CALLS: ["project", "current_user", "change_issue_confidentiality"]
CALLS: ["confidential", "new", "create_note"]
CALLS: ["current_user", "spam_check"]
CALLS: ["handle_move_between_ids", "filter_spam_check_params", "change_issue_duplicate", "move_issue_to_new_project", "update"]
CALLS: ["params", "delete", "current_user", "can_move?", "project", "update", "project", "current_user", "new", "execute"]
CALLS: ["params", "delete", "current_user", "new", "find_by", "project", "current_user", "new", "execute"]
CALLS: ["params", "params", "delete", "params", "delete", "get_issue_if_allowed", "get_issue_if_allowed", "move_between"]
CALLS: ["current_user", "new", "find_by", "project", "issues", "find", "current_user", "can?"]
CALLS: ["move_after", "move_before", "relative_position", "relative_position", "move_before", "relative_position", "relative_position", "relative_position", "position_between"]
CALLS: ["relative_position", "prev_relative_position", "shift_before?", "class", "parent_ids", "in_parents", "find_by!", "move_before", "relative_position", "relative_position", "position_between"]
CALLS: ["prev_relative_position", "relative_position"]
CALLS: ["relative_position", "class", "parent_ids", "in_parents", "relative_position", "where", "maximum"]
CALLS: ["relative_position", "next_relative_position", "shift_after?", "class", "parent_ids", "in_parents", "find_by!", "move_after", "relative_position", "relative_position", "position_between"]
CALLS: ["next_relative_position", "relative_position"]
CALLS: ["relative_position", "class", "parent_ids", "in_parents", "relative_position", "where", "minimum"]
CALLS: ["current_user", "can?", "reopen", "event_service", "current_user", "reopen_issue", "create_note", "notification_service", "current_user", "reopen_issue", "execute_hooks", "assignees", "invalidate_cache_counts", "update_project_counter_caches"]
CALLS: ["reopen_resource_email"]
CALLS: ["create_record_event"]
CALLS: ["current_user", "can_move?", "transaction_begin", "create_new_issue", "update_new_issue", "update_old_issue", "transaction_end", "transaction", "notify_participants"]
CALLS: ["notification_service", "issue_moved"]
CALLS: ["build_recipients", "mailer", "user", "reason", "issue_moved_email", "deliver_later", "map"]
CALLS: ["id", "id", "setup_issue_mail", "project", "id", "id", "issue_thread_options", "mail_answer_thread"]
CALLS: ["sender", "recipient", "title", "iid", "subject"]
CALLS: ["find", "project", "project_issue_url", "reply_key", "record"]
CALLS: ["cloneable_label_ids", "cloneable_milestone_id", "author", "description", "rewrite_content", "assignee_ids", "serializable_hash", "symbolize_keys", "merge", "new", "execute"]
CALLS: ["new", "rewrite", "inject"]
CALLS: ["milestone", "title", "group", "current_user", "group", "can?", "group", "id", "id", "new", "execute", "first", "id"]
CALLS: ["id", "labels", "pluck", "current_user", "new", "execute", "pluck"]
CALLS: ["assignee_id"]
CALLS: ["", "read_attribute", "merge"]
CALLS: ["add_note_moved_to", "close_issue", "mark_as_moved"]
CALLS: ["update"]
CALLS: ["noteable_moved"]
CALLS: ["include?", "to_reference", "new", "create_note"]
CALLS: ["rewrite_notes", "rewrite_issue_award_emoji", "add_note_moved_from"]
CALLS: ["noteable_moved"]
CALLS: ["rewrite_award_emoji"]
CALLS: ["award_emoji", "dup", "awardable", "save", "each"]
CALLS: ["notes_with_associations", "dup", "note", "rewrite_content", "created_at", "updated_at", "update", "rewrite_award_emoji", "find_each"]
CALLS: ["notes", "includes"]
CALLS: ["notes", "authors_loaded?", "notes", "award_emojis_loaded?", "any?", "notes", "includes", "notes"]
CALLS: ["loaded?", "to_a", "association", "loaded?", "all?"]
CALLS: ["loaded?", "to_a", "association", "loaded?", "all?"]
CALLS: ["notes", "includes"]
CALLS: ["current_user", "referenced_merge_requests", "project", "iid", "to_s", "sort", "current_user", "closed_by_merge_requests", "project", "iid", "to_s", "sort"]
CALLS: ["open?", "all_references", "notes", "system", "all_references", "each", "merge_requests", "select", "any?", "map", "id", "where", "pluck", "id", "in?", "select"]
CALLS: ["all_references", "notes_with_associations", "all_references", "each", "merge_requests", "sort_by", "target_project", "project", "select", "merge_requests_readable_by_user"]
CALLS: ["apply_filters_if_needed", "allowed?", "select", "user_scope"]
CALLS: ["allowed?", "call", "each"]
CALLS: ["project", "current_user", "new", "issue", "execute", "view_to_html_string", "json", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["current_user", "can?", "current_user", "can?", "create_issue_duplicate_note", "create_issue_canonical_note", "close_service", "project", "current_user", "new", "execute"]
CALLS: []
CALLS: ["project", "current_user", "mark_canonical_issue_of_duplicate"]
CALLS: ["to_reference", "new", "create_note"]
CALLS: ["project", "current_user", "mark_duplicate_issue"]
CALLS: ["to_reference", "new", "create_note"]
CALLS: []
CALLS: ["project", "current_user", "params", "new", "execute", "filter_spam_check_params", "filter_resolve_discussion_params", "create"]
CALLS: ["params", "delete", "params", "delete"]
CALLS: ["current_user", "can?", "close_issue"]
CALLS: ["filter_resolve_discussion_params", "project", "issues", "issue_params", "new"]
CALLS: ["confidential_changed?"]
CALLS: ["hook_data", "confidential?", "project", "execute_hooks", "project", "execute_services"]
CALLS: ["state_changed?"]
CALLS: []
CALLS: []
CALLS: ["model_name", "singular", "public_send", "each"]
CALLS: ["labels", "to_a", "mentioned_users", "to_a", "assignees", "to_a", "respond_to?", "total_time_spent"]
CALLS: ["params", "delete", "todo_service", "current_user", "new_award_emoji", "current_user", "toggle_award_emoji"]
CALLS: ["mark_pending_todos_as_done"]
CALLS: ["awarded_emoji?", "remove_award_emoji", "create_award_emoji"]
CALLS: ["award_emoji", "where", "destroy_all"]
CALLS: ["emoji_awardable?", "award_emoji", "normalize_name", "create"]
CALLS: ["system?"]
CALLS: ["normalize_emoji_name"]
CALLS: []
CALLS: ["award_emoji", "where", "exists?"]
CALLS: ["authenticate_user!", "params", "require", "awardable", "current_user", "user_can_award?", "awardable", "current_user", "toggle_award_emoji", "awardable", "to_todoable", "new", "current_user", "new_award_emoji"]
CALLS: ["awardable_by_user?", "allowed?"]
CALLS: ["user_authored?", "normalize_name", "awardable_votes?"]
CALLS: ["respond_to?", "author", "user"]
CALLS: []
CALLS: ["for_personal_snippet?", "noteable"]
CALLS: ["params", "delete", "todo_service", "current_user", "mark_todo", "current_user", "new", "find_by", "todo_service", "current_user", "mark_todos_as_done_by_ids"]
CALLS: ["params", "delete", "current_user", "project", "subscribe", "current_user", "project", "unsubscribe"]
CALLS: ["unsubscribe_from_other_levels", "find_or_initialize_subscription", "update"]
CALLS: ["subscriptions", "id", "try", "find_or_initialize_by"]
CALLS: ["subscriptions", "where", "blank?", "where", "not", "where", "update_all"]
CALLS: ["unsubscribe_from_other_levels", "find_or_initialize_subscription", "update"]
CALLS: ["params", "for", "unsubscribable?", "render_404", "current_user", "params", "unsubscribe_and_redirect"]
CALLS: ["noteable", "recipient", "project", "unsubscribe", "flash", "current_user", "issue_path", "merge_request_path", "root_path", "new_user_session_path"]
CALLS: ["issue_url"]
CALLS: ["issues_url", "to_s", "gsub"]
CALLS: ["project", "project_issue_url"]
CALLS: ["project", "project_issue_url"]
CALLS: ["project", "project_issue_path"]
CALLS: ["project", "project_issue_path"]
CALLS: ["params", "delete", "reopen_service", "project", "current_user", "new", "execute", "close_service", "project", "current_user", "new", "execute"]
CALLS: []
CALLS: []
CALLS: ["title_changed?", "description_changed?"]
CALLS: ["sort", "sort"]
CALLS: []
CALLS: []
CALLS: ["delete", "delete", "delete", "blank?", "blank?"]
CALLS: ["to_ability_name", "current_user", "can?", "params", "delete", "params", "delete", "params", "delete", "params", "delete", "params", "delete", "params", "delete", "params", "delete", "params", "delete", "params", "delete", "params", "delete", "params", "delete", "filter_assignee", "filter_milestone", "filter_labels"]
CALLS: ["params", "blank?", "params", "params", "params", "assignee_can_read?", "select", "params", "map", "params", "any?", "params", "params", "delete"]
CALLS: ["find_by_id", "to_ability_name", "persisted?", "project", "can?"]
CALLS: ["filter_labels_in_param", "filter_labels_in_param", "filter_labels_in_param", "find_or_create_label_ids"]
CALLS: ["params", "delete", "params", "split", "current_user", "parent", "strip", "available_labels", "new", "execute", "try", "map", "compact"]
CALLS: ["params", "to_a", "empty?", "params", "available_labels", "params", "where", "pluck"]
CALLS: ["params", "params", "project", "group", "self_and_ancestors", "pluck", "project", "id", "for_projects_and_groups", "find_by_id", "params"]
CALLS: ["", "compact", "any?", "arel_table", "in", "compact", "any?", "arel_table", "in", "reduce", "where"]
CALLS: ["params", "present?", "params", "to_s", "params", "assignee_can_read?", "params", "delete"]
CALLS: ["new", "destroy", "update_project_counter_caches", "assignees", "each", "destroy_target"]
CALLS: ["previous_changes", "include?", "previous_changes", "first", "create_title_change_note", "handle_description_change_note", "is_a?", "handle_time_tracking_note", "labels", "create_labels_note", "previous_changes", "include?", "create_discussion_lock_note", "previous_changes", "include?", "create_milestone_note"]
CALLS: ["issuable", "current_user", "discussion_lock"]
CALLS: ["discussion_locked?", "class", "to_s", "titleize", "downcase", "project", "new", "create_note"]
CALLS: ["issuable", "issuable", "project", "current_user", "issuable", "milestone", "change_milestone"]
CALLS: ["group_milestone?", "nil?", "to_reference", "new", "create_note"]
CALLS: ["create_wip_note", "issuable", "wipless_title_changed", "issuable", "issuable", "project", "current_user", "change_title"]
CALLS: ["title", "dup", "new", "inline_diffs", "new", "mark", "new", "mark", "new", "create_note"]
CALLS: ["issuable", "is_a?", "work_in_progress?", "issuable", "work_in_progress?", "issuable", "issuable", "project", "current_user", "handle_merge_request_wip"]
CALLS: ["work_in_progress?", "new", "create_note"]
CALLS: ["class", "wipless_title", "wipless_title"]
CALLS: ["title"]
CALLS: ["issuable", "labels", "issuable", "labels", "issuable", "issuable", "project", "current_user", "change_label"]
CALLS: ["count", "count", "to_reference", "map", "join", "map", "join", "present?", "present?", "present?", "pluralize", "new", "create_note"]
CALLS: ["issuable", "previous_changes", "include?", "issuable", "tasks?", "issuable", "updated_tasks", "any?", "create_task_status_note", "create_description_change_note"]
CALLS: ["issuable", "updated_tasks", "issuable", "issuable", "project", "current_user", "change_task_status", "each"]
CALLS: ["complete?", "source", "new", "create_note"]
CALLS: ["issuable", "issuable", "project", "current_user", "change_description"]
CALLS: ["new", "create_note"]
CALLS: ["issuable", "previous_changes", "include?", "create_time_estimate_note", "issuable", "time_spent?", "create_time_spent_note"]
CALLS: ["issuable", "issuable", "project", "issuable", "time_spent_user", "change_time_spent"]
CALLS: ["time_spent", "spent_at", "abs", "output", "new", "create_note"]
CALLS: ["issuable", "issuable", "project", "current_user", "change_time_estimate"]
CALLS: ["time_estimate", "output", "time_estimate", "new", "create_note"]
CALLS: ["classify", "constantize", "classify", "pluralize", "constantize", "params", "delete", "split", "where", "permitted_attrs", "params", "present?", "params", "delete", "each", "params", "to_s", "params", "current_user", "can?", "project", "current_user", "params", "new", "execute", "each", "count", "count", "zero?"]
CALLS: ["push", "push"]
CALLS: ["path", "directory?", "clean_up_export_files", "measure"]
CALLS: ["path", "path", "mmin", "popen"]
CALLS: ["reject_parent_id!", "group", "params", "valid_visibility_level_change?", "valid_share_with_group_lock_change?", "group", "params", "assign_attributes", "group", "save", "group", "errors", "message", "add"]
CALLS: ["changing_share_with_group_lock?", "current_user", "group", "can?", "group", "errors", "s_", "add"]
CALLS: ["params", "nil?", "params", "group", "share_with_group_lock"]
CALLS: ["params", "except!"]
CALLS: ["ensure_allowed_transfer", "proceed_to_transfer", "errors", "clear", "message"]
CALLS: ["group_is_already_root?", "raise_transfer_error", "supports_nested_groups?", "raise_transfer_error", "same_parent?", "raise_transfer_error", "valid_policies?", "raise_transfer_error", "namespace_with_same_path?", "raise_transfer_error"]
CALLS: []
CALLS: ["path", "exists?"]
CALLS: ["current_user", "can?", "current_user", "can?", "current_user", "can?"]
CALLS: ["id", "parent_id"]
CALLS: ["has_parent?"]
CALLS: ["transaction_begin", "update_group_attributes", "transaction_end", "transaction"]
CALLS: ["visibility_level", "visibility_level", "update_children_and_projects_visibility", "visibility_level", "visibility_level", "parent", "save!"]
CALLS: ["descendants", "visibility_level", "where", "select", "where", "visibility_level", "update_all", "all_projects", "visibility_level", "where", "visibility_level", "update_all"]
CALLS: ["group_path", "group_path", "namespace_or_group", "group_path", "include?", "supports_nested_groups?", "create_group_path"]
CALLS: ["find_by_full_path"]
CALLS: ["group_path", "split", "shift", "join", "params", "reverse_merge", "current_application_settings", "default_group_visibility", "namespace_or_group", "current_user", "new", "execute"]
CALLS: ["group", "prepare_for_destroy", "group", "projects", "current_user", "legacy_storage?", "new", "execute", "each", "group", "children", "current_user", "new", "execute", "each", "group", "chat_team", "current_user", "remove_mattermost_team", "group", "destroy"]
CALLS: ["new", "team_id", "destroy", "logger", "error"]
CALLS: ["params", "new", "can_use_visibility_level?", "can_create_group?", "name", "path", "dup", "create_chat_team?", "current_user", "new", "execute", "errors", "any?", "build_chat_team", "save", "current_user", "add_owner"]
CALLS: ["current_user", "params", "allowed_for?", "deny_visibility_level"]
CALLS: ["config", "mattermost", "enabled", "group", "chat_team", "nil?"]
CALLS: ["gravatar_enabled?", "presence", "presence", "strip", "downcase", "hexdigest", "gravatar_url", "strip", "url_encode", "strip", "url_encode"]
CALLS: ["gitlab_config", "https", "gravatar_config", "ssl_url", "gravatar_config", "plain_url"]
CALLS: ["config", "gravatar"]
CALLS: ["user", "gpg_keys", "params", "create", "persisted?", "notification_service", "new_gpg_key"]
CALLS: ["user", "can?", "mailer", "id", "new_gpg_key_email", "deliver_later"]
CALLS: ["find_by", "user", "user_url", "notification_email", "subject", "mail"]
CALLS: ["project", "empty_repo?", "project", "repository", "after_create", "project", "repository", "before_push_tag", "build_push_data", "new", "project", "current_user", "push", "project", "current_user", "new", "execute", "new", "build_system_push_data", "dup", "execute_hooks", "project", "dup", "execute_hooks", "project", "dup", "execute_services", "project", "id", "perform_async"]
CALLS: ["project", "current_user", "params", "params", "params", "build"]
CALLS: ["expire_statistics_caches", "expire_emptiness_caches", "expire_tags_cache", "repository_event"]
CALLS: ["empty_repo?", "repository", "after_create", "repository", "branch_name", "after_push_commit", "push_remove_branch?", "repository", "after_remove_branch", "push_to_new_branch?", "repository", "after_create_branch", "default_branch?", "process_default_branch", "repository", "default_branch", "params", "commits_between", "process_commit_messages", "push_to_existing_branch?", "repository", "params", "params", "commits_between", "process_commit_messages", "default_branch?", "update_gitattributes", "execute_related_hooks", "perform_housekeeping", "update_caches", "update_signatures"]
CALLS: ["params", "branch_ref?", "params", "ref_name", "project", "default_branch", "project", "default_branch", "nil?"]
CALLS: ["params", "branch_ref?", "params", "blank_ref?"]
CALLS: ["params", "branch_ref?", "params", "blank_ref?"]
CALLS: ["params", "branch_ref?", "params", "blank_ref?"]
CALLS: ["project", "repository", "params", "commit_count_for_ref", "max", "project", "repository", "params", "commits", "after_create_default_branch"]
CALLS: ["exists?", "cache", "raw_repository", "commit_count", "fetch"]
CALLS: ["new", "increment!", "needed?", "execute"]
CALLS: ["pushes_since_gc", "period_match?", "housekeeping_enabled?"]
CALLS: ["housekeeping_enabled"]
CALLS: ["gc_period", "full_repack_period", "repack_period", "pushes_since_gc", "any?"]
CALLS: ["housekeeping_incremental_repack_period"]
CALLS: ["id", "current_user", "id", "params", "params", "params", "perform_async", "new", "current_user", "build_push_data", "push", "current_user", "build_push_data", "new", "execute", "build_push_data", "dup", "perform_async", "build_push_data", "dup", "execute_hooks", "build_push_data", "dup", "execute_services", "push_remove_branch?", "project", "current_user", "new", "branch_name", "execute"]
CALLS: ["default_branch?", "last", "matches_cross_reference_regex?", "project", "id", "current_user", "id", "to_hash", "perform_async", "each"]
CALLS: ["last", "map", "empty?", "where", "pluck", "empty?", "project", "repository", "shas_with_signatures", "project", "id", "perform_async", "each"]
CALLS: ["default_branch?", "push_to_new_branch?", "new", "last", "raw_deltas", "new_path", "each", "each", "to_a", "types_in_paths", "id", "perform_async"]
CALLS: ["repository", "params", "copy_gitattributes"]
CALLS: ["expire_branches_cache"]
CALLS: ["expire_statistics_caches", "expire_branch_cache", "repository_event"]
CALLS: ["map", "compact", "render_notes"]
CALLS: ["current_user", "new", "render_options", "execute"]
CALLS: []
CALLS: ["destroy", "update_secondary_emails!"]
CALLS: ["new", "update_secondary_emails!", "execute"]
CALLS: ["set_notification_email", "set_public_email", "notification_email_changed?", "public_email_changed?", "save"]
CALLS: ["public_email", "blank?", "all_emails", "public_email", "include?", "public_email"]
CALLS: ["temp_oauth_email?", "email", "emails", "map", "concat"]
CALLS: ["notification_email", "blank?", "all_emails", "notification_email", "include?", "notification_email", "email"]
CALLS: ["emails", "merge", "create"]
CALLS: ["resend_confirmation_instructions"]
CALLS: ["current_user", "current_user", "new", "execute", "flash", "email", "flash", "profile_emails_url"]
CALLS: ["tracer", "position", "trace", "notes", "change_position", "project", "resolve_outdated_diff_discussions?", "current_user", "resolve_without_save", "position", "change_position", "each", "transaction_begin", "notes", "timeless", "each", "current_user", "project", "current_user", "diff_discussion_outdated", "transaction_end", "transaction"]
CALLS: ["noteable", "diff_refs", "merge_request_diffs", "viewable", "count", "version_params_for", "repository", "line_code", "url_helpers", "merge", "diffs_project_merge_request_url", "reply_attributes", "merge", "merge", "create", "system_note_metadata", "new"]
CALLS: ["", "without_state"]
CALLS: ["merge_request_diff_for", "id", "head_sha", "merge_request_diff_for", "id", "start_sha"]
CALLS: ["is_a?", "start_sha", "head_sha", "base_sha", "viewable_diffs", "attributes", "keys", "slice", "find"]
CALLS: ["merge_request_diffs", "viewable", "to_a"]
CALLS: ["project", "params", "params", "params", "new"]
CALLS: ["resolve_discussion", "each"]
CALLS: ["current_user", "can_resolve?", "current_user", "resolve!", "project", "current_user", "new", "merge_request", "execute", "follow_up_issue", "project", "current_user", "follow_up_issue", "discussion_continued_in_issue"]
CALLS: ["to_reference", "reply_attributes", "merge", "merge", "create", "system_note_metadata", "new"]
CALLS: ["params"]
CALLS: ["resolvable?", "noteable", "author", "project", "can?"]
CALLS: ["deploy_tokens", "params", "create"]
CALLS: ["params", "user", "merge", "create"]
CALLS: ["current_user", "project", "can?", "project", "repository", "merged_branch_names", "merge_request_branch_names", "project", "protected?", "reject", "project", "current_user", "new", "execute", "each"]
CALLS: ["project", "origin_merge_requests", "opened", "reorder", "uniq", "pluck", "project", "merge_requests", "opened", "reorder", "uniq", "pluck", "uniq"]
CALLS: ["merge_requests", "id", "where"]
CALLS: ["project", "repository", "find_branch", "current_user", "project", "can?", "error", "error", "current_user", "rm_branch", "success", "error", "message", "error"]
CALLS: ["before_remove_branch", "raw_repository", "rm_branch", "after_remove_branch"]
CALLS: ["expire_branches_cache", "repository_event"]
CALLS: ["raw_repository", "find_branch"]
CALLS: ["filter_spam_check_params", "project", "project", "snippets", "params", "build", "params", "new", "current_user", "params", "allowed_for?", "deny_visibility_level", "author", "current_user", "current_user", "spam_check", "save", "new", "create"]
CALLS: ["project", "repository", "find_tag", "project", "releases", "find_by", "error", "project", "releases", "new", "save", "success", "error"]
CALLS: ["executable?", "transaction_begin", "expanded_environment_url", "environment", "external_url", "expanded_environment_url", "environment", "action", "fire_state_event", "environment", "save", "environment", "stopped?", "deploy", "tap", "transaction_end", "transaction"]
CALLS: ["find_by", "project", "new", "execute", "project", "new", "execute"]
CALLS: ["environment_url", "environment_url", "variables", "expand"]
CALLS: ["project", "deployments", "environment", "job", "ref", "job", "tag", "job", "sha", "job", "user", "job", "on_stop", "create"]
CALLS: ["environment_options"]
CALLS: ["project", "job", "environment", "present?", "environment"]
CALLS: ["project", "empty_repo?", "create_master_branch", "project", "current_user", "new", "execute", "repository", "current_user", "add_branch", "success", "error", "message", "error"]
CALLS: ["project", "repository", "current_user", "create_file"]
CALLS: ["options", "options", "multi_action"]
CALLS: ["raw_repository", "add_branch", "after_create_branch"]
CALLS: ["repository", "start_project", "repository", "start_ref_name", "compare_source_branch", "new"]
CALLS: ["raw_repository", "raw_repository", "compare_source_branch"]
CALLS: ["validate!", "create_commit!", "success", "message", "error"]
CALLS: ["repository", "current_user", "update_file"]
CALLS: ["project", "new", "params", "actions_after_lfs_transformation", "commit_actions!"]
CALLS: ["repository", "current_user", "multi_action", "raise_error"]
CALLS: ["new_file", "content", "encoding", "map"]
CALLS: ["repository", "current_user", "delete_file"]
CALLS: ["options", "options", "multi_action"]
CALLS: ["project", "new", "new_file", "content", "create_transformed_commit"]
CALLS: ["repository", "current_user", "create_file"]
CALLS: ["repository", "current_user", "create_dir"]
CALLS: ["options", "options", "multi_action"]
CALLS: ["values", "all?", "render_404", "join", "project_tree_path", "project_tree_path", "create_commit", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["commit_change"]
CALLS: ["repository", "respond_to?", "current_user", "public_send", "repository", "current_user", "public_send", "to_s", "dasherize", "current_user", "change_type_title", "current_user", "change_type_title", "to_s", "dasherize"]
CALLS: []
CALLS: ["commit_change"]
CALLS: ["cohorts"]
CALLS: ["months", "ago", "beginning_of_month", "to_date", "new", "last", "running_totals", "counts_by_month", "to_i", "pop", "first", "new"]
CALLS: ["column_to_date", "column_to_date", "months", "ago", "end_of_month", "where", "group", "reorder", "count"]
CALLS: ["postgresql?"]
CALLS: ["counts_by_month", "map", "last", "to_i", "to_i", "reduce", "reverse", "first", "zero?", "map"]
CALLS: ["params", "update"]
CALLS: ["status", "continue_creation", "finalize_creation", "status", "status_message", "make_errored!", "request_operation"]
CALLS: ["new", "provider", "execute"]
CALLS: ["new", "provider", "execute"]
CALLS: ["elapsed_time_from_creation", "provider", "cluster_id", "perform_in", "provider", "_", "make_errored!"]
CALLS: ["now", "utc", "start_time", "to_time", "utc"]
CALLS: ["make_creating", "cluster_id", "perform_in", "errors", "make_errored!", "get_operation_id"]
CALLS: ["provider", "api_client", "provider", "gcp_project_id", "provider", "zone", "provider", "cluster", "name", "provider", "num_nodes", "provider", "machine_type", "projects_zones_clusters_create", "status", "status", "provider", "status_message", "make_errored!", "provider", "api_client", "self_link", "parse_operation_id", "provider", "make_errored!", "provider", "message", "make_errored!"]
CALLS: ["access_token", "access_token", "new"]
CALLS: ["configure_provider", "configure_kubernetes", "cluster", "save!", "message", "make_errored!", "message", "make_errored!"]
CALLS: ["cluster", "platform_type", "cluster", "gke_cluster", "endpoint", "gke_cluster", "master_auth", "cluster_ca_certificate", "decode64", "gke_cluster", "master_auth", "username", "gke_cluster", "master_auth", "password", "request_kubernetes_token", "build_platform_kubernetes"]
CALLS: ["provider", "api_client", "provider", "gcp_project_id", "provider", "zone", "cluster", "name", "projects_zones_clusters_get"]
CALLS: ["gke_cluster", "endpoint", "gke_cluster", "master_auth", "cluster_ca_certificate", "decode64", "gke_cluster", "master_auth", "username", "gke_cluster", "master_auth", "password", "new", "execute"]
CALLS: ["provider", "endpoint", "gke_cluster", "endpoint", "provider", "status_event"]
CALLS: ["api_client", "gcp_project_id", "zone", "operation_id", "projects_zones_operations", "block_given?", "message", "make_errored!"]
CALLS: ["can_create_cluster?", "_", "new", "create_cluster", "persisted?", "id", "perform_async", "tap"]
CALLS: ["project", "clusters", "empty?"]
CALLS: ["cluster_params", "create"]
CALLS: ["params", "access_token", "try", "params", "current_user", "project", "merge"]
CALLS: ["application_class", "cluster", "find_or_create_by!", "make_scheduled!", "name", "id", "perform_async", "try"]
CALLS: ["params"]
CALLS: ["params", "render_404"]
CALLS: ["app", "scheduled?", "app", "make_installing!", "helm_api", "install_command", "install", "app", "name", "app", "id", "perform_in", "app", "message", "make_errored!", "app", "make_errored!"]
CALLS: ["app", "install_command"]
CALLS: ["kubeclient", "new"]
CALLS: ["name", "chart", "values", "repository", "new"]
CALLS: ["name"]
CALLS: []
CALLS: []
CALLS: ["name", "chart", "values", "new"]
CALLS: ["name", "chart", "values", "new"]
CALLS: ["name", "new"]
CALLS: ["app", "installing?", "installation_phase", "on_success", "on_failed", "check_timeout", "app", "errored?", "app", "message", "make_errored!"]
CALLS: ["helm_api", "install_command", "pod_name", "installation_status"]
CALLS: ["timeouted?", "app", "make_errored!", "remove_installation_pod", "app", "name", "app", "id", "perform_in"]
CALLS: ["helm_api", "install_command", "pod_name", "delete_installation_pod!"]
CALLS: ["now", "utc", "app", "updated_at", "to_time", "utc"]
CALLS: ["app", "installation_errors", "make_errored!", "remove_installation_pod"]
CALLS: ["helm_api", "install_command", "pod_name", "installation_log"]
CALLS: ["app", "make_installed!", "remove_installation_pod"]
CALLS: ["app", "external_ip", "try_obtain_lease", "ingress_ip", "app", "ingress_ip", "update!"]
CALLS: ["service", "status", "loadBalancer", "ingress", "first", "ip"]
CALLS: ["project", "runners", "can_pick?", "tick_runner_queue", "each", "project", "shared_runners_enabled?", "shared", "can_pick?", "tick_runner_queue", "each"]
CALLS: ["projects", "with_shared_runners", "any?"]
CALLS: ["", "where"]
CALLS: ["hex", "runner_queue_key", "set_key_and_notify", "tap"]
CALLS: ["token"]
CALLS: ["ref_protected?", "protected?", "project_id", "assignable_for?", "accepting_tags?"]
CALLS: ["new", "can_create_tag?", "can_update_branch?"]
CALLS: ["run_untagged?", "has_tags?", "tag_list", "tag_list", "empty?"]
CALLS: ["is_shared?", "projects", "exists?"]
CALLS: ["", "where"]
CALLS: ["present?", "environments", "stop_action?", "current_user", "can?", "current_user", "stop_with_action!", "each"]
CALLS: ["available?", "stop!", "stop_action", "play"]
CALLS: ["on_stop", "present?", "manual_actions", "manual_actions", "on_stop", "find_by"]
CALLS: ["deployable", "try"]
CALLS: ["", "where"]
CALLS: ["project", "new", "execute"]
CALLS: ["schedule", "id", "current_user", "id", "perform_async", "flash", "project_pipelines_path", "html_safe", "flash", "pipeline_schedules_path"]
CALLS: ["playable?", "respond_422", "current_user", "play", "build_path"]
CALLS: ["build", "playable?", "request", "current_user", "build", "can?"]
CALLS: ["build", "playable?", "request", "current_user", "build", "can?"]
CALLS: []
CALLS: ["action?", "manual?", "complete?"]
CALLS: ["available?", "stop_action", "present?"]
CALLS: ["stop_action", "present?"]
CALLS: ["current_user", "can?", "retryable_builds", "current_user", "can?", "project", "current_user", "new", "reprocess!", "find_each", "builds", "latest", "skipped", "process", "retry_optimistic_lock", "find_each", "project", "current_user", "new", "close_all", "process!"]
CALLS: ["todo_service", "merge_request_build_retried", "pipeline_merge_requests"]
CALLS: ["current_user", "can?", "public_send", "map", "current_user", "push", "retried", "transaction_begin", "pipeline", "builds", "latest", "name", "where", "update_all", "project", "builds", "create!", "transaction_end", "transaction"]
CALLS: ["", "where"]
CALLS: ["statuses", "order", "statuses", "latest"]
CALLS: ["project", "user", "new", "execute"]
CALLS: ["reprocess!", "pipeline", "stage_idx", "mark_as_processable_after_stage", "enqueue!", "project", "current_user", "new", "close", "tap"]
CALLS: ["builds", "skipped", "after_stage", "find_each"]
CALLS: ["", "where"]
CALLS: ["runner", "shared?", "builds_for_shared_runner", "builds_for_specific_runner", "enabled?", "runner", "tags", "ids", "matches_tag_ids", "runner", "run_untagged?", "with_any_tags", "runner", "can_pick?", "runner_id", "runner", "id", "run!", "register_success", "new", "drop!", "find", "register_failure", "new"]
CALLS: ["pages_deployments_failed_total_counter", "increment"]
CALLS: ["counter"]
CALLS: ["runner", "shared?", "jobs_running_for_project", "queued_at", "nil?", "job_queue_duration_seconds", "now", "queued_at", "observe", "attempt_counter", "increment"]
CALLS: ["histogram"]
CALLS: ["counter"]
CALLS: ["runner", "shared?", "project", "builds", "running", "shared", "where", "limit", "count"]
CALLS: ["failed_attempt_counter", "increment", "attempt_counter", "increment"]
CALLS: ["counter"]
CALLS: ["new_builds", "runner", "projects", "without_deleted", "with_builds_enabled", "where", "order"]
CALLS: ["pending", "unstarted", "runner", "ref_protected?", "ref_protected"]
CALLS: ["", "where"]
CALLS: ["", "where"]
CALLS: ["", "with_feature_enabled"]
CALLS: ["new_builds", "joins", "where", "joins", "where", "running_builds_for_shared_runners", "to_sql", "joins", "order"]
CALLS: ["running", "shared", "where", "group", "select"]
CALLS: ["", "where", "where", "where", "select", "where"]
CALLS: ["", "where", "where", "where", "where", "not", "select", "where"]
CALLS: ["update_retried", "stage_indexes_of_created_builds", "process_stage", "map", "update_status", "flatten", "any?"]
CALLS: ["pipeline", "statuses", "latest", "group", "having", "pluck", "any?", "pipeline", "statuses", "latest", "map", "where", "where", "map", "not", "update_all"]
CALLS: ["created_builds", "order", "pluck"]
CALLS: ["pipeline", "builds", "created"]
CALLS: ["status_for_prior_stages", "include?", "created_builds_in_stage", "process_build", "retry_lock", "select"]
CALLS: ["created_builds", "where"]
CALLS: ["pipeline", "builds", "where", "latest", "status"]
CALLS: ["when", "valid_statuses_for_when", "include?", "action?", "actionize", "enqueue", "skip"]
CALLS: []
CALLS: ["current_user", "can?", "enqueue", "current_user", "update", "tap", "current_user", "retry"]
CALLS: ["project", "new", "execute"]
CALLS: ["pipeline", "current_user", "retry_failed", "project", "project_pipelines_path", "html", "json", "respond_to"]
CALLS: ["project", "new", "execute"]
CALLS: ["retryable?", "respond_422", "current_user", "retry", "build_path"]
CALLS: ["build", "retryable?", "request", "current_user", "build", "can?"]
CALLS: []
CALLS: ["retryable_builds", "any?"]
CALLS: ["success?", "failed?", "canceled?"]
CALLS: ["build", "failed?"]
CALLS: ["hook", "hook_log", "request_data", "hook_log", "trigger", "execute", "set_hook_execution_notice", "edit_project_hook_path"]
CALLS: ["hook", "web_hook_logs", "params", "find"]
CALLS: ["flash", "flash", "flash"]
CALLS: ["hook", "web_hook_logs", "params", "find"]
CALLS: ["hook", "hook_log", "request_data", "hook_log", "trigger", "execute", "set_hook_execution_notice", "edit_admin_hook_path"]
CALLS: ["trigger_from_token", "trigger_from_token", "create_pipeline_from_trigger"]
CALLS: ["params", "to_s", "find_by_token", "strong_memoize"]
CALLS: ["project", "project", "project", "owner", "params", "new", "trigger_requests", "build", "variables", "variables", "build", "execute", "persisted?", "success", "errors", "messages", "error"]
CALLS: ["read_secrets", "dig", "dig", "decode64", "each"]
CALLS: ["build_kubeclient!", "get_secrets", "as_json", "error_code"]
CALLS: ["trace_sections", "empty?", "table_name", "extract_sections", "bulk_insert"]
CALLS: ["trace", "extract_sections", "delete", "find_or_create_name", "id", "project", "id", "id", "merge", "map"]
CALLS: ["project", "build_trace_section_names", "find_or_create_by!", "project", "build_trace_section_names", "find_by!"]
CALLS: ["stage_id", "present?", "invalid?", "ensure_stage", "stage_id", "id", "block_given?", "tap"]
CALLS: ["find_stage", "create_stage"]
CALLS: ["stage", "pipeline", "project", "create!"]
CALLS: ["pipeline", "stages", "stage", "find_by"]
CALLS: ["new", "params", "params", "params", "params", "project", "current_user", "new", "pipeline", "new", "schedule_head_pipeline_update", "complete?", "project", "auto_cancel_pending_pipelines?", "cancel_pending_pipelines", "pipeline_created_counter", "increment", "process!", "build!", "pipeline"]
CALLS: ["related_merge_requests", "id", "perform_async", "each"]
CALLS: ["pipeline", "project", "source_of_merge_requests", "opened", "pipeline", "ref", "where"]
CALLS: ["counter"]
CALLS: ["auto_cancelable_pipelines", "pipeline", "auto_cancel_running", "find_each", "retry_lock"]
CALLS: ["project", "pipelines", "pipeline", "ref", "where", "where", "pipeline", "id", "not", "where", "project", "pipeline", "ref", "commit", "try", "not", "created_or_pending"]
CALLS: ["", "where"]
CALLS: ["update", "auto_canceled_by", "cancel_running"]
CALLS: ["project", "pipeline_schedules", "pipeline_schedule_params", "create"]
CALLS: ["params", "current_user", "merge"]
CALLS: ["new", "projects_list", "project_id", "projects_get_billing_info", "billing_enabled", "select"]
CALLS: ["find_chat_name", "update_last_used_at"]
CALLS: ["find_by"]
CALLS: ["new", "execute"]
CALLS: ["update_last_used_at?", "id", "to_i", "new", "try_obtain", "touch"]
CALLS: ["last_used_at", "nil?", "last_used_at", "ago"]
CALLS: ["chat_name_params", "values", "all?", "request_token", "new_profile_chat_name_url"]
CALLS: ["chat_name_token", "chat_name_params", "store!"]
CALLS: ["board", "position", "params", "movable?", "valid_move?", "reorder_intermediate_lists", "update_list_position", "with_lock"]
CALLS: ["new_position", "update_attribute"]
CALLS: ["old_position", "new_position", "decrement_intermediate_lists", "increment_intermediate_lists"]
CALLS: ["board", "lists", "movable", "new_position", "where", "old_position", "where", "update_all"]
CALLS: ["board", "lists", "movable", "old_position", "where", "new_position", "where", "update_all"]
CALLS: ["new_position", "present?", "new_position", "old_position", "new_position", "new_position", "board", "lists", "movable", "size"]
CALLS: ["lists", "backlog", "exists?", "lists", "create", "lists"]
CALLS: ["lists", "movable", "empty?", "transaction_begin", "label_params", "create_list", "each", "transaction_end", "transaction"]
CALLS: ["find_or_create_label", "parent", "current_user", "id", "new", "execute"]
CALLS: ["lists", "create"]
CALLS: ["destroyable?", "board", "decrement_higher_lists", "remove_list", "with_lock"]
CALLS: ["destroy"]
CALLS: ["board", "lists", "movable", "position", "where", "update_all"]
CALLS: ["label?"]
CALLS: ["transaction_begin", "available_labels_for", "params", "find", "next_position", "create_list", "transaction_end", "transaction"]
CALLS: ["lists", "movable", "maximum", "nil?", "succ"]
CALLS: ["group_board?", "parent", "id", "merge!", "parent", "id", "current_user", "new", "execute"]
CALLS: ["parent", "boards", "empty?", "create_board!", "boards"]
CALLS: ["parent", "current_user", "new", "execute"]
CALLS: ["parent", "boards", "params", "create", "persisted?", "lists", "create", "lists", "create"]
CALLS: ["current_user", "can?", "issue_params", "empty?", "update"]
CALLS: ["set_parent", "set_state", "set_scope", "params"]
CALLS: ["params", "board", "group_board?"]
CALLS: ["params", "list", "list", "closed?"]
CALLS: ["params", "key?", "board", "lists", "params", "find"]
CALLS: ["board", "lists", "params", "delete", "find"]
CALLS: ["ls_files", "json", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["root_ref", "raw_repository", "ls_files"]
CALLS: ["parent", "is_a?", "params", "parent", "id", "params", "parent", "id"]
CALLS: ["current_user", "filter_params", "new", "execute", "movable_list?", "closed_list?", "without_board_labels", "movable_list?", "with_list_label", "order_by_position_and_priority"]
CALLS: ["where", "list", "label_id", "where", "limit", "arel", "exists", "where"]
CALLS: ["board_label_ids", "any?", "where", "issues_label_links", "limit", "arel", "exists", "not"]
CALLS: ["where", "board_label_ids", "where"]
CALLS: ["board", "lists", "movable", "pluck"]
CALLS: ["list", "present?", "list", "closed?"]
CALLS: ["list", "present?", "list", "movable?"]
CALLS: ["order_labels_priority", "nulls_last_order", "nulls_last_order", "reorder"]
CALLS: ["params", "list", "label_id", "merge", "create_issue"]
CALLS: ["project", "current_user", "new", "execute"]
CALLS: ["can_create_board?", "create_board!"]
CALLS: ["parent", "boards", "size"]
CALLS: ["params", "present?", "params", "update_attributes"]
CALLS: ["params", "new", "execute", "save", "tap"]
CALLS: ["is_a?", "params", "merge", "new", "params", "merge", "new"]
CALLS: ["registry", "enabled", "error", "scope", "current_user", "project", "error", "scope", "authorized_token", "encoded"]
CALLS: ["registry", "key", "new", "issuer", "registry", "issuer", "audience", "params", "subject", "current_user", "try", "expire_time", "class", "token_expire_at", "compact", "tap"]
CALLS: ["create"]
CALLS: ["update"]
CALLS: ["stop_environments"]
CALLS: ["project", "current_user", "new", "branch_name", "execute"]
CALLS: ["request", "project"]
CALLS: ["request", "project"]
CALLS: ["request", "project"]
CALLS: ["build", "project"]
CALLS: ["job", "project"]
CALLS: []
CALLS: ["invalidate_issue_cache_counts", "invalidate_merge_request_cache_counts", "invalidate_todos_done_count", "invalidate_todos_pending_count", "invalidate_personal_projects_count"]
CALLS: ["cache", "id", "delete"]
CALLS: ["cache", "id", "delete"]
CALLS: ["cache", "id", "delete"]
CALLS: ["cache", "id", "delete"]
CALLS: []
CALLS: ["supported_events", "include?", "username", "password", "ref_name", "build_url", "build_type", "post"]
CALLS: ["teamcity_url", "join", "to_s"]
CALLS: ["bamboo_url", "join", "to_s"]
CALLS: ["supported_events", "include?", "ref_name", "blank_ref?", "blank_ref?", "api_key", "user_key", "device", "priority", "project", "full_name", "project", "full_name", "sound", "sound", "post"]
CALLS: ["supported_events", "include?", "allowed_branch?", "to_json", "token", "post", "each"]
CALLS: ["present?", "restrict_to_branch", "present?", "ref_name", "restrict_to_branch", "split", "map", "present?", "include?"]
CALLS: ["supported_events", "include?", "should_pipeline_be_notified?", "retrieve_recipients", "any?", "new", "perform"]
CALLS: ["recipients", "to_s", "split", "reject"]
CALLS: ["notify_only_broken_pipelines?"]
CALLS: ["notify_only_broken_pipelines?"]
CALLS: ["notify_for_ref?", "notify_for_pipeline?"]
CALLS: ["notify_only_broken_pipelines?"]
CALLS: ["dig", "notify_only_default_branch?", "ref_name", "dig", "project", "default_branch"]
CALLS: ["supported_events", "include?", "service_hook", "execute"]
CALLS: []
CALLS: ["supported_events", "include?", "type", "project_url", "project_url", "head", "type", "code", "project_url", "type", "project_url", "message", "logger", "info"]
CALLS: ["supported_events", "include?", "project_id", "channels", "colorize_messages", "settings", "perform_async"]
CALLS: ["server_host", "present?", "server_host", "server_port", "present?", "server_port"]
CALLS: ["cache", "ssh_algorithms_hashes", "host", "gitlab_pages", "gitlab_ci", "deep_symbolize_keys", "fetch"]
CALLS: ["gitlab_ci", "to_h", "artifacts", "max_size", "megabytes", "megabytes", "merge"]
CALLS: ["pages", "to_h", "pages", "host", "resolv_dns", "merge"]
CALLS: ["getaddress"]
CALLS: ["ssh_algorithm_hashes", "map", "compact"]
CALLS: ["ssh_algorithm_file_content", "present?", "ssh_algorithm_md5", "ssh_algorithm_sha256"]
CALLS: ["hexdigest"]
CALLS: ["hexdigest", "scan", "join"]
CALLS: ["ssh_algorithm_file", "exist?", "read"]
CALLS: ["downcase", "join"]
CALLS: ["supported_events", "include?", "create_message", "present?", "gate", "room", "message_options", "send"]
CALLS: ["create_push_message", "update?", "create_issue_message", "update?", "create_merge_request_message", "create_note_message", "should_pipeline_be_notified?", "create_pipeline_message"]
CALLS: ["project_url", "escape", "project_url", "project_link", "humanized_status"]
CALLS: []
CALLS: ["project_url", "project_name"]
CALLS: ["project", "full_name", "gsub"]
CALLS: ["project", "full_name", "gsub"]
CALLS: ["project", "project", "full_name"]
CALLS: ["project_name", "project_url"]
CALLS: ["project_name", "project_url"]
CALLS: ["project_name", "project_url"]
CALLS: ["status", "status"]
CALLS: ["project_name", "project_url", "link"]
CALLS: []
CALLS: ["project_name", "project_url", "link"]
CALLS: ["project_name", "project_url", "link"]
CALLS: ["new", "new", "new", "truncate_sha", "format_title", "new", "format_title", "new", "format_title", "new", "format_title", "project_link", "markdown"]
CALLS: ["render_line"]
CALLS: ["lines", "first", "chomp", "markdown"]
CALLS: ["lines", "first", "chomp"]
CALLS: ["lines", "first", "chomp"]
CALLS: ["new", "render_line", "project_url", "project_link", "markdown"]
CALLS: ["new", "render_line", "project_link", "markdown"]
CALLS: ["tag_ref?", "ref_name", "blank_ref?", "project_url", "escape", "project_link", "blank_ref?", "project", "web_url", "project_name", "project", "web_url", "escape", "project", "web_url", "project", "full_name", "gsub!", "project", "web_url", "take", "render_line", "each", "count", "count"]
CALLS: ["notify", "present?", "notify", "to_boolean", "message_color"]
CALLS: ["pipeline_status_color", "color"]
CALLS: []
CALLS: ["api_version", "present?", "api_version", "server", "blank?", "server", "token", "new"]
CALLS: ["supported_events", "include?", "token", "api_key", "project", "repository", "path_to_repo", "execute"]
CALLS: ["supported_events", "include?", "token", "project", "repository", "config", "gitlab", "url", "project", "full_path", "config", "gitlab", "url", "project", "full_path", "config", "gitlab", "url", "project", "full_path", "post"]
CALLS: ["properties", "get"]
CALLS: ["supported_events", "include?", "project_id", "recipients", "send_from_committer_email?", "disable_diffs?", "perform_async"]
CALLS: ["disable_diffs", "to_boolean"]
CALLS: ["push_valid?", "service_hook", "execute", "merge_request_valid?", "service_hook", "execute", "tag_push_valid?", "service_hook", "execute"]
CALLS: []
CALLS: ["project", "merge_requests", "opened", "project", "id", "ref_name", "where", "empty?", "blank_ref?"]
CALLS: ["blank_ref?"]
CALLS: ["supported_events", "include?", "webhook", "present?", "custom_data", "get_message", "get_channel_field", "presence", "channel", "username", "username", "notify"]
CALLS: ["custom_data", "merge"]
CALLS: ["event_channel_name", "public_send"]
CALLS: []
CALLS: ["notify_for_ref?", "new", "update?", "new", "update?", "new", "new", "should_pipeline_be_notified?", "new", "new"]
CALLS: ["project_url", "project_name", "merge"]
CALLS: ["supported_events", "include?", "build_message", "room", "auth", "speak"]
CALLS: ["ref_name", "project", "full_name", "blank_ref?", "blank_ref?", "project", "web_url"]
CALLS: ["rooms", "find", "base_uri", "merge", "post", "code"]
CALLS: ["base_uri", "get", "code"]
CALLS: ["subdomain"]
CALLS: ["token"]
CALLS: ["params", "project", "actor", "auth_params", "new", "authentication_abilities", "execute"]
CALLS: ["params", "permit"]
CALLS: ["supported_events", "include?", "service_hook", "execute"]
CALLS: ["supported_events", "include?", "build_key", "get_path"]
CALLS: ["build_url", "username", "password", "get"]
CALLS: ["build_url", "username", "blank?", "password", "blank?", "get", "username", "password", "get"]
CALLS: ["supported_events", "include?", "subdomain", "token", "to_json", "post"]
CALLS: ["supported_events", "include?", "ref_name", "restrict_to_branch", "to_s", "length", "index", "nil?", "project", "full_name", "check_commit", "each"]
CALLS: ["scan", "client", "find_by_id", "add_comment", "update", "logger", "message", "error", "each"]
CALLS: ["new", "refresh_cache", "each"]
CALLS: ["hooks", "hooks_for", "to_s", "async_execute", "each", "new", "execute_hooks", "run_after_commit_or_now"]
CALLS: ["merge_request", "target_project"]
CALLS: ["target_project", "new", "refresh_cache"]
CALLS: ["target_project"]
CALLS: ["assignee"]
CALLS: ["source"]
CALLS: ["project", "new", "refresh_cache"]
CALLS: ["new", "execute"]
CALLS: ["new", "execute"]
CALLS: []
CALLS: ["current_page", "join_lateral_supported?", "relation_with_join_lateral", "relation_without_join_lateral", "with_associations", "to_a"]
CALLS: ["", "includes"]
CALLS: ["projects", "select", "to_sql", "filtered_events", "limit_for_join_lateral", "limit", "where", "to_sql", "base_relation", "from", "table_name", "joins", "paginate_events"]
CALLS: []
CALLS: ["unscoped", "recent"]
CALLS: ["limit", "offset"]
CALLS: ["base_relation", "apply_filter", "base_relation"]
CALLS: ["filtered_events", "projects", "in_projects", "paginate_events"]
CALLS: ["", "includes", "preload"]
CALLS: ["projects", "first"]
CALLS: ["author", "detect_mentionable_changes", "empty?", "create_cross_references!"]
CALLS: ["changes", "present?", "changes", "previous_changes", "dup", "class", "mentionable_attrs", "map", "include?", "select"]
CALLS: ["pipeline_data", "project", "execute_hooks", "project", "execute_services"]
CALLS: ["build"]
CALLS: ["project", "build", "project", "dup", "execute_hooks", "project", "dup", "execute_services", "new", "execute", "project", "running_or_pending_build_count"]
CALLS: ["cache", "id", "builds", "running_or_pending", "count", "fetch"]
CALLS: ["", "where"]
CALLS: ["all", "order_id_desc", "by_username", "by_search", "by_blocked", "by_active", "by_external_identity", "by_external", "by_2fa", "by_created_at", "by_custom_attributes"]
CALLS: ["params", "with_two_factor", "without_two_factor"]
CALLS: ["current_user", "admin?", "where", "not", "params", "external"]
CALLS: ["current_user", "admin?", "params", "params", "joins", "params", "params", "with_extern_uid", "merge"]
CALLS: ["", "normalize_uid", "iwhere", "with_provider"]
CALLS: ["ldap_provider?", "normalize_dn", "to_s"]
CALLS: ["", "where"]
CALLS: ["params", "active"]
CALLS: ["params", "blocked"]
CALLS: ["params", "present?", "params", "search"]
CALLS: ["params", "params", "where"]
CALLS: ["params", "params", "params", "present?", "params", "search"]
CALLS: ["params", "present?", "joins", "params", "where"]
CALLS: ["search", "search", "full_search"]
CALLS: ["fuzzy_search"]
CALLS: ["params", "is_a?", "current_user", "allowed?", "reflect_on_association", "klass", "arel_table", "model", "arel_table", "klass", "select", "foreign_key", "association_primary_key", "eq", "where", "params", "where", "where", "inject"]
CALLS: ["params", "present?", "params", "created_before", "params", "present?", "params", "created_after"]
CALLS: ["", "scoped_table", "gteq", "where"]
CALLS: ["arel_table", "table_name", "alias"]
CALLS: ["arel_table", "table_name", "alias"]
CALLS: ["", "scoped_table", "lteq", "where"]
CALLS: ["params", "recent_events", "joins", "with_associations", "params", "limit_recent"]
CALLS: ["recent", "limit", "offset"]
CALLS: ["sql", "from"]
CALLS: ["project?", "params", "find", "pending_delete?", "current_user", "allowed?"]
CALLS: ["current_user", "todos", "by_action_id", "by_action", "by_author", "by_state", "by_type", "by_project", "sort"]
CALLS: ["type?", "type", "where"]
CALLS: ["type", "present?", "type", "include?"]
CALLS: ["params", "to_s", "done", "pending"]
CALLS: ["", "with_state"]
CALLS: ["project?", "project", "where", "current_user", "public_or_visible_to_user", "joins", "merge"]
CALLS: ["project_authorizations", "select", "where", "levels_for_user", "id", "where", "public_to_user"]
CALLS: ["authorizations_for_projects", "levels_for_user", "where", "public_to_user"]
CALLS: ["author?", "author", "try", "where"]
CALLS: ["action_id?", "action_id", "where"]
CALLS: ["params"]
CALLS: ["action_id", "present?", "action_id", "to_i", "key?"]
CALLS: ["action?", "to_action_id", "where"]
CALLS: ["params", "params", "id", "where"]
CALLS: ["active", "inactive"]
CALLS: ["", "where"]
CALLS: ["", "where"]
CALLS: ["params", "filter_by_state"]
CALLS: ["closed", "active"]
CALLS: ["", "with_state"]
CALLS: ["", "with_state"]
CALLS: ["author", "author", "id", "where", "no_author?", "where", "author_id?", "author_username?", "none"]
CALLS: ["params", "params"]
CALLS: ["project?", "projects", "of_projects", "references_project", "projects", "projects", "reorder", "merge", "join_project", "none"]
CALLS: ["", "references"]
CALLS: ["", "references"]
CALLS: ["params", "to_s", "closed", "respond_to?", "merged", "closed", "opened"]
CALLS: ["params", "params", "where"]
CALLS: ["sort", "tags_sorted_by", "filter_by_name"]
CALLS: ["tags", "name", "sort", "tags", "name", "rsort", "tags_sorted_by_committed_date", "reverse", "tags_sorted_by_committed_date", "tags"]
CALLS: ["tags", "dereferenced_target", "committed_date", "now", "sort_by"]
CALLS: ["search", "name", "search", "include?", "select"]
CALLS: ["search", "name", "upcase", "search", "upcase", "include?", "select"]
CALLS: ["init_collection", "by_author", "by_visibility", "fresh"]
CALLS: ["params", "visibility_from_scope", "where"]
CALLS: ["params", "to_s"]
CALLS: ["project", "present?", "authorized_snippets_from_project", "authorized_snippets"]
CALLS: ["feature_available_projects", "not_project_related", "or", "where", "current_user", "public_or_visible_to_user"]
CALLS: ["table", "eq"]
CALLS: ["arel_table"]
CALLS: ["current_user", "allowed?", "table", "eq", "current_user", "with_feature_available_for_user", "projects_for_user", "select", "to_sql", "new", "table", "in"]
CALLS: ["current_user", "public_to_user", "current_user", "full_private_access?", "all", "current_user", "authorizations_for_projects", "where", "current_user", "levels_for_user", "where", "select", "select", "new", "to_sql", "table_name", "from"]
CALLS: ["current_user", "project", "can?", "project", "team", "current_user", "member?", "project", "snippets", "project", "snippets", "current_user", "public_to_user", "none"]
CALLS: ["current_user", "collection_with_user", "collection_without_user"]
CALLS: ["private_only?", "owned_projects?", "none", "public_to_user"]
CALLS: ["params", "present?"]
CALLS: ["params", "present?"]
CALLS: ["owned_projects?", "current_user", "owned_projects", "private_only?", "current_user", "authorized_projects", "current_user", "public_or_visible_to_user"]
CALLS: ["owned_projects_union", "to_sql", "from"]
CALLS: ["namespace", "where", "joins", "namespace", "id", "where", "id", "where", "new"]
CALLS: ["include_subgroups?", "group", "self_and_descendants", "select", "where", "group", "projects"]
CALLS: ["class", "id", "where", "new", "base_and_descendants"]
CALLS: ["options", "fetch"]
CALLS: ["only_shared?", "shared_projects", "public_only", "only_owned?", "owned_projects", "public_only", "shared_projects", "public_only", "owned_projects", "public_only"]
CALLS: ["options", "fetch"]
CALLS: ["options", "fetch"]
CALLS: ["group", "users", "current_user", "include?", "only_shared?", "shared_projects", "only_owned?", "owned_projects", "shared_projects", "owned_projects", "only_shared?", "shared_projects", "current_user", "public_or_visible_to_user", "only_owned?", "owned_projects", "current_user", "public_or_visible_to_user", "owned_projects", "current_user", "public_or_visible_to_user", "shared_projects", "current_user", "public_or_visible_to_user"]
CALLS: ["target", "notes_on_target", "target_type", "notes_of_target_type", "notes_of_any_type"]
CALLS: ["target", "respond_to?", "target", "related_notes", "target", "notes"]
CALLS: ["commit_shas", "take", "except", "source_project_id", "target_project_id", "where", "for_commit_id", "notes", "new", "to_sql", "table_name", "from", "includes"]
CALLS: ["notes_for_type", "map", "search", "map!", "new", "includes", "find_union"]
CALLS: ["allowed?", "notes", "where", "none", "noteables_for_type", "notes", "base_class", "name", "reorder", "where"]
CALLS: ["target_type", "notes_for_type", "search"]
CALLS: ["public_only?", "public_only", "with_confidentiality_access_check"]
CALLS: ["params", "fetch"]
CALLS: ["user_can_see_all_confidential_issues?", "all", "user_cannot_see_confidential_issues?", "where", "current_user", "id", "current_user", "authorized_projects", "select", "where"]
CALLS: ["user_can_see_all_confidential_issues?", "current_user", "blank?"]
CALLS: ["current_user", "blank?", "current_user", "full_private_access?", "project?", "project", "project", "team", "current_user", "id", "max_member_access"]
CALLS: ["klass", "all"]
CALLS: ["current_user", "collection_with_user", "collection_without_user", "union"]
CALLS: ["builds", "by_status"]
CALLS: ["params", "include?", "params", "where"]
CALLS: ["params", "include?", "params", "where"]
CALLS: ["params", "delete", "new", "current_user", "execute", "init_collection", "by_ids", "by_personal", "by_starred", "by_trending", "by_visibilty_level", "by_tags", "by_search", "by_archived", "by_custom_attributes", "sort"]
CALLS: ["params", "non_archived", "params", "key?", "params", "archived", "params", "to_boolean", "non_archived"]
CALLS: ["params", "present?", "params", "tagged_with"]
CALLS: ["params", "present?", "params", "where"]
CALLS: ["params", "present?", "trending"]
CALLS: ["joins", "reorder"]
CALLS: ["params", "params", "load_projects", "html", "view_to_html_string", "json", "respond_to", "dashboard_projects_path", "current_user", "cookies", "blank?", "current_user", "hide_project_limit", "current_user", "can_create_project?", "current_user", "projects_limit", "profile_path", "icon", "icon", "dashboard_projects_path", "root_path", "dashboard_projects_path", "nav_link", "starred_dashboard_projects_path", "starred_dashboard_projects_path", "nav_link", "explore_root_path", "trending_explore_projects_path", "starred_explore_projects_path", "explore_projects_path", "explore_root_path", "nav_link", "sort_value_latest_activity", "projects_sort_options_hash", "dropdown_toggle", "projects_sort_options_hash", "filter_projects_path", "each", "filter_projects_path", "params", "present?", "filter_projects_path", "params", "to_boolean", "filter_projects_path", "params", "current_user", "filter_projects_path", "params", "present?", "filter_projects_path", "params", "present?", "shared_projects", "present?", "filter_projects_path", "params", "present?", "filter_projects_path", "params", "filter_projects_path", "params", "current_user", "can_create_project?", "new_project_path", "trending_explore_projects_path", "explore_root_path", "trending_explore_projects_path", "nav_link", "starred_explore_projects_path", "starred_explore_projects_path", "nav_link", "explore_projects_path", "explore_projects_path", "nav_link", "current_user", "sort_value_latest_activity", "projects_sort_options_hash", "dropdown_toggle", "projects_sort_options_hash", "filter_projects_path", "each", "filter_projects_path", "params", "present?", "filter_projects_path", "params", "to_boolean", "filter_projects_path", "params", "current_user", "filter_projects_path", "params", "present?", "filter_projects_path", "params", "present?", "shared_projects", "present?", "filter_projects_path", "params", "present?", "filter_projects_path", "params", "filter_projects_path", "params", "projects", "current_user", "current_user", "explore_root_path"]
CALLS: ["params", "present?", "current_user", "current_user", "starred_by"]
CALLS: ["", "joins", "id", "where"]
CALLS: ["params", "present?", "current_user", "current_user", "personal"]
CALLS: ["", "namespace_id", "where"]
CALLS: ["project_ids_relation", "project_ids_relation", "where"]
CALLS: ["params", "present?", "current_user", "personal"]
CALLS: ["params", "archived", "params", "blank?", "non_archived"]
CALLS: ["params", "present?", "params", "where"]
CALLS: ["pipelines", "by_scope", "by_status", "by_ref", "by_name", "by_username", "by_yaml_errors", "sort_items"]
CALLS: ["params", "include?", "params", "params", "params", "order"]
CALLS: ["params", "to_boolean", "where", "where"]
CALLS: ["params", "present?", "joins", "params", "where"]
CALLS: ["params", "present?", "params", "where"]
CALLS: ["params", "running", "pending", "finished", "branches", "ids_for_ref", "from_ids", "tags", "ids_for_ref", "from_ids"]
CALLS: ["pipelines", "unscoped", "where"]
CALLS: ["pipelines", "where", "group", "select"]
CALLS: ["current_user_related?", "current_user", "none", "params", "current_user", "id", "where", "current_user", "assigned_to"]
CALLS: ["", "id", "where"]
CALLS: ["", "id", "where"]
CALLS: ["params", "present?", "params", "search"]
CALLS: ["pipeline_schedules", "active", "pipeline_schedules", "inactive", "pipeline_schedules", "order"]
CALLS: ["all_projects", "find_union", "includes", "order_id_desc"]
CALLS: ["all", "by_user", "by_impersonation", "by_state"]
CALLS: ["with_impersonation", "without_impersonation"]
CALLS: ["", "where"]
CALLS: ["", "where"]
CALLS: ["where"]
CALLS: ["init_collection", "since_fetch_at", "fresh"]
CALLS: ["fetch", "to_i", "at", "updated_after"]
CALLS: ["", "where"]
CALLS: ["", "scoped_table", "gteq", "where"]
CALLS: ["projects_where_can_admin_issues", "present?", "search", "excluding_project", "order_id_desc", "present?", "where", "limit", "includes"]
CALLS: ["authorized_projects", "non_archived", "with_issues_enabled"]
CALLS: ["", "with_feature_enabled"]
CALLS: ["", "where", "not"]
CALLS: ["project_ids", "empty?", "group_ids", "empty?", "none", "all", "by_groups_and_projects", "by_title", "by_state", "order"]
CALLS: ["joins", "where", "select"]
CALLS: ["params", "params", "where"]
CALLS: ["project_ids", "group_ids", "for_projects_and_groups"]
CALLS: ["fork_network", "fork_network", "projects", "current_user", "public_or_visible_to_user", "non_archived", "current_user", "with_feature_available_for_user", "source_project", "where"]
CALLS: ["project", "project_members", "current_user", "project", "can?", "non_invite", "group", "group", "new", "execute", "non_invite", "new", "distinct_on", "includes", "table_name", "from"]
CALLS: ["postgresql?"]
CALLS: ["project?", "params", "find", "authorized_to_read_labels?"]
CALLS: ["skip_authorization", "current_user", "allowed?"]
CALLS: ["project?", "project", "project", "group", "present?", "arel_table", "project", "group", "group_ids_for", "eq", "in", "and", "eq", "project", "id", "eq", "and", "or", "where", "project", "labels", "group?", "params", "find", "group_ids_for", "where", "projects", "group_ids", "where", "only_group_labels?", "projects", "select", "where"]
CALLS: ["params"]
CALLS: ["groups_to_include", "groups_user_can_read_labels", "map", "strong_memoize"]
CALLS: ["authorized_to_read_labels?", "select", "user_scope"]
CALLS: ["include_ancestor_groups?", "ancestors", "include_descendant_groups?", "descendants"]
CALLS: ["params"]
CALLS: ["params"]
CALLS: ["label_ids", "find_union", "none", "with_title", "sort"]
CALLS: ["", "where"]
CALLS: ["title", "nil?", "title", "blank?", "none", "title", "where"]
CALLS: ["all_groups", "find_union", "order_id_desc"]
CALLS: ["params", "find", "current_user", "klass", "to_ability_name", "allowed?"]
CALLS: ["init_collection", "filter_items", "by_project", "sort"]
CALLS: ["by_source_branch", "by_target_branch"]
CALLS: ["target_branch", "target_branch", "where"]
CALLS: ["source_branch", "source_branch", "where"]
CALLS: ["by_due_date"]
CALLS: ["due_date?", "filter_by_no_due_date?", "without_due_date", "filter_by_overdue?", "today", "due_before", "filter_by_due_this_week?", "today", "beginning_of_week", "today", "end_of_week", "due_between", "filter_by_due_this_month?", "today", "beginning_of_month", "today", "end_of_month", "due_between"]
CALLS: ["", "where", "where"]
CALLS: ["", "where"]
CALLS: ["", "where"]
CALLS: ["params", "present?"]
CALLS: ["due_date?", "params", "name"]
CALLS: ["due_date?", "params", "name"]
CALLS: ["due_date?", "params", "name"]
CALLS: ["due_date?", "params", "name"]
CALLS: ["by_scope", "by_created_at", "by_updated_at", "by_state", "by_group", "by_search", "by_assignee", "by_author", "by_non_archived", "by_iids", "by_milestone", "by_label", "by_my_reaction_emoji"]
CALLS: ["", "where"]
CALLS: ["assignee", "assignee", "assigned_to", "no_assignee?", "unassigned", "assignee_id?", "assignee_username?", "none"]
CALLS: ["", "where"]
CALLS: ["", "where"]
CALLS: ["params", "params"]
CALLS: ["params", "present?", "non_archived"]
CALLS: ["params", "present?", "current_user", "current_user", "params", "awarded"]
CALLS: ["id", "name", "where"]
CALLS: ["labels?", "filter_by_no_label?", "without_label", "label_names", "params", "with_label"]
CALLS: ["is_a?", "size", "joins", "where", "grouping_columns", "group", "size", "having", "joins", "where"]
CALLS: ["arel_table", "include?", "arel_table"]
CALLS: ["", "name", "table_name", "joins", "where"]
CALLS: ["milestones?", "filter_by_no_milestone?", "left_joins_milestones", "where", "filter_by_upcoming_milestone?", "projects", "upcoming_ids_by_projects", "left_joins_milestones", "where", "filter_by_started_milestone?", "left_joins_milestones", "where", "params", "with_milestone"]
CALLS: ["unscoped", "of_projects", "active", "now", "where", "postgresql?", "order", "select", "group", "having", "pluck", "map"]
CALLS: ["", "left_joins_milestones", "where"]
CALLS: ["params", "name"]
CALLS: ["params", "name"]
CALLS: ["milestones?", "params", "title"]
CALLS: ["assignee", "assignee", "id", "where", "no_assignee?", "where", "assignee_id?", "assignee_username?", "none"]
CALLS: ["params", "present?", "params", "where"]
CALLS: []
CALLS: ["params", "present?", "params", "updated_after", "params", "present?", "params", "updated_before"]
CALLS: ["", "scoped_table", "lteq", "where"]
CALLS: ["all_groups", "by_parent", "by_custom_attributes", "map", "find_union", "with_route", "order_id_desc"]
CALLS: ["params", "params", "where"]
CALLS: ["members", "parent", "non_request", "ancestors", "select", "where", "where", "users", "select", "not", "select", "to_sql", "select", "to_sql", "join", "where"]
CALLS: ["find_by", "can?"]
CALLS: ["children", "params", "ancestors_of_filtered_subgroups", "ancestors_of_filtered_projects", "size", "paginator", "total_count", "max", "paginate_array"]
CALLS: ["subgroups", "ancestors_of_groups", "params", "with_selects_for_list"]
CALLS: ["except", "select", "where", "new", "parent_group", "id", "base_and_ancestors"]
CALLS: ["projects", "where", "parent_group", "not", "select", "where", "ancestors_of_groups", "params", "with_selects_for_list"]
CALLS: ["source", "events", "by_current_user_access", "by_action", "by_target_type", "by_created_at_before", "by_created_at_after"]
CALLS: ["params", "params", "end_of_day", "where"]
CALLS: ["params", "params", "beginning_of_day", "where"]
CALLS: ["params", "params", "where"]
CALLS: ["current_user", "new", "execute", "merge", "joins"]
CALLS: ["project", "deployments", "ref", "params", "ref", "to_s", "where", "commit", "commit", "sha", "where", "none", "group", "select", "project", "environments", "available", "where", "order_by_last_deployed_at", "to_a", "current_user", "allowed?", "select!", "ref", "commit", "commit", "includes_commit?", "select!", "ref", "params", "ref", "recently_updated_on_branch?", "select!"]
CALLS: ["last_deployment", "last_deployment", "includes_commit?"]
CALLS: ["to_s", "last_deployment", "try"]
CALLS: ["", "arel_table", "maximum", "select", "arel_table", "arel_table", "eq", "where", "to_sql", "nulls_first_order", "order"]
CALLS: ["project", "repository", "id", "sha", "ancestor?"]
CALLS: ["all_projects", "find_union", "includes", "order_id_desc"]
CALLS: ["find_check", "should_skip_cross_project_check", "can_read_cross_project?", "should_run?", "model", "none"]
CALLS: ["current_user", "allowed?"]
CALLS: ["project", "clusters", "filter_by_scope"]
CALLS: ["scope", "to_sym", "disabled", "enabled", "scope"]
CALLS: ["", "where"]
CALLS: ["", "where"]
CALLS: ["sort", "branches_sorted_by", "filter_by_name"]
CALLS: ["raw_repository", "local_branches"]
CALLS: ["raw_repository", "local_branches"]
CALLS: ["find_users", "active", "reorder", "search", "present?", "search", "search", "skip_users", "present?", "where", "skip_users", "not", "limit", "params", "present?", "current_user", "current_user", "id", "params", "todo_authors", "search", "blank?", "params", "present?", "current_user", "current_user", "uniq", "author_id", "present?", "current_user", "author_id", "find_by_id", "uniq"]
CALLS: ["", "where", "select", "where"]
CALLS: ["project", "users_from_project", "group", "group", "users_with_parents", "current_user", "all", "none"]
CALLS: ["members_with_parents", "select", "where", "reorder"]
CALLS: ["author_id", "present?", "project", "authorized_users", "author_id", "where", "new", "to_sql", "table_name", "from", "project", "authorized_users"]
CALLS: ["without_deleted", "with_statistics", "by_namespace_id", "by_visibilty_level", "by_with_push", "by_abandoned", "by_last_repository_check_failed", "by_archived", "by_personal", "by_name", "includes", "sort", "params", "page"]
CALLS: ["params", "present?", "where"]
CALLS: ["params", "present?", "abandoned"]
CALLS: ["", "months", "ago", "where"]
CALLS: ["params", "present?", "with_push"]
CALLS: ["params", "present?", "params", "in_namespace"]
CALLS: ["execute!"]
CALLS: []
CALLS: ["parse_repo_path"]
CALLS: ["params", "params", "params", "params", "params", "join", "pending_delete?", "find_routable!"]
CALLS: ["merge"]
CALLS: ["set_sort_order_from_cookie", "set_default_state", "params", "dup", "except", "default_sort_order", "id", "id", "finder_type", "valid_params", "permit"]
CALLS: ["scalar_params", "array_params"]
CALLS: []
CALLS: []
CALLS: []
CALLS: ["params", "sort_value_created_date", "sort_value_recently_updated", "sort_value_created_date"]
CALLS: ["params", "present?", "cookies", "params", "cookies", "cookies", "update_cookie_value", "params", "cookies"]
CALLS: ["sort_value_oldest_created", "sort_value_recently_created", "sort_value_created_date", "sort_value_created_date", "sort_value_due_date", "sort_value_due_date", "sort_value_milestone", "sort_value_milestone", "sort_value_popularity", "sort_value_popularity"]
CALLS: ["params", "blank?", "params"]
CALLS: ["board", "group_board?", "issue_params", "find", "board_parent"]
CALLS: ["params", "params", "params", "merge", "nil?", "reject"]
CALLS: ["params", "params", "join", "find_by_full_path", "render_404"]
CALLS: ["params", "params", "join", "find_by_full_path", "render_404"]
CALLS: ["runner", "update", "runner", "tick_runner_queue", "tap"]
CALLS: ["project", "current_user", "issue_params", "new", "execute"]
CALLS: ["delete", "last_commit_sha", "update_attributes", "title_changed?", "title", "wiki", "find_page", "present?", "url_path", "url_path", "wiki", "content", "format", "title", "update_page", "save"]
CALLS: ["title", "commit_details", "wiki", "path", "name", "to_sym", "update_page", "update_project_activity"]
CALLS: ["repo_created?", "after_create", "branch_created?", "after_create_branch", "newrev"]
CALLS: ["full_path", "initialize_raw_repository"]
CALLS: ["project", "repository_storage", "disk_path", "project", "is_wiki", "gl_repository", "new"]
CALLS: ["notes", "map", "where", "fresh", "to_a", "class", "memoized_values", "clear_memoization", "each"]
CALLS: ["params", "presence"]
CALLS: ["snippet_params", "spammable_params", "merge", "current_user", "new", "execute", "recaptcha_check_with_fallback", "snippets_path", "current_user"]
CALLS: ["current_user", "project_params", "new", "execute", "repository", "flash", "_", "name", "edit_project_path", "redirect_to", "html", "flash", "html", "js", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["_", "s_", "s_", "current_user", "can?", "render", "params", "find_page", "current_user", "wiki_params", "new", "execute", "valid?", "project_wiki_path", "redirect_to", "fluid_layout", "_", "title", "capitalize", "_", "wiki_page_errors", "icon", "persisted?", "title", "capitalize", "project_wiki_path", "title", "capitalize", "persisted?", "s_", "s_", "current_user", "can?", "s_", "persisted?", "project_wiki_history_path", "s_", "current_user", "can?", "project_wiki_path", "s_", "_", "persisted?", "s_", "s_", "title", "namespace", "becomes", "persisted?", "form_errors", "persisted?", "last_commit_sha", "hidden_field", "label", "title", "text_field", "persisted?", "icon", "s_", "icon", "help_page_path", "label", "format", "options_for_select", "select", "label", "slug", "project_wiki_preview_markdown_path", "s_", "slug", "project_wiki_preview_markdown_path", "s_", "html_safe", "s_", "help_page_path", "s_", "html_safe", "label", "text_field", "persisted?", "_", "submit", "_", "project_wiki_path", "s_", "submit", "_", "project_wiki_path", "fluid_layout", "_", "title", "capitalize", "_", "wiki_page_errors", "icon", "persisted?", "title", "capitalize", "project_wiki_path", "title", "capitalize", "persisted?", "s_", "s_", "current_user", "can?", "s_", "persisted?", "project_wiki_history_path", "s_", "current_user", "can?", "project_wiki_path", "s_", "_", "persisted?", "s_", "s_", "title", "namespace", "becomes", "persisted?", "form_errors", "persisted?", "last_commit_sha", "hidden_field", "label", "title", "text_field", "persisted?", "icon", "s_", "icon", "help_page_path", "label", "format", "options_for_select", "select", "label", "slug", "project_wiki_preview_markdown_path", "s_", "slug", "project_wiki_preview_markdown_path", "s_", "html_safe", "s_", "help_page_path", "s_", "html_safe", "label", "text_field", "persisted?", "_", "submit", "_", "project_wiki_path", "s_", "submit", "_", "project_wiki_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["variables_params", "update", "render_variables", "json", "respond_to", "render_error", "json", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["params", "variable_params_attributes", "permit"]
CALLS: []
CALLS: []
CALLS: ["new", "variables", "represent", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["trigger", "trigger_params", "update", "project_settings_ci_cd_path", "help_page_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["snippet_params", "spammable_params", "merge", "project", "current_user", "new", "execute", "recaptcha_check_with_fallback", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project", "current_user", "update_params", "new", "execute", "flash", "name", "run_autodevops_pipeline", "project_settings_ci_cd_path", "fluid_layout", "env", "test?", "errors", "empty?", "s_", "_", "_", "s_", "s_", "help_page_path", "shared_runners_text", "present?", "current_application_settings", "markdown_field", "shared_runners_enabled?", "toggle_shared_runners_project_runners_path", "toggle_shared_runners_project_runners_path", "zero?", "dom_id", "runner_status_icon", "include?", "short_sha", "runner_path", "locked?", "icon", "edit_project_runner_path", "short_sha", "include?", "active?", "pause_project_runner_path", "resume_project_runner_path", "belongs_to_one_project?", "runner_path", "runner_projects", "find_by", "project_runner_project_path", "specific?", "namespace", "becomes", "runner_projects", "new", "id", "hidden_field", "submit", "description", "present?", "description", "tag_list", "present?", "tag_list", "sort", "each", "each", "_", "icon", "help_page_path", "_", "project_variables_path", "help_page_path", "any?", "each", "tap"]
CALLS: ["shared?"]
CALLS: ["runner_projects", "count"]
CALLS: ["status", "contacted_at", "time_ago_in_words"]
CALLS: ["project_runner_path"]
CALLS: ["run_auto_devops_pipeline?", "empty_repo?", "flash", "project", "id", "current_user", "id", "project", "default_branch", "perform_async", "flash", "project_pipelines_path", "html_safe"]
CALLS: ["project", "repository", "gitlab_ci_yml", "project", "auto_devops", "previous_changes", "include?", "project", "auto_devops", "enabled?", "project", "auto_devops", "enabled", "nil?", "auto_devops_enabled?"]
CALLS: ["file_on_head"]
CALLS: ["params", "require", "permit"]
CALLS: ["params", "require", "permit"]
CALLS: ["params", "require", "permit"]
CALLS: ["cluster", "managed?", "params", "require", "permit", "params", "require", "permit"]
CALLS: ["user?"]
CALLS: ["params", "require", "permit"]
CALLS: ["attributes", "service_params", "save", "project_settings_integrations_path", "success_message", "redirect_to", "title", "edit_project_path", "add_to_breadcrumbs", "deprecation_message", "deprecation_message", "title", "activated?", "description", "respond_to?", "detailed_description", "to_param", "project_service_path", "can_test?", "test_project_service_path", "editable?", "service_save_button", "project_settings_integrations_path", "form_for", "lookup_context", "to_param", "template_exists?", "to_param", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: []
CALLS: []
CALLS: []
CALLS: ["project", "pipelines", "any?"]
CALLS: []
CALLS: []
CALLS: []
CALLS: ["_", "deprecated_message_content", "url_helpers", "project", "project_clusters_path", "html_safe"]
CALLS: ["active?", "_", "_"]
CALLS: []
CALLS: ["deprecated?", "icon", "content_tag", "button_tag"]
CALLS: []
CALLS: ["active"]
CALLS: ["push"]
CALLS: ["active?", "title", "title"]
CALLS: ["event_channel_names", "event_names", "params", "permit", "is_a?", "blank?", "delete", "each"]
CALLS: ["supported_events", "map"]
CALLS: []
CALLS: ["supported_events", "event_channel_name", "map"]
CALLS: ["new", "runner_params", "update", "runner_path", "description", "id", "runner_path", "runner", "runner_form_url", "runner", "form_errors", "check_box", "check_box", "check_box", "check_box", "text_field", "text_field", "text_field", "text_field", "runner", "tag_list", "sort", "join", "text_field", "submit", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["params", "require", "permit"]
CALLS: ["params", "require", "permit"]
CALLS: ["release_params", "present?", "release", "release_params", "update_attributes", "release", "destroy", "name", "project_tag_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["params", "require", "permit"]
CALLS: ["releases", "name", "find_or_initialize_by"]
CALLS: ["update_service_class", "current_user", "protected_ref_params", "new", "execute", "valid?", "errors", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["service_namespace"]
CALLS: ["schedule", "schedule_params", "update", "project_pipeline_schedules_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["update_params", "update", "project_pages_path", "project_pages_path", "domain", "domain", "domain", "namespace", "becomes", "errors", "any?", "errors", "full_messages", "each", "label", "persisted?", "text_field", "config", "pages", "external_https", "label", "text_area", "label", "text_area", "submit", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["current_user", "project_params", "new", "execute", "flash", "flash", "project_pages_path", "html", "respond_to"]
CALLS: ["project", "current_user", "milestone_params", "new", "milestone", "execute", "js", "valid?", "project_milestone_path", "html", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project", "current_user", "merge_request_params", "new", "execute", "valid?", "target_project", "namespace", "becomes", "target_project", "redirect_to", "define_edit_vars", "html", "to_json", "json", "respond_to", "request", "format", "html?", "define_edit_vars", "render_conflict_response", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["source_project", "target_project", "target_project", "repository", "branch_names"]
CALLS: ["label_params", "new", "execute", "valid?", "project_labels_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["hook", "hook_params", "update_attributes", "flash", "project_settings_integrations_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project_group_links", "params", "find", "group_link_params", "update_attributes"]
CALLS: ["params", "require", "permit"]
CALLS: ["environment_params", "update", "project", "project_environment_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["deploy_key", "update_params", "update_attributes", "flash", "redirect_to_repository_settings", "namespace", "becomes", "local_assigns", "fetch", "local_assigns", "fetch", "deploy_keys_project_for", "form_errors", "label", "text_field", "new_record?", "label", "help_page_path", "text_area", "label", "text_field", "present?", "check_box", "label", "fields_for", "submit", "project_settings_repository_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project", "current_user", "update_params", "new", "cluster", "execute", "cluster", "valid?", "json", "flash", "_", "project", "cluster", "project_cluster_path", "html", "respond_to", "json", "html", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["params", "present?", "params", "after_edit_path", "project_blob_path", "create_commit", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["current_user", "id", "new", "params", "find_by", "target_project", "diffs_project_merge_request_path", "hexdigest", "join", "project_blob_path"]
CALLS: ["current_user", "user_params", "merge", "new", "execute", "redirect_back_or_default", "html", "json", "redirect_back_or_default", "html", "json", "respond_to", "header_title", "profile_path"]
CALLS: ["current_user", "preferences_params", "user", "merge", "new", "execute", "flash", "flash", "flash", "message", "profile_preferences_path", "html", "js", "respond_to", "header_title", "profile_path"]
CALLS: ["params", "require", "permit"]
CALLS: ["user_params", "to_s", "include?", "select", "password_automatically_set", "user_params", "valid_password?", "edit_profile_password_path", "current_user", "merge", "new", "execute", "flash", "new_user_session_path", "reload", "fluid_layout", "page_title", "password_automatically_set?", "profile_password_path", "form_errors", "password_automatically_set?", "label", "password_field", "label", "password_field", "label", "password_field", "submit", "password_automatically_set?", "reset_profile_password_path", "header_title", "profile_path"]
CALLS: ["current_user", "user_params", "current_user", "merge", "new", "execute", "flash", "flash", "profile_notifications_path", "redirect_back_or_default", "header_title", "profile_path"]
CALLS: ["valid?", "password_automatically_set?", "update_attribute"]
CALLS: ["current_user", "notification_settings", "params", "find", "notification_setting_params", "update_attributes", "render_response"]
CALLS: ["current_user", "group_params", "new", "execute", "edit_group_path", "name", "restore_path!", "form_errors", "group_icon", "avatar?", "_", "_", "file_field", "_", "avatar?", "_", "to_param", "group_avatar_path", "_", "visibility_level", "can_change_group_visibility_level?", "visibility_level", "local_assigns", "fetch", "icon", "help_page_path", "label", "can_change_visibility_level", "form_model", "values", "form_model", "disallowed_visibility_level?", "restricted_visibility_levels", "include?", "form", "model_method", "form", "model_method", "selected_level", "radio_button", "visibility_level_icon", "visibility_level_label", "form_model", "visibility_level_description", "restricted_visibility_level_description", "form_model", "disallowed_visibility_level_description", "label", "each", "form_model", "render", "visibility_level_icon", "visibility_level_label", "form_model", "visibility_level_description", "form", "form", "check_box", "label", "s_", "can_change_share_with_group_lock?", "check_box", "name", "group_path", "s_", "html_safe", "share_with_group_lock_help_text", "label", "current_user", "admin?", "label", "lfs_enabled?", "check_box", "icon", "help_page_path", "label", "current_user", "label", "check_box", "icon", "help_page_path", "label", "text_field", "submit", "remove_group_message", "form_tag", "supports_nested_groups?", "transfer_group_path", "parent_group_options", "dropdown_tag", "submit", "path", "name", "page_description", "description", "header_title", "group_title", "current_user"]
CALLS: ["current_user", "owned_groups", "sort_by", "id", "human_name", "map", "id", "delete_if", "to_json"]
CALLS: ["parent", "share_with_group_lock?", "default_help", "share_with_group_lock?", "current_user", "parent", "can?", "ancestor_locked_but_you_can_override", "ancestor_locked_so_ask_the_owner", "ancestor_locked_and_has_been_overridden"]
CALLS: ["s_", "html_safe", "ancestor_group"]
CALLS: ["oldest_consecutively_locked_ancestor", "current_user", "can?", "name", "group_path", "name"]
CALLS: ["ancestors", "has_parent?", "parent", "share_with_group_lock?", "find"]
CALLS: ["s_", "html_safe", "ancestor_group", "remove_the_share_with_group_lock_from_ancestor"]
CALLS: ["oldest_consecutively_locked_ancestor", "s_", "name", "current_user", "can?", "edit_group_path"]
CALLS: ["s_", "html_safe", "ancestor_group", "remove_the_share_with_group_lock_from_ancestor"]
CALLS: ["s_"]
CALLS: ["_", "name"]
CALLS: ["current_user", "can?"]
CALLS: ["key?", "key?", "merge", "dropdown_toggle", "key?", "key?", "dropdown_title", "key?", "dropdown_filter", "key?", "key?", "capture", "content_tag", "capture", "content_tag", "dropdown_loading", "html_safe", "content_tag", "html_safe"]
CALLS: ["group_variables_params", "update", "render_group_variables", "json", "respond_to", "render_error", "json", "respond_to"]
CALLS: ["params", "variable_params_attributes", "permit"]
CALLS: ["new", "variables", "represent"]
CALLS: ["legacy_group_milestone?", "milestone_params", "select", "milestones", "milestone_params", "parent", "current_user", "new", "execute", "each", "milestone_path", "name", "page_description", "description", "header_title", "group_title", "current_user"]
CALLS: ["label_params", "new", "execute", "valid?", "redirect_back_or_group_labels_path", "name", "page_description", "description", "header_title", "group_title", "current_user"]
CALLS: ["previous_labels_path"]
CALLS: ["session", "fallback_path", "fetch"]
CALLS: ["group_labels_path"]
CALLS: ["project", "current_user", "note_params", "new", "note", "execute", "is_a?", "current_user", "new", "execute", "note_json", "json", "redirect_back_or_default", "html", "respond_to"]
CALLS: ["params", "root_params_key", "require", "permit", "membershipable", "members_and_requesters", "params", "find", "current_user", "new", "execute", "current_user", "present", "js", "respond_to"]
CALLS: ["membershipable", "membershipable"]
CALLS: ["update_service", "issuable", "execute", "recaptcha_check_if_spammable", "html", "render_entity_json", "recaptcha_check_if_spammable", "json", "respond_to", "render_conflict_response"]
CALLS: ["issue_params", "spammable_params", "merge", "project", "current_user", "new"]
CALLS: []
CALLS: ["valid?", "serializer", "represent", "errors", "full_messages"]
CALLS: ["issuable", "is_a?", "recaptcha_check_with_fallback"]
CALLS: ["board", "lists", "movable", "params", "find", "board_parent", "current_user", "move_params", "new", "execute"]
CALLS: ["params", "require", "permit"]
CALLS: ["params", "permit"]
CALLS: ["board_parent", "current_user", "move_params", "new", "issue", "execute"]
CALLS: ["user_params", "dup", "params", "present?", "params", "params", "changing_own_password?", "now", "merge!", "current_user", "user", "merge", "new", "skip_reconfirmation!", "execute", "user", "html", "json", "user", "username", "params", "name", "form_errors", "label", "text_field", "label", "text_field", "label", "text_field", "new_record?", "label", "label", "object", "force_random_password", "password_field", "label", "object", "force_random_password", "password_field", "label", "number_field", "label", "check_box", "label", "current_user", "radio_button", "radio_button", "label", "check_box", "label", "file_field", "label", "text_field", "label", "text_field", "label", "text_field", "label", "text_field", "new_record?", "submit", "admin_users_path", "submit", "admin_user_path", "html", "json", "respond_to", "admin_root_path"]
CALLS: ["user", "current_user"]
CALLS: ["service", "service_params", "update_attributes", "service", "active?", "service", "id", "perform_async", "admin_application_settings_services_path", "admin_root_path"]
CALLS: ["new", "runner_params", "update", "js", "admin_runner_path", "html", "respond_to", "assign_builds_and_projects", "shared?", "_", "admin_runners_path", "id", "shared?", "admin_runner_path", "runner", "runner_form_url", "runner", "form_errors", "check_box", "check_box", "check_box", "check_box", "text_field", "text_field", "text_field", "text_field", "runner", "tag_list", "sort", "join", "text_field", "submit", "projects", "any?", "runner_projects", "project", "full_name", "namespace", "becomes", "each", "admin_runner_path", "params", "full_name", "namespace", "becomes", "runner_projects", "new", "id", "hidden_field", "submit", "each", "project", "project_job_path", "current_user", "detailed_status", "detailed_status", "full_name", "pipeline", "pipeline_path", "pipeline", "short_sha", "finished_at", "each", "admin_root_path"]
CALLS: ["stage", "request", "current_user", "detailed_status"]
CALLS: ["pipeline", "request", "current_user", "detailed_status"]
CALLS: ["group", "request", "current_user", "detailed_status"]
CALLS: ["build", "request", "current_user", "detailed_status"]
CALLS: ["subject", "user", "detailed_status"]
CALLS: ["new", "fabricate!"]
CALLS: ["new", "fabricate!"]
CALLS: ["new", "fabricate!"]
CALLS: ["new", "fabricate!"]
CALLS: ["jobs", "one?", "jobs", "first", "detailed_status", "new", "fabricate!"]
CALLS: ["new", "fabricate!"]
CALLS: ["runner", "builds", "order", "first", "params", "present?", "params", "search", "all", "runner", "projects", "any?", "where", "runner", "projects", "select", "not", "params", "page", "per"]
CALLS: ["label_params", "new", "execute", "valid?", "admin_labels_path", "admin_root_path"]
CALLS: ["identity_params", "update_attributes", "new", "execute", "admin_user_identities_path", "admin_root_path"]
CALLS: ["hook", "hook_params", "update_attributes", "flash", "admin_hooks_path", "admin_root_path"]
CALLS: ["group_params", "update_attributes", "name", "visibility_level", "form_errors", "label", "_", "_", "file_field", "_", "visibility_level", "can_change_group_visibility_level?", "visibility_level", "local_assigns", "fetch", "icon", "help_page_path", "label", "can_change_visibility_level", "form_model", "values", "form_model", "disallowed_visibility_level?", "restricted_visibility_levels", "include?", "form", "model_method", "form", "model_method", "selected_level", "radio_button", "visibility_level_icon", "visibility_level_label", "form_model", "visibility_level_description", "restricted_visibility_level_description", "form_model", "disallowed_visibility_level_description", "label", "each", "form_model", "render", "visibility_level_icon", "visibility_level_label", "form_model", "visibility_level_description", "form", "form", "check_box", "label", "current_user", "admin?", "label", "lfs_enabled?", "check_box", "icon", "help_page_path", "label", "current_user", "label", "check_box", "icon", "help_page_path", "label", "text_field", "new_record?", "submit", "admin_groups_path", "submit", "admin_group_path", "admin_root_path"]
CALLS: ["deploy_key", "update_params", "update_attributes", "flash", "admin_deploy_keys_path", "local_assigns", "fetch", "local_assigns", "fetch", "deploy_keys_project_for", "form_errors", "label", "text_field", "new_record?", "label", "help_page_path", "text_area", "label", "text_field", "present?", "check_box", "label", "fields_for", "submit", "admin_deploy_keys_path", "admin_root_path"]
CALLS: ["broadcast_message_params", "update", "admin_broadcast_messages_path", "admin_root_path"]
CALLS: ["application_params", "update", "admin_application_path", "admin_root_path"]
CALLS: ["current_user", "application_setting_params", "new", "execute", "admin_application_settings_path", "admin_root_path"]
CALLS: ["params", "params", "key?", "params", "delete", "delete", "params", "button_based_providers", "map", "params", "delete", "params", "delete", "params", "params", "delete", "params", "require", "visible_application_setting_attributes", "permit"]
CALLS: ["auth_providers", "form_based_provider?", "reject"]
CALLS: ["to_s", "any?"]
CALLS: ["providers"]
CALLS: ["visible_attributes"]
CALLS: []
CALLS: ["appearance_params", "update", "admin_appearances_path", "admin_appearances_path", "form_errors", "label", "header_logo?", "header_logo_url", "persisted?", "header_logos_admin_appearances_path", "hidden_field", "file_field", "label", "text_field", "label", "text_area", "label", "logo?", "logo_url", "persisted?", "logo_admin_appearances_path", "hidden_field", "file_field", "label", "text_area", "submit", "persisted?", "preview_sign_in_admin_appearances_path", "new_project_path", "updated_at", "admin_root_path"]
CALLS: ["current_user", "can_be_merged_by?", "access_denied!", "merge!", "merge_error", "merge_error", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["register_failure", "log_error", "allow_failure", "latest?", "description", "drop", "delete_artifact!"]
CALLS: []
CALLS: ["error", "merge"]
CALLS: []
CALLS: []
CALLS: ["page", "version", "to_s"]
CALLS: ["version", "try"]
CALLS: ["user_combined_name", "action", "wiki_page_link", "project_link", "title"]
CALLS: ["wiki_page_url"]
CALLS: ["user_full_name", "present?", "user_full_name", "user_name", "user_name"]
CALLS: ["new_branch?", "new_branch_message", "removed_branch?", "removed_branch_message", "push_message"]
CALLS: ["after", "blank_ref?"]
CALLS: ["before", "blank_ref?"]
CALLS: ["user_combined_name", "ref_type", "branch_link", "project_link", "compare_link"]
CALLS: ["compare_url"]
CALLS: ["truncate_sha", "truncate_sha", "config", "gitlab", "url"]
CALLS: ["project_url", "before", "after"]
CALLS: ["ref", "branch_url"]
CALLS: ["project_url", "ref"]
CALLS: ["project_url", "ref"]
CALLS: ["ref", "branch_url"]
CALLS: ["user_combined_name", "ref_type", "ref", "project_link"]
CALLS: ["user_combined_name", "ref_type", "branch_link", "project_link"]
CALLS: ["project_link", "pipeline_link", "ref_type", "branch_link", "user_combined_name", "humanized_status", "duration", "pretty_duration"]
CALLS: ["pipeline_id", "pipeline_url"]
CALLS: ["project_url", "pipeline_id"]
CALLS: ["project", "id", "project_pipeline_url"]
CALLS: ["duration", "hour", "at", "utc", "strftime"]
CALLS: ["calculate_duration"]
CALLS: ["started_at", "finished_at", "finished_at", "started_at", "started_at", "now", "started_at"]
CALLS: ["user_combined_name", "target", "note_url", "link", "project_link", "formatted_title"]
CALLS: ["title", "format_title"]
CALLS: ["noteable", "is_a?", "noteable", "snippet_note_path", "project_note_path"]
CALLS: ["merge_request_message"]
CALLS: ["user_combined_name", "state", "merge_request_link", "project_link", "title"]
CALLS: ["merge_request_title", "merge_request_url", "link"]
CALLS: ["project_url", "merge_request_iid"]
CALLS: ["reference_prefix", "merge_request_iid", "title"]
CALLS: ["project", "project_merge_request_url"]
CALLS: ["opened_issue?", "project_link", "state", "user_combined_name", "project_link", "issue_link", "state", "user_combined_name"]
CALLS: ["issue_title", "issue_url", "link"]
CALLS: ["reference_prefix", "issue_iid", "title"]
CALLS: ["action"]
CALLS: []
CALLS: ["response_status"]
CALLS: ["to_s"]
CALLS: ["first_note", "context_noteable", "discussion_id"]
CALLS: []
CALLS: ["raw", "id"]
CALLS: ["status", "to_s"]
CALLS: ["path", "hexdigest"]
CALLS: ["success?", "upload", "id", "error", "message"]
CALLS: []
CALLS: ["to_s"]
CALLS: ["sha_from", "notation", "sha_to"]
CALLS: ["skip_cross_project_check"]
CALLS: ["execute", "find_by!"]
CALLS: ["request", "current_user"]
CALLS: ["valid?", "errors", "wiki", "error_message", "add", "wiki", "page_title_and_dir", "wiki", "wiki", "page", "set_attributes", "errors", "blank?"]
CALLS: ["attributes", "url_path", "attributes", "title", "attributes", "format"]
CALLS: ["webhook", "new", "project_name", "pretext", "activity", "attachments", "ping"]
CALLS: ["user_combined_name", "action", "wiki_page_link", "project_link", "title", "user_avatar"]
CALLS: ["user_avatar_without_link", "user_path", "link_to", "mail_to"]
CALLS: ["try", "merge", "user_avatar_url_for", "nil?", "push", "push", "placeholder_image", "tag"]
CALLS: []
CALLS: ["avatar_icon_for_user", "avatar_icon_for_email"]
CALLS: ["avatar_url", "default_avatar", "gravatar_icon"]
CALLS: ["asset_path"]
CALLS: ["new", "execute", "default_avatar"]
CALLS: ["try", "find_by_any_email", "avatar_icon_for_user", "gravatar_icon"]
CALLS: ["markdown", "description", "description_message"]
CALLS: ["format", "attachment_color"]
CALLS: []
CALLS: ["status"]
CALLS: []
CALLS: ["note", "format", "attachment_color"]
CALLS: ["issue_title", "issue_url", "description", "format"]
CALLS: ["new_branch?", "removed_branch?", "user_combined_name", "ref_type", "project_link", "compare_link", "user_avatar"]
CALLS: ["new_branch?", "removed_branch?", "markdown", "commit_messages", "commit_message_attachments"]
CALLS: ["commit_messages", "format", "attachment_color"]
CALLS: ["commits", "compose_commit_message", "map", "join"]
CALLS: ["truncate_sha"]
CALLS: ["pipeline_link", "ref_type", "branch_link", "user_combined_name", "humanized_status", "project_link", "duration", "pretty_duration", "user_avatar"]
CALLS: ["markdown", "message", "message", "format", "attachment_color"]
CALLS: []
CALLS: ["user_combined_name", "target", "note_url", "link", "project_link", "formatted_title", "user_avatar"]
CALLS: ["markdown", "note", "description_message"]
CALLS: ["state", "user_combined_name", "project_link", "merge_request_link", "user_avatar"]
CALLS: []
CALLS: ["state", "user_combined_name", "project_link", "issue_link", "user_avatar"]
CALLS: ["opened_issue?", "markdown", "description", "description_message"]
CALLS: []
CALLS: []
CALLS: ["markdown", "message", "message", "format"]
CALLS: ["html", "load_events", "count", "pager_json", "json", "respond_to", "_", "container_class", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["render_to_string"]
CALLS: ["html", "load_events", "count", "pager_json", "json", "respond_to", "rss_url_options", "group_url", "name", "auto_discovery_link_tag", "rss_url_options", "group_path", "icon", "icon", "all", "_", "s_", "event_filter_visible", "push", "_", "s_", "event_filter_visible", "merged", "_", "s_", "event_filter_visible", "issue", "_", "s_", "comments_visible?", "comments", "_", "s_", "team", "_", "s_", "spinner", "name", "page_description", "description", "header_title", "group_title", "current_user"]
CALLS: ["icon"]
CALLS: ["event_filter_visible", "event_filter_visible", "event_filter_visible"]
CALLS: ["current_user", "feature_available?"]
CALLS: ["html", "load_events", "count", "pager_json", "json", "respond_to", "rss_url_options", "dashboard_projects_url", "auto_discovery_link_tag", "activity_dashboard_path", "container_class", "params", "nil?", "active_when", "activity_dashboard_path", "params", "active_when", "activity_dashboard_path", "rss_url_options", "dashboard_projects_path", "icon", "icon", "all", "_", "s_", "event_filter_visible", "push", "_", "s_", "event_filter_visible", "merged", "_", "s_", "event_filter_visible", "issue", "_", "s_", "comments_visible?", "comments", "_", "s_", "team", "_", "s_", "spinner", "header_title", "root_path"]
CALLS: ["webhook", "new", "pretext", "attachments", "fallback", "ping"]
CALLS: ["message", "format"]
CALLS: []
CALLS: ["", "where"]
CALLS: ["ghost"]
CALLS: ["persisted?", "id", "notify", "deliver_later"]
CALLS: ["admins", "pluck", "mail"]
CALLS: ["deliverable?", "find", "admin_notification_email", "user", "name", "user", "username", "mail"]
CALLS: ["admin_notification_email", "present?"]
CALLS: ["params", "find_routable!"]
CALLS: ["new", "snippets_path", "page_specific_javascript_tag", "url", "form_errors", "label", "text_field", "visibility_level", "visibility_level", "local_assigns", "fetch", "icon", "help_page_path", "label", "can_change_visibility_level", "form_model", "values", "form_model", "disallowed_visibility_level?", "restricted_visibility_levels", "include?", "form", "model_method", "form", "model_method", "selected_level", "radio_button", "visibility_level_icon", "visibility_level_label", "form_model", "visibility_level_description", "restricted_visibility_level_description", "form_model", "disallowed_visibility_level_description", "label", "each", "form_model", "render", "visibility_level_icon", "visibility_level_label", "form_model", "visibility_level_description", "label", "text_field", "content", "hidden_field", "params", "params", "each_with_index", "new_record?", "submit", "submit", "project_id", "project_snippets_path", "snippets_path", "snippets_path", "current_user"]
CALLS: ["asset_path"]
CALLS: ["set_minimum_password_length", "available_servers"]
CALLS: ["new_user_session_path", "redirect_to"]
CALLS: ["params", "params", "find_by", "current_user", "can?", "access_denied!", "id", "new", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["snippets", "build", "project_snippets_path", "project_snippets_path", "page_specific_javascript_tag", "url", "form_errors", "label", "text_field", "visibility_level", "visibility_level", "local_assigns", "fetch", "icon", "help_page_path", "label", "can_change_visibility_level", "form_model", "values", "form_model", "disallowed_visibility_level?", "restricted_visibility_levels", "include?", "form", "model_method", "form", "model_method", "selected_level", "radio_button", "visibility_level_icon", "visibility_level_label", "form_model", "visibility_level_description", "restricted_visibility_level_description", "form_model", "disallowed_visibility_level_description", "label", "each", "form_model", "render", "visibility_level_icon", "visibility_level_label", "form_model", "visibility_level_description", "label", "text_field", "content", "hidden_field", "params", "params", "each_with_index", "new_record?", "submit", "submit", "project_id", "project_snippets_path", "snippets_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project", "pipelines", "default_branch", "new", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project", "pipeline_schedules", "new", "namespace", "namespace_project_pipeline_schedules_path", "_", "project_pipelines_path", "add_to_breadcrumbs", "_", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["pages_domains", "new", "project_pages_path", "namespace", "becomes", "errors", "any?", "errors", "full_messages", "each", "label", "persisted?", "text_field", "config", "pages", "external_https", "label", "text_area", "label", "text_area", "submit", "_", "project_pages_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["milestones", "new", "respond_with", "container_class", "namespace", "becomes", "form_errors", "label", "text_field", "label", "preview_markdown_path", "preview_markdown_path", "label", "text_field", "label", "text_field", "new_record?", "submit", "project_milestones_path", "submit", "project_milestone_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["define_new_vars", "allow_n_plus_1_calls", "can_be_created", "params", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["custom_icon", "empty?", "config", "mattermost", "host", "config", "mattermost", "host", "project_mattermost_path", "one?", "one?", "first", "mattermost_teams_options", "options_for_select", "one?", "select", "one?", "hidden_field", "one?", "config", "mattermost", "host", "icon", "path", "text_field", "path", "full_path", "icon", "edit_project_service_path", "submit", "form_for", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["map"]
CALLS: ["labels", "new", "container_class", "project_labels_path", "project_labels_path", "url", "form_errors", "label", "text_field", "label", "text_field", "label", "text_field", "suggested_colors", "each", "persisted?", "submit", "submit", "back_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: []
CALLS: ["params", "new", "issue_params", "params", "params", "merge", "project", "current_user", "new", "execute", "merge_request_to_resolve_discussions_of", "params", "discussions_to_resolve", "first", "respond_with", "namespace", "becomes", "local_assigns", "fetch", "local_assigns", "issuable", "form_errors", "issuable", "class", "model_name", "human", "downcase", "namespace", "becomes", "issuable", "polymorphic_path", "label", "issuable", "issuable", "detect", "issuable", "issuable", "respond_to?", "check_box", "label", "issuable", "local_assigns", "fetch", "is_a?", "closed_without_fork?", "current_user", "can_remove_source_branch?", "current_user", "can_remove_source_branch?", "force_remove_source_branch?", "local_assigns", "fetch", "local_assigns", "fetch", "is_a?", "for_fork?", "current_user", "source_project", "can?", "_", "current_user", "can_allow_maintainer_to_push?", "check_box", "_", "help_page_path", "allow_maintainer_push_unavailable_reason", "label", "icon", "current_user", "discussions_can_be_resolved_by?", "iid", "id", "link_to_discussions_to_resolve", "link_to_discussions_to_resolve", "is_a?", "new_record?", "new_record?", "namespace", "becomes", "class", "polymorphic_path", "current_user", "to_ability_name", "can?", "namespace", "becomes", "polymorphic_path", "human_class_name", "namespace", "becomes", "polymorphic_path", "new_record?", "class", "model_name", "human", "downcase", "submit", "submit", "persisted?", "project", "empty_repo?", "project", "present", "contribution_guide_path", "link_to", "hidden_field", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project", "repository", "contribution_guide", "project", "project", "default_branch", "name", "tree_join", "project_blob_path"]
CALLS: ["file_on_head"]
CALLS: ["join"]
CALLS: ["discussions_to_be_resolved", "can_resolve?", "all?"]
CALLS: ["current_user", "can_allow_maintainer_to_push?", "target_project", "visibility_level", "source_project", "visibility_level", "min", "_", "source_project", "source_branch", "protected?", "_"]
CALLS: ["to_reference", "first_note", "id", "first_note", "build", "project", "project_merge_request_path"]
CALLS: ["import_failed?", "project_import_path", "local_assigns", "fetch", "_", "label", "text_field", "_", "html_safe", "_", "html_safe", "import_will_timeout_message", "import_svn_message", "submit", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["import_status"]
CALLS: ["_", "help_page_path", "_", "html_safe"]
CALLS: ["config", "gitlab_shell", "git_timeout", "time_interval_in_words", "_"]
CALLS: ["to_i", "pluralize", "pluralize", "pluralize"]
CALLS: ["current_user", "manageable_namespaces", "namespace", "delete", "present?", "each", "icon", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["namespace", "manageable_groups"]
CALLS: ["owned_groups", "select", "masters_groups", "select", "new", "to_sql", "where", "new", "base_and_descendants"]
CALLS: ["project", "environments", "new", "container_class", "help_page_path", "namespace", "becomes", "form_errors", "label", "text_field", "label", "url_field", "submit", "project_environments_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["redirect_to_repository_settings", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["_", "s_", "s_", "_", "help_page_path", "link_to", "s_", "html_safe", "s_", "s_", "s_", "namespace", "gcp_new_namespace_project_clusters_path", "s_", "s_", "namespace", "user_new_namespace_project_clusters_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["new", "build_platform_kubernetes", "tap", "_", "s_", "s_", "_", "help_page_path", "link_to", "s_", "html_safe", "s_", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["new", "build_provider_gcp", "tap", "_", "s_", "s_", "_", "help_page_path", "link_to", "s_", "html_safe", "s_", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["empty?", "commit", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["current_user"]
CALLS: ["current_user"]
CALLS: ["profile_password_path", "form_errors", "password_automatically_set?", "label", "password_field", "label", "password_field", "label", "password_field", "submit", "header_title", "profile_path"]
CALLS: ["profile_chat_names_path", "token", "deny_profile_chat_names_path", "token", "header_title", "profile_path"]
CALLS: ["pre_auth", "authorizable?", "skip_authorization?", "matching_token?", "authorization", "authorize", "session", "delete", "redirect_uri", "client", "name", "redirect_uri", "current_user", "admin?", "icon", "client", "name", "client", "name", "redirect_uri", "client", "application", "owner", "name", "user_path", "scopes", "scopes", "each", "oauth_authorization_path", "client", "uid", "redirect_uri", "state", "response_type", "scope", "nonce", "oauth_authorization_path", "client", "uid", "redirect_uri", "state", "response_type", "scope", "nonce", "error_response", "body", "header_title", "profile_path"]
CALLS: []
CALLS: ["project_params", "find", "current_user", "can?", "render_404", "project_params"]
CALLS: ["logged_in_with_provider?", "go_to_provider_for_permissions", "session", "access_token_key", "status_import_url", "has_ci_cd_only_params?", "_", "_", "root_path", "import_github_title", "github_import_configured?", "import_github_authorize_message", "_", "params", "status_import_github_path", "import_github_personal_access_token_message", "personal_access_token_import_github_path", "_", "_", "github_import_configured?", "import_configure_github_admin_message"]
CALLS: ["help_page_path", "current_user", "admin?", "_", "html_safe", "_", "html_safe"]
CALLS: ["_", "github_import_configured?", "_", "html_safe", "_", "html_safe"]
CALLS: ["_"]
CALLS: ["current_user", "identities", "provider", "exists?"]
CALLS: ["provider", "extra_import_params", "public_send"]
CALLS: []
CALLS: ["client", "callback_import_url", "authorize_url"]
CALLS: ["provider", "extra_import_params", "public_send"]
CALLS: []
CALLS: ["enabled?"]
CALLS: ["session", "access_token_key", "present?", "session", "host_key", "present?", "status_import_url", "root_path", "custom_icon", "personal_access_token_import_gitea_path"]
CALLS: ["root_path", "callback_import_fogbugz_path"]
CALLS: ["params", "permit", "new", "dashboard_groups_path", "dashboard_groups_path", "form_errors", "label", "_", "_", "file_field", "_", "default_group_visibility", "default_group_visibility", "local_assigns", "fetch", "icon", "help_page_path", "label", "can_change_visibility_level", "form_model", "values", "form_model", "disallowed_visibility_level?", "restricted_visibility_levels", "include?", "form", "model_method", "form", "model_method", "selected_level", "radio_button", "visibility_level_icon", "visibility_level_label", "form_model", "visibility_level_description", "restricted_visibility_level_description", "form_model", "disallowed_visibility_level_description", "label", "each", "form_model", "render", "visibility_level_icon", "visibility_level_label", "form_model", "visibility_level_description", "config", "mattermost", "enabled", "custom_icon", "label", "check_box", "label", "mattermost", "host", "submit", "dashboard_groups_path", "name", "page_description", "description", "header_title", "group_title", "current_user"]
CALLS: ["new", "form_errors", "label", "text_field", "label", "group_preview_markdown_path", "group_preview_markdown_path", "label", "text_field", "label", "text_field", "new_record?", "submit", "group_milestones_path", "submit", "group_milestone_path", "name", "page_description", "description", "header_title", "group_title", "current_user"]
CALLS: ["labels", "new", "previous_labels_path", "group_labels_path", "url", "form_errors", "label", "text_field", "label", "text_field", "label", "text_field", "suggested_colors", "each", "persisted?", "submit", "submit", "back_path", "name", "page_description", "description", "header_title", "group_title", "current_user"]
CALLS: ["params", "find", "new", "represent"]
CALLS: ["params", "find_by!"]
CALLS: ["new", "form_errors", "label", "text_field", "label", "text_field", "label", "text_field", "new_record?", "label", "label", "object", "force_random_password", "password_field", "label", "object", "force_random_password", "password_field", "label", "number_field", "label", "check_box", "label", "current_user", "radio_button", "radio_button", "label", "check_box", "label", "file_field", "label", "text_field", "label", "text_field", "label", "text_field", "label", "text_field", "new_record?", "submit", "admin_users_path", "submit", "admin_user_path", "admin_root_path"]
CALLS: ["new", "form_errors", "label", "text_field", "label", "text_field", "label", "text_field", "suggested_colors", "each", "submit", "admin_labels_path", "admin_root_path"]
CALLS: ["params", "find_by!"]
CALLS: ["params", "find_by!"]
CALLS: ["params", "find_by!"]
CALLS: ["new", "form_errors", "label", "providers", "label_for", "map", "select", "label", "text_field", "submit", "admin_root_path"]
CALLS: ["new", "default_group_visibility", "form_errors", "label", "_", "_", "file_field", "_", "visibility_level", "can_change_group_visibility_level?", "visibility_level", "local_assigns", "fetch", "icon", "help_page_path", "label", "can_change_visibility_level", "form_model", "values", "form_model", "disallowed_visibility_level?", "restricted_visibility_levels", "include?", "form", "model_method", "form", "model_method", "selected_level", "radio_button", "visibility_level_icon", "visibility_level_label", "form_model", "visibility_level_description", "restricted_visibility_level_description", "form_model", "disallowed_visibility_level_description", "label", "each", "form_model", "render", "visibility_level_icon", "visibility_level_label", "form_model", "visibility_level_description", "form", "form", "check_box", "label", "current_user", "admin?", "label", "lfs_enabled?", "check_box", "icon", "help_page_path", "label", "current_user", "label", "check_box", "icon", "help_page_path", "label", "text_field", "new_record?", "submit", "admin_groups_path", "submit", "admin_group_path", "admin_root_path"]
CALLS: ["deploy_keys", "new", "local_assigns", "fetch", "local_assigns", "fetch", "deploy_keys_project_for", "form_errors", "label", "text_field", "new_record?", "label", "help_page_path", "text_area", "label", "text_field", "present?", "check_box", "label", "fields_for", "submit", "admin_deploy_keys_path", "admin_root_path"]
CALLS: ["new", "admin_applications_path", "application", "form_errors", "label", "text_field", "application", "label", "text_area", "application", "configuration", "native_redirect_uri", "configuration", "native_redirect_uri", "label", "check_box", "label", "application", "submit", "admin_applications_path", "admin_root_path"]
CALLS: ["params", "require", "permit"]
CALLS: ["new", "user_id", "id", "params", "fetch", "form_errors", "hidden_field", "label", "user", "name", "user", "username", "label", "sanitize", "text_area", "submit"]
END
THE SIZE OF TOUCHED METHODS: 6856 ["create", "new", "report_params", "new", "new", "new", "new", "user", "user", "user", "new", "new", "user", "user", "new", "new", "new", "new", "new", "new", "new", "new", "new", "new", "new", "user", "user", "new", "new", "new", "new", "new", "new", "new", "new", "new", "new", "new", "new", "new", "new", "new", "new", "new", "new", "new", "new", "new", "user", "notify", "notify", "notify", "user", "user", "notify", "notify", "save", "current_user", "notify", "domain", "notification_service", "notification_service", "notification_service", "notification_service", "verification_enabled?", "find_by!", "find_by!", "to_s", "to_s", "to_s", "to_s", "to_s", "id", "success?", "id", "id", "id", "id", "success?", "message", "message", "message", "message", "message", "message", "message", "message", "id", "error", "error", "error", "error", "error", "error", "error", "success?", "success?", "message", "merge", "merge", "merge", "author_id", "created_at", "version", "persisted?", "persisted?", "persisted?", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "target_branch", "update", "raw_repository", "with_cache_hooks", "update", "update", "update", "update", "project", "project", "filter_params", "project", "filter_params", "filter_params", "project", "project", "project", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "project", "execute", "execute", "label_ids", "project", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "project", "execute", "execute", "execute_hooks", "execute_hooks", "create_new_cross_references!", "project", "to_a", "project", "execute", "execute", "update_project_counter_caches", "project", "assignees", "project", "update_project_counter_caches", "project", "execute_hooks", "update_project_counter_caches", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "invalidate_cache_counts", "project", "project", "project", "project", "project", "project", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "filter_params", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "filter_params", "process_label_ids", "before_update", "after_update", "labels_changing?", "has_title_or_description_changed?", "change_state", "change_subscription", "change_todo", "toggle_award", "associations_before_update", "invalidate_cache_counts", "handle_changes", "execute_hooks", "update_project_counter_caches?", "execute_hooks", "update_project_counter_caches?", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "before_update", "handle_changes", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute_hooks", "filter_params", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "handle_changes", "after_update", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "project", "project", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "project", "execute", "execute_hooks", "execute", "execute", "execute", "project", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "assign_attributes", "execute", "execute", "execute", "execute_hooks", "execute", "execute", "execute", "execute", "uploader", "move", "move", "update_markdown", "uploader", "schedule_background_upload", "schedule_background_upload", "record_upload", "model", "file", "file", "model", "exists?", "exists?", "upload_path", "build_upload", "exists?", "build_upload", "build_upload", "exists?", "upload_path", "uploads", "build_upload", "size", "size", "size", "size", "size", "size", "data", "data", "data", "data", "snippet", "snippet", "snippet", "content", "find_by", "find_by", "skip_cross_project_check", "snippets", "find", "find", "view_to_html_string", "load_snippets", "path", "path", "path", "name", "name", "full_path", "full_path", "name", "full_path", "username", "file_name", "active?", "active?", "active?", "uncached_full_path", "full_path_key", "active?", "active?", "active?", "active?", "active?", "active?", "active?", "expired?", "expired?", "expired?", "expired?", "expired?", "x509", "action", "action", "action", "create?", "remove?", "revision_after", "revision_before", "environment_options", "options", "options", "job", "job", "options", "client_url", "parse", "url", "builds", "builds", "pipeline", "pipeline", "pipeline", "actual_head_pipeline", "diff_head_sha", "sha", "sha", "build", "build", "build", "build", "build", "group", "group", "group", "group", "group", "group", "group", "group", "can?", "can?", "can?", "can?", "can?", "allowed?", "policy_for", "user_scope", "user_scope", "subject", "subject", "config", "parent", "parent", "parent", "parent", "parent", "parent", "raise_error", "parent", "raise_error", "raise_error", "commit_by", "commit_by", "find_commit", "repository", "repository", "repository", "repository", "repository", "repository", "repository", "repository", "disk_path", "disk_path", "disk_path", "base_dir", "disk_hash", "base_dir", "base_dir", "base_dir", "disk_hash", "base_dir", "base_dir", "model_path_segment", "model_path_segment", "model_path_segment", "hashed_storage?", "hashed_storage?", "hexdigest", "hexdigest", "project_id", "project_id", "project_id", "hexdigest", "hexdigest", "hexdigest", "object_store", "object_store", "store_serialization_column", "serialization_column", "wiki?", "wiki", "wiki", "repository_storage", "gl_repository", "create_repo!", "create_repository", "after_create", "after_create", "after_create", "after_create", "create_repository", "cache_merge_request_closes_issues!", "todo_service", "update_merge_requests_head_pipeline", "new_merge_request", "new_merge_request", "new_issuable", "create_assignment_todo", "create_mention_todos", "create_todos", "attributes_for_todo", "filter_mentioned_users", "filter_directly_addressed_users", "directly_addressed_users", "filter_todo_users", "reject_users_without_access", "noteable", "to_ability_name", "for_issue?", "for_merge_request?", "noteable", "to_ability_name", "noteable", "select_users", "commit", "commit", "commit", "commit", "commit", "commit", "commit", "commit", "commit", "for_commit?", "commit", "commit", "commit_id", "commit", "for_commit?", "for_commit?", "commit", "commit", "commit", "merge_request", "merge_request", "merge_request", "merge_request", "merge_request", "merge_commit_message", "log_info", "log_info", "merge_request", "merge_request", "merge_request", "log_info", "source", "merge_request_info", "to_reference", "to_reference", "to_reference", "to_reference", "to_reference", "to_reference", "to_reference", "to_reference", "to_reference", "to_reference", "to_reference", "to_reference", "to_reference", "reference_prefix", "reference_prefix", "reference_prefix", "reference_prefix", "reference_prefix", "reference_prefix", "reference_prefix", "reference_prefix", "reference_prefix", "reference_prefix", "reference_prefix", "cross_namespace_reference?", "cross_project_reference?", "milestone_format_reference", "group_milestone?", "iid", "group_milestone?", "label_format_reference", "reference_link_text", "reference_link_text", "reference_link_text", "reference_link_text", "reference_link_text", "title", "title", "title", "title", "title", "title", "title", "title", "title", "title", "title", "title", "title", "title", "title", "title", "title", "title", "title", "title", "title", "title", "title", "title", "title", "title", "title", "title", "title", "title", "title", "title", "title", "title", "title", "title", "title", "title", "unhyphenize", "label", "label", "humanize", "access_level", "access_level", "access_level", "max_member_access_for_user", "members_with_parents", "active_without_invites_and_requests", "self_and_ancestors", "non_request", "left_join_users", "access_level_attribute", "model_name", "model_name", "model_name", "model_name", "labels", "labels", "labels", "labels", "labels", "labels", "labels", "each", "as_json", "as_json", "as_json", "each", "as_json", "enabled_keys", "available_project_keys", "available_public_keys", "represent", "represent", "represent", "represent", "represent", "represent", "represent", "represent", "represent", "paginated?", "paginated?", "paginator", "projects", "projects", "projects", "projects", "projects", "subgroups", "projects", "projects", "projects", "projects", "with_route", "projects", "projects", "projects", "projects", "projects", "inside_path", "inside_path", "authorized_projects", "milestoneish_ids", "milestoneish_ids", "for_milestones", "milestones", "milestones", "milestones", "milestones", "milestones", "milestones", "project?", "milestones?", "project?", "project?", "project?", "search_params", "search_params", "page_description", "header_title", "project_title", "description", "full_name", "description", "description", "description", "description", "description", "description", "description", "description", "description", "description", "description", "description", "description", "description", "description", "description", "description", "description", "description", "description", "description", "description", "description", "description", "description", "description", "description", "description", "description", "description", "description", "description", "build_full_name", "update_route", "prepare_route", "read_only?", "synced?", "sync_profile_from_provider?", "provider", "provider", "provider", "provider", "build_full_path", "human_name", "human_name", "full_title", "project_path", "project_icon", "simple_sanitize", "breadcrumb_list_item", "group_title", "avatar_url", "avatar_url", "owner", "avatar_url", "content_tag", "avatar_in_git", "url_helpers", "avatar", "file_on_head", "tree", "blobs", "head_commit", "head_commit", "head_commit", "head_tree", "root_ref", "head_commit_sha", "head_commit_sha", "last_commit_sha", "last_commit_sha", "last_version", "versions", "commit_shas", "commit_shas", "merge_request_diff", "empty?", "empty?", "raw_size", "stored_externally?", "external_size", "external_storage_error?", "external_storage", "external_storage", "lfs_enabled?", "lfs_enabled?", "lfs_enabled?", "enabled", "enabled", "enabled", "avatar_path", "gitlab_config", "gitlab_config", "local_url", "dynamic_segment", "dynamic_segment", "filename", "dynamic_segment", "filename", "dynamic_segment", "dynamic_segment", "dynamic_segment", "filename", "dynamic_segment", "filename", "oid", "secret", "generate_secret", "add_to_breadcrumb_dropdown", "group_title_link", "ancestors", "group_icon", "group_icon_url", "find_by_full_path", "find_by_full_path", "for_user", "where_full_path_in", "sprite_icon", "sprite_icon_path", "project_identicon", "values", "values", "values", "chart_values_file", "root", "root", "root", "root", "content_values", "specification", "ensure_runner", "gitlab_url", "runner", "create_and_assign_runner", "group_projects", "sort", "sort", "sort", "sort", "sort", "sort", "sort", "sort", "build_collection", "build_collection", "build_collection", "build_collection", "due_date", "discussion_id", "discussion_id", "discussion_class", "override_discussion_id", "discussion_class", "discussion_class", "discussion_class", "override_discussion_id", "build_discussion_id", "build_discussion_id", "base_discussion_id", "sort_by_attribute", "order_id_desc", "sort_by_attribute", "sort_by_attribute", "sort_by_attribute", "sort_by_attribute", "sort_by_attribute", "sort_by_attribute", "sort_by_attribute", "order_by", "order_by", "order_recent_sign_in", "order_oldest_sign_in", "order_recent_sign_in", "order_oldest_sign_in", "order_id_asc", "order_created_desc", "order_created_asc", "order_updated_desc", "order_updated_asc", "order_name_asc", "order_name_desc", "order_name_asc", "order_name_desc", "order", "order_by_labels_priority", "highest_label_priority", "left_join_priorities", "order_due_date_asc", "order_due_date_desc", "order_upvotes_desc", "order_downvotes_desc", "order_milestone_due_desc", "order_milestone_due_asc", "order_due_date_and_labels_priority", "order_labels_priority", "project_foreign_key", "project_foreign_key", "left_joins_milestones", "order_votes_desc", "label_names", "label_names", "labels?", "group?", "group?", "projects?", "in_namespace", "current_user_related?", "klass", "item_project_ids", "klass", "item_project_ids", "with_feature_available_for_user", "with_project_feature", "with_feature_enabled", "with_feature_access_level", "quoted_access_level_column", "authorizations_for_projects", "direct_child_projects", "projects_matching_filter", "hierarchy_for_parent", "direct_child_groups", "subgroups_matching_filter", "supports_nested_groups?", "with_selects_for_list", "supports_nested_groups?", "with_counts", "project_count_sql", "subgroup_count_sql", "member_count_sql", "count", "cache", "cache_key", "cache", "uncached_count", "cache_key", "cache_options", "cache_key", "cache_key", "cache_key_name", "cache_key_name", "cache_key_name", "cache_key_name", "raw?", "raw?", "relation_for_count", "relation_for_count", "relation_for_count", "relation_for_count", "keys", "nav_link", "blocked?", "blocked?", "internal?", "internal_attributes", "status", "status", "status", "status", "status", "status", "status", "status", "status", "status", "status", "status", "status", "status", "status_sql", "failed_but_allowed", "exclude_ignored", "created", "running", "pending", "success", "canceled", "skipped", "manual", "pending", "success", "success", "success", "success", "success", "success", "success", "success", "delete_artifact!", "erase_artifacts!", "has_expiring_artifacts?", "remove_artifacts_file!", "remove_artifacts_metadata!", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "access_denied!", "request", "request", "destroy_confirmation_valid?", "destroy_confirmation_failure_message", "delete_async", "block", "redirect_back_or_admin_user", "update_user", "default_route", "redirect_back_or_default", "confirm_deletion_with_password?", "allow_password_authentication?", "allow_password_authentication_for_web?", "allow_password_authentication_for_git?", "ldap_user?", "async_execute", "async_execute", "async_execute", "async_execute", "async_execute", "async_execute", "hook", "hook", "hook", "hook", "supported_events", "supported_events", "supported_events", "supported_events", "supported_events", "supported_events", "supported_events", "supported_events", "supported_events", "supported_events", "supported_events", "supported_events", "supported_events", "supported_events", "supported_events", "supported_events", "supported_events", "supported_events", "supported_events", "supported_events", "supported_events", "supported_events", "supported_events", "form_errors", "icon", "fluid_layout", "wiki_page_errors", "slug", "format", "format", "format", "find_page", "slug", "format", "submit", "text", "akismet_client", "akismet_enabled?", "page_title_and_dir", "generate_slug", "random_suffix", "trigger", "trigger", "trigger", "trigger", "merge_params", "merge_params", "merge_async", "mergeable?", "pipeline_merge_requests", "merge_request_became_unmergeable", "create_unmergeable_todo", "ref", "ref", "merge_requests_for", "ref", "ref", "ref", "default_branch", "default_branch", "check_if_can_be_merged", "check_if_can_be_merged", "mergeable_state?", "should_be_rebased?", "ff_merge_possible?", "ff_merge_must_be_possible?", "target_branch_sha", "ancestor?", "target_branch_head", "target_branch_ref", "target_project", "work_in_progress?", "open?", "work_in_progress?", "mergeable_discussions_state?", "broken?", "mergeable_ci_state?", "branch_missing?", "has_no_commits?", "has_commits?", "commits_count", "commits_count", "source_branch_exists?", "target_branch_exists?", "source_branch_exists?", "target_branch_exists?", "source_branch", "source_project", "source_project", "branch_exists?", "discussions_to_be_resolved?", "discussions_resolvable?", "discussions_resolved?", "resolvable_discussions", "discussions", "discussion_notes", "discussion_notes", "discussions", "resolvable", "discussions", "fresh", "fresh", "fresh", "potentially_resolvable", "inc_relations_for_view", "notes", "notes", "notes", "for_commit_id", "non_diff_notes", "discussion_serializer", "prepare_notes_for_rendering", "issuable", "cross_reference_not_visible_for?", "issuable", "issue", "issue", "issue", "issue", "issue", "issue", "get_issue", "issue_iid", "external_issue_reference_pattern", "external_issue_tracker", "services", "cache_has_external_issue_tracker", "external_issue_trackers", "active", "active", "active", "active", "active", "active", "active", "issue_trackers", "active", "without_defaults", "active", "non_internal", "reference_pattern", "reference_pattern", "reference_pattern", "reference_pattern", "reference_pattern", "reference_pattern", "reference_pattern", "reference_pattern", "reference_pattern", "reference_pattern", "reference_pattern", "issues_enabled?", "reference_pattern", "reference_pattern", "reference_pattern", "reference_pattern", "union", "union", "find_union", "target", "target", "issue?", "target", "target", "target", "note", "note", "note", "note?", "target_type", "noteables_for_type", "render_404", "issues", "render_404", "issues", "render_404", "issues", "issues", "of_milestones", "issuables_collection", "collection_type", "non_archived", "non_archived", "join_project", "join_project", "join_project", "create_event", "create_event", "create_event", "create_event", "event_service", "event_service", "reopen_mr", "reopen", "merge_request_metrics_service", "reopen_mr", "reopen_resource_email", "build_recipients", "mailer", "notification_recipients", "notification_recipients", "priority", "priority", "build!", "filter!", "recipients", "build!", "build!", "filter!", "recipients", "build!", "delete", "delete_page", "commit_details", "update_project_activity", "touch", "touch", "touch", "touch_noteable", "scope", "scope", "scope", "scope", "process_scope", "process_registry_access", "process_repository_access", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "ensure_container_repository!", "can_access?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "container_registry_enabled?", "build_can_pull?", "user_can_admin?", "user_can_pull?", "deploy_token_can_pull?", "build_can_push?", "user_can_push?", "has_authentication_ability?", "can_user?", "has_authentication_ability?", "has_access_to?", "has_access_to?", "deploy_keys_project_for", "registry", "registry", "full_access_token", "token_expire_at", "create_from_path!", "build_from_path", "project_url", "project_url", "new_issue_url", "project_url", "issues_url", "new_issue_url", "web_url", "web_url", "web_url", "enforce_namespace_to_lower_case", "enforce_namespace_to_lower_case", "get_channels", "map_recipients", "activated?", "format_channel", "consider_uri", "source_type", "membershipable", "service", "service", "service", "service", "kubeclient", "kubeclient", "kubeclient", "kubeclient", "cluster", "cluster", "cluster", "cluster", "cluster", "present", "attributes", "html_fields", "markdown_fields", "html_field", "build_kubeclient!", "build_kubeclient!", "build_kubeclient!", "kubeclient_ssl_options", "join_api_url", "kubeclient_ssl_options", "join_api_url", "join_api_url", "kubeclient_ssl_options", "actual_namespace", "kubeclient_auth_options", "actual_namespace", "kubeclient_auth_options", "default_namespace", "default_namespace", "find_or_initialize_service", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "find_or_initialize_services", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "reply_key", "reply_key", "find_service", "available_services_names", "build_from_template", "sha_to", "sha_start", "exclude_start?", "sha_from", "two_factor_grace_period", "variables", "variables", "to_h", "markdown_link", "markdown_name", "secure_url", "secure_url", "image_or_video?", "image_or_video?", "video?", "image?", "video?", "extension_match?", "extension", "dangerous?", "scoped_variables", "persisted_variables", "persisted_environment_variables", "persisted_environment", "predefined_variables", "environment_url", "predefined_variables", "predefined_variables", "predefined_variables", "predefined_variables", "predefined_variables", "predefined_variables", "predefined_variables", "predefined_variables", "environment_url", "kubeconfig", "kubeconfig", "instance_domain", "has_domain?", "full_path_slug", "container_registry_variables", "auto_devops_variables", "auto_devops_enabled?", "enabled?", "container_registry_url", "tag_list", "tag_path", "ci_yaml_file_path", "external_url", "external_link?", "pages_group_url", "pages", "pages_subdomain", "pages", "get_project_wiki_path", "container_class", "group_by_directory", "directory", "blank_container", "external_wiki", "cache_has_external_wiki", "external_wikis", "pages_config", "pages_config", "pages_https_only?", "pages_domains_config", "https?", "enabled_pages_domains", "stage", "action?", "action?", "ref_slug", "legacy_variables", "licensed_features", "before_sha", "when", "build_attributes_from_config", "config_processor", "ci_yaml_file", "ci_yaml_from_repo", "implied_ci_yaml_file", "gitlab_ci_yml_for", "blob_data_at", "load_all_data!", "load_all_data!", "blob_at", "decorate", "decorate", "decorate", "to_action_id", "not_found", "legacy_stage", "statuses_count", "statuses", "expanded_environment_name", "has_environment?", "environment", "environment", "environment", "environments", "environments", "simple_variables", "repo_url", "http_url_to_repo", "http_url_to_repo", "yaml_variables", "user_variables", "secret_group_variables", "secret_project_variables", "job_variables", "user_variables", "deployment_variables", "deployment_platform", "deployment_platform", "find_deployment_platform", "find_cluster_platform_kubernetes", "find_kubernetes_service_integration", "build_cluster_and_deployment_platform", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "kubernetes_service_template", "cluster_attributes_from_service_template", "create", "create", "create", "create", "create", "spammable", "access_levels", "access_levels", "access_levels", "verify_params!", "ce_style_access_level", "type", "type", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "handle_quick_actions_on_create", "create_issuable", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "handle_quick_actions_on_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "handle_wip_event", "wipless_title", "wip_title", "move_to_end", "spam_check", "when_recaptcha_verified", "check", "check", "check", "create_wiki", "wiki_enabled?", "git_fsck", "has_pushes?", "with_push", "keyed_verification_code", "log_error", "log_error", "txt_records", "log_error", "check_for_spam?", "check_for_spam?", "check_for_spam?", "spam?", "akismet", "akismet", "check_for_spam?", "create_spam_log", "spam_title", "spam_description", "spammable_owner_id", "spammable_text", "spammable_owner", "title_changed?", "max_relative_position", "position_between", "parent_ids", "update_attributes", "merge!", "process_title", "deep_title_squish", "merge_when_pipeline_succeeds_active?", "merge_quick_actions_into_params!", "delete_conflicting_redirects", "conflicting_redirects", "matching_path_and_descendants", "reset_project_activity", "set_last_repository_updated_at", "track_user_interacted_projects", "set_last_repository_updated_at", "available?", "track", "available?", "cached_exists?", "recent_update?", "check_repository_absence!", "set_last_activity_at", "ensure_storage_path_exists", "ensure_storage_path_exists", "repository_storage_path", "repository_storage_path", "repository_with_same_path_already_exists?", "update_daemon", "sync_share_with_group_lock_with_parent", "save_git_content", "keep_around_commits", "keep_around_commits", "ensure_commit_shas", "save_diffs", "save_commits", "keep_around_commits", "start_commit_sha", "base_commit_sha", "keep_around", "kept_around?", "keep_around_ref_name", "ref_exists?", "start_commit", "start_commit", "merge_base_commit", "merge_base", "commits", "commits", "commits", "commits", "commits", "compare", "create_bulk", "commits", "commits", "author_name", "commits_between", "to_hash", "to_hash", "diff", "diff", "diff", "binary?", "binary?", "binary?", "apply_diff_view_cookie!", "highlight", "safe_start_commit_sha", "load_commits", "from_hash", "raw", "raw", "raw", "raw", "raw", "send_upload", "trace", "raw_send_params", "raw_redirect_params", "trace_artifact_file", "trace", "complete?", "complete?", "closed_items_count", "total_items_count", "merge_requests", "merge_requests", "merge_requests", "merge_requests", "merge_requests", "total_issues_count", "memoize_per_user", "merge_requests", "merge_requests", "merge_requests", "merge_requests", "memoized_users", "count_issues_by_state", "issues_visible_to_user", "issues_finder_params", "issues_finder_params", "issues_finder_params", "issues_finder_params", "by_commit_sha", "by_commit_sha", "merge_request_path", "to_json", "tabs_json", "milestone_redirect_path", "sorted_merge_requests", "safe_title", "safe_title", "closed_and_merged", "inspect", "inspect", "inspect", "inspect", "file_storage?", "proxy_download_enabled?", "file_storage?", "storage", "storage", "storage_for", "object_store_enabled?", "object_store_options", "send_artifacts_entry", "convert_line_endings", "sanitized_file_name", "prepare_commits_for_rendering", "with_pipeline_status", "pipelines", "pipelines", "pipelines", "latest_status_per_commit", "pipelines", "set_status_for_ref", "all_pipelines", "all_commit_shas", "all_commits", "recent", "recent", "recent", "recent", "short_id", "diffs", "max_diff_options", "diffs", "diffs", "diffs", "diffs", "create_merge_request_diff_files", "diff_refs", "diff_refs", "diff_refs", "diff_refs", "diff_start_sha", "diff_base_sha", "branch_merge_base_commit", "source_branch_sha", "source_branch_head", "source_branch_ref", "diff_options", "environments_for", "diff_head_commit", "diffs_expanded?", "hide_whitespace?", "action_name", "action_name", "push?", "merged?", "closed?", "joined?", "left?", "destroyed?", "commented?", "created_project?", "push_action_name", "created_project_action_name", "closed?", "push?", "state", "external_import?", "import_url", "credentials", "credentials", "import_data", "gitlab_project_import?", "expire_content_cache", "has_importer?", "importer", "importer_class", "importer_class", "importer_class", "importer_class", "importer_class", "importer_class", "expire_tags_cache", "expire_branches_cache", "expire_statistics_caches", "expire_root_ref_cache", "expire_emptiness_caches", "expire_exists_cache", "new_ref?", "rm_ref?", "created?", "created?", "status_name", "find_base_sha", "ensure_merge_request_diff", "create_merge_request_diff", "reload_merge_request_diff", "fetch_ref!", "ref_path", "ref_path", "ref_path", "fetch_source_branch!", "post_create_hook", "post_create_hook", "create_notification_setting", "send_invite", "send_request", "post_create_hook", "send_invite", "post_create_hook", "send_invite", "post_create_hook", "owner?", "new_project_member", "member_access_granted_email", "real_source_type", "notifiable?", "real_source_type", "notifiable?", "notifiable?", "notifiable?", "suitable_notification_level?", "unsubscribed?", "own_activity?", "has_access?", "read_ability", "notification_level", "custom_enabled?", "action_excluded?", "excluded_watcher_action?", "excluded_participating_action?", "notification_setting", "notification_setting", "event_enabled?", "find_notification_setting", "notification_settings_for", "global_notification_setting", "notifiable_options", "notifiable_options", "notifiable_options", "member", "member", "member_source", "find_by_invite_token", "invite_project_member", "member_invited_email", "new_group_member", "invite_group_member", "system_hook_service", "system_hook_service", "system_hook_service", "system_hook_service", "execute_hooks_for", "build_event_data", "full_path_was", "full_path_was", "build_event_name", "project_data", "project_member_data", "group_data", "group_member_data", "user_data", "human_access", "access_options", "visibility_levels", "new_access_request", "members", "owners_and_masters", "members", "deliver_access_request_email", "fallback_to_group_owners_masters?", "member_access_requested_email", "fetch_members", "find_or_create_for", "update_two_factor_requirement", "update_two_factor_requirement", "expanded_groups_requiring_two_factor_authentication", "all_expanded_groups", "groups", "all_groups", "all_groups", "groups", "groups", "users", "authorized_groups", "ordered", "latest", "ordered", "visible_to_user", "visible_to_user", "groups_for_ancestors", "groups_for_descendants", "owned_groups", "include_public_groups?", "full_private_access?", "load_groups", "prepare_groups_for_rendering", "preload_max_member_access_for_collection", "set_diff", "find_diff", "diff_for_line_code", "raw_diffs", "raw_diffs", "diff_file_hash", "raw_diffs", "raw_diffs", "load_diffs", "refresh_user_cache", "refresh_cache", "refresh_cache", "count_stored?", "global_count", "count_service", "global_count", "count_service", "global_count", "count_service", "project_ids", "query", "project_ids", "query", "project_ids", "query", "query", "query", "project_ids", "opened", "public_only", "can_query?", "with_reactive_cache", "can_query?", "full_reactive_cache_key", "alive_reactive_cache_key", "within_reactive_cache_lifetime", "prometheus_client", "prometheus_client", "prometheus_client", "service_name", "service_port", "kube_client", "generate_subkeys", "primary_keyid", "before_create_do_block", "before_create_do_block", "started_at", "finished_at", "failure_reason", "add_root_as_member", "create_ref", "invalidate_cache", "create_ref", "expire_etag_cache", "expire_etag_cache", "expire_etag_cache", "expire_etag_cache", "discussions_rendered_on_frontend?", "discussions_rendered_on_frontend?", "etag_key", "etag_cache_key", "awardable", "refresh_markdown_cache", "skip_project_check?", "latest_cached_markdown_version", "skip_project_check?", "skip_project_check?", "for_project_noteable?", "for_personal_snippet?", "ensure_metadata", "create_page", "platform_kubernetes_attributes_from_service_template", "find_by_template", "ensure_callout", "feature_name", "recaptcha_check_with_fallback", "spammable_params", "snippet_params", "snippet_params", "move_temporary_files", "ensure_spam_config_loaded!", "spammable_path", "render_recaptcha?", "spammable_path", "spammable_path", "spammable_path", "log_audit_event", "log_user_activity", "log_audit_event", "log_user_activity", "authentication_method", "user_params", "user_params", "user_params", "user_params", "user_params", "user_params_ce", "login_counter", "counter", "counter", "counter", "counter_name", "counter_description", "counter_name", "counter_description", "counter_name", "counter_description", "counter_name", "counter_description", "counter_name", "counter_description", "for_authentication", "security_event", "resource_name", "resource_name", "project_params", "project_params", "project_params", "custom_import_params", "active_new_project_tab", "saved?", "project_params_attributes", "wiki_params", "build_page", "build_page", "build_page", "build_page", "build_page", "build_page", "build_page", "trigger_params", "mark_todo", "preview_markdown_path", "ref_names", "ref_names", "refs", "refs", "refs", "runners_path", "assign_to", "shared?", "redirect_to_repository_settings", "protected_ref_params", "create_service_class", "protected_ref_params", "access_level_attributes", "service_namespace", "service_namespace", "create_params", "create_params", "create_params", "create_params", "create_params", "create_params", "create_params", "project_pipeline_path", "project_pipeline_path", "schedule_params", "pipeline_schedules_path", "milestone_params", "milestone_params", "merge_request_params", "define_new_vars", "merge_request_params", "branch_name", "branch_name", "to_branch_name", "confidential?", "ref_name", "set_pipeline_variables", "relevant", "merge_request_params_attributes", "configure_params", "configure", "command", "command", "bitmaps_enabled?", "git", "service_trigger_url", "render_json", "build_payload", "error_payload", "label_params", "label_params", "label_params", "messages", "label_params", "tags", "tags", "tags", "tags", "repo", "tags", "manifest", "client", "client", "client", "client", "client", "client", "client", "client_options", "access_token_key", "client_options", "host_key", "image", "image", "image", "issue_params", "issue_params", "issue_params", "discussions_to_resolve", "issue_params", "issue_params_with_info_from_discussions", "whitelisted_issue_params", "merge_request_to_resolve_discussions_of", "title_from_merge_request", "description_for_discussions", "items_for_discussions", "item_for_discussion", "author", "author", "author", "first_note", "first_note_to_resolve", "resolvable?", "resolvable?", "potentially_resolvable?", "supports_resolvable_notes?", "base_class_name", "find_by_any_email", "by_any_email", "author?", "author_id?", "author_username?", "discussions_to_be_resolved", "find_discussion", "find_discussion", "noteable_without_project?", "board", "board", "board", "board", "board", "move_between_lists?", "issue_state", "add_label_ids", "remove_label_ids", "move_between_ids", "group_board?", "on_group_boards", "on_project_boards", "movable?", "moving_from_list", "moving_to_list", "with_lists_and_board", "movable", "boards", "issue_params_attributes", "import_schedule", "import?", "bare_repository_import?", "fail", "mark_import_as_failed", "forked?", "fork_network", "hook_params", "hook_params", "group_link_create_params", "continue_params", "import_in_progress?", "import_started?", "import_scheduled?", "environment_params", "token_in_session", "jobs", "jobs", "jobs", "jobs", "jobs", "yaml_processor_options", "validation_message", "validation_message", "blob", "prepare!", "prepare!", "blob", "prepare!", "prepare!", "blob", "diff_file", "diff_file", "diff_file", "project_repository", "project_tree_path", "url_to_autodeploy_setup", "autodeploy_flash_notice", "empty_repo?", "new_issue_branch", "create_note", "create_note", "create_note", "create_note", "metadata?", "change_status", "gfm_reference", "link_to_autodeploy_doc", "truncate", "truncate_team", "create_commit", "user_access", "update_flash_notice", "final_success_path", "branch_name_or_ref", "next_branch", "fork_of", "find_fork_of", "find_forks_in", "new_merge_request_path", "existing_merge_request_path", "merge_request_exists?", "create_merge_request?", "different_project?", "build_qr_code", "setup_u2f_registration", "execute!", "execute!", "can_see_access_requests?", "u2f_app_id", "push", "cache_last_push_event", "user_cache_key", "project_cache_key", "set_key", "account_string", "issuer_host", "host", "finder", "finder", "set_index_vars", "finder", "set_index_vars", "finder", "personal_access_token_params", "set_index_vars", "redis_store!", "redis_shared_state_key", "redis_getdel", "oauth_authorized_tokens", "issuable_finder_for", "finder_type", "finder_type", "finder_type", "finder_type", "finder_type", "key_params", "key_params", "gpg_key_params", "email_params", "delete_chat_name_token", "chat_name_params", "chat_names", "chat_name_params", "chat_name_token", "chat_name_token", "create_application_params", "application_params", "resource", "can_read?", "render_response", "notification_setting_params", "resource", "sign_up_params", "file_is_valid?", "find_or_create_namespace", "access_params", "access_params", "extra_project_attrs", "user_map", "user_map", "group_params", "group_params", "custom_icon", "visibility_level_icon", "visibility_level_description", "restricted_visibility_level_description", "disallowed_visibility_level_description", "visibility_level_label", "restricted_visibility_levels", "disallowed_visibility_level?", "visibility_level_allowed?", "visibility_level_allowed?", "visibility_level_allowed_as_fork?", "visibility_level_allowed_by_group?", "visibility_level_allowed_by_parent?", "visibility_level_allowed_by_projects?", "visibility_level_allowed_by_sub_groups?", "children", "disallowed_project_visibility_level_description", "disallowed_group_visibility_level_description", "visibility_level_errors_for_group", "project_visibility_level_description", "group_visibility_level_description", "snippet_visibility_level_description", "group_params_attributes", "group_params_ce", "milestone_path", "milestone_path", "project_milestone?", "project_milestone?", "legacy_group_milestone?", "legacy_group_milestone?", "represent_appearance", "uploader_class", "uploader_class", "uploader_class", "uploader_class", "uploader_class", "uploader_class", "uploader_class", "note_json", "note_params", "note_project", "note_params", "note_html", "diff_discussion_html", "discussion_html", "note_serializer", "use_note_serializer?", "diff_discussion?", "diff_discussion?", "individual_note?", "individual_note?", "to_discussion", "on_image?", "on_image?", "on_image?", "members_page_url", "serialize_as_json", "list_params", "serialize_as_json", "serialize_as_json", "serialize_as_json", "serialize_as_json", "board_parent", "impersonation_token_params", "identity_params", "can_change_group_visibility_level?", "add_owner", "add_user", "add_user", "add_user", "retrieve_member", "retrieve_access_level", "can_update_member?", "request?", "can_update_member?", "created_by", "retrieve_user", "broadcast_message_params", "appearance_params", "allowed_appearance_params", "deployment", "deployment", "default_environment", "secret_variables_for", "secret_variables_for", "unprotected", "unprotected", "protected_for?", "protected?", "protected?", "tag_exists?", "matching", "matching", "matches?", "exact_match?", "wildcard_match?", "wildcard?", "wildcard_regex", "default_branch_protected?", "set_default_values", "set_default_values", "set_default_values", "default_message", "add_participants", "add_mentions", "add_custom_notifications", "add_project_watchers", "add_subscribed_users", "add_participants", "add_mentions", "add_custom_notifications", "add_project_watchers", "add_subscribed_users", "subscribers", "add_recipients", "add_recipients", "make_recipient", "make_recipient", "acting_user", "custom_action", "acting_user", "custom_action", "acting_user", "custom_action", "subscriptions_available", "project_watchers", "project_watchers", "user_ids_notifiable_on", "select_project_members_ids", "select_group_members_ids", "user_ids_with_global_level_watch", "user_ids_notifiable_on", "select_project_members_ids", "select_group_members_ids", "user_ids_with_global_level_watch", "settings_with_global_level_of", "settings_with_global_level_of", "user_ids_with_global_level_custom", "user_ids_with_global_level_custom", "mentioned_users", "all_references", "extractors", "participants", "participants", "participants", "participants", "all_participants", "raw_participants", "users_that_can_read_project", "users_that_can_read_personal_snippet", "assignee", "add_labels_subscribers", "add_labels_subscribers", "assignee_id?", "assignee_username?", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "newest_first", "sort_value_recently_updated", "latest_successful_for_refs", "active_when", "subject_snippets_path", "are_public", "member?", "team", "member?", "are_internal", "are_private", "are_public", "public_and_internal", "max_member_access", "max_member_access_for_user_ids", "max_member_access_for_resource_ids", "max_member_access_for_resource_key", "with_pagination", "with_pagination", "present_members", "search", "search", "search", "search", "sort_value_name", "search", "search", "search", "search", "search", "search", "search", "personal?", "search", "search", "namespace_id", "search", "milestones_filter_path", "milestone_counts", "milestone_class_for_state", "for_projects", "for_projects", "references", "discussion", "discussion", "part_of_discussion?", "new_issuable_address", "merge_request_source_project_for_project", "new_issuable_address", "prioritized", "unprioritized", "finished", "project_issues", "rss_url_options", "safe_params", "available", "stopped", "within_folders", "represent_concise", "create_mr_button?", "create_mr_path", "dropdown_content", "dropdown_loading", "fetch_branches_by_mode", "diverging_commit_counts", "respond_with_boards", "respond_with", "incoming_email_token_enabled?", "clipboard_button", "page_title", "scopes", "rss_token", "with_subkeys", "fingerprint", "emails_with_verified_status", "fingerprint", "user_infos", "verified_email?", "confirmed", "primary_email_verified?", "temp_oauth_email?", "metrics_service", "metrics_text", "prometheus_metrics_text", "health_metrics_text", "formatter", "multiprocess_metrics_path", "koding_project_url", "support_url", "markdown", "markdown_field", "version_status_badge", "markdown", "prepare_for_rendering", "banzai_render_context", "banzai_render_context", "for_display", "for_display", "for_display", "banzai_render_context", "markdown_engine", "markdown_unsafe", "promo_url", "promo_host", "states_count", "group_milestones_states_count", "legacy_group_milestone_states_count", "count_by_state", "count_by_state", "dropdown_toggle", "filter_group_project_member_path", "users_select_tag", "member_sort_options_hash", "non_invite", "access_level_roles", "access_level_roles", "access_level_roles", "sort_title_access_level_asc", "sort_title_access_level_desc", "sort_title_last_joined", "sort_title_name_asc", "sort_title_name_desc", "sort_title_oldest_joined", "sort_title_oldest_signin", "sort_title_recently_signin", "sort_value_access_level_asc", "sort_value_access_level_desc", "sort_value_last_joined", "sort_value_name_desc", "sort_value_oldest_signin", "sort_value_oldest_joined", "sort_value_recently_signin", "users_select_data_attributes", "setup_children", "expand_hierarchy", "load_projects", "load_projects", "load_projects", "shared_projects", "filter_projects_path", "projects_sort_options_hash", "sort_value_latest_activity", "can_create_project?", "projects_limit_left", "personal_projects_count", "current_controller?", "sort_title_largest_repo", "sort_title_latest_activity", "sort_title_name", "sort_title_oldest_activity", "sort_title_oldest_created", "sort_title_recently_created", "sort_value_largest_repo", "sort_value_oldest_activity", "sort_value_oldest_created", "sort_value_recently_created", "request_path_with_options", "prepare_projects_for_rendering", "filter_groups_path", "groups_sort_options_hash", "can_create_group?", "can_create_group?", "subgroup?", "has_parent?", "sort_title_oldest_updated", "sort_title_recently_updated", "sort_value_oldest_updated", "redirect_out_of_range", "redirect_out_of_range", "todo_params", "todos_pending_count", "current_page", "todos_pending_count", "load_events", "load_events", "load_events", "load_events", "load_events", "show_projects?", "any_projects?", "event_filter", "render_group_tree", "notes_finder", "finder_params", "finder_params", "last_fetched_at", "make_sure_position_is_set", "sort_options_hash", "admins", "blocked", "external", "without_projects", "with_two_factor", "without_two_factor", "filter", "search_with_secondary_emails", "sort_title_created_date", "sort_title_downvotes", "sort_title_due_date", "sort_title_due_date_later", "sort_title_due_date_soon", "sort_title_label_priority", "sort_title_largest_group", "sort_title_milestone", "sort_title_milestone_later", "sort_title_milestone_soon", "sort_title_popularity", "sort_title_priority", "sort_title_upvotes", "sort_value_created_date", "sort_value_downvotes", "sort_value_due_date", "sort_value_due_date_later", "sort_value_due_date_soon", "sort_value_label_priority", "sort_value_largest_group", "sort_value_milestone", "sort_value_milestone_later", "sort_value_milestone_soon", "sort_value_popularity", "sort_value_priority", "sort_value_upvotes", "services_templates", "online", "contact_time_deadline", "dropdown_title", "dropdown_filter", "kind", "templates", "admin_groups_sort_options_hash", "with_statistics", "with_statistics", "boolean_to_icon", "projects_with_write_access", "with_write_access", "without_deleted", "usage_ping_enabled", "usage_ping_can_be_configured?", "broadcast_message", "broadcast_message_status", "ended?", "broadcast_message_style", "render_broadcast_message", "color", "metrics", "metrics", "metrics", "metrics", "metrics", "metrics", "prometheus_adapter", "has_metrics?", "prometheus_adapter", "has_metrics?", "prometheus_adapter", "prometheus_adapter", "service_prometheus_adapter", "cluster_prometheus_adapter", "create_record_event", "create_merge_event", "merge_mr", "merge_mr", "close_resource_email", "close_mr", "close", "close", "close_mr", "commit_status_merge_requests", "merge_request_build_retried", "mark_pending_todos_as_done", "update_todos_count_cache", "attributes_for_target", "pending_todos", "todos_done_count", "todos_done_count", "preload_for_collection", "render_events", "cycle_analytics", "events_params", "issues_finder", "cross_reference?", "has_referenced_mentionables?", "cross_reference?", "cross_reference_note_prefix", "referenced_mentionables", "local_reference", "matches_cross_reference_regex?", "default_issues_tracker?", "force_cross_reference_regex_check?", "preload_max_access_for_authors", "preload_noteable_for_regular_notes", "preload_first_time_contribution_for_authors", "first_contribution?", "first_contribution?", "specialize_for_first_contribution!", "merged", "merge_params_ee", "merge_params_attributes", "valid_token?", "valid_token?", "valid_token?", "valid_token?", "find_chat_user", "authorize_chat_name_url", "health_check_access_token", "only_for?", "tag", "tag", "tag", "find_tag", "destroy_service_class", "schedule", "destroy_all", "destroy_all", "remove_pages", "rename_project", "todos_counts", "mark_todos_as_done", "update_todos_state", "milestone", "milestone", "milestone", "milestone", "milestone?", "find_labels", "find_labels", "extract_references", "disable_two_factor!", "revoke", "revoke", "revoke", "revoke", "revoke", "with_key_and_subkeys", "revoke!", "revoke!", "mark_todos_as_done_by_ids", "todos_by_ids", "editable?", "editable?", "editable?", "prometheus_installed?", "template?", "template?", "human_class_name", "destroyable", "remove_user", "remove_user", "set_user", "impersonator", "set_user", "set_user", "deploy_key", "deploy_key", "deploy_keys", "all_state_names", "online?", "commit_statuses", "represent_status", "represent_status", "represent_status", "has_ci_cd_only_params?", "import_github_title", "active_nav_link?", "current_action?", "current_path?", "all_visible_descendant_groups", "exists", "descendants", "find_by_path_or_name", "remove_project_message", "storage_counter", "visibility_level_color", "archived", "sorted_by_activity", "projects_finder", "joined", "represent_hierarchies", "hierarchy", "build_hierarchy", "represent_hierarchy", "expand_hierarchy_for_child", "ancestors_upto", "ancestors_upto", "itemized?", "itemize", "folder", "entity_class", "project_deploy_keys", "in_projects", "in_projects", "in_projects", "in_projects", "filter_by_no_label?", "commit_reference", "closes_issues", "closes_issues", "closes_issues", "committer", "merge_request?", "ff_merge", "lazy", "lazy", "batch", "commits_by", "for", "render_lfs_not_found", "objects", "download_request?", "upload_request?", "download_request?", "download_request?", "upload_request?", "download_objects!", "upload_objects!", "download_request?", "upload_request?", "download_request?", "upload_request?", "existing_oids", "upload_actions", "all_lfs_objects", "lfs_storage_project", "fork_source", "download_actions", "upload_pack?", "git_command", "blobs_at", "new_resource_email", "head_pipeline_for", "resolve_discussions_with_issue", "user_agent_detail_service", "new_issue", "new_issue", "repository_event", "repository_storages", "parse_repo_path", "find_routable!", "handle_not_found_or_authorized", "routable_authorized?", "ensure_canonical_path", "build_canonical_path", "build_canonical_path", "build_canonical_path", "build_canonical_path", "build_canonical_path", "route_not_found", "authenticate_user!", "authenticate_user!", "allow_signup?", "of_projects", "of_projects", "of_projects", "build_from_id", "build_from_ref", "latest_successful_builds_for", "with_artifacts_archive", "latest_successful_for", "archive", "archive", "archive!", "git_not_found!", "render_show", "render_show", "define_protected_refs", "define_deploy_token", "expand_deploy_tokens_section?", "expires?", "expires_soon?", "expires_at", "expires_at", "branches", "load_gon_index", "branches", "access_levels_options", "protectable_tags_for_dropdown", "protectable_branches_for_dropdown", "hash", "hash", "protectable_ref_names", "non_wildcard_protected_ref_names", "protections", "levels_for_dropdown", "branch_names_contains", "tag_names_contains", "job_from_id", "job_from_ref", "default_options", "start_date", "start_date", "current", "current", "current", "current_and_future_messages", "cache_expires_in", "ensure_cache_setup", "diff_line", "diff_line", "diff_line", "find_noteable_diff", "supported?", "supported?", "has_complete_diff_refs?", "started?", "started?", "application_name", "entry", "artifacts_metadata_entry", "artifacts_metadata", "use_file", "with_exclusive_lease", "unsafe_use_file", "cancel", "cancel", "cancel", "exclusive_lease_key", "cancel_merge_when_pipeline_succeeds", "reset_merge_when_pipeline_succeeds", "reset_merge_when_pipeline_succeeds", "cancel_merge_when_pipeline_succeeds", "merge_requests_for_source_branch", "merge_when_pipeline_succeeds", "serialize_widget", "can_cancel_merge_when_pipeline_succeeds?", "can_be_merged_by?", "serializer", "serializer", "serializer", "cancel_running", "project_pipelines_path", "respond_422", "build_path", "cancelable?", "cancelable?", "cancelable?", "cancelable?", "project_job_path", "store_dir", "store_dir", "store_dir", "store_dir", "store_dir", "store_dir", "store_dirs", "store_dirs", "store_dirs", "store_dirs", "identifier", "identifier", "identifier", "identifier", "render_blob_json", "conditionally_expand_blob", "copy_file_path_button", "copy_blob_source_button", "open_raw_blob_button", "path_breadcrumbs", "simple_viewer", "rich_viewer", "mode", "mode", "rich_viewer_class", "viewer_class_from", "can_render?", "can_render?", "can_render_blob?", "file_type", "simple_viewer_class", "raw_binary?", "blob_raw_path", "blob_raw_url", "rendered_as_text?", "render_error", "render_error", "render_error", "render_error", "render_error", "render_error", "render_error", "render_error", "render_error", "render_error", "render_error", "too_large?", "too_large?", "has_home_page?", "license", "license", "license_key", "license_short_name", "collapsed?", "collapsed?", "collapsed?", "collapsed?", "resolved?", "resolved?", "expanded?", "expanded?", "expand!", "blob_json", "auxiliary_viewer", "auxiliary_viewer_class", "find_model", "find_model", "find_model", "find_model", "upload_model_class", "upload_model_class", "upload_model_class", "schedule_background_upload?", "background_upload_enabled?", "background_upload", "background_upload", "revert", "revert", "temp_file_uploader", "revert", "temp_file_path", "file_path", "retrieve_from_store!", "retrieve_from_store!", "current_upload_satisfies?", "current_upload_satisfies?", "sti_name", "create_new_branch?", "successful_change_path", "failed_change_path", "assign_change_commit_vars", "revert_branch_name", "change_type_title", "merged_merge_request?", "merged_merge_request", "merged_merge_request_no_cache", "merge_commit?", "parents", "parents", "referenced_merge_request_url", "render_conflict_response", "render_issue_json", "can_move?", "can_move?", "moved?", "upload_mount", "uploader_mounted?", "build_uploader_from_upload", "build_uploader_from_params", "build_uploader", "build_uploader", "build_uploader", "build_uploader", "build_uploader", "mount_point", "model_valid?", "model_valid?", "upload_paths", "execute_services", "code", "code", "parsed_url", "make_request", "make_request_with_auth", "log_execution", "build_headers", "format_response_headers", "safe_response_body", "body", "verify_domain!", "unverify_domain!", "disable_domain!", "dns_record_present?", "verification_domain", "open", "cached_size", "verified?", "verified?", "unverified?", "validate", "include_any_scope?", "read_only_attributes", "notify_success", "notify_success", "notify_new_user", "new_user", "new_user_email", "execute_without_lease", "update_authorizations", "fresh_access_levels_per_project", "current_authorizations_per_project", "current_authorizations", "fresh_authorizations", "insert_authorizations", "remove_project_authorizations", "migrate_records_in_transaction", "ghost", "migrate_records", "migrate_issues", "migrate_merge_requests", "migrate_notes", "migrate_abuse_reports", "migrate_award_emojis", "unique_internal", "create_unique_internal", "string", "find_by_username", "iwhere", "base_string", "increment_counter!", "prepare_for_destroy", "legacy_storage?", "solo_owned_groups", "run_callbacks", "active_external_issue_tracker?", "active_external_wiki?", "issue_tracker?", "category", "owners", "owners", "old_repository_storage_paths", "repository_storage_paths", "all_projects", "all_projects", "all_projects", "contributed_projects", "contributed_projects", "contributions", "generate_reset_token", "recently_sent_password_reset?", "generate", "generate", "generate", "increment_and_save!", "lookup", "create_record", "maximum_iid", "usage_value", "can_create_user?", "build_user_params", "admin_create_params", "signup_params", "skip_user_confirmation_email_from_setting", "record_activity", "record", "bulk_perform_and_wait", "bulk_perform_async", "bulk_perform_and_wait", "bulk_perform_inline", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "calculate_checksum!", "calculate_checksum!", "calculate_checksum!", "absolute_path", "checksummable?", "absolute_path", "absolute_path", "absolute_path", "checksummable?", "absolute_path", "checksummable?", "exist?", "local?", "exist?", "local?", "exist?", "local?", "relative_path?", "relative_path?", "relative_path?", "cast_data", "latest?", "latest?", "latest?", "latest?", "latest?", "log_error_message_for", "latest_sha", "cleanup", "cleanup", "historical?", "refresh!", "refresh!", "apply_current_state!", "stuck_merge_requests", "mark_projects_without_jid_as_failed!", "mark_projects_with_jid_as_failed!", "enqueued_projects_with_jid", "error_message", "enqueued_projects", "enqueued_projects_without_jid", "try_obtain_lease", "try_obtain_lease", "try_obtain_lease", "try_obtain_lease", "try_obtain_lease", "try_obtain_lease", "remove_lease", "lease_key", "lease_key", "migrate_to_hashed_storage!", "build_relation", "repo_reference_count", "wiki_reference_count", "reference_counter", "update_status", "update_status", "skip", "run", "drop", "two_factor_grace_period_expired?", "latest_builds_status", "run_pipeline_schedule", "after_import", "after_import", "async?", "start_import", "fail_import", "start", "refresh_markdown_cache!", "after_create_default_branch", "remove_import_jid", "change_head", "reload_default_branch", "before_change_head", "after_change_head", "copy_gitattributes", "expire_branch_cache", "expire", "fork_repository", "start_fork", "current_settings", "destroy_unreferenced", "expired", "propagate", "try_obtain_lease_for", "try_obtain_lease_for", "try_obtain_lease_for", "propagate_projects_with_template", "bulk_create_from_template", "project_ids_batch", "bulk_insert_services", "service_hash", "lease_for", "lease_for", "cancel_lease_for", "refresh_method_caches", "update_statistics", "process_commit_message", "update_issue_metrics", "build_commit", "commit_exists_in_upstream?", "create_cross_references!", "close_issues", "close_issues", "updatable_by_user", "close_issue", "close_issue", "close_issue", "close_issue", "close_issue", "close_issue", "jira_tracker?", "issues_tracker", "issues_tracker", "default_issue_tracker", "transition_issue", "add_issue_solved_comment", "has_resolution?", "build_entity_url", "jira_request", "send_message", "build_remote_link_props", "find_remote_link", "assignee_or_author?", "assignee_or_author?", "projects_with_reporter_access_limited_to", "cross_reference_exists?", "cross_reference", "cross_reference_exists?", "system", "notes_for_mentioner", "cross_reference_note_content", "create_cross_reference_note", "cross_reference_disallowed?", "jira_tracker_active?", "can_cross_reference?", "add_comment", "resource_url", "noteable_name", "comment_exists?", "process_project_changes", "process_wiki_changes", "log", "after_project_changes_hooks", "deactivate!", "schedule_next_run!", "pipeline_finished", "notifiable_users", "notifiable_users", "update_metrics_for_active_pipeline", "update_metrics_for_succeeded_pipeline", "needs_verification", "migrate!", "unsafe_migrate!", "persist_object_store!", "store!", "direct_upload_enabled?", "persist_object_store?", "report!", "sanity_check!", "args_check!", "migrate", "build_uploaders", "failures", "header", "failures", "pipeline_path", "failed", "can_create_notification?", "new_note", "new_note", "handle_note", "can_create_todo?", "for_snippet?", "for_snippet?", "build_new_note_recipients", "open_mr", "objects_found?", "set_issuable", "issuable_class", "issuable_class", "open_issue", "unlink_fork", "from_project", "due_tomorrow", "issue_due", "close_connection", "refresh_import_jid_expiration", "find_project", "find_project", "perform_in_the_future", "find_project", "import_started", "wait_for_jobs", "path_to_repo", "renew_lease", "cancel_lease", "get_lease_uuid", "gitaly_call", "flush_ref_caches", "gitaly_migrate", "after_create_branch", "commit_pipelines_path", "new_merge_request_pipelines_path", "each_pipelines_merge_request_path", "all_merge_requests", "with_expired_artifacts", "pending_delete", "send_email", "repository_push_email", "sender", "add_project_headers", "send_from_committer_email?", "default_sender_address", "can_send_from_user_email?", "display_name", "short_sha", "short_sha", "short_sha", "short_sha", "truncate_sha", "truncate_sha", "truncate_sha", "allowed_email_domains", "handle_failure", "rejection", "message_id", "signature", "gpg_commit", "try_import", "try_import", "import", "import", "import", "import", "import", "import", "import", "import", "import", "report_import_time", "histogram", "representation_class", "representation_class", "representation_class", "representation_class", "representation_class", "invite?", "notify_waiter", "find_application", "get_session_token", "get_billing_state", "set_billing_state", "update_billing_change_counter", "billing_changed_counter", "state_transition", "redis_shared_state_key_for", "get_redis_session_key", "parse_trace_sections!", "create_deployment", "update_coverage", "coverage_regex", "perform_and_ttl", "always_perform?", "refresh_authorized_projects", "max_attachment_size", "max_attachment_size", "deny_visibility_level", "filter_spam_check_params", "rm_tag", "build_push_data", "build_push_data", "build_push_data", "build_push_data", "before_remove_tag", "after_remove_tag", "add_tag", "hooks_for", "store_metrics", "increment!", "increment_pushes_since_gc", "pushes_since_gc_redis_shared_state_key", "clean_up_old_archives", "clean_up_empty_directories", "ldap_hard_blocked?", "extract_commands", "extractor", "extract_updates", "commit_title", "commit_count", "commit_title", "commit_from_id", "commit_to_id", "commit_count", "trimmed_ref", "ref_type", "commit_from_id", "delete_redundant_access_levels", "authorized?", "protected_branch", "rename_repo", "rename_repo", "rename_repo", "valid_visibility_level_change?", "renaming_project_with_container_registry_tags?", "changing_default_branch?", "enabling_wiki?", "ensure_wiki_exists", "update_pages_config", "changing_pages_https_only?", "has_container_registry_tags?", "has_root_container_repository_tags?", "has_tags?", "has_tags?", "has_tags?", "build_root_repository", "mv_repository", "expire_caches_before_rename", "after_rename_repo", "rename_repo_notify!", "expires_full_path_cache", "send_move_instructions", "project_was_moved", "project_was_moved_email", "write_repository_config", "write_repository_config", "before_delete", "expire_all_method_caches", "artifacts?", "create_status", "extract_archive!", "deploy_page!", "tmp_path", "register_attempt", "enqueue!", "pages_deployments_total_counter", "pages_path", "pages_path", "pages_path", "public_path", "previous_public_path", "artifacts", "extract_zip_archive!", "artifacts", "artifacts_file", "artifacts_file", "total_size", "artifacts_metadata?", "max_size", "artifacts_expired?", "update_file", "reload_daemon", "pages_config_file", "update_file", "remove", "pages_update_file", "multi_action", "refresh_forks_count", "refresh_forks_count", "refresh_forks_count", "transfer", "transfer", "transfer", "invalidate_personal_projects_count", "transfer", "allowed_transfer?", "attempt_transfer_transaction", "update_namespace_and_visibility", "refresh_permissions", "rollback_side_effects", "execute_system_hooks", "move_project_folders", "move_project_uploads", "move_repo_folder", "rollback_folder_move", "rollback_folder_move", "move_repository", "user_ids_for_project_authorizations", "user_ids_for_project_authorizations", "noteable_owner", "participants_in_noteable", "sorted", "all_members", "move_before_destroy_relationships", "destroy_old_project", "attempt_restore_repositories", "attempt_repositories_rollback", "repo_path", "wiki_path", "removal_path", "flush_caches", "delete_cache", "add_source_project_to_fork_network", "move_project_members", "remove_remaining_members", "prepare_relation", "non_existent_members", "move_group_links", "remove_remaining_project_group_links", "non_existent_group_links", "group_links_in_target_project", "move_project_authorizations", "remove_remaining_authorizations", "non_existent_authorization", "move_notification_settings", "remove_remaining_notification_settings", "non_existent_notifications", "users_in_target_project", "move_lfs_objects_projects", "remove_remaining_lfs_objects_project", "non_existent_lfs_objects_projects", "move_forked_project_links", "move_fork_network_members", "update_root_project", "move_deploy_keys_projects", "remove_remaining_deploy_keys_projects", "non_existent_deploy_keys_projects", "refresh_project_authorizations", "refresh_project_authorizations", "refresh_members_authorized_projects", "add_repository_to_project", "repository_exists?", "repository_exists?", "validate!", "validate!", "validate!", "validate!", "import_repository", "unknown_url?", "ensure_repository", "ensure_repository", "fetch_as_mirror", "fetch_remote", "file_has_changed?", "validate_file_status!", "different_branch?", "validate_permissions!", "validate_on_branch!", "validate_branch_existance!", "validate_new_branch_name!", "import_export_shared", "execute_after_export_action", "save_all!", "save_services", "cleanup_and_notify_error!", "cleanup_and_notify_error", "export_path", "notify_error", "project_not_exported", "project_was_not_exported_email", "version_saver", "avatar_saver", "project_tree_saver", "uploads_saver", "repo_saver", "wiki_repo_saver", "lfs_saver", "execute_gitlab_shell_gc", "pushes_since_gc", "reset_pushes_since_gc", "pushes_since_gc", "task", "gc_period", "full_repack_period", "move_folder!", "absolute_base_dir", "import_upload_path", "tmp_filename", "overwrite_project?", "project_with_same_full_path?", "current_namespace", "link_existing_project", "fork_new_project", "link_fork_network", "target_namespace", "allowed_visibility_level", "accessible_keys", "accessible_deploy_keys", "valid_url?", "valid_url?", "valid_url?", "valid_uri?", "valid_protocol?", "http?", "valid_domain?", "attempt_rollback", "attempt_destroy_transaction", "trash_repositories!", "remove_legacy_registry_tags", "delete_tags!", "remove_repository", "deny_namespace", "allowed_fork?", "allowed_namespace?", "after_create_actions", "save_project_and_import_data", "set_project_name_from_path", "create_or_update_import_data", "create_labels", "create_services_from_active_templates", "create_project", "setup_authorizations", "skip_wiki?", "feature_available?", "feature_available?", "guest?", "get_permission", "add_master", "add_master", "explain_quick_actions", "find_user_references", "find_commands_target", "commands_target_type", "explain", "explain_commands", "commands_target_id", "update_note", "noteable_update_service", "leave_note", "execute_note_hooks", "hook_data", "hook_data", "hook_data", "to_hook_data", "hook_attrs", "total_time_spent", "hook_attrs", "hook_attrs", "hook_attrs", "hook_attrs", "hook_attrs", "hook_attrs", "hook_attrs", "hook_attrs", "hook_attrs", "ssh_url_to_repo", "ssh_url_to_repo", "url_to_repo", "url_to_repo", "repo_changes", "raw_deltas", "new_file", "lfs_file?", "create_lfs_object!", "link_lfs_object!", "cached_attributes", "cached_attributes", "cache_attribute_key", "destroy_target", "reply_attributes", "reply_attributes", "reply_attributes", "reply_attributes", "reply_attributes", "reopen_milestone", "move_children_to_group_milestone", "check_project_milestone!", "clone_project_milestone", "destroy_old_milestones", "milestone_ids_for_merge", "group_project_ids", "update_children", "for_milestone_id", "destroy_milestone", "open_milestone", "close_milestone", "has_changes?", "create_assignee_note", "create_assignee_note", "create_branch_change_note", "new_mentions_in_merge_request", "reassigned_merge_request", "relabeled_merge_request", "update_merge_request", "reassigned_merge_request", "update_issuable", "toggling_tasks?", "updated_tasks", "tasks?", "tasks", "summary", "get_updated_tasks", "get_tasks", "relabeled_resource_email", "reassign_resource_email", "previous_record", "new_mentions_in_resource_email", "change_branch", "change_assignee", "change_issue_assignees", "closed_without_fork?", "merge_from_quick_action", "mergeable_with_quick_action?", "source_project_missing?", "for_fork?", "in_fork_network_of?", "forked_from?", "resolve_all_discussions", "resolve_all_discussions", "resolved_all_discussions_email", "setup_merge_request_mail", "merge_request_thread_options", "mail_answer_thread", "mail_thread", "add_unsubscription_headers_and_links", "unsubscribable?", "recipient", "reload_diff", "update_diff_discussion_positions", "new_diff_notes", "close_upon_missing_source_branch_ref", "post_merge_manually_merged", "reload_merge_requests", "mark_pending_todos_done", "comment_mr_branch_presence_changed", "notify_about_push", "mark_mr_as_wip_from_commits", "execute_mr_web_hooks", "cache_merge_requests_closing_issues", "branch_added?", "branch_removed?", "add_merge_request_wip_from_commit", "push_to_merge_request", "add_commits", "commits_list", "diff_comparison_url", "new_commit_summary", "existing_commit_summary", "target_project_namespace", "change_branch_presence", "merge_request_push", "by_source_or_target_branch", "force_push?", "filter_merge_requests", "rebase", "rebase", "rebase", "rebase_in_progress?", "merge_merge_request", "in_locked_state", "error_check!", "after_merge", "clean_merge_jid", "handle_merge_error", "branch_deletion_user", "delete_source_branch?", "can_remove_source_branch?", "force_remove_source_branch?", "root_ref?", "opened_merge_requests_from_source_branches", "get_branches", "url_for_new_merge_request", "url_for_existing_merge_request", "merge_requests_enabled?", "from_source_branches", "set_projects!", "resolve", "resolve", "render_json_with_notes_serializer", "serialize_notes?", "resolve!", "resolve!", "resolve_without_save", "has_vue_discussions_cookie?", "render_discussion", "render_json_with_discussions_serializer", "render_json_with_html", "close_merge_request", "find_source_project", "find_target_project", "find_target_branch", "branches_valid?", "compare_branches", "assign_title_and_description", "append_closes_description", "assign_title_and_description_from_single_commit", "assign_title_from_issue", "validate_branches", "source_branch_specified?", "target_branch_specified?", "validate_branches", "add_error", "branches_present?", "same_source_and_target?", "default_merge_request_target", "can_allow_maintainer_to_push?", "maintainer_push_possible?", "assignable_issues", "merge_request_build_failed", "create_build_failed_todo", "after_execute", "action_member_permission", "update_member_permission", "update_member_permission", "update_member_permission", "update_member_permission", "override_member_permission", "can_request_access?", "last_owner?", "can_destroy_member?", "decline_access_request", "member_access_denied_email", "member_source_class", "destroy_member_permission", "destroy_member_permission", "destroy_member_permission", "destroy_member_permission", "add_users", "add_users", "add_users", "user_limit", "parse_users_list", "accept_request", "can_update_access_requester?", "after_accept_request", "mattermost_team_params", "unlock_file", "can_be_unlocked_by?", "lock", "find_locks", "current_lock", "create_lock!", "convert_color_name_to_hex", "labels_to_transfer", "group_labels_applied_to_issues", "group_labels_applied_to_merge_requests", "find_or_create_label!", "update_label_links", "update_label_priorities", "subscribe_users", "label_ids_for_merge", "update_issuables", "update_issue_board_lists", "update_priorities", "update_project_labels", "clone_label_to_group_label", "find_or_create_label", "find_or_create_label", "available_labels", "available_labels", "parent_type", "parent_is_group?", "update?", "update?", "update?", "redis_lease", "new_key", "new_key", "new_ssh_key_email", "create_confidentiality_note", "new_mentions_in_issue", "reassigned_issue", "relabeled_issue", "update_issue", "reassigned_issue", "change_issue_confidentiality", "handle_move_between_ids", "change_issue_duplicate", "move_issue_to_new_project", "move_between", "get_issue_if_allowed", "move_after", "move_before", "prev_relative_position", "shift_before?", "next_relative_position", "shift_after?", "reopen_issue", "reopen_issue", "update_new_issue", "update_old_issue", "create_new_issue", "notify_participants", "issue_moved", "issue_moved_email", "setup_issue_mail", "issue_thread_options", "serializable_hash", "assignee_ids", "cloneable_label_ids", "cloneable_milestone_id", "rewrite_content", "add_note_moved_to", "mark_as_moved", "noteable_moved", "rewrite_notes", "rewrite_issue_award_emoji", "add_note_moved_from", "rewrite_award_emoji", "notes_with_associations", "notes_with_associations", "notes_with_associations", "authors_loaded?", "award_emojis_loaded?", "referenced_merge_requests", "referenced_merge_requests", "closed_by_merge_requests", "merge_requests_readable_by_user", "apply_filters_if_needed", "close_service", "create_issue_duplicate_note", "create_issue_canonical_note", "close_service", "mark_canonical_issue_of_duplicate", "mark_duplicate_issue", "filter_resolve_discussion_params", "toggle_award_emoji", "toggle_award_emoji", "new_award_emoji", "awarded_emoji?", "create_award_emoji", "remove_award_emoji", "emoji_awardable?", "normalize_name", "emoji_awardable?", "to_todoable", "user_can_award?", "awardable_by_user?", "awardable_votes?", "user_authored?", "unsubscribe", "subscribe", "unsubscribe", "unsubscribe_from_other_levels", "find_or_initialize_subscription", "unsubscribe_and_redirect", "issue_path", "issue_path", "issue_path", "issue_url", "issue_url", "issue_url", "reopen_service", "reopen_service", "filter_assignee", "filter_milestone", "filter_labels", "filter_assignee", "assignee_can_read?", "filter_labels_in_param", "find_or_create_label_ids", "for_projects_and_groups", "handle_time_tracking_note", "handle_description_change_note", "create_labels_note", "create_title_change_note", "create_milestone_note", "create_discussion_lock_note", "discussion_lock", "change_milestone", "wipless_title_changed", "wipless_title_changed", "create_wip_note", "change_title", "handle_merge_request_wip", "change_label", "create_description_change_note", "create_task_status_note", "change_task_status", "change_description", "create_time_estimate_note", "create_time_spent_note", "change_time_spent", "change_time_estimate", "permitted_attrs", "clean_up_export_files", "reject_parent_id!", "valid_share_with_group_lock_change?", "changing_share_with_group_lock?", "proceed_to_transfer", "ensure_allowed_transfer", "group_is_already_root?", "same_parent?", "valid_policies?", "namespace_with_same_path?", "raise_transfer_error", "update_group_attributes", "update_children_and_projects_visibility", "create_group_path", "namespace_or_group", "remove_mattermost_team", "create_chat_team?", "can_use_visibility_level?", "gravatar_url", "gravatar_config", "new_gpg_key", "new_gpg_key_email", "before_push_tag", "build_system_push_data", "after_push_commit", "after_remove_branch", "update_gitattributes", "update_caches", "update_signatures", "process_commit_messages", "execute_related_hooks", "perform_housekeeping", "process_default_branch", "push_to_existing_branch?", "push_to_new_branch?", "push_remove_branch?", "default_branch?", "commit_count_for_ref", "needed?", "period_match?", "housekeeping_enabled?", "repack_period", "render_notes", "render_options", "update_secondary_emails!", "update_secondary_emails!", "set_notification_email", "set_public_email", "all_emails", "resend_confirmation_instructions", "tracer", "diff_discussion_outdated", "version_params_for", "viewable", "merge_request_diff_for", "viewable_diffs", "resolve_discussion", "can_resolve?", "follow_up_issue", "discussion_continued_in_issue", "merge_request_branch_names", "origin_merge_requests", "find_branch", "rm_branch", "before_remove_branch", "executable?", "deploy", "expanded_environment_url", "deploy", "on_stop", "add_branch", "create_master_branch", "create_file", "compare_source_branch", "create_commit!", "create_commit!", "create_commit!", "create_commit!", "create_commit!", "create_commit!", "create_commit!", "create_commit!", "actions_after_lfs_transformation", "commit_actions!", "delete_file", "create_transformed_commit", "create_dir", "create_dir", "commit_change", "cohorts", "running_totals", "counts_by_month", "column_to_date", "continue_creation", "finalize_creation", "request_operation", "elapsed_time_from_creation", "get_operation_id", "api_client", "configure_provider", "configure_kubernetes", "request_kubernetes_token", "gke_cluster", "create_cluster", "can_create_cluster?", "cluster_params", "application_class", "application_class", "install_command", "install_command", "install_command", "install_command", "helm_api", "install_command", "chart", "chart", "chart", "on_success", "on_failed", "check_timeout", "installation_phase", "timeouted?", "remove_installation_pod", "installation_errors", "ingress_ip", "shared", "can_pick?", "tick_runner_queue", "shared_runners_enabled?", "with_shared_runners", "runner_queue_key", "assignable_for?", "accepting_tags?", "ref_protected?", "stop_action?", "stop_action?", "stop_with_action!", "play", "play", "play", "stop_action", "manual_actions", "manual_actions", "playable?", "playable?", "playable?", "playable?", "process!", "reprocess!", "close_all", "retried", "retried", "mark_as_processable_after_stage", "after_stage", "matches_tag_ids", "with_any_tags", "builds_for_shared_runner", "builds_for_specific_runner", "register_failure", "register_success", "register_failure", "pages_deployments_failed_total_counter", "jobs_running_for_project", "attempt_counter", "job_queue_duration_seconds", "failed_attempt_counter", "with_builds_enabled", "new_builds", "unstarted", "ref_protected", "running_builds_for_shared_runners", "process_stage", "stage_indexes_of_created_builds", "update_retried", "created_builds", "process_build", "status_for_prior_stages", "created_builds_in_stage", "valid_statuses_for_when", "retry", "retry", "retry", "retry", "retry", "retry_failed", "retryable?", "retryable?", "retryable?", "retryable?", "failed?", "hook_log", "set_hook_execution_notice", "hook_log", "create_pipeline_from_trigger", "trigger_from_token", "read_secrets", "extract_sections", "find_or_create_name", "ensure_stage", "find_stage", "create_stage", "cancel_pending_pipelines", "pipeline_created_counter", "schedule_head_pipeline_update", "related_merge_requests", "auto_cancel_running", "auto_cancelable_pipelines", "created_or_pending", "pipeline_schedule_params", "update_last_used_at", "update_last_used_at", "find_chat_name", "update_last_used_at?", "request_token", "valid_move?", "reorder_intermediate_lists", "update_list_position", "decrement_intermediate_lists", "increment_intermediate_lists", "create_list", "create_list", "destroyable?", "decrement_higher_lists", "remove_list", "available_labels_for", "next_position", "create_board!", "create_board!", "set_parent", "set_state", "set_scope", "list", "list", "list", "ls_files", "order_by_position_and_priority", "movable_list?", "closed_list?", "without_board_labels", "with_list_label", "board_label_ids", "issues_label_links", "create_issue", "can_create_board?", "authorized_token", "stop_environments", "invalidate_issue_cache_counts", "invalidate_merge_request_cache_counts", "invalidate_todos_done_count", "invalidate_todos_pending_count", "build_url", "build_url", "allowed_branch?", "should_pipeline_be_notified?", "should_pipeline_be_notified?", "should_pipeline_be_notified?", "retrieve_recipients", "notify_for_ref?", "notify_for_pipeline?", "settings", "settings", "ssh_algorithms_hashes", "gitlab_pages", "gitlab_ci", "resolv_dns", "ssh_algorithm_hashes", "ssh_algorithm_file_content", "ssh_algorithm_md5", "ssh_algorithm_sha256", "ssh_algorithm_file", "gate", "message_options", "create_message", "create_push_message", "create_issue_message", "create_merge_request_message", "create_note_message", "create_pipeline_message", "project_link", "project_link", "project_link", "humanized_status", "project_link", "project_link", "project_link", "project_link", "humanized_status", "project_name", "project_name", "project_name", "link", "format_title", "format_title", "format_title", "render_line", "message_color", "pipeline_status_color", "disable_diffs?", "tag_push_valid?", "push_valid?", "merge_request_valid?", "custom_data", "get_message", "get_channel_field", "custom_data", "event_channel_name", "auth", "auth", "speak", "build_message", "base_uri", "rooms", "auth_params", "get_path", "get_path", "check_commit", "with_associations", "relation_without_join_lateral", "relation_with_join_lateral", "with_associations", "filtered_events", "paginate_events", "base_relation", "limit_for_join_lateral", "detect_mentionable_changes", "pipeline_data", "running_or_pending_build_count", "running_or_pending", "by_created_at", "by_custom_attributes", "by_search", "by_username", "by_search", "by_username", "by_search", "by_blocked", "by_active", "by_external_identity", "by_external", "by_2fa", "with_extern_uid", "with_provider", "normalize_uid", "full_search", "created_before", "created_after", "scoped_table", "scoped_table", "recent_events", "limit_recent", "by_action", "by_state", "by_project", "by_author", "by_state", "by_state", "by_author", "by_action", "by_action_id", "by_author", "by_project", "by_state", "by_type", "type?", "done", "public_or_visible_to_user", "public_or_visible_to_user", "action_id?", "action_id", "inactive", "inactive", "filter_by_state", "closed", "closed", "no_author?", "references_project", "references_project", "filter_by_name", "filter_by_name", "tags_sorted_by", "tags_sorted_by_committed_date", "init_collection", "init_collection", "init_collection", "init_collection", "init_collection", "init_collection", "by_visibility", "visibility_from_scope", "authorized_snippets_from_project", "authorized_snippets", "feature_available_projects", "not_project_related", "table", "projects_for_user", "collection_with_user", "collection_without_user", "collection_with_user", "collection_without_user", "owned_projects?", "private_only?", "owned_projects", "owned_projects", "owned_projects_union", "include_subgroups?", "self_and_descendants", "only_owned?", "only_shared?", "notes_of_target_type", "notes_of_any_type", "notes_on_target", "related_notes", "notes_for_type", "with_confidentiality_access_check", "public_only?", "user_can_see_all_confidential_issues?", "user_cannot_see_confidential_issues?", "by_status", "by_status", "by_visibilty_level", "by_archived", "by_personal", "by_ids", "by_personal", "by_starred", "by_trending", "by_visibilty_level", "by_tags", "by_archived", "trending", "trending", "starred_by", "personal", "by_name", "by_scope", "by_scope", "by_ref", "by_name", "by_yaml_errors", "sort_items", "ids_for_ref", "from_ids", "assigned_to", "assigned_to", "by_user", "by_impersonation", "with_impersonation", "without_impersonation", "since_fetch_at", "updated_after", "updated_after", "excluding_project", "projects_where_can_admin_issues", "with_issues_enabled", "by_groups_and_projects", "by_title", "group_ids", "distinct_on", "authorized_to_read_labels?", "group_ids_for", "only_group_labels?", "groups_to_include", "groups_user_can_read_labels", "include_ancestor_groups?", "include_descendant_groups?", "with_title", "with_title", "filter_items", "filter_items", "filter_items", "by_source_branch", "by_target_branch", "by_due_date", "filter_by_no_due_date?", "filter_by_overdue?", "filter_by_due_this_week?", "filter_by_due_this_month?", "due_date?", "without_due_date", "due_before", "due_between", "by_updated_at", "by_group", "by_iids", "by_assignee", "by_milestone", "by_label", "by_my_reaction_emoji", "by_non_archived", "by_assignee", "by_milestone", "no_assignee?", "unassigned", "unassigned", "awarded", "without_label", "with_label", "grouping_columns", "filter_by_no_milestone?", "filter_by_upcoming_milestone?", "filter_by_started_milestone?", "with_milestone", "upcoming_ids_by_projects", "updated_before", "by_parent", "ancestors_of_filtered_projects", "ancestors_of_filtered_subgroups", "ancestors_of_groups", "by_current_user_access", "by_target_type", "by_created_at_before", "by_created_at_after", "includes_commit?", "order_by_last_deployed_at", "recently_updated_on_branch?", "includes_commit?", "can_read_cross_project?", "filter_by_scope", "disabled", "disabled", "branches_sorted_by", "local_branches", "find_users", "todo_authors", "users_from_project", "users_with_parents", "by_namespace_id", "by_with_push", "by_abandoned", "by_last_repository_check_failed", "abandoned", "set_default_state", "set_sort_order_from_cookie", "default_sort_order", "valid_params", "scalar_params", "array_params", "scalar_params", "update_cookie_value", "update_page", "initialize_raw_repository", "render_variables", "variables_params", "variable_params_attributes", "variable_params_attributes", "update_params", "update_params", "update_params", "update_params", "update_params", "run_autodevops_pipeline", "runner_path", "runner_status_icon", "belongs_to_one_project?", "specific?", "run_auto_devops_pipeline?", "gitlab_ci_yml", "managed?", "service_params", "success_message", "add_to_breadcrumbs", "service_save_button", "can_test?", "deprecation_message", "can_test?", "can_test?", "can_test?", "can_test?", "can_test?", "can_test?", "deprecation_message", "deprecated_message_content", "deprecated?", "deprecated?", "event_channel_names", "event_channel_names", "event_names", "runner_params", "runner_params", "release", "release_params", "update_service_class", "define_edit_vars", "group_link_params", "after_edit_path", "preferences_params", "dropdown_tag", "can_change_share_with_group_lock?", "remove_group_message", "share_with_group_lock_help_text", "parent_group_options", "default_help", "ancestor_locked_but_you_can_override", "ancestor_locked_so_ask_the_owner", "ancestor_locked_and_has_been_overridden", "ancestor_group", "oldest_consecutively_locked_ancestor", "remove_the_share_with_group_lock_from_ancestor", "render_group_variables", "group_variables_params", "redirect_back_or_group_labels_path", "previous_labels_path", "fallback_path", "root_params_key", "recaptcha_check_if_spammable", "render_entity_json", "update_service", "update_service", "move_params", "move_params", "changing_own_password?", "assign_builds_and_projects", "detailed_status", "detailed_status", "detailed_status", "detailed_status", "detailed_status", "detailed_status", "detailed_status", "detailed_status", "detailed_status", "detailed_status", "detailed_status", "application_setting_params", "visible_application_setting_attributes", "button_based_providers", "auth_providers", "form_based_provider?", "visible_attributes", "user_combined_name", "wiki_page_link", "new_branch_message", "removed_branch_message", "push_message", "new_branch?", "removed_branch?", "branch_link", "branch_link", "compare_link", "compare_url", "compare_url", "branch_url", "branch_url", "duration", "pretty_duration", "pipeline_link", "pipeline_url", "pipeline_url", "calculate_duration", "note_url", "formatted_title", "merge_request_message", "merge_request_link", "merge_request_url", "merge_request_title", "merge_request_url", "opened_issue?", "issue_link", "issue_title", "set_attributes", "activity", "activity", "activity", "pretext", "attachments", "activity", "attachments", "activity", "attachments", "activity", "attachments", "activity", "pretext", "attachments", "activity", "attachments", "activity", "attachments", "activity", "user_avatar", "user_avatar_without_link", "user_avatar_url_for", "placeholder_image", "avatar_icon_for_email", "avatar_icon_for_user", "gravatar_icon", "default_avatar", "description_message", "description_message", "description_message", "attachment_color", "attachment_color", "attachment_color", "commit_messages", "commit_message_attachments", "compose_commit_message", "pager_json", "event_filter_visible", "comments_visible?", "spinner", "fallback", "fallback", "deliverable?", "page_specific_javascript_tag", "mattermost_teams_options", "suggested_colors", "link_to_discussions_to_resolve", "allow_maintainer_push_unavailable_reason", "discussions_can_be_resolved_by?", "contribution_guide_path", "tree_join", "contribution_guide", "import_will_timeout_message", "import_svn_message", "import_failed?", "time_interval_in_words", "manageable_namespaces", "manageable_groups", "github_import_configured?", "logged_in_with_provider?", "go_to_provider_for_permissions", "status_import_url", "logged_in_with_provider?", "import_github_authorize_message", "import_github_personal_access_token_message", "import_configure_github_admin_message", "extra_import_params", "callback_import_url"]
CLASSES: ["AbuseReportMailer", "RepositoryCheckMailer", "AbuseReport", "DeployKey", "Note::SpecialRole", "ChatNotificationService", "MicrosoftTeamsService", "WikiPage", "BuildDetailsEntity", "VerifyPagesDomainService", "Member", "User", "BaseService", "Keys::BaseService", "FinderMethods", "FinderWithCrossProjectAccess", "CommitRange", "ExternalIssue", "Projects::HousekeepingService::LeaseTaken", "ObjectStorage::MigrateUploadsWorker::MigrationResult", "ObjectStorage::MigrateUploadsWorker::Report::MigrationFailures", "Ci::ArtifactBlob", "Ci::LegacyStage", "Commit", "BlobLike", "Discussion", "WebHookLog", "ChatMessage::BaseMessage", "ChatMessage::IssueMessage", "ChatMessage::MergeMessage", "ChatMessage::NoteMessage", "ChatMessage::PipelineMessage", "ChatMessage::PushMessage", "ChatMessage::WikiPageMessage", "Auth::ContainerRegistryAuthenticationService", "DeleteBranchService", "Lfs::LockFileService", "Projects::UpdatePagesService", "Tags::DestroyService", "TestHooks::BaseService", "Repository", "MergeRequestMetricsService", "Milestone", "IssuableActions", "MembershipActions", "NotesActions", "MergeRequestsFinder", "ResolvableDiscussion", "Boards::Issues::MoveService", "Ci::UpdateRunnerService", "IssuableBaseService", "IssuableCollections", "MergeRequestsAction", "AccessRequestsFinder", "Admin::ProjectsFinder", "AutocompleteUsersFinder", "BranchesFinder", "ClustersFinder", "ContributedProjectsFinder", "EnvironmentsFinder", "EventsFinder", "GroupDescendantsFinder", "GroupFinder", "GroupMembersFinder", "GroupsFinder", "IssuableFinder", "JoinedGroupsFinder", "LabelsFinder", "MembersFinder", "MergeRequestTargetProjectFinder", "MilestonesFinder", "MoveToProjectFinder", "NotesFinder", "PersonalAccessTokensFinder", "PersonalProjectsFinder", "PipelineSchedulesFinder", "PipelinesFinder", "ProjectsFinder", "RunnerJobsFinder", "SnippetsFinder", "TagsFinder", "TodosFinder", "UserRecentEventsFinder", "UsersFinder", "Ci::Build", "Ci::Pipeline", "Mentionable::ClassMethods", "DeployToken", "EventCollection", "ServiceHook", "WebHook", "Issue", "ProjectMember", "MergeRequest", "MergeRequestDiff", "Project", "AsanaService", "AssemblaService", "BambooService", "BuildkiteService", "CampfireService", "DroneCiService", "EmailsOnPushService", "ExternalWikiService", "FlowdockService", "GemnasiumService", "HipchatService", "IrkerService", "IssueTrackerService", "JiraService", "PackagistService", "PipelinesEmailService", "PivotaltrackerService", "PushoverService", "TeamcityService", "Service", "ProjectPolicy", "BuildArtifactEntity", "ContainerRepositoryEntity", "ContainerTagEntity", "RunnerEntity", "AfterBranchDeleteService", "ApplicationSettings::UpdateService", "Applications::CreateService", "Badges::BuildService", "Badges::CreateService", "Badges::UpdateService", "Boards::CreateService", "Boards::Issues::CreateService", "Boards::Issues::ListService", "Boards::ListService", "Boards::Lists::CreateService", "Boards::Lists::DestroyService", "Boards::Lists::GenerateService", "Boards::Lists::ListService", "Boards::Lists::MoveService", "ChatNames::AuthorizeUserService", "ChatNames::FindUserService", "CheckGcpProjectBillingService", "Ci::CreatePipelineScheduleService", "Ci::CreatePipelineService", "Ci::EnsureStageService", "Ci::ExtractSectionsFromBuildTraceService", "Ci::FetchKubernetesTokenService", "Ci::PipelineTriggerService", "Ci::PlayBuildService", "Ci::ProcessPipelineService", "Ci::RegisterJobService", "Ci::RetryBuildService", "Ci::RetryPipelineService", "Ci::StopEnvironmentsService", "Ci::UpdateBuildQueueService", "Clusters::Applications::CheckIngressIpAddressService", "Clusters::Applications::CheckInstallationProgressService", "Clusters::Applications::InstallService", "Clusters::Applications::ScheduleInstallationService", "Clusters::CreateService", "Clusters::Gcp::FetchOperationService", "Clusters::Gcp::FinalizeCreationService", "Clusters::Gcp::ProvisionService", "Clusters::Gcp::VerifyProvisionStatusService", "Clusters::UpdateService", "CohortsService", "Commits::CreateService", "CompareService", "CreateBranchService", "CreateDeploymentService", "CreateReleaseService", "CreateSnippetService", "DeleteMergedBranchesService", "DeployKeys::CreateService", "DeployTokens::CreateService", "Discussions::ResolveService", "Discussions::UpdateDiffPositionService", "Emails::ConfirmService", "Emails::CreateService", "Emails::DestroyService", "Events::RenderService", "GitPushService", "GitTagPushService", "GpgKeys::CreateService", "GravatarService", "Groups::CreateService", "Groups::DestroyService", "Groups::NestedCreateService", "Groups::TransferService", "Groups::UpdateService", "ImportExportCleanUpService", "Issuable::BulkUpdateService", "Issuable::CommonSystemNotesService", "Issuable::DestroyService", "Issues::BaseService", "Issues::BuildService", "Issues::CloseService", "Issues::CreateService", "Issues::DuplicateService", "Issues::FetchReferencedMergeRequestsService", "Issues::MoveService", "Issues::ReopenService", "Issues::UpdateService", "Keys::CreateService", "Keys::LastUsedService", "Labels::CreateService", "Labels::FindOrCreateService", "Labels::PromoteService", "Labels::TransferService", "Labels::UpdateService", "Lfs::LocksFinderService", "Lfs::UnlockFileService", "Mattermost::CreateTeamService", "Members::ApproveAccessRequestService", "Members::CreateService", "Members::DestroyService", "Members::RequestAccessService", "Members::UpdateService", "MergeRequests::AddTodoWhenBuildFailsService", "MergeRequests::AssignIssuesService", "MergeRequests::BaseService", "MergeRequests::BuildService", "MergeRequests::CloseService", "MergeRequests::Conflicts::ResolveService", "MergeRequests::CreateFromIssueService", "MergeRequests::CreateService", "MergeRequests::GetUrlsService", "MergeRequests::MergeRequestDiffCacheService", "MergeRequests::MergeService", "MergeRequests::MergeWhenPipelineSucceedsService", "MergeRequests::PostMergeService", "MergeRequests::RebaseService", "MergeRequests::RefreshService", "MergeRequests::ReopenService", "MergeRequests::ResolvedDiscussionNotificationService", "MergeRequests::UpdateService", "Milestones::CloseService", "Milestones::CreateService", "Milestones::DestroyService", "Milestones::PromoteService", "Milestones::ReopenService", "Milestones::UpdateService", "Notes::BuildService", "Notes::CreateService", "Notes::DestroyService", "Notes::PostProcessService", "Notes::QuickActionsService", "Notes::RenderService", "Notes::UpdateService", "NotificationRecipientService::Builder::Base", "NotificationRecipientService::Builder::NewNote", "PagesService", "PreviewMarkdownService", "Projects::AfterImportService", "Projects::BaseMoveRelationsService", "Projects::CreateFromTemplateService", "Projects::CreateService", "Projects::DestroyService", "Projects::DownloadService", "Projects::EnableDeployKeyService", "Projects::ForkService", "Projects::GitlabProjectsImportService", "Projects::GroupLinks::CreateService", "Projects::GroupLinks::DestroyService", "Projects::HashedStorage::MigrateAttachmentsService", "Projects::HashedStorage::MigrateRepositoryService", "Projects::HashedStorageMigrationService", "Projects::ImportExport::ExportService", "Projects::ImportService", "Projects::MoveAccessService", "Projects::MoveDeployKeysProjectsService", "Projects::MoveForksService", "Projects::MoveLfsObjectsProjectsService", "Projects::MoveNotificationSettingsService", "Projects::MoveProjectAuthorizationsService", "Projects::MoveProjectGroupLinksService", "Projects::MoveProjectMembersService", "Projects::MoveUsersStarProjectsService", "Projects::OverwriteProjectService", "Projects::ParticipantsService", "Projects::TransferService", "Projects::UnlinkForkService", "Projects::UpdatePagesConfigurationService", "Projects::UpdateService", "ProtectedBranches::CreateService", "ProtectedBranches::DestroyService", "ProtectedBranches::LegacyApiCreateService", "ProtectedBranches::LegacyApiUpdateService", "ProtectedBranches::UpdateService", "ProtectedTags::CreateService", "ProtectedTags::DestroyService", "ProtectedTags::UpdateService", "PushEventPayloadService", "QuickActions::InterpretService", "RepairLdapBlockedUserService", "RepositoryArchiveCleanUpService", "ResetProjectCacheService", "Search::GlobalService", "Search::ProjectService", "Search::SnippetService", "SearchService", "SubmitUsagePingService", "SystemHooksService", "Tags::CreateService", "TestHooks::ProjectService", "UpdateReleaseService", "UpdateSnippetService", "UploadService", "UserProjectAccessChangedService", "Users::ActivityService", "Users::BuildService", "Users::CreateService", "Users::DestroyService", "Users::MigrateToGhostUserService", "Users::RefreshAuthorizedProjectsService", "Users::UpdateService", "ValidateNewBranchService", "WebHookService::InternalErrorResponse", "WikiPages::BaseService", "WikiPages::CreateService", "WikiPages::DestroyService", "WikiPages::UpdateService", "FileMover", "UploadsActions", "ObjectStorage::Extension::RecordsUploads", "ObjectStorage::Concern", "RecordsUploads::Concern", "AvatarUploader", "FileUploader", "GitlabUploader", "SnippetBlob", "Blob", "ContainerRepository", "ProjectWiki", "Clusters::Concerns::ApplicationCore", "Routable", "Snippet", "BroadcastMessage", "HasStatus", "NoteOnDiff", "DiffNote", "GlobalMilestone", "LegacyDiffDiscussion", "LegacyDiffNote", "PersonalAccessToken", "Expirable", "Milestoneish", "Event", "PagesDomain", "CycleAnalyticsParams", "MergeRequestPresenter", "GroupMilestone", "GroupMember", "ProjectTeam", "BaseMailer", "Guest", "Ability", "Notify", "Flowdock::Git::Builder", "BoardsResponses", "IssuablesHelper", "Board", "Clusters::Applications::Runner", "Clusters::Concerns::ApplicationData", "Storage::LegacyProjectWiki", "Storage::HashedProject", "Storage::LegacyProject", "JobArtifactUploader", "NamespaceFileUploader", "PersonalFileUploader", "Group", "ApplicationHelper", "Upload", "ObjectStorage::MigrateUploadsWorker::Upload", "ApplicationSetting", "NotificationService", "TodoService", "Issuable::ClassMethods", "SentNotification", "ProtectedRef", "Deployment", "GpgSignature", "PushEvent", "Todo", "MergeRequests::FfMergeService", "Referable::ClassMethods", "Label", "ProjectLabel", "Epic", "List", "BugzillaService", "CustomIssueTrackerService", "KubernetesService", "MattermostService", "MattermostSlashCommandsService", "MockCiService", "MockDeploymentService", "MockMonitoringService", "PrometheusService", "RedmineService", "SlackService", "SlackSlashCommandsService", "ProtectedRefAccess", "ProjectFeature", "GroupPolicy", "Namespace", "MilestoneActions", "Projects::AutocompleteService", "CommitCollection", "MembersPresenter", "Projects::Settings::DeployKeysPresenter", "AnalyticsGenericSerializer", "BaseSerializer", "WithPagination", "ContainerTagsSerializer", "EnvironmentSerializer", "GroupChildSerializer", "IssueSerializer", "MergeRequestSerializer", "PipelineSerializer", "Key", "Search::GroupService", "Route", "GroupChildEntity", "PageLayoutHelper", "ProjectsHelper", "UserSyncedAttributesMetadata", "Clusters::Cluster", "BreadcrumbsHelper", "GroupsHelper", "Avatarable::ShadowMethods", "SystemNoteService", "Tree", "Compare", "ProjectAutoDevops", "AttachmentUploader", "LegacyArtifactUploader", "LfsObjectUploader", "IconsHelper", "GlobalLabel", "DiscussionNote", "OutOfContextDiscussion", "Sortable::ClassMethods", "Awardable::ClassMethods", "IssuesFinder", "LoadedInGroupList::ClassMethods", "BaseCountService", "FasterCacheKeys", "Projects::CountService", "Users::KeysCountService", "Projects::ForksCountService", "Projects::OpenIssuesCountService", "Projects::OpenMergeRequestsCountService", "TabHelper", "Ci::Group", "Ci::Runner", "CommitStatus", "ArtifactMigratable", "RequestAwareEntity", "BuildsEmailService", "CiService", "DeploymentService", "MonitoringService", "SlashCommandsService", "FormHelper", "WikiHelper", "Environment", "AkismetService", "SpamLog", "MergeRequestsHelper", "MergeRequests::WorkingCopyBaseService", "Noteable", "ResolvableNote::ClassMethods", "ProjectSnippet", "RendersNotes", "Timelog", "Ci::PipelineSchedule", "Mentionable::ReferenceRegexes", "DirectlyAddressedUser", "GroupProjectsFinder", "UnionFinder", "IssuesAction", "RequiresWhitelistedMonitoringClient", "EventCreateService", "NotificationReason", "NotificationRecipientService::Builder::Default", "ProjectExportWorker", "ThrottledTouch", "ForkProjectsFinder", "EmailRejectionMailer", "GroupBadge", "ProjectBadge", "BlobViewer::GitlabCiYml", "BlobViewer::RouteMap", "DashboardMilestone", "DiffDiscussion", "GenericCommitStatus", "GroupLabel", "ProjectHook", "SystemHook", "IndividualNoteDiscussion", "PersonalSnippet", "GitlabIssueTrackerService", "SecurityEvent", "CommitStatusPolicy", "DeployKeyPolicy", "DeployTokenPolicy", "DeploymentPolicy", "EnvironmentPolicy", "ExternalIssuePolicy", "GlobalPolicy", "GroupLabelPolicy", "GroupMemberPolicy", "IssuablePolicy", "IssuePolicy", "MergeRequestPolicy", "NamespacePolicy", "NilPolicy", "NotePolicy", "PersonalSnippetPolicy", "ProjectLabelPolicy", "ProjectMemberPolicy", "ProjectSnippetPolicy", "ProtectedBranchPolicy", "UserPolicy", "GroupMemberPresenter", "ProjectMemberPresenter", "AnalyticsBuildSerializer", "AnalyticsCommitEntity", "AnalyticsCommitSerializer", "AnalyticsIssueSerializer", "AnalyticsMergeRequestEntity", "AnalyticsMergeRequestSerializer", "AnalyticsStageSerializer", "AnalyticsSummarySerializer", "BuildSerializer", "ClusterSerializer", "CohortsSerializer", "ContainerRepositoriesSerializer", "DeployKeySerializer", "DeploymentSerializer", "DiscussionSerializer", "GroupSerializer", "GroupVariableSerializer", "IssueEntity", "IssueSidebarEntity", "LabelSerializer", "LfsFileLockSerializer", "MergeRequestBasicEntity", "MergeRequestBasicSerializer", "MergeRequestCreateSerializer", "MergeRequestWidgetEntity", "NoteUserEntity", "PipelineDetailsEntity", "ProjectNoteEntity", "ProjectNoteSerializer", "ProjectSerializer", "TreeSerializer", "UserSerializer", "VariableSerializer", "NamespacePathValidator", "ProjectPathValidator", "UrlPlaceholderValidator", "DeployTokensHelper", "LfsRequest", "Clusters::Platforms::Kubernetes", "Clusters::Applications::BaseHelmService", "Presentable", "CacheMarkdownField::FieldData", "AtomicInternalId::ClassMethods", "EnforcesTwoFactorAuthentication", "UploaderHelper", "TagsHelper", "ExternalWikiHelper", "Ci::TriggerRequest", "DeploymentPlatform", "ProtectedBranches::ApiService", "UserAgentDetailService", "SpammableActions", "ProtectedBranches::AccessLevelParams", "AuthenticatesWithTwoFactor", "ChecksCollaboration", "ContinueParams", "CreatesCommit", "DiffForPath", "GroupTree", "HooksExecution", "MembersPresentation", "OauthApplications", "ParamsBackwardCompatibility", "PreviewMarkdown", "RendersBlob", "RendersCommits", "RendersMemberAccess", "RepositorySettingsRedirect", "RoutableActions", "SendFileUpload", "ServiceParams", "SnippetsActions", "ToggleAwardEmoji", "ToggleSubscriptionAction", "WithPerformanceBar", "WorkhorseRequest", "CreatedAtFilter", "CustomAttributesFilter", "AccountsHelper", "AppearancesHelper", "ApplicationSettingsHelper", "AuthHelper", "AutoDevopsHelper", "AvatarsHelper", "AwardEmojiHelper", "BlameHelper", "BlobHelper", "BoardsHelper", "BranchesHelper", "BroadcastMessagesHelper", "BuildsHelper", "ButtonHelper", "CiStatusHelper", "ClustersHelper", "CommitsHelper", "CompareHelper", "ComponentsHelper", "ConversationalDevelopmentIndexHelper", "DashboardHelper", "DeferScriptTagHelper", "DiffHelper", "DropdownsHelper", "EmailsHelper", "EmojiHelper", "EnvironmentHelper", "EnvironmentsHelper", "EventsHelper", "ExploreHelper", "GitHelper", "GitlabRoutingHelper", "GraphHelper", "HooksHelper", "ImportHelper", "InstanceConfigurationHelper", "IssuesHelper", "JavascriptHelper", "KerberosSpnegoHelper", "LabelsHelper", "LazyImageTagHelper", "MarkupHelper", "MattermostHelper", "MembersHelper", "MilestonesHelper", "MilestonesRoutingHelper", "NamespacesHelper", "NavHelper", "NotesHelper", "NotificationsHelper", "NumbersHelper", "PaginationHelper", "PerformanceBarHelper", "PipelineSchedulesHelper", "PreferencesHelper", "ProfilesHelper", "RssHelper", "RunnersHelper", "SafeParamsHelper", "SearchHelper", "SelectsHelper", "SentryHelper", "ServicesHelper", "SidekiqHelper", "SnippetsHelper", "SortingHelper", "StorageHealthHelper", "StorageHelper", "SubmoduleHelper", "SystemNoteHelper", "TimeHelper", "TodosHelper", "TreeHelper", "TriggersHelper", "UserCalloutsHelper", "UsersHelper", "VersionCheckHelper", "VisibilityLevelHelper", "WebpackHelper", "WorkhorseHelper", "DeviseMailer", "Emails::Issues", "Emails::Members", "Emails::MergeRequests", "Emails::Notes", "Emails::PagesDomains", "Emails::Pipelines", "Emails::Profile", "Emails::Projects", "Appearance", "AuditEvent", "AwardEmoji", "Badge", "BlobViewer::Auxiliary", "BlobViewer::Balsamiq", "BlobViewer::Base", "BlobViewer::BinarySTL", "BlobViewer::Cartfile", "BlobViewer::Changelog", "BlobViewer::ClientSide", "BlobViewer::ComposerJson", "BlobViewer::Contributing", "BlobViewer::DependencyManager", "BlobViewer::Download", "BlobViewer::Empty", "BlobViewer::Gemfile", "BlobViewer::Gemspec", "BlobViewer::GodepsJson", "BlobViewer::Image", "BlobViewer::License", "BlobViewer::Markup", "BlobViewer::Notebook", "BlobViewer::PackageJson", "BlobViewer::PDF", "BlobViewer::Podfile", "BlobViewer::Podspec", "BlobViewer::PodspecJson", "BlobViewer::Readme", "BlobViewer::RequirementsTxt", "BlobViewer::Rich", "BlobViewer::ServerSide", "BlobViewer::Simple", "BlobViewer::Sketch", "BlobViewer::Static", "BlobViewer::SVG", "BlobViewer::Text", "BlobViewer::TextSTL", "BlobViewer::Video", "BlobViewer::YarnLock", "ChatName", "ChatTeam", "Ci::BuildMetadata", "Ci::BuildTraceSection", "Ci::BuildTraceSectionName", "Ci::GroupVariable", "Ci::JobArtifact", "Ci::PipelineScheduleVariable", "Ci::PipelineVariable", "Ci::RunnerProject", "Ci::Stage", "Ci::Trigger", "Ci::Variable", "Clusters::Applications::Helm", "Clusters::Applications::Ingress", "Clusters::Applications::Prometheus", "Clusters::Concerns::ApplicationStatus", "Clusters::Project", "Clusters::Providers::Gcp", "AccessRequestable", "BlocksJsonSerialization", "BulkMemberAccessLoad", "CaseSensitivity::ClassMethods", "ChronicDurationAttribute", "CreatedAtFilterable", "DiscussionOnDiff", "EachBatch::ClassMethods", "Editable", "FeatureGate", "GhostUser", "GroupDescendant", "HasVariable", "IgnorableColumn::ClassMethods", "Importable", "ManualInverseAssociation::ClassMethods", "Participable::ClassMethods", "ProjectFeaturesCompatibility", "PrometheusAdapter", "ProtectedBranchAccess", "ProtectedTagAccess", "ReactiveCaching", "ReactiveService", "RedisCacheable", "RelativePositioning", "SelectForProjectAuthorization::ClassMethods", "ShaAttribute::ClassMethods", "Spammable::ClassMethods", "Storage::LegacyNamespace", "Storage::LegacyRepository", "StripAttribute::ClassMethods", "Subscribable", "Taskable", "TimeTrackable", "TokenAuthenticatable", "TriggerableHooks", "Uniquify", "UpdatedAtFilterable", "ValidAttribute", "ConversationalDevelopmentIndex::Card", "ConversationalDevelopmentIndex::IdeaToProductionStep", "ConversationalDevelopmentIndex::Metric", "CycleAnalytics", "DeployKeysProject", "DiffViewer::Added", "DiffViewer::Base", "DiffViewer::ClientSide", "DiffViewer::Deleted", "DiffViewer::Image", "DiffViewer::ModeChanged", "DiffViewer::NoPreview", "DiffViewer::NotDiffable", "DiffViewer::Renamed", "DiffViewer::Rich", "DiffViewer::ServerSide", "DiffViewer::Simple", "DiffViewer::Static", "DiffViewer::Text", "Email", "ForkNetwork", "ForkNetworkMember", "ForkedProjectLink", "GpgKey", "GpgKeySubkey", "GroupCustomAttribute", "Identity", "InstanceConfiguration", "InternalId::InternalIdGenerator", "Issue::Metrics", "IssueAssignee", "IssueCollection", "LabelLink", "LabelPriority", "LfsFileLock", "LfsObject", "LfsObjectsProject", "MergeRequest::Metrics", "MergeRequestDiffCommit", "MergeRequestDiffFile", "MergeRequestsClosingIssues", "Network::Commit", "Network::Graph", "NotificationRecipient", "NotificationSetting", "OauthAccessGrant", "OauthAccessToken", "ProjectAuthorization", "ProjectCustomAttribute", "ProjectDeployToken", "ProjectGroupLink", "ProjectImportData", "ProjectStatistics", "ProtectableDropdown", "ProtectedBranch::MergeAccessLevel", "ProtectedBranch::PushAccessLevel", "ProtectedBranch", "ProtectedRefMatcher", "ProtectedTag::CreateAccessLevel", "ProtectedTag", "PushEventPayload", "ReadmeBlob", "RedirectRoute", "Release", "Subscription", "SystemNoteMetadata", "TrendingProject", "U2fRegistration", "UserAgentDetail", "UserCallout", "UserCustomAttribute", "UserInteractedProject", "UsersStarProject", "WikiDirectory", "BasePolicy", "Ci::BuildPolicy", "Ci::PipelinePolicy", "Ci::PipelineSchedulePolicy", "Ci::RunnerPolicy", "Ci::TriggerPolicy", "Clusters::ClusterPolicy", "ProjectPolicy::ClassMethods", "Ci::BuildMetadataPresenter", "Ci::BuildPresenter", "Ci::GroupVariablePresenter", "Ci::PipelinePresenter", "Ci::VariablePresenter", "Clusters::ClusterPresenter", "ConversationalDevelopmentIndex::MetricPresenter", "MemberPresenter", "ProjectPresenter", "AnalyticsBuildEntity", "AnalyticsIssueEntity", "AnalyticsStageEntity", "AnalyticsSummaryEntity", "AwardEmojiEntity", "BlobEntity", "BuildActionEntity", "BuildMetadataEntity", "ClusterApplicationEntity", "ClusterEntity", "CohortActivityMonthEntity", "CohortEntity", "CohortsEntity", "CommitEntity", "DeployKeyEntity", "DeployKeysProjectEntity", "DeploymentEntity", "DiffFileEntity", "DiscussionEntity", "EntityDateHelper", "EntityRequest", "EnvironmentEntity", "GroupEntity", "GroupVariableEntity", "IssuableEntity", "IssuableSidebarEntity", "JobEntity", "JobGroupEntity", "LabelEntity", "LfsFileLockEntity", "MergeRequestCreateEntity", "MergeRequestMetricsEntity", "NoteAttachmentEntity", "NoteEntity", "PipelineEntity", "ProjectEntity", "StageEntity", "StatusEntity", "SubmoduleEntity", "TimeTrackableEntity", "TreeEntity", "TreeRootEntity", "UserEntity", "VariableEntity", "AccessTokenValidationService", "ApplicationSettings::BaseService", "AuditEventService", "Badges::BaseService", "BaseRenderer", "Boards::BaseService", "Commits::ChangeService", "Commits::CherryPickService", "Commits::RevertService", "Issues::ResolveDiscussions", "UpdateVisibilityLevel", "Users::NewUserNotifier", "Discussions::BaseService", "Emails::BaseService", "Files::BaseService", "Files::CreateDirService", "Files::CreateService", "Files::DeleteService", "Files::MultiService", "Files::UpdateService", "Groups::BaseService", "HamService", "Labels::BaseService", "Lfs::FileTransformer::Result", "Members::BaseService", "MergeRequests::Conflicts::BaseService", "MergeRequests::Conflicts::ListService", "MetricsService", "Milestones::BaseService", "NoteSummary", "Projects::BatchCountService", "Projects::BatchForksCountService", "Projects::BatchOpenIssuesCountService", "Projects::PropagateServiceTemplate", "Prometheus::AdapterService", "SpamCheckService", "SpamService", "TestHooks::SystemService", "Users::LastPushEventService", "ObjectStorage::Store", "ObjectStorage::BackgroundMove", "Workhorse::UploadPath", "AbstractPathValidator", "AddressableUrlValidator", "CertificateFingerprintValidator", "CertificateKeyValidator", "CertificateValidator", "ClusterNameValidator", "ColorValidator", "CronTimezoneValidator", "CronValidator", "DurationValidator", "EmailValidator", "ImportableUrlValidator", "KeyRestrictionValidator", "LineCodeValidator", "NamespaceNameValidator", "TopLevelGroupValidator", "UrlValidator", "VariableDuplicatesValidator", "AdminEmailWorker", "ArchiveTraceWorker", "AuthorizedProjectsWorker", "BackgroundMigrationWorker", "BuildCoverageWorker", "BuildFinishedWorker", "BuildHooksWorker", "BuildQueueWorker", "BuildSuccessWorker", "BuildTraceSectionsWorker", "CheckGcpProjectBillingWorker", "ClusterInstallAppWorker", "ClusterProvisionWorker", "ClusterWaitForAppInstallationWorker", "ClusterWaitForIngressIpAddressWorker", "ApplicationWorker::ClassMethods", "ClusterApplications", "ClusterQueue", "CronjobQueue", "ExceptionBacktrace", "Gitlab::GithubImport::NotifyUponDeath", "Gitlab::GithubImport::ObjectImporter", "Gitlab::GithubImport::Queue", "Gitlab::GithubImport::ReschedulingMethods", "Gitlab::GithubImport::StageMethods", "MailSchedulerQueue", "NewIssuable", "ObjectStorageQueue", "PipelineBackgroundQueue", "PipelineQueue", "ProjectImportOptions", "ProjectStartImport", "RepositoryCheckQueue", "WaitableWorker::ClassMethods", "CreateGpgSignatureWorker", "CreatePipelineWorker", "DeleteMergedBranchesWorker", "DeleteUserWorker", "EmailReceiverWorker", "EmailsOnPushWorker", "ExpireBuildArtifactsWorker", "ExpireBuildInstanceArtifactsWorker", "ExpireJobCacheWorker", "ExpirePipelineCacheWorker", "GitGarbageCollectWorker", "Gitlab::GithubImport::AdvanceStageWorker", "Gitlab::GithubImport::ImportDiffNoteWorker", "Gitlab::GithubImport::ImportIssueWorker", "Gitlab::GithubImport::ImportNoteWorker", "Gitlab::GithubImport::ImportPullRequestWorker", "Gitlab::GithubImport::RefreshImportJidWorker", "Gitlab::GithubImport::Stage::FinishImportWorker", "Gitlab::GithubImport::Stage::ImportBaseDataWorker", "Gitlab::GithubImport::Stage::ImportIssuesAndDiffNotesWorker", "Gitlab::GithubImport::Stage::ImportNotesWorker", "Gitlab::GithubImport::Stage::ImportPullRequestsWorker", "Gitlab::GithubImport::Stage::ImportRepositoryWorker", "GitlabShellWorker", "GitlabUsagePingWorker", "GroupDestroyWorker", "ImportExportProjectCleanupWorker", "InvalidGpgSignatureUpdateWorker", "IrkerWorker", "IssueDueSchedulerWorker", "MailScheduler::IssueDueWorker", "MergeWorker", "NamespacelessProjectDestroyWorker", "NewIssueWorker", "NewMergeRequestWorker", "NewNoteWorker", "ObjectStorage::BackgroundMoveWorker", "ObjectStorageUploadWorker", "PagesDomainVerificationCronWorker", "PagesDomainVerificationWorker", "PagesWorker", "PipelineHooksWorker", "PipelineMetricsWorker", "PipelineNotificationWorker", "PipelineProcessWorker", "PipelineScheduleWorker", "PipelineSuccessWorker", "PipelineUpdateWorker", "PluginWorker", "PostReceive", "ProcessCommitWorker", "ProjectCacheWorker", "ProjectDestroyWorker", "ProjectMigrateHashedStorageWorker", "ProjectServiceWorker", "PropagateServiceTemplateWorker", "PruneOldEventsWorker", "ReactiveCachingWorker", "RebaseWorker", "RemoveExpiredGroupLinksWorker", "RemoveExpiredMembersWorker", "RemoveOldWebHookLogsWorker", "RemoveUnreferencedLfsObjectsWorker", "RepositoryArchiveCacheWorker", "RepositoryCheck::BatchWorker", "RepositoryCheck::ClearWorker", "RepositoryCheck::SingleRepositoryWorker", "RepositoryForkWorker", "RepositoryImportWorker", "RequestsProfilesWorker", "RunPipelineScheduleWorker", "ScheduleUpdateUserActivityWorker", "StageUpdateWorker", "StorageMigratorWorker", "StuckCiJobsWorker", "StuckImportJobsWorker", "StuckMergeJobsWorker", "SystemHookPushWorker", "TrendingProjectsWorker", "UpdateHeadPipelineForMergeRequestWorker", "UpdateMergeRequestsWorker", "UpdateUserActivityWorker", "UploadChecksumWorker", "WaitForClusterCreationWorker", "WebHookWorker", "CiCommit", "CiJob", "CiProject", "CiSession", "CiTagging", "CiTag", "CiWebHook", "Note", "OauthApplication", "Tagging", "Tag", "AbuseReportsController"]
AAA: read_ruby_files: 1857.023715
Dataflow file: ../applications/pw-gitlab//dataflow/finders/access_requests_finder.log matches class name AccessRequestsFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/admin/projects_finder.log matches class name Admin::ProjectsFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/autocomplete_users_finder.log matches class name AutocompleteUsersFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/branches_finder.log matches class name BranchesFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/clusters_finder.log matches class name ClustersFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/concerns/created_at_filter.log matches class name CreatedAtFilter
Dataflow file: ../applications/pw-gitlab//dataflow/finders/concerns/custom_attributes_filter.log matches class name CustomAttributesFilter
Dataflow file: ../applications/pw-gitlab//dataflow/finders/concerns/finder_methods.log matches class name FinderMethods
Dataflow file: ../applications/pw-gitlab//dataflow/finders/concerns/finder_with_cross_project_access.log matches class name FinderWithCrossProjectAccess
Dataflow file: ../applications/pw-gitlab//dataflow/finders/contributed_projects_finder.log matches class name ContributedProjectsFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/environments_finder.log matches class name EnvironmentsFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/events_finder.log matches class name EventsFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/fork_projects_finder.log matches class name ForkProjectsFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/group_descendants_finder.log matches class name GroupDescendantsFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/group_finder.log matches class name GroupFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/group_members_finder.log matches class name GroupMembersFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/group_projects_finder.log matches class name GroupProjectsFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/groups_finder.log matches class name GroupsFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/issuable_finder.log matches class name IssuableFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/issues_finder.log matches class name IssuesFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/joined_groups_finder.log matches class name JoinedGroupsFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/labels_finder.log matches class name LabelsFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/members_finder.log matches class name MembersFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/merge_request_target_project_finder.log matches class name MergeRequestTargetProjectFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/merge_requests_finder.log matches class name MergeRequestsFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/milestones_finder.log matches class name MilestonesFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/move_to_project_finder.log matches class name MoveToProjectFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/notes_finder.log matches class name NotesFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/personal_access_tokens_finder.log matches class name PersonalAccessTokensFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/personal_projects_finder.log matches class name PersonalProjectsFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/pipeline_schedules_finder.log matches class name PipelineSchedulesFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/pipelines_finder.log matches class name PipelinesFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/projects_finder.log matches class name ProjectsFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/runner_jobs_finder.log matches class name RunnerJobsFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/snippets_finder.log matches class name SnippetsFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/tags_finder.log matches class name TagsFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/todos_finder.log matches class name TodosFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/union_finder.log matches class name UnionFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/user_recent_events_finder.log matches class name UserRecentEventsFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/users_finder.log matches class name UsersFinder
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/accounts_helper.log matches class name AccountsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/appearances_helper.log matches class name AppearancesHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/application_helper.log matches class name ApplicationHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/application_settings_helper.log matches class name ApplicationSettingsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/auth_helper.log matches class name AuthHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/auto_devops_helper.log matches class name AutoDevopsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/avatars_helper.log matches class name AvatarsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/award_emoji_helper.log matches class name AwardEmojiHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/blame_helper.log matches class name BlameHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/blob_helper.log matches class name BlobHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/boards_helper.log matches class name BoardsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/branches_helper.log matches class name BranchesHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/breadcrumbs_helper.log matches class name BreadcrumbsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/broadcast_messages_helper.log matches class name BroadcastMessagesHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/builds_helper.log matches class name BuildsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/button_helper.log matches class name ButtonHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/ci_status_helper.log matches class name CiStatusHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/clusters_helper.log matches class name ClustersHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/commits_helper.log matches class name CommitsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/compare_helper.log matches class name CompareHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/components_helper.log matches class name ComponentsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/conversational_development_index_helper.log matches class name ConversationalDevelopmentIndexHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/dashboard_helper.log matches class name DashboardHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/defer_script_tag_helper.log matches class name DeferScriptTagHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/deploy_tokens_helper.log matches class name DeployTokensHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/diff_helper.log matches class name DiffHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/dropdowns_helper.log matches class name DropdownsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/emails_helper.log matches class name EmailsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/emoji_helper.log matches class name EmojiHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/environment_helper.log matches class name EnvironmentHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/environments_helper.log matches class name EnvironmentsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/events_helper.log matches class name EventsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/explore_helper.log matches class name ExploreHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/external_wiki_helper.log matches class name ExternalWikiHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/form_helper.log matches class name FormHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/git_helper.log matches class name GitHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/gitlab_routing_helper.log matches class name GitlabRoutingHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/graph_helper.log matches class name GraphHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/groups_helper.log matches class name GroupsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/hooks_helper.log matches class name HooksHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/icons_helper.log matches class name IconsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/import_helper.log matches class name ImportHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/instance_configuration_helper.log matches class name InstanceConfigurationHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/issuables_helper.log matches class name IssuablesHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/issues_helper.log matches class name IssuesHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/javascript_helper.log matches class name JavascriptHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/kerberos_spnego_helper.log matches class name KerberosSpnegoHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/labels_helper.log matches class name LabelsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/lazy_image_tag_helper.log matches class name LazyImageTagHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/markup_helper.log matches class name MarkupHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/mattermost_helper.log matches class name MattermostHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/members_helper.log matches class name MembersHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/merge_requests_helper.log matches class name MergeRequestsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/milestones_helper.log matches class name MilestonesHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/milestones_routing_helper.log matches class name MilestonesRoutingHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/namespaces_helper.log matches class name NamespacesHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/nav_helper.log matches class name NavHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/notes_helper.log matches class name NotesHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/notifications_helper.log matches class name NotificationsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/numbers_helper.log matches class name NumbersHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/page_layout_helper.log matches class name PageLayoutHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/pagination_helper.log matches class name PaginationHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/performance_bar_helper.log matches class name PerformanceBarHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/pipeline_schedules_helper.log matches class name PipelineSchedulesHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/preferences_helper.log matches class name PreferencesHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/profiles_helper.log matches class name ProfilesHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/projects_helper.log matches class name ProjectsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/rss_helper.log matches class name RssHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/runners_helper.log matches class name RunnersHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/safe_params_helper.log matches class name SafeParamsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/search_helper.log matches class name SearchHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/selects_helper.log matches class name SelectsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/sentry_helper.log matches class name SentryHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/services_helper.log matches class name ServicesHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/sidekiq_helper.log matches class name SidekiqHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/snippets_helper.log matches class name SnippetsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/sorting_helper.log matches class name SortingHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/storage_health_helper.log matches class name StorageHealthHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/storage_helper.log matches class name StorageHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/submodule_helper.log matches class name SubmoduleHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/system_note_helper.log matches class name SystemNoteHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/tab_helper.log matches class name TabHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/tags_helper.log matches class name TagsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/time_helper.log matches class name TimeHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/todos_helper.log matches class name TodosHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/tree_helper.log matches class name TreeHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/triggers_helper.log matches class name TriggersHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/user_callouts_helper.log matches class name UserCalloutsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/users_helper.log matches class name UsersHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/version_check_helper.log matches class name VersionCheckHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/visibility_level_helper.log matches class name VisibilityLevelHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/webpack_helper.log matches class name WebpackHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/wiki_helper.log matches class name WikiHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/workhorse_helper.log matches class name WorkhorseHelper
Dataflow file: ../applications/pw-gitlab//dataflow/mailers/abuse_report_mailer.log matches class name AbuseReportMailer
Dataflow file: ../applications/pw-gitlab//dataflow/mailers/base_mailer.log matches class name BaseMailer
Dataflow file: ../applications/pw-gitlab//dataflow/mailers/devise_mailer.log matches class name DeviseMailer
Dataflow file: ../applications/pw-gitlab//dataflow/mailers/email_rejection_mailer.log matches class name EmailRejectionMailer
Dataflow file: ../applications/pw-gitlab//dataflow/mailers/emails/issues.log matches class name Emails::Issues
Dataflow file: ../applications/pw-gitlab//dataflow/mailers/emails/members.log matches class name Emails::Members
Dataflow file: ../applications/pw-gitlab//dataflow/mailers/emails/merge_requests.log matches class name Emails::MergeRequests
Dataflow file: ../applications/pw-gitlab//dataflow/mailers/emails/notes.log matches class name Emails::Notes
Dataflow file: ../applications/pw-gitlab//dataflow/mailers/emails/pages_domains.log matches class name Emails::PagesDomains
Dataflow file: ../applications/pw-gitlab//dataflow/mailers/emails/pipelines.log matches class name Emails::Pipelines
Dataflow file: ../applications/pw-gitlab//dataflow/mailers/emails/profile.log matches class name Emails::Profile
Dataflow file: ../applications/pw-gitlab//dataflow/mailers/emails/projects.log matches class name Emails::Projects
Dataflow file: ../applications/pw-gitlab//dataflow/mailers/notify.log matches class name Notify
Dataflow file: ../applications/pw-gitlab//dataflow/mailers/repository_check_mailer.log matches class name RepositoryCheckMailer
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/abuse_reports_controller.log matches class name AbuseReportsController
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/authenticates_with_two_factor.log matches class name AuthenticatesWithTwoFactor
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/boards_responses.log matches class name BoardsResponses
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/checks_collaboration.log matches class name ChecksCollaboration
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/continue_params.log matches class name ContinueParams
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/creates_commit.log matches class name CreatesCommit
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/cycle_analytics_params.log matches class name CycleAnalyticsParams
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/diff_for_path.log matches class name DiffForPath
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/enforces_two_factor_authentication.log matches class name EnforcesTwoFactorAuthentication
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/group_tree.log matches class name GroupTree
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/hooks_execution.log matches class name HooksExecution
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/issuable_actions.log matches class name IssuableActions
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/issuable_collections.log matches class name IssuableCollections
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/issues_action.log matches class name IssuesAction
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/lfs_request.log matches class name LfsRequest
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/members_presentation.log matches class name MembersPresentation
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/membership_actions.log matches class name MembershipActions
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/merge_requests_action.log matches class name MergeRequestsAction
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/milestone_actions.log matches class name MilestoneActions
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/notes_actions.log matches class name NotesActions
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/oauth_applications.log matches class name OauthApplications
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/params_backward_compatibility.log matches class name ParamsBackwardCompatibility
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/preview_markdown.log matches class name PreviewMarkdown
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/renders_blob.log matches class name RendersBlob
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/renders_commits.log matches class name RendersCommits
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/renders_member_access.log matches class name RendersMemberAccess
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/renders_notes.log matches class name RendersNotes
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/repository_settings_redirect.log matches class name RepositorySettingsRedirect
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/requires_whitelisted_monitoring_client.log matches class name RequiresWhitelistedMonitoringClient
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/routable_actions.log matches class name RoutableActions
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/send_file_upload.log matches class name SendFileUpload
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/service_params.log matches class name ServiceParams
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/snippets_actions.log matches class name SnippetsActions
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/spammable_actions.log matches class name SpammableActions
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/toggle_award_emoji.log matches class name ToggleAwardEmoji
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/toggle_subscription_action.log matches class name ToggleSubscriptionAction
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/uploads_actions.log matches class name UploadsActions
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/with_performance_bar.log matches class name WithPerformanceBar
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/workhorse_request.log matches class name WorkhorseRequest
Dataflow file: ../applications/pw-gitlab//dataflow/models/ability.log matches class name Ability
Dataflow file: ../applications/pw-gitlab//dataflow/models/abuse_report.log matches class name AbuseReport
Dataflow file: ../applications/pw-gitlab//dataflow/models/appearance.log matches class name Appearance
Dataflow file: ../applications/pw-gitlab//dataflow/models/application_setting.log matches class name ApplicationSetting
Dataflow file: ../applications/pw-gitlab//dataflow/models/audit_event.log matches class name AuditEvent
Dataflow file: ../applications/pw-gitlab//dataflow/models/award_emoji.log matches class name AwardEmoji
Dataflow file: ../applications/pw-gitlab//dataflow/models/badge.log matches class name Badge
Dataflow file: ../applications/pw-gitlab//dataflow/models/badges/group_badge.log matches class name GroupBadge
Dataflow file: ../applications/pw-gitlab//dataflow/models/badges/project_badge.log matches class name ProjectBadge
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob.log matches class name Blob
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/auxiliary.log matches class name BlobViewer::Auxiliary
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/balsamiq.log matches class name BlobViewer::Balsamiq
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/base.log matches class name BlobViewer::Base
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/binary_stl.log matches class name BlobViewer::BinarySTL
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/cartfile.log matches class name BlobViewer::Cartfile
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/changelog.log matches class name BlobViewer::Changelog
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/client_side.log matches class name BlobViewer::ClientSide
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/composer_json.log matches class name BlobViewer::ComposerJson
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/contributing.log matches class name BlobViewer::Contributing
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/dependency_manager.log matches class name BlobViewer::DependencyManager
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/download.log matches class name BlobViewer::Download
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/empty.log matches class name BlobViewer::Empty
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/gemfile.log matches class name BlobViewer::Gemfile
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/gemspec.log matches class name BlobViewer::Gemspec
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/gitlab_ci_yml.log matches class name BlobViewer::GitlabCiYml
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/godeps_json.log matches class name BlobViewer::GodepsJson
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/image.log matches class name BlobViewer::Image
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/license.log matches class name BlobViewer::License
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/markup.log matches class name BlobViewer::Markup
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/notebook.log matches class name BlobViewer::Notebook
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/package_json.log matches class name BlobViewer::PackageJson
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/pdf.log matches class name BlobViewer::PDF
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/podfile.log matches class name BlobViewer::Podfile
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/podspec.log matches class name BlobViewer::Podspec
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/podspec_json.log matches class name BlobViewer::PodspecJson
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/readme.log matches class name BlobViewer::Readme
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/requirements_txt.log matches class name BlobViewer::RequirementsTxt
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/rich.log matches class name BlobViewer::Rich
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/route_map.log matches class name BlobViewer::RouteMap
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/server_side.log matches class name BlobViewer::ServerSide
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/simple.log matches class name BlobViewer::Simple
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/sketch.log matches class name BlobViewer::Sketch
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/static.log matches class name BlobViewer::Static
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/svg.log matches class name BlobViewer::SVG
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/text.log matches class name BlobViewer::Text
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/text_stl.log matches class name BlobViewer::TextSTL
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/video.log matches class name BlobViewer::Video
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/yarn_lock.log matches class name BlobViewer::YarnLock
Dataflow file: ../applications/pw-gitlab//dataflow/models/board.log matches class name Board
Dataflow file: ../applications/pw-gitlab//dataflow/models/broadcast_message.log matches class name BroadcastMessage
Dataflow file: ../applications/pw-gitlab//dataflow/models/chat_name.log matches class name ChatName
Dataflow file: ../applications/pw-gitlab//dataflow/models/chat_team.log matches class name ChatTeam
Dataflow file: ../applications/pw-gitlab//dataflow/models/ci/artifact_blob.log matches class name Ci::ArtifactBlob
Dataflow file: ../applications/pw-gitlab//dataflow/models/ci/build.log matches class name Ci::Build
Dataflow file: ../applications/pw-gitlab//dataflow/models/ci/build_metadata.log matches class name Ci::BuildMetadata
Dataflow file: ../applications/pw-gitlab//dataflow/models/ci/build_trace_section.log matches class name Ci::BuildTraceSection
Dataflow file: ../applications/pw-gitlab//dataflow/models/ci/build_trace_section_name.log matches class name Ci::BuildTraceSectionName
Dataflow file: ../applications/pw-gitlab//dataflow/models/ci/group.log matches class name Ci::Group
Dataflow file: ../applications/pw-gitlab//dataflow/models/ci/group_variable.log matches class name Ci::GroupVariable
Dataflow file: ../applications/pw-gitlab//dataflow/models/ci/job_artifact.log matches class name Ci::JobArtifact
Dataflow file: ../applications/pw-gitlab//dataflow/models/ci/legacy_stage.log matches class name Ci::LegacyStage
Dataflow file: ../applications/pw-gitlab//dataflow/models/ci/pipeline.log matches class name Ci::Pipeline
Dataflow file: ../applications/pw-gitlab//dataflow/models/ci/pipeline_schedule.log matches class name Ci::PipelineSchedule
Dataflow file: ../applications/pw-gitlab//dataflow/models/ci/pipeline_schedule_variable.log matches class name Ci::PipelineScheduleVariable
Dataflow file: ../applications/pw-gitlab//dataflow/models/ci/pipeline_variable.log matches class name Ci::PipelineVariable
Dataflow file: ../applications/pw-gitlab//dataflow/models/ci/runner.log matches class name Ci::Runner
Dataflow file: ../applications/pw-gitlab//dataflow/models/ci/runner_project.log matches class name Ci::RunnerProject
Dataflow file: ../applications/pw-gitlab//dataflow/models/ci/stage.log matches class name Ci::Stage
Dataflow file: ../applications/pw-gitlab//dataflow/models/ci/trigger.log matches class name Ci::Trigger
Dataflow file: ../applications/pw-gitlab//dataflow/models/ci/trigger_request.log matches class name Ci::TriggerRequest
Dataflow file: ../applications/pw-gitlab//dataflow/models/ci/variable.log matches class name Ci::Variable
Dataflow file: ../applications/pw-gitlab//dataflow/models/clusters/applications/helm.log matches class name Clusters::Applications::Helm
Dataflow file: ../applications/pw-gitlab//dataflow/models/clusters/applications/ingress.log matches class name Clusters::Applications::Ingress
Dataflow file: ../applications/pw-gitlab//dataflow/models/clusters/applications/prometheus.log matches class name Clusters::Applications::Prometheus
Dataflow file: ../applications/pw-gitlab//dataflow/models/clusters/applications/runner.log matches class name Clusters::Applications::Runner
Dataflow file: ../applications/pw-gitlab//dataflow/models/clusters/cluster.log matches class name Clusters::Cluster
Dataflow file: ../applications/pw-gitlab//dataflow/models/clusters/concerns/application_core.log matches class name Clusters::Concerns::ApplicationCore
Dataflow file: ../applications/pw-gitlab//dataflow/models/clusters/concerns/application_data.log matches class name Clusters::Concerns::ApplicationData
Dataflow file: ../applications/pw-gitlab//dataflow/models/clusters/concerns/application_status.log matches class name Clusters::Concerns::ApplicationStatus
Dataflow file: ../applications/pw-gitlab//dataflow/models/clusters/platforms/kubernetes.log matches class name Clusters::Platforms::Kubernetes
Dataflow file: ../applications/pw-gitlab//dataflow/models/clusters/project.log matches class name Clusters::Project
Dataflow file: ../applications/pw-gitlab//dataflow/models/clusters/providers/gcp.log matches class name Clusters::Providers::Gcp
Dataflow file: ../applications/pw-gitlab//dataflow/models/commit.log matches class name Commit
Dataflow file: ../applications/pw-gitlab//dataflow/models/commit_collection.log matches class name CommitCollection
Dataflow file: ../applications/pw-gitlab//dataflow/models/commit_range.log matches class name CommitRange
Dataflow file: ../applications/pw-gitlab//dataflow/models/commit_status.log matches class name CommitStatus
Dataflow file: ../applications/pw-gitlab//dataflow/models/compare.log matches class name Compare
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/access_requestable.log matches class name AccessRequestable
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/artifact_migratable.log matches class name ArtifactMigratable
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/atomic_internal_id.log matches class name AtomicInternalId::ClassMethods
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/avatarable.log matches class name Avatarable::ShadowMethods
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/awardable.log matches class name Awardable::ClassMethods
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/blob_like.log matches class name BlobLike
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/blocks_json_serialization.log matches class name BlocksJsonSerialization
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/bulk_member_access_load.log matches class name BulkMemberAccessLoad
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/cache_markdown_field.log matches class name CacheMarkdownField::FieldData
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/case_sensitivity.log matches class name CaseSensitivity::ClassMethods
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/chronic_duration_attribute.log matches class name ChronicDurationAttribute
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/created_at_filterable.log matches class name CreatedAtFilterable
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/deployment_platform.log matches class name DeploymentPlatform
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/discussion_on_diff.log matches class name DiscussionOnDiff
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/each_batch.log matches class name EachBatch::ClassMethods
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/editable.log matches class name Editable
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/expirable.log matches class name Expirable
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/faster_cache_keys.log matches class name FasterCacheKeys
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/feature_gate.log matches class name FeatureGate
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/ghost_user.log matches class name GhostUser
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/group_descendant.log matches class name GroupDescendant
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/has_status.log matches class name HasStatus
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/has_variable.log matches class name HasVariable
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/ignorable_column.log matches class name IgnorableColumn::ClassMethods
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/importable.log matches class name Importable
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/issuable.log matches class name Issuable::ClassMethods
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/loaded_in_group_list.log matches class name LoadedInGroupList::ClassMethods
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/manual_inverse_association.log matches class name ManualInverseAssociation::ClassMethods
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/mentionable/reference_regexes.log matches class name Mentionable::ReferenceRegexes
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/mentionable.log matches class name Mentionable::ClassMethods
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/milestoneish.log matches class name Milestoneish
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/note_on_diff.log matches class name NoteOnDiff
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/noteable.log matches class name Noteable
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/participable.log matches class name Participable::ClassMethods
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/presentable.log matches class name Presentable
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/project_features_compatibility.log matches class name ProjectFeaturesCompatibility
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/prometheus_adapter.log matches class name PrometheusAdapter
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/protected_branch_access.log matches class name ProtectedBranchAccess
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/protected_ref.log matches class name ProtectedRef
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/protected_ref_access.log matches class name ProtectedRefAccess
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/protected_tag_access.log matches class name ProtectedTagAccess
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/reactive_caching.log matches class name ReactiveCaching
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/reactive_service.log matches class name ReactiveService
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/redis_cacheable.log matches class name RedisCacheable
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/referable.log matches class name Referable::ClassMethods
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/relative_positioning.log matches class name RelativePositioning
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/resolvable_discussion.log matches class name ResolvableDiscussion
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/resolvable_note.log matches class name ResolvableNote::ClassMethods
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/routable.log matches class name Routable
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/select_for_project_authorization.log matches class name SelectForProjectAuthorization::ClassMethods
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/sha_attribute.log matches class name ShaAttribute::ClassMethods
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/sortable.log matches class name Sortable::ClassMethods
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/spammable.log matches class name Spammable::ClassMethods
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/storage/legacy_namespace.log matches class name Storage::LegacyNamespace
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/storage/legacy_project_wiki.log matches class name Storage::LegacyProjectWiki
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/storage/legacy_repository.log matches class name Storage::LegacyRepository
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/strip_attribute.log matches class name StripAttribute::ClassMethods
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/subscribable.log matches class name Subscribable
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/taskable.log matches class name Taskable
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/throttled_touch.log matches class name ThrottledTouch
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/time_trackable.log matches class name TimeTrackable
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/token_authenticatable.log matches class name TokenAuthenticatable
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/triggerable_hooks.log matches class name TriggerableHooks
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/uniquify.log matches class name Uniquify
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/updated_at_filterable.log matches class name UpdatedAtFilterable
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/valid_attribute.log matches class name ValidAttribute
Dataflow file: ../applications/pw-gitlab//dataflow/models/container_repository.log matches class name ContainerRepository
Dataflow file: ../applications/pw-gitlab//dataflow/models/conversational_development_index/card.log matches class name ConversationalDevelopmentIndex::Card
Dataflow file: ../applications/pw-gitlab//dataflow/models/conversational_development_index/idea_to_production_step.log matches class name ConversationalDevelopmentIndex::IdeaToProductionStep
Dataflow file: ../applications/pw-gitlab//dataflow/models/conversational_development_index/metric.log matches class name ConversationalDevelopmentIndex::Metric
Dataflow file: ../applications/pw-gitlab//dataflow/models/cycle_analytics.log matches class name CycleAnalytics
Dataflow file: ../applications/pw-gitlab//dataflow/models/dashboard_milestone.log matches class name DashboardMilestone
Dataflow file: ../applications/pw-gitlab//dataflow/models/deploy_key.log matches class name DeployKey
Dataflow file: ../applications/pw-gitlab//dataflow/models/deploy_keys_project.log matches class name DeployKeysProject
Dataflow file: ../applications/pw-gitlab//dataflow/models/deploy_token.log matches class name DeployToken
Dataflow file: ../applications/pw-gitlab//dataflow/models/deployment.log matches class name Deployment
Dataflow file: ../applications/pw-gitlab//dataflow/models/diff_discussion.log matches class name DiffDiscussion
Dataflow file: ../applications/pw-gitlab//dataflow/models/diff_note.log matches class name DiffNote
Dataflow file: ../applications/pw-gitlab//dataflow/models/diff_viewer/added.log matches class name DiffViewer::Added
Dataflow file: ../applications/pw-gitlab//dataflow/models/diff_viewer/base.log matches class name DiffViewer::Base
Dataflow file: ../applications/pw-gitlab//dataflow/models/diff_viewer/client_side.log matches class name DiffViewer::ClientSide
Dataflow file: ../applications/pw-gitlab//dataflow/models/diff_viewer/deleted.log matches class name DiffViewer::Deleted
Dataflow file: ../applications/pw-gitlab//dataflow/models/diff_viewer/image.log matches class name DiffViewer::Image
Dataflow file: ../applications/pw-gitlab//dataflow/models/diff_viewer/mode_changed.log matches class name DiffViewer::ModeChanged
Dataflow file: ../applications/pw-gitlab//dataflow/models/diff_viewer/no_preview.log matches class name DiffViewer::NoPreview
Dataflow file: ../applications/pw-gitlab//dataflow/models/diff_viewer/not_diffable.log matches class name DiffViewer::NotDiffable
Dataflow file: ../applications/pw-gitlab//dataflow/models/diff_viewer/renamed.log matches class name DiffViewer::Renamed
Dataflow file: ../applications/pw-gitlab//dataflow/models/diff_viewer/rich.log matches class name DiffViewer::Rich
Dataflow file: ../applications/pw-gitlab//dataflow/models/diff_viewer/server_side.log matches class name DiffViewer::ServerSide
Dataflow file: ../applications/pw-gitlab//dataflow/models/diff_viewer/simple.log matches class name DiffViewer::Simple
Dataflow file: ../applications/pw-gitlab//dataflow/models/diff_viewer/static.log matches class name DiffViewer::Static
Dataflow file: ../applications/pw-gitlab//dataflow/models/diff_viewer/text.log matches class name DiffViewer::Text
Dataflow file: ../applications/pw-gitlab//dataflow/models/directly_addressed_user.log matches class name DirectlyAddressedUser
Dataflow file: ../applications/pw-gitlab//dataflow/models/discussion.log matches class name Discussion
Dataflow file: ../applications/pw-gitlab//dataflow/models/discussion_note.log matches class name DiscussionNote
Dataflow file: ../applications/pw-gitlab//dataflow/models/email.log matches class name Email
Dataflow file: ../applications/pw-gitlab//dataflow/models/environment.log matches class name Environment
Dataflow file: ../applications/pw-gitlab//dataflow/models/epic.log matches class name Epic
Dataflow file: ../applications/pw-gitlab//dataflow/models/event.log matches class name Event
Dataflow file: ../applications/pw-gitlab//dataflow/models/event_collection.log matches class name EventCollection
Dataflow file: ../applications/pw-gitlab//dataflow/models/external_issue.log matches class name ExternalIssue
Dataflow file: ../applications/pw-gitlab//dataflow/models/fork_network.log matches class name ForkNetwork
Dataflow file: ../applications/pw-gitlab//dataflow/models/fork_network_member.log matches class name ForkNetworkMember
Dataflow file: ../applications/pw-gitlab//dataflow/models/forked_project_link.log matches class name ForkedProjectLink
Dataflow file: ../applications/pw-gitlab//dataflow/models/generic_commit_status.log matches class name GenericCommitStatus
Dataflow file: ../applications/pw-gitlab//dataflow/models/global_label.log matches class name GlobalLabel
Dataflow file: ../applications/pw-gitlab//dataflow/models/global_milestone.log matches class name GlobalMilestone
Dataflow file: ../applications/pw-gitlab//dataflow/models/gpg_key.log matches class name GpgKey
Dataflow file: ../applications/pw-gitlab//dataflow/models/gpg_key_subkey.log matches class name GpgKeySubkey
Dataflow file: ../applications/pw-gitlab//dataflow/models/gpg_signature.log matches class name GpgSignature
Dataflow file: ../applications/pw-gitlab//dataflow/models/group.log matches class name Group
Dataflow file: ../applications/pw-gitlab//dataflow/models/group_custom_attribute.log matches class name GroupCustomAttribute
Dataflow file: ../applications/pw-gitlab//dataflow/models/group_label.log matches class name GroupLabel
Dataflow file: ../applications/pw-gitlab//dataflow/models/group_milestone.log matches class name GroupMilestone
Dataflow file: ../applications/pw-gitlab//dataflow/models/guest.log matches class name Guest
Dataflow file: ../applications/pw-gitlab//dataflow/models/hooks/project_hook.log matches class name ProjectHook
Dataflow file: ../applications/pw-gitlab//dataflow/models/hooks/service_hook.log matches class name ServiceHook
Dataflow file: ../applications/pw-gitlab//dataflow/models/hooks/system_hook.log matches class name SystemHook
Dataflow file: ../applications/pw-gitlab//dataflow/models/hooks/web_hook.log matches class name WebHook
Dataflow file: ../applications/pw-gitlab//dataflow/models/hooks/web_hook_log.log matches class name WebHookLog
Dataflow file: ../applications/pw-gitlab//dataflow/models/identity.log matches class name Identity
Dataflow file: ../applications/pw-gitlab//dataflow/models/individual_note_discussion.log matches class name IndividualNoteDiscussion
Dataflow file: ../applications/pw-gitlab//dataflow/models/instance_configuration.log matches class name InstanceConfiguration
Dataflow file: ../applications/pw-gitlab//dataflow/models/internal_id.log matches class name InternalId::InternalIdGenerator
Dataflow file: ../applications/pw-gitlab//dataflow/models/issue/metrics.log matches class name Issue::Metrics
Dataflow file: ../applications/pw-gitlab//dataflow/models/issue.log matches class name Issue
Dataflow file: ../applications/pw-gitlab//dataflow/models/issue_assignee.log matches class name IssueAssignee
Dataflow file: ../applications/pw-gitlab//dataflow/models/issue_collection.log matches class name IssueCollection
Dataflow file: ../applications/pw-gitlab//dataflow/models/key.log matches class name Key
Dataflow file: ../applications/pw-gitlab//dataflow/models/label.log matches class name Label
Dataflow file: ../applications/pw-gitlab//dataflow/models/label_link.log matches class name LabelLink
Dataflow file: ../applications/pw-gitlab//dataflow/models/label_priority.log matches class name LabelPriority
Dataflow file: ../applications/pw-gitlab//dataflow/models/legacy_diff_discussion.log matches class name LegacyDiffDiscussion
Dataflow file: ../applications/pw-gitlab//dataflow/models/legacy_diff_note.log matches class name LegacyDiffNote
Dataflow file: ../applications/pw-gitlab//dataflow/models/lfs_file_lock.log matches class name LfsFileLock
Dataflow file: ../applications/pw-gitlab//dataflow/models/lfs_object.log matches class name LfsObject
Dataflow file: ../applications/pw-gitlab//dataflow/models/lfs_objects_project.log matches class name LfsObjectsProject
Dataflow file: ../applications/pw-gitlab//dataflow/models/list.log matches class name List
Dataflow file: ../applications/pw-gitlab//dataflow/models/member.log matches class name Member
Dataflow file: ../applications/pw-gitlab//dataflow/models/members/group_member.log matches class name GroupMember
Dataflow file: ../applications/pw-gitlab//dataflow/models/members/project_member.log matches class name ProjectMember
Dataflow file: ../applications/pw-gitlab//dataflow/models/merge_request/metrics.log matches class name MergeRequest::Metrics
Dataflow file: ../applications/pw-gitlab//dataflow/models/merge_request.log matches class name MergeRequest
Dataflow file: ../applications/pw-gitlab//dataflow/models/merge_request_diff.log matches class name MergeRequestDiff
Dataflow file: ../applications/pw-gitlab//dataflow/models/merge_request_diff_commit.log matches class name MergeRequestDiffCommit
Dataflow file: ../applications/pw-gitlab//dataflow/models/merge_request_diff_file.log matches class name MergeRequestDiffFile
Dataflow file: ../applications/pw-gitlab//dataflow/models/merge_requests_closing_issues.log matches class name MergeRequestsClosingIssues
Dataflow file: ../applications/pw-gitlab//dataflow/models/milestone.log matches class name Milestone
Dataflow file: ../applications/pw-gitlab//dataflow/models/namespace.log matches class name Namespace
Dataflow file: ../applications/pw-gitlab//dataflow/models/network/commit.log matches class name Network::Commit
Dataflow file: ../applications/pw-gitlab//dataflow/models/network/graph.log matches class name Network::Graph
Dataflow file: ../applications/pw-gitlab//dataflow/models/note.log matches class name Note::SpecialRole
Dataflow file: ../applications/pw-gitlab//dataflow/models/notification_reason.log matches class name NotificationReason
Dataflow file: ../applications/pw-gitlab//dataflow/models/notification_recipient.log matches class name NotificationRecipient
Dataflow file: ../applications/pw-gitlab//dataflow/models/notification_setting.log matches class name NotificationSetting
Dataflow file: ../applications/pw-gitlab//dataflow/models/oauth_access_grant.log matches class name OauthAccessGrant
Dataflow file: ../applications/pw-gitlab//dataflow/models/oauth_access_token.log matches class name OauthAccessToken
Dataflow file: ../applications/pw-gitlab//dataflow/models/out_of_context_discussion.log matches class name OutOfContextDiscussion
Dataflow file: ../applications/pw-gitlab//dataflow/models/pages_domain.log matches class name PagesDomain
Dataflow file: ../applications/pw-gitlab//dataflow/models/personal_access_token.log matches class name PersonalAccessToken
Dataflow file: ../applications/pw-gitlab//dataflow/models/personal_snippet.log matches class name PersonalSnippet
Dataflow file: ../applications/pw-gitlab//dataflow/models/project.log matches class name Project
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_authorization.log matches class name ProjectAuthorization
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_auto_devops.log matches class name ProjectAutoDevops
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_custom_attribute.log matches class name ProjectCustomAttribute
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_deploy_token.log matches class name ProjectDeployToken
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_feature.log matches class name ProjectFeature
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_group_link.log matches class name ProjectGroupLink
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_import_data.log matches class name ProjectImportData
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_label.log matches class name ProjectLabel
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/asana_service.log matches class name AsanaService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/assembla_service.log matches class name AssemblaService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/bamboo_service.log matches class name BambooService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/bugzilla_service.log matches class name BugzillaService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/buildkite_service.log matches class name BuildkiteService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/builds_email_service.log matches class name BuildsEmailService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/campfire_service.log matches class name CampfireService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/chat_message/base_message.log matches class name ChatMessage::BaseMessage
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/chat_message/issue_message.log matches class name ChatMessage::IssueMessage
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/chat_message/merge_message.log matches class name ChatMessage::MergeMessage
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/chat_message/note_message.log matches class name ChatMessage::NoteMessage
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/chat_message/pipeline_message.log matches class name ChatMessage::PipelineMessage
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/chat_message/push_message.log matches class name ChatMessage::PushMessage
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/chat_message/wiki_page_message.log matches class name ChatMessage::WikiPageMessage
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/chat_notification_service.log matches class name ChatNotificationService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/ci_service.log matches class name CiService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/custom_issue_tracker_service.log matches class name CustomIssueTrackerService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/deployment_service.log matches class name DeploymentService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/drone_ci_service.log matches class name DroneCiService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/emails_on_push_service.log matches class name EmailsOnPushService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/external_wiki_service.log matches class name ExternalWikiService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/flowdock_service.log matches class name Flowdock::Git::Builder
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/gemnasium_service.log matches class name GemnasiumService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/gitlab_issue_tracker_service.log matches class name GitlabIssueTrackerService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/hipchat_service.log matches class name HipchatService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/irker_service.log matches class name IrkerService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/issue_tracker_service.log matches class name IssueTrackerService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/jira_service.log matches class name JiraService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/kubernetes_service.log matches class name KubernetesService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/mattermost_service.log matches class name MattermostService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/mattermost_slash_commands_service.log matches class name MattermostSlashCommandsService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/microsoft_teams_service.log matches class name MicrosoftTeamsService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/mock_ci_service.log matches class name MockCiService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/mock_deployment_service.log matches class name MockDeploymentService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/mock_monitoring_service.log matches class name MockMonitoringService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/monitoring_service.log matches class name MonitoringService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/packagist_service.log matches class name PackagistService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/pipelines_email_service.log matches class name PipelinesEmailService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/pivotaltracker_service.log matches class name PivotaltrackerService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/prometheus_service.log matches class name PrometheusService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/pushover_service.log matches class name PushoverService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/redmine_service.log matches class name RedmineService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/slack_service.log matches class name SlackService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/slack_slash_commands_service.log matches class name SlackSlashCommandsService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/slash_commands_service.log matches class name SlashCommandsService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/teamcity_service.log matches class name TeamcityService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_snippet.log matches class name ProjectSnippet
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_statistics.log matches class name ProjectStatistics
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_team.log matches class name ProjectTeam
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_wiki.log matches class name ProjectWiki
Dataflow file: ../applications/pw-gitlab//dataflow/models/protectable_dropdown.log matches class name ProtectableDropdown
Dataflow file: ../applications/pw-gitlab//dataflow/models/protected_branch/merge_access_level.log matches class name ProtectedBranch::MergeAccessLevel
Dataflow file: ../applications/pw-gitlab//dataflow/models/protected_branch/push_access_level.log matches class name ProtectedBranch::PushAccessLevel
Dataflow file: ../applications/pw-gitlab//dataflow/models/protected_branch.log matches class name ProtectedBranch
Dataflow file: ../applications/pw-gitlab//dataflow/models/protected_ref_matcher.log matches class name ProtectedRefMatcher
Dataflow file: ../applications/pw-gitlab//dataflow/models/protected_tag/create_access_level.log matches class name ProtectedTag::CreateAccessLevel
Dataflow file: ../applications/pw-gitlab//dataflow/models/protected_tag.log matches class name ProtectedTag
Dataflow file: ../applications/pw-gitlab//dataflow/models/push_event.log matches class name PushEvent
Dataflow file: ../applications/pw-gitlab//dataflow/models/push_event_payload.log matches class name PushEventPayload
Dataflow file: ../applications/pw-gitlab//dataflow/models/readme_blob.log matches class name ReadmeBlob
Dataflow file: ../applications/pw-gitlab//dataflow/models/redirect_route.log matches class name RedirectRoute
Dataflow file: ../applications/pw-gitlab//dataflow/models/release.log matches class name Release
Dataflow file: ../applications/pw-gitlab//dataflow/models/repository.log matches class name Repository
Dataflow file: ../applications/pw-gitlab//dataflow/models/route.log matches class name Route
Dataflow file: ../applications/pw-gitlab//dataflow/models/security_event.log matches class name SecurityEvent
Dataflow file: ../applications/pw-gitlab//dataflow/models/sent_notification.log matches class name SentNotification
Dataflow file: ../applications/pw-gitlab//dataflow/models/service.log matches class name Service
Dataflow file: ../applications/pw-gitlab//dataflow/models/snippet.log matches class name Snippet
Dataflow file: ../applications/pw-gitlab//dataflow/models/snippet_blob.log matches class name SnippetBlob
Dataflow file: ../applications/pw-gitlab//dataflow/models/spam_log.log matches class name SpamLog
Dataflow file: ../applications/pw-gitlab//dataflow/models/storage/hashed_project.log matches class name Storage::HashedProject
Dataflow file: ../applications/pw-gitlab//dataflow/models/storage/legacy_project.log matches class name Storage::LegacyProject
Dataflow file: ../applications/pw-gitlab//dataflow/models/subscription.log matches class name Subscription
Dataflow file: ../applications/pw-gitlab//dataflow/models/system_note_metadata.log matches class name SystemNoteMetadata
Dataflow file: ../applications/pw-gitlab//dataflow/models/timelog.log matches class name Timelog
Dataflow file: ../applications/pw-gitlab//dataflow/models/todo.log matches class name Todo
Dataflow file: ../applications/pw-gitlab//dataflow/models/tree.log matches class name Tree
Dataflow file: ../applications/pw-gitlab//dataflow/models/trending_project.log matches class name TrendingProject
Dataflow file: ../applications/pw-gitlab//dataflow/models/u2f_registration.log matches class name U2fRegistration
Dataflow file: ../applications/pw-gitlab//dataflow/models/upload.log matches class name Upload
Dataflow file: ../applications/pw-gitlab//dataflow/models/user.log matches class name User
Dataflow file: ../applications/pw-gitlab//dataflow/models/user_agent_detail.log matches class name UserAgentDetail
Dataflow file: ../applications/pw-gitlab//dataflow/models/user_callout.log matches class name UserCallout
Dataflow file: ../applications/pw-gitlab//dataflow/models/user_custom_attribute.log matches class name UserCustomAttribute
Dataflow file: ../applications/pw-gitlab//dataflow/models/user_interacted_project.log matches class name UserInteractedProject
Dataflow file: ../applications/pw-gitlab//dataflow/models/user_synced_attributes_metadata.log matches class name UserSyncedAttributesMetadata
Dataflow file: ../applications/pw-gitlab//dataflow/models/users_star_project.log matches class name UsersStarProject
Dataflow file: ../applications/pw-gitlab//dataflow/models/wiki_directory.log matches class name WikiDirectory
Dataflow file: ../applications/pw-gitlab//dataflow/models/wiki_page.log matches class name WikiPage
Dataflow file: ../applications/pw-gitlab//dataflow/policies/base_policy.log matches class name BasePolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/ci/build_policy.log matches class name Ci::BuildPolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/ci/pipeline_policy.log matches class name Ci::PipelinePolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/ci/pipeline_schedule_policy.log matches class name Ci::PipelineSchedulePolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/ci/runner_policy.log matches class name Ci::RunnerPolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/ci/trigger_policy.log matches class name Ci::TriggerPolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/clusters/cluster_policy.log matches class name Clusters::ClusterPolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/commit_status_policy.log matches class name CommitStatusPolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/deploy_key_policy.log matches class name DeployKeyPolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/deploy_token_policy.log matches class name DeployTokenPolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/deployment_policy.log matches class name DeploymentPolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/environment_policy.log matches class name EnvironmentPolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/external_issue_policy.log matches class name ExternalIssuePolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/global_policy.log matches class name GlobalPolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/group_label_policy.log matches class name GroupLabelPolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/group_member_policy.log matches class name GroupMemberPolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/group_policy.log matches class name GroupPolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/issuable_policy.log matches class name IssuablePolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/issue_policy.log matches class name IssuePolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/merge_request_policy.log matches class name MergeRequestPolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/namespace_policy.log matches class name NamespacePolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/nil_policy.log matches class name NilPolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/note_policy.log matches class name NotePolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/personal_snippet_policy.log matches class name PersonalSnippetPolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/project_label_policy.log matches class name ProjectLabelPolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/project_member_policy.log matches class name ProjectMemberPolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/project_policy/class_methods.log matches class name ProjectPolicy::ClassMethods
Dataflow file: ../applications/pw-gitlab//dataflow/policies/project_policy.log matches class name ProjectPolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/project_snippet_policy.log matches class name ProjectSnippetPolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/protected_branch_policy.log matches class name ProtectedBranchPolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/user_policy.log matches class name UserPolicy
Dataflow file: ../applications/pw-gitlab//dataflow/presenters/ci/build_metadata_presenter.log matches class name Ci::BuildMetadataPresenter
Dataflow file: ../applications/pw-gitlab//dataflow/presenters/ci/build_presenter.log matches class name Ci::BuildPresenter
Dataflow file: ../applications/pw-gitlab//dataflow/presenters/ci/group_variable_presenter.log matches class name Ci::GroupVariablePresenter
Dataflow file: ../applications/pw-gitlab//dataflow/presenters/ci/pipeline_presenter.log matches class name Ci::PipelinePresenter
Dataflow file: ../applications/pw-gitlab//dataflow/presenters/ci/variable_presenter.log matches class name Ci::VariablePresenter
Dataflow file: ../applications/pw-gitlab//dataflow/presenters/clusters/cluster_presenter.log matches class name Clusters::ClusterPresenter
Dataflow file: ../applications/pw-gitlab//dataflow/presenters/conversational_development_index/metric_presenter.log matches class name ConversationalDevelopmentIndex::MetricPresenter
Dataflow file: ../applications/pw-gitlab//dataflow/presenters/group_member_presenter.log matches class name GroupMemberPresenter
Dataflow file: ../applications/pw-gitlab//dataflow/presenters/member_presenter.log matches class name MemberPresenter
Dataflow file: ../applications/pw-gitlab//dataflow/presenters/members_presenter.log matches class name MembersPresenter
Dataflow file: ../applications/pw-gitlab//dataflow/presenters/merge_request_presenter.log matches class name MergeRequestPresenter
Dataflow file: ../applications/pw-gitlab//dataflow/presenters/project_member_presenter.log matches class name ProjectMemberPresenter
Dataflow file: ../applications/pw-gitlab//dataflow/presenters/project_presenter.log matches class name ProjectPresenter
Dataflow file: ../applications/pw-gitlab//dataflow/presenters/projects/settings/deploy_keys_presenter.log matches class name Projects::Settings::DeployKeysPresenter
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/analytics_build_entity.log matches class name AnalyticsBuildEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/analytics_build_serializer.log matches class name AnalyticsBuildSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/analytics_commit_entity.log matches class name AnalyticsCommitEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/analytics_commit_serializer.log matches class name AnalyticsCommitSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/analytics_generic_serializer.log matches class name AnalyticsGenericSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/analytics_issue_entity.log matches class name AnalyticsIssueEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/analytics_issue_serializer.log matches class name AnalyticsIssueSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/analytics_merge_request_entity.log matches class name AnalyticsMergeRequestEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/analytics_merge_request_serializer.log matches class name AnalyticsMergeRequestSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/analytics_stage_entity.log matches class name AnalyticsStageEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/analytics_stage_serializer.log matches class name AnalyticsStageSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/analytics_summary_entity.log matches class name AnalyticsSummaryEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/analytics_summary_serializer.log matches class name AnalyticsSummarySerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/award_emoji_entity.log matches class name AwardEmojiEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/base_serializer.log matches class name BaseSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/blob_entity.log matches class name BlobEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/build_action_entity.log matches class name BuildActionEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/build_artifact_entity.log matches class name BuildArtifactEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/build_details_entity.log matches class name BuildDetailsEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/build_metadata_entity.log matches class name BuildMetadataEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/build_serializer.log matches class name BuildSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/cluster_application_entity.log matches class name ClusterApplicationEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/cluster_entity.log matches class name ClusterEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/cluster_serializer.log matches class name ClusterSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/cohort_activity_month_entity.log matches class name CohortActivityMonthEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/cohort_entity.log matches class name CohortEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/cohorts_entity.log matches class name CohortsEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/cohorts_serializer.log matches class name CohortsSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/commit_entity.log matches class name CommitEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/concerns/with_pagination.log matches class name WithPagination
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/container_repositories_serializer.log matches class name ContainerRepositoriesSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/container_repository_entity.log matches class name ContainerRepositoryEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/container_tag_entity.log matches class name ContainerTagEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/container_tags_serializer.log matches class name ContainerTagsSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/deploy_key_entity.log matches class name DeployKeyEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/deploy_key_serializer.log matches class name DeployKeySerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/deploy_keys_project_entity.log matches class name DeployKeysProjectEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/deployment_entity.log matches class name DeploymentEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/deployment_serializer.log matches class name DeploymentSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/diff_file_entity.log matches class name DiffFileEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/discussion_entity.log matches class name DiscussionEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/discussion_serializer.log matches class name DiscussionSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/entity_date_helper.log matches class name EntityDateHelper
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/entity_request.log matches class name EntityRequest
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/environment_entity.log matches class name EnvironmentEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/environment_serializer.log matches class name EnvironmentSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/group_child_entity.log matches class name GroupChildEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/group_child_serializer.log matches class name GroupChildSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/group_entity.log matches class name GroupEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/group_serializer.log matches class name GroupSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/group_variable_entity.log matches class name GroupVariableEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/group_variable_serializer.log matches class name GroupVariableSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/issuable_entity.log matches class name IssuableEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/issuable_sidebar_entity.log matches class name IssuableSidebarEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/issue_entity.log matches class name IssueEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/issue_serializer.log matches class name IssueSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/issue_sidebar_entity.log matches class name IssueSidebarEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/job_entity.log matches class name JobEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/job_group_entity.log matches class name JobGroupEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/label_entity.log matches class name LabelEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/label_serializer.log matches class name LabelSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/lfs_file_lock_entity.log matches class name LfsFileLockEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/lfs_file_lock_serializer.log matches class name LfsFileLockSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/merge_request_basic_entity.log matches class name MergeRequestBasicEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/merge_request_basic_serializer.log matches class name MergeRequestBasicSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/merge_request_create_entity.log matches class name MergeRequestCreateEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/merge_request_create_serializer.log matches class name MergeRequestCreateSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/merge_request_metrics_entity.log matches class name MergeRequestMetricsEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/merge_request_serializer.log matches class name MergeRequestSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/merge_request_widget_entity.log matches class name MergeRequestWidgetEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/note_attachment_entity.log matches class name NoteAttachmentEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/note_entity.log matches class name NoteEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/note_user_entity.log matches class name NoteUserEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/pipeline_details_entity.log matches class name PipelineDetailsEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/pipeline_entity.log matches class name PipelineEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/pipeline_serializer.log matches class name PipelineSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/project_entity.log matches class name ProjectEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/project_note_entity.log matches class name ProjectNoteEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/project_note_serializer.log matches class name ProjectNoteSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/project_serializer.log matches class name ProjectSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/request_aware_entity.log matches class name RequestAwareEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/runner_entity.log matches class name RunnerEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/stage_entity.log matches class name StageEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/status_entity.log matches class name StatusEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/submodule_entity.log matches class name SubmoduleEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/time_trackable_entity.log matches class name TimeTrackableEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/tree_entity.log matches class name TreeEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/tree_root_entity.log matches class name TreeRootEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/tree_serializer.log matches class name TreeSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/user_entity.log matches class name UserEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/user_serializer.log matches class name UserSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/variable_entity.log matches class name VariableEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/variable_serializer.log matches class name VariableSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/services/access_token_validation_service.log matches class name AccessTokenValidationService
Dataflow file: ../applications/pw-gitlab//dataflow/services/after_branch_delete_service.log matches class name AfterBranchDeleteService
Dataflow file: ../applications/pw-gitlab//dataflow/services/akismet_service.log matches class name AkismetService
Dataflow file: ../applications/pw-gitlab//dataflow/services/application_settings/base_service.log matches class name ApplicationSettings::BaseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/application_settings/update_service.log matches class name ApplicationSettings::UpdateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/applications/create_service.log matches class name Applications::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/audit_event_service.log matches class name AuditEventService
Dataflow file: ../applications/pw-gitlab//dataflow/services/auth/container_registry_authentication_service.log matches class name Auth::ContainerRegistryAuthenticationService
Dataflow file: ../applications/pw-gitlab//dataflow/services/badges/base_service.log matches class name Badges::BaseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/badges/build_service.log matches class name Badges::BuildService
Dataflow file: ../applications/pw-gitlab//dataflow/services/badges/create_service.log matches class name Badges::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/badges/update_service.log matches class name Badges::UpdateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/base_count_service.log matches class name BaseCountService
Dataflow file: ../applications/pw-gitlab//dataflow/services/base_renderer.log matches class name BaseRenderer
Dataflow file: ../applications/pw-gitlab//dataflow/services/base_service.log matches class name BaseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/boards/base_service.log matches class name Boards::BaseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/boards/create_service.log matches class name Boards::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/boards/issues/create_service.log matches class name Boards::Issues::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/boards/issues/list_service.log matches class name Boards::Issues::ListService
Dataflow file: ../applications/pw-gitlab//dataflow/services/boards/issues/move_service.log matches class name Boards::Issues::MoveService
Dataflow file: ../applications/pw-gitlab//dataflow/services/boards/list_service.log matches class name Boards::ListService
Dataflow file: ../applications/pw-gitlab//dataflow/services/boards/lists/create_service.log matches class name Boards::Lists::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/boards/lists/destroy_service.log matches class name Boards::Lists::DestroyService
Dataflow file: ../applications/pw-gitlab//dataflow/services/boards/lists/generate_service.log matches class name Boards::Lists::GenerateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/boards/lists/list_service.log matches class name Boards::Lists::ListService
Dataflow file: ../applications/pw-gitlab//dataflow/services/boards/lists/move_service.log matches class name Boards::Lists::MoveService
Dataflow file: ../applications/pw-gitlab//dataflow/services/chat_names/authorize_user_service.log matches class name ChatNames::AuthorizeUserService
Dataflow file: ../applications/pw-gitlab//dataflow/services/chat_names/find_user_service.log matches class name ChatNames::FindUserService
Dataflow file: ../applications/pw-gitlab//dataflow/services/check_gcp_project_billing_service.log matches class name CheckGcpProjectBillingService
Dataflow file: ../applications/pw-gitlab//dataflow/services/ci/create_pipeline_schedule_service.log matches class name Ci::CreatePipelineScheduleService
Dataflow file: ../applications/pw-gitlab//dataflow/services/ci/create_pipeline_service.log matches class name Ci::CreatePipelineService
Dataflow file: ../applications/pw-gitlab//dataflow/services/ci/ensure_stage_service.log matches class name Ci::EnsureStageService
Dataflow file: ../applications/pw-gitlab//dataflow/services/ci/extract_sections_from_build_trace_service.log matches class name Ci::ExtractSectionsFromBuildTraceService
Dataflow file: ../applications/pw-gitlab//dataflow/services/ci/fetch_kubernetes_token_service.log matches class name Ci::FetchKubernetesTokenService
Dataflow file: ../applications/pw-gitlab//dataflow/services/ci/pipeline_trigger_service.log matches class name Ci::PipelineTriggerService
Dataflow file: ../applications/pw-gitlab//dataflow/services/ci/play_build_service.log matches class name Ci::PlayBuildService
Dataflow file: ../applications/pw-gitlab//dataflow/services/ci/process_pipeline_service.log matches class name Ci::ProcessPipelineService
Dataflow file: ../applications/pw-gitlab//dataflow/services/ci/register_job_service.log matches class name Ci::RegisterJobService
Dataflow file: ../applications/pw-gitlab//dataflow/services/ci/retry_build_service.log matches class name Ci::RetryBuildService
Dataflow file: ../applications/pw-gitlab//dataflow/services/ci/retry_pipeline_service.log matches class name Ci::RetryPipelineService
Dataflow file: ../applications/pw-gitlab//dataflow/services/ci/stop_environments_service.log matches class name Ci::StopEnvironmentsService
Dataflow file: ../applications/pw-gitlab//dataflow/services/ci/update_build_queue_service.log matches class name Ci::UpdateBuildQueueService
Dataflow file: ../applications/pw-gitlab//dataflow/services/ci/update_runner_service.log matches class name Ci::UpdateRunnerService
Dataflow file: ../applications/pw-gitlab//dataflow/services/clusters/applications/base_helm_service.log matches class name Clusters::Applications::BaseHelmService
Dataflow file: ../applications/pw-gitlab//dataflow/services/clusters/applications/check_ingress_ip_address_service.log matches class name Clusters::Applications::CheckIngressIpAddressService
Dataflow file: ../applications/pw-gitlab//dataflow/services/clusters/applications/check_installation_progress_service.log matches class name Clusters::Applications::CheckInstallationProgressService
Dataflow file: ../applications/pw-gitlab//dataflow/services/clusters/applications/install_service.log matches class name Clusters::Applications::InstallService
Dataflow file: ../applications/pw-gitlab//dataflow/services/clusters/applications/schedule_installation_service.log matches class name Clusters::Applications::ScheduleInstallationService
Dataflow file: ../applications/pw-gitlab//dataflow/services/clusters/create_service.log matches class name Clusters::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/clusters/gcp/fetch_operation_service.log matches class name Clusters::Gcp::FetchOperationService
Dataflow file: ../applications/pw-gitlab//dataflow/services/clusters/gcp/finalize_creation_service.log matches class name Clusters::Gcp::FinalizeCreationService
Dataflow file: ../applications/pw-gitlab//dataflow/services/clusters/gcp/provision_service.log matches class name Clusters::Gcp::ProvisionService
Dataflow file: ../applications/pw-gitlab//dataflow/services/clusters/gcp/verify_provision_status_service.log matches class name Clusters::Gcp::VerifyProvisionStatusService
Dataflow file: ../applications/pw-gitlab//dataflow/services/clusters/update_service.log matches class name Clusters::UpdateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/cohorts_service.log matches class name CohortsService
Dataflow file: ../applications/pw-gitlab//dataflow/services/commits/change_service.log matches class name Commits::ChangeService
Dataflow file: ../applications/pw-gitlab//dataflow/services/commits/cherry_pick_service.log matches class name Commits::CherryPickService
Dataflow file: ../applications/pw-gitlab//dataflow/services/commits/create_service.log matches class name Commits::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/commits/revert_service.log matches class name Commits::RevertService
Dataflow file: ../applications/pw-gitlab//dataflow/services/compare_service.log matches class name CompareService
Dataflow file: ../applications/pw-gitlab//dataflow/services/concerns/issues/resolve_discussions.log matches class name Issues::ResolveDiscussions
Dataflow file: ../applications/pw-gitlab//dataflow/services/concerns/update_visibility_level.log matches class name UpdateVisibilityLevel
Dataflow file: ../applications/pw-gitlab//dataflow/services/concerns/users/new_user_notifier.log matches class name Users::NewUserNotifier
Dataflow file: ../applications/pw-gitlab//dataflow/services/create_branch_service.log matches class name CreateBranchService
Dataflow file: ../applications/pw-gitlab//dataflow/services/create_deployment_service.log matches class name CreateDeploymentService
Dataflow file: ../applications/pw-gitlab//dataflow/services/create_release_service.log matches class name CreateReleaseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/create_snippet_service.log matches class name CreateSnippetService
Dataflow file: ../applications/pw-gitlab//dataflow/services/delete_branch_service.log matches class name DeleteBranchService
Dataflow file: ../applications/pw-gitlab//dataflow/services/delete_merged_branches_service.log matches class name DeleteMergedBranchesService
Dataflow file: ../applications/pw-gitlab//dataflow/services/deploy_keys/create_service.log matches class name DeployKeys::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/deploy_tokens/create_service.log matches class name DeployTokens::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/discussions/base_service.log matches class name Discussions::BaseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/discussions/resolve_service.log matches class name Discussions::ResolveService
Dataflow file: ../applications/pw-gitlab//dataflow/services/discussions/update_diff_position_service.log matches class name Discussions::UpdateDiffPositionService
Dataflow file: ../applications/pw-gitlab//dataflow/services/emails/base_service.log matches class name Emails::BaseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/emails/confirm_service.log matches class name Emails::ConfirmService
Dataflow file: ../applications/pw-gitlab//dataflow/services/emails/create_service.log matches class name Emails::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/emails/destroy_service.log matches class name Emails::DestroyService
Dataflow file: ../applications/pw-gitlab//dataflow/services/event_create_service.log matches class name EventCreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/events/render_service.log matches class name Events::RenderService
Dataflow file: ../applications/pw-gitlab//dataflow/services/files/base_service.log matches class name Files::BaseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/files/create_dir_service.log matches class name Files::CreateDirService
Dataflow file: ../applications/pw-gitlab//dataflow/services/files/create_service.log matches class name Files::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/files/delete_service.log matches class name Files::DeleteService
Dataflow file: ../applications/pw-gitlab//dataflow/services/files/multi_service.log matches class name Files::MultiService
Dataflow file: ../applications/pw-gitlab//dataflow/services/files/update_service.log matches class name Files::UpdateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/git_push_service.log matches class name GitPushService
Dataflow file: ../applications/pw-gitlab//dataflow/services/git_tag_push_service.log matches class name GitTagPushService
Dataflow file: ../applications/pw-gitlab//dataflow/services/gpg_keys/create_service.log matches class name GpgKeys::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/gravatar_service.log matches class name GravatarService
Dataflow file: ../applications/pw-gitlab//dataflow/services/groups/base_service.log matches class name Groups::BaseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/groups/create_service.log matches class name Groups::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/groups/destroy_service.log matches class name Groups::DestroyService
Dataflow file: ../applications/pw-gitlab//dataflow/services/groups/nested_create_service.log matches class name Groups::NestedCreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/groups/transfer_service.log matches class name Groups::TransferService
Dataflow file: ../applications/pw-gitlab//dataflow/services/groups/update_service.log matches class name Groups::UpdateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/ham_service.log matches class name HamService
Dataflow file: ../applications/pw-gitlab//dataflow/services/import_export_clean_up_service.log matches class name ImportExportCleanUpService
Dataflow file: ../applications/pw-gitlab//dataflow/services/issuable/bulk_update_service.log matches class name Issuable::BulkUpdateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/issuable/common_system_notes_service.log matches class name Issuable::CommonSystemNotesService
Dataflow file: ../applications/pw-gitlab//dataflow/services/issuable/destroy_service.log matches class name Issuable::DestroyService
Dataflow file: ../applications/pw-gitlab//dataflow/services/issuable_base_service.log matches class name IssuableBaseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/issues/base_service.log matches class name Issues::BaseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/issues/build_service.log matches class name Issues::BuildService
Dataflow file: ../applications/pw-gitlab//dataflow/services/issues/close_service.log matches class name Issues::CloseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/issues/create_service.log matches class name Issues::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/issues/duplicate_service.log matches class name Issues::DuplicateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/issues/fetch_referenced_merge_requests_service.log matches class name Issues::FetchReferencedMergeRequestsService
Dataflow file: ../applications/pw-gitlab//dataflow/services/issues/move_service.log matches class name Issues::MoveService
Dataflow file: ../applications/pw-gitlab//dataflow/services/issues/reopen_service.log matches class name Issues::ReopenService
Dataflow file: ../applications/pw-gitlab//dataflow/services/issues/update_service.log matches class name Issues::UpdateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/keys/base_service.log matches class name Keys::BaseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/keys/create_service.log matches class name Keys::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/keys/last_used_service.log matches class name Keys::LastUsedService
Dataflow file: ../applications/pw-gitlab//dataflow/services/labels/base_service.log matches class name Labels::BaseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/labels/create_service.log matches class name Labels::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/labels/find_or_create_service.log matches class name Labels::FindOrCreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/labels/promote_service.log matches class name Labels::PromoteService
Dataflow file: ../applications/pw-gitlab//dataflow/services/labels/transfer_service.log matches class name Labels::TransferService
Dataflow file: ../applications/pw-gitlab//dataflow/services/labels/update_service.log matches class name Labels::UpdateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/lfs/file_transformer.log matches class name Lfs::FileTransformer::Result
Dataflow file: ../applications/pw-gitlab//dataflow/services/lfs/lock_file_service.log matches class name Lfs::LockFileService
Dataflow file: ../applications/pw-gitlab//dataflow/services/lfs/locks_finder_service.log matches class name Lfs::LocksFinderService
Dataflow file: ../applications/pw-gitlab//dataflow/services/lfs/unlock_file_service.log matches class name Lfs::UnlockFileService
Dataflow file: ../applications/pw-gitlab//dataflow/services/mattermost/create_team_service.log matches class name Mattermost::CreateTeamService
Dataflow file: ../applications/pw-gitlab//dataflow/services/members/approve_access_request_service.log matches class name Members::ApproveAccessRequestService
Dataflow file: ../applications/pw-gitlab//dataflow/services/members/base_service.log matches class name Members::BaseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/members/create_service.log matches class name Members::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/members/destroy_service.log matches class name Members::DestroyService
Dataflow file: ../applications/pw-gitlab//dataflow/services/members/request_access_service.log matches class name Members::RequestAccessService
Dataflow file: ../applications/pw-gitlab//dataflow/services/members/update_service.log matches class name Members::UpdateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/merge_request_metrics_service.log matches class name MergeRequestMetricsService
Dataflow file: ../applications/pw-gitlab//dataflow/services/merge_requests/add_todo_when_build_fails_service.log matches class name MergeRequests::AddTodoWhenBuildFailsService
Dataflow file: ../applications/pw-gitlab//dataflow/services/merge_requests/assign_issues_service.log matches class name MergeRequests::AssignIssuesService
Dataflow file: ../applications/pw-gitlab//dataflow/services/merge_requests/base_service.log matches class name MergeRequests::BaseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/merge_requests/build_service.log matches class name MergeRequests::BuildService
Dataflow file: ../applications/pw-gitlab//dataflow/services/merge_requests/close_service.log matches class name MergeRequests::CloseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/merge_requests/conflicts/base_service.log matches class name MergeRequests::Conflicts::BaseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/merge_requests/conflicts/list_service.log matches class name MergeRequests::Conflicts::ListService
Dataflow file: ../applications/pw-gitlab//dataflow/services/merge_requests/conflicts/resolve_service.log matches class name MergeRequests::Conflicts::ResolveService
Dataflow file: ../applications/pw-gitlab//dataflow/services/merge_requests/create_from_issue_service.log matches class name MergeRequests::CreateFromIssueService
Dataflow file: ../applications/pw-gitlab//dataflow/services/merge_requests/create_service.log matches class name MergeRequests::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/merge_requests/ff_merge_service.log matches class name MergeRequests::FfMergeService
Dataflow file: ../applications/pw-gitlab//dataflow/services/merge_requests/get_urls_service.log matches class name MergeRequests::GetUrlsService
Dataflow file: ../applications/pw-gitlab//dataflow/services/merge_requests/merge_request_diff_cache_service.log matches class name MergeRequests::MergeRequestDiffCacheService
Dataflow file: ../applications/pw-gitlab//dataflow/services/merge_requests/merge_service.log matches class name MergeRequests::MergeService
Dataflow file: ../applications/pw-gitlab//dataflow/services/merge_requests/merge_when_pipeline_succeeds_service.log matches class name MergeRequests::MergeWhenPipelineSucceedsService
Dataflow file: ../applications/pw-gitlab//dataflow/services/merge_requests/post_merge_service.log matches class name MergeRequests::PostMergeService
Dataflow file: ../applications/pw-gitlab//dataflow/services/merge_requests/rebase_service.log matches class name MergeRequests::RebaseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/merge_requests/refresh_service.log matches class name MergeRequests::RefreshService
Dataflow file: ../applications/pw-gitlab//dataflow/services/merge_requests/reopen_service.log matches class name MergeRequests::ReopenService
Dataflow file: ../applications/pw-gitlab//dataflow/services/merge_requests/resolved_discussion_notification_service.log matches class name MergeRequests::ResolvedDiscussionNotificationService
Dataflow file: ../applications/pw-gitlab//dataflow/services/merge_requests/update_service.log matches class name MergeRequests::UpdateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/merge_requests/working_copy_base_service.log matches class name MergeRequests::WorkingCopyBaseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/metrics_service.log matches class name MetricsService
Dataflow file: ../applications/pw-gitlab//dataflow/services/milestones/base_service.log matches class name Milestones::BaseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/milestones/close_service.log matches class name Milestones::CloseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/milestones/create_service.log matches class name Milestones::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/milestones/destroy_service.log matches class name Milestones::DestroyService
Dataflow file: ../applications/pw-gitlab//dataflow/services/milestones/promote_service.log matches class name Milestones::PromoteService
Dataflow file: ../applications/pw-gitlab//dataflow/services/milestones/reopen_service.log matches class name Milestones::ReopenService
Dataflow file: ../applications/pw-gitlab//dataflow/services/milestones/update_service.log matches class name Milestones::UpdateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/note_summary.log matches class name NoteSummary
Dataflow file: ../applications/pw-gitlab//dataflow/services/notes/build_service.log matches class name Notes::BuildService
Dataflow file: ../applications/pw-gitlab//dataflow/services/notes/create_service.log matches class name Notes::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/notes/destroy_service.log matches class name Notes::DestroyService
Dataflow file: ../applications/pw-gitlab//dataflow/services/notes/post_process_service.log matches class name Notes::PostProcessService
Dataflow file: ../applications/pw-gitlab//dataflow/services/notes/quick_actions_service.log matches class name Notes::QuickActionsService
Dataflow file: ../applications/pw-gitlab//dataflow/services/notes/render_service.log matches class name Notes::RenderService
Dataflow file: ../applications/pw-gitlab//dataflow/services/notes/update_service.log matches class name Notes::UpdateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/notification_recipient_service.log matches class name NotificationRecipientService::Builder::Base
Dataflow file: ../applications/pw-gitlab//dataflow/services/notification_service.log matches class name NotificationService
Dataflow file: ../applications/pw-gitlab//dataflow/services/pages_service.log matches class name PagesService
Dataflow file: ../applications/pw-gitlab//dataflow/services/preview_markdown_service.log matches class name PreviewMarkdownService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/after_import_service.log matches class name Projects::AfterImportService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/autocomplete_service.log matches class name Projects::AutocompleteService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/base_move_relations_service.log matches class name Projects::BaseMoveRelationsService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/batch_count_service.log matches class name Projects::BatchCountService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/batch_forks_count_service.log matches class name Projects::BatchForksCountService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/batch_open_issues_count_service.log matches class name Projects::BatchOpenIssuesCountService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/count_service.log matches class name Projects::CountService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/create_from_template_service.log matches class name Projects::CreateFromTemplateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/create_service.log matches class name Projects::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/destroy_service.log matches class name Projects::DestroyService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/download_service.log matches class name Projects::DownloadService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/enable_deploy_key_service.log matches class name Projects::EnableDeployKeyService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/fork_service.log matches class name Projects::ForkService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/forks_count_service.log matches class name Projects::ForksCountService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/gitlab_projects_import_service.log matches class name Projects::GitlabProjectsImportService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/group_links/create_service.log matches class name Projects::GroupLinks::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/group_links/destroy_service.log matches class name Projects::GroupLinks::DestroyService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/hashed_storage/migrate_attachments_service.log matches class name Projects::HashedStorage::MigrateAttachmentsService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/hashed_storage/migrate_repository_service.log matches class name Projects::HashedStorage::MigrateRepositoryService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/hashed_storage_migration_service.log matches class name Projects::HashedStorageMigrationService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/housekeeping_service.log matches class name Projects::HousekeepingService::LeaseTaken
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/import_export/export_service.log matches class name Projects::ImportExport::ExportService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/import_service.log matches class name Projects::ImportService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/move_access_service.log matches class name Projects::MoveAccessService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/move_deploy_keys_projects_service.log matches class name Projects::MoveDeployKeysProjectsService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/move_forks_service.log matches class name Projects::MoveForksService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/move_lfs_objects_projects_service.log matches class name Projects::MoveLfsObjectsProjectsService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/move_notification_settings_service.log matches class name Projects::MoveNotificationSettingsService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/move_project_authorizations_service.log matches class name Projects::MoveProjectAuthorizationsService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/move_project_group_links_service.log matches class name Projects::MoveProjectGroupLinksService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/move_project_members_service.log matches class name Projects::MoveProjectMembersService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/move_users_star_projects_service.log matches class name Projects::MoveUsersStarProjectsService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/open_issues_count_service.log matches class name Projects::OpenIssuesCountService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/open_merge_requests_count_service.log matches class name Projects::OpenMergeRequestsCountService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/overwrite_project_service.log matches class name Projects::OverwriteProjectService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/participants_service.log matches class name Projects::ParticipantsService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/propagate_service_template.log matches class name Projects::PropagateServiceTemplate
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/transfer_service.log matches class name Projects::TransferService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/unlink_fork_service.log matches class name Projects::UnlinkForkService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/update_pages_configuration_service.log matches class name Projects::UpdatePagesConfigurationService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/update_pages_service.log matches class name Projects::UpdatePagesService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/update_service.log matches class name Projects::UpdateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/prometheus/adapter_service.log matches class name Prometheus::AdapterService
Dataflow file: ../applications/pw-gitlab//dataflow/services/protected_branches/access_level_params.log matches class name ProtectedBranches::AccessLevelParams
Dataflow file: ../applications/pw-gitlab//dataflow/services/protected_branches/api_service.log matches class name ProtectedBranches::ApiService
Dataflow file: ../applications/pw-gitlab//dataflow/services/protected_branches/create_service.log matches class name ProtectedBranches::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/protected_branches/destroy_service.log matches class name ProtectedBranches::DestroyService
Dataflow file: ../applications/pw-gitlab//dataflow/services/protected_branches/legacy_api_create_service.log matches class name ProtectedBranches::LegacyApiCreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/protected_branches/legacy_api_update_service.log matches class name ProtectedBranches::LegacyApiUpdateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/protected_branches/update_service.log matches class name ProtectedBranches::UpdateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/protected_tags/create_service.log matches class name ProtectedTags::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/protected_tags/destroy_service.log matches class name ProtectedTags::DestroyService
Dataflow file: ../applications/pw-gitlab//dataflow/services/protected_tags/update_service.log matches class name ProtectedTags::UpdateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/push_event_payload_service.log matches class name PushEventPayloadService
Dataflow file: ../applications/pw-gitlab//dataflow/services/quick_actions/interpret_service.log matches class name QuickActions::InterpretService
Dataflow file: ../applications/pw-gitlab//dataflow/services/repair_ldap_blocked_user_service.log matches class name RepairLdapBlockedUserService
Dataflow file: ../applications/pw-gitlab//dataflow/services/repository_archive_clean_up_service.log matches class name RepositoryArchiveCleanUpService
Dataflow file: ../applications/pw-gitlab//dataflow/services/reset_project_cache_service.log matches class name ResetProjectCacheService
Dataflow file: ../applications/pw-gitlab//dataflow/services/search/global_service.log matches class name Search::GlobalService
Dataflow file: ../applications/pw-gitlab//dataflow/services/search/group_service.log matches class name Search::GroupService
Dataflow file: ../applications/pw-gitlab//dataflow/services/search/project_service.log matches class name Search::ProjectService
Dataflow file: ../applications/pw-gitlab//dataflow/services/search/snippet_service.log matches class name Search::SnippetService
Dataflow file: ../applications/pw-gitlab//dataflow/services/search_service.log matches class name SearchService
Dataflow file: ../applications/pw-gitlab//dataflow/services/spam_check_service.log matches class name SpamCheckService
Dataflow file: ../applications/pw-gitlab//dataflow/services/spam_service.log matches class name SpamService
Dataflow file: ../applications/pw-gitlab//dataflow/services/submit_usage_ping_service.log matches class name SubmitUsagePingService
Dataflow file: ../applications/pw-gitlab//dataflow/services/system_hooks_service.log matches class name SystemHooksService
Dataflow file: ../applications/pw-gitlab//dataflow/services/system_note_service.log matches class name SystemNoteService
Dataflow file: ../applications/pw-gitlab//dataflow/services/tags/create_service.log matches class name Tags::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/tags/destroy_service.log matches class name Tags::DestroyService
Dataflow file: ../applications/pw-gitlab//dataflow/services/test_hooks/base_service.log matches class name TestHooks::BaseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/test_hooks/project_service.log matches class name TestHooks::ProjectService
Dataflow file: ../applications/pw-gitlab//dataflow/services/test_hooks/system_service.log matches class name TestHooks::SystemService
Dataflow file: ../applications/pw-gitlab//dataflow/services/todo_service.log matches class name TodoService
Dataflow file: ../applications/pw-gitlab//dataflow/services/update_release_service.log matches class name UpdateReleaseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/update_snippet_service.log matches class name UpdateSnippetService
Dataflow file: ../applications/pw-gitlab//dataflow/services/upload_service.log matches class name UploadService
Dataflow file: ../applications/pw-gitlab//dataflow/services/user_agent_detail_service.log matches class name UserAgentDetailService
Dataflow file: ../applications/pw-gitlab//dataflow/services/user_project_access_changed_service.log matches class name UserProjectAccessChangedService
Dataflow file: ../applications/pw-gitlab//dataflow/services/users/activity_service.log matches class name Users::ActivityService
Dataflow file: ../applications/pw-gitlab//dataflow/services/users/build_service.log matches class name Users::BuildService
Dataflow file: ../applications/pw-gitlab//dataflow/services/users/create_service.log matches class name Users::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/users/destroy_service.log matches class name Users::DestroyService
Dataflow file: ../applications/pw-gitlab//dataflow/services/users/keys_count_service.log matches class name Users::KeysCountService
Dataflow file: ../applications/pw-gitlab//dataflow/services/users/last_push_event_service.log matches class name Users::LastPushEventService
Dataflow file: ../applications/pw-gitlab//dataflow/services/users/migrate_to_ghost_user_service.log matches class name Users::MigrateToGhostUserService
Dataflow file: ../applications/pw-gitlab//dataflow/services/users/refresh_authorized_projects_service.log matches class name Users::RefreshAuthorizedProjectsService
Dataflow file: ../applications/pw-gitlab//dataflow/services/users/update_service.log matches class name Users::UpdateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/validate_new_branch_service.log matches class name ValidateNewBranchService
Dataflow file: ../applications/pw-gitlab//dataflow/services/verify_pages_domain_service.log matches class name VerifyPagesDomainService
Dataflow file: ../applications/pw-gitlab//dataflow/services/web_hook_service.log matches class name WebHookService::InternalErrorResponse
Dataflow file: ../applications/pw-gitlab//dataflow/services/wiki_pages/base_service.log matches class name WikiPages::BaseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/wiki_pages/create_service.log matches class name WikiPages::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/wiki_pages/destroy_service.log matches class name WikiPages::DestroyService
Dataflow file: ../applications/pw-gitlab//dataflow/services/wiki_pages/update_service.log matches class name WikiPages::UpdateService
Dataflow file: ../applications/pw-gitlab//dataflow/uploaders/attachment_uploader.log matches class name AttachmentUploader
Dataflow file: ../applications/pw-gitlab//dataflow/uploaders/avatar_uploader.log matches class name AvatarUploader
Dataflow file: ../applications/pw-gitlab//dataflow/uploaders/file_mover.log matches class name FileMover
Dataflow file: ../applications/pw-gitlab//dataflow/uploaders/file_uploader.log matches class name FileUploader
Dataflow file: ../applications/pw-gitlab//dataflow/uploaders/gitlab_uploader.log matches class name GitlabUploader
Dataflow file: ../applications/pw-gitlab//dataflow/uploaders/job_artifact_uploader.log matches class name JobArtifactUploader
Dataflow file: ../applications/pw-gitlab//dataflow/uploaders/legacy_artifact_uploader.log matches class name LegacyArtifactUploader
Dataflow file: ../applications/pw-gitlab//dataflow/uploaders/lfs_object_uploader.log matches class name LfsObjectUploader
Dataflow file: ../applications/pw-gitlab//dataflow/uploaders/namespace_file_uploader.log matches class name NamespaceFileUploader
Dataflow file: ../applications/pw-gitlab//dataflow/uploaders/object_storage.log matches class name ObjectStorage::Store
Dataflow file: ../applications/pw-gitlab//dataflow/uploaders/personal_file_uploader.log matches class name PersonalFileUploader
Dataflow file: ../applications/pw-gitlab//dataflow/uploaders/records_uploads.log matches class name RecordsUploads::Concern
Dataflow file: ../applications/pw-gitlab//dataflow/uploaders/uploader_helper.log matches class name UploaderHelper
Dataflow file: ../applications/pw-gitlab//dataflow/uploaders/workhorse.log matches class name Workhorse::UploadPath
Dataflow file: ../applications/pw-gitlab//dataflow/validators/abstract_path_validator.log matches class name AbstractPathValidator
Dataflow file: ../applications/pw-gitlab//dataflow/validators/addressable_url_validator.log matches class name AddressableUrlValidator
Dataflow file: ../applications/pw-gitlab//dataflow/validators/certificate_fingerprint_validator.log matches class name CertificateFingerprintValidator
Dataflow file: ../applications/pw-gitlab//dataflow/validators/certificate_key_validator.log matches class name CertificateKeyValidator
Dataflow file: ../applications/pw-gitlab//dataflow/validators/certificate_validator.log matches class name CertificateValidator
Dataflow file: ../applications/pw-gitlab//dataflow/validators/cluster_name_validator.log matches class name ClusterNameValidator
Dataflow file: ../applications/pw-gitlab//dataflow/validators/color_validator.log matches class name ColorValidator
Dataflow file: ../applications/pw-gitlab//dataflow/validators/cron_timezone_validator.log matches class name CronTimezoneValidator
Dataflow file: ../applications/pw-gitlab//dataflow/validators/cron_validator.log matches class name CronValidator
Dataflow file: ../applications/pw-gitlab//dataflow/validators/duration_validator.log matches class name DurationValidator
Dataflow file: ../applications/pw-gitlab//dataflow/validators/email_validator.log matches class name EmailValidator
Dataflow file: ../applications/pw-gitlab//dataflow/validators/importable_url_validator.log matches class name ImportableUrlValidator
Dataflow file: ../applications/pw-gitlab//dataflow/validators/key_restriction_validator.log matches class name KeyRestrictionValidator
Dataflow file: ../applications/pw-gitlab//dataflow/validators/line_code_validator.log matches class name LineCodeValidator
Dataflow file: ../applications/pw-gitlab//dataflow/validators/namespace_name_validator.log matches class name NamespaceNameValidator
Dataflow file: ../applications/pw-gitlab//dataflow/validators/namespace_path_validator.log matches class name NamespacePathValidator
Dataflow file: ../applications/pw-gitlab//dataflow/validators/project_path_validator.log matches class name ProjectPathValidator
Dataflow file: ../applications/pw-gitlab//dataflow/validators/top_level_group_validator.log matches class name TopLevelGroupValidator
Dataflow file: ../applications/pw-gitlab//dataflow/validators/url_placeholder_validator.log matches class name UrlPlaceholderValidator
Dataflow file: ../applications/pw-gitlab//dataflow/validators/url_validator.log matches class name UrlValidator
Dataflow file: ../applications/pw-gitlab//dataflow/validators/variable_duplicates_validator.log matches class name VariableDuplicatesValidator
Dataflow file: ../applications/pw-gitlab//dataflow/workers/admin_email_worker.log matches class name AdminEmailWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/archive_trace_worker.log matches class name ArchiveTraceWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/authorized_projects_worker.log matches class name AuthorizedProjectsWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/background_migration_worker.log matches class name BackgroundMigrationWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/build_coverage_worker.log matches class name BuildCoverageWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/build_finished_worker.log matches class name BuildFinishedWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/build_hooks_worker.log matches class name BuildHooksWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/build_queue_worker.log matches class name BuildQueueWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/build_success_worker.log matches class name BuildSuccessWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/build_trace_sections_worker.log matches class name BuildTraceSectionsWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/check_gcp_project_billing_worker.log matches class name CheckGcpProjectBillingWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/cluster_install_app_worker.log matches class name ClusterInstallAppWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/cluster_provision_worker.log matches class name ClusterProvisionWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/cluster_wait_for_app_installation_worker.log matches class name ClusterWaitForAppInstallationWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/cluster_wait_for_ingress_ip_address_worker.log matches class name ClusterWaitForIngressIpAddressWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/concerns/application_worker.log matches class name ApplicationWorker::ClassMethods
Dataflow file: ../applications/pw-gitlab//dataflow/workers/concerns/cluster_applications.log matches class name ClusterApplications
Dataflow file: ../applications/pw-gitlab//dataflow/workers/concerns/cluster_queue.log matches class name ClusterQueue
Dataflow file: ../applications/pw-gitlab//dataflow/workers/concerns/cronjob_queue.log matches class name CronjobQueue
Dataflow file: ../applications/pw-gitlab//dataflow/workers/concerns/exception_backtrace.log matches class name ExceptionBacktrace
Dataflow file: ../applications/pw-gitlab//dataflow/workers/concerns/gitlab/github_import/notify_upon_death.log matches class name Gitlab::GithubImport::NotifyUponDeath
Dataflow file: ../applications/pw-gitlab//dataflow/workers/concerns/gitlab/github_import/object_importer.log matches class name Gitlab::GithubImport::ObjectImporter
Dataflow file: ../applications/pw-gitlab//dataflow/workers/concerns/gitlab/github_import/queue.log matches class name Gitlab::GithubImport::Queue
Dataflow file: ../applications/pw-gitlab//dataflow/workers/concerns/gitlab/github_import/rescheduling_methods.log matches class name Gitlab::GithubImport::ReschedulingMethods
Dataflow file: ../applications/pw-gitlab//dataflow/workers/concerns/gitlab/github_import/stage_methods.log matches class name Gitlab::GithubImport::StageMethods
Dataflow file: ../applications/pw-gitlab//dataflow/workers/concerns/mail_scheduler_queue.log matches class name MailSchedulerQueue
Dataflow file: ../applications/pw-gitlab//dataflow/workers/concerns/new_issuable.log matches class name NewIssuable
Dataflow file: ../applications/pw-gitlab//dataflow/workers/concerns/object_storage_queue.log matches class name ObjectStorageQueue
Dataflow file: ../applications/pw-gitlab//dataflow/workers/concerns/pipeline_background_queue.log matches class name PipelineBackgroundQueue
Dataflow file: ../applications/pw-gitlab//dataflow/workers/concerns/pipeline_queue.log matches class name PipelineQueue
Dataflow file: ../applications/pw-gitlab//dataflow/workers/concerns/project_import_options.log matches class name ProjectImportOptions
Dataflow file: ../applications/pw-gitlab//dataflow/workers/concerns/project_start_import.log matches class name ProjectStartImport
Dataflow file: ../applications/pw-gitlab//dataflow/workers/concerns/repository_check_queue.log matches class name RepositoryCheckQueue
Dataflow file: ../applications/pw-gitlab//dataflow/workers/concerns/waitable_worker.log matches class name WaitableWorker::ClassMethods
Dataflow file: ../applications/pw-gitlab//dataflow/workers/create_gpg_signature_worker.log matches class name CreateGpgSignatureWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/create_pipeline_worker.log matches class name CreatePipelineWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/delete_merged_branches_worker.log matches class name DeleteMergedBranchesWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/delete_user_worker.log matches class name DeleteUserWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/email_receiver_worker.log matches class name EmailReceiverWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/emails_on_push_worker.log matches class name EmailsOnPushWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/expire_build_artifacts_worker.log matches class name ExpireBuildArtifactsWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/expire_build_instance_artifacts_worker.log matches class name ExpireBuildInstanceArtifactsWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/expire_job_cache_worker.log matches class name ExpireJobCacheWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/expire_pipeline_cache_worker.log matches class name ExpirePipelineCacheWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/git_garbage_collect_worker.log matches class name GitGarbageCollectWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/gitlab/github_import/advance_stage_worker.log matches class name Gitlab::GithubImport::AdvanceStageWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/gitlab/github_import/import_diff_note_worker.log matches class name Gitlab::GithubImport::ImportDiffNoteWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/gitlab/github_import/import_issue_worker.log matches class name Gitlab::GithubImport::ImportIssueWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/gitlab/github_import/import_note_worker.log matches class name Gitlab::GithubImport::ImportNoteWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/gitlab/github_import/import_pull_request_worker.log matches class name Gitlab::GithubImport::ImportPullRequestWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/gitlab/github_import/refresh_import_jid_worker.log matches class name Gitlab::GithubImport::RefreshImportJidWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/gitlab/github_import/stage/finish_import_worker.log matches class name Gitlab::GithubImport::Stage::FinishImportWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/gitlab/github_import/stage/import_base_data_worker.log matches class name Gitlab::GithubImport::Stage::ImportBaseDataWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/gitlab/github_import/stage/import_issues_and_diff_notes_worker.log matches class name Gitlab::GithubImport::Stage::ImportIssuesAndDiffNotesWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/gitlab/github_import/stage/import_notes_worker.log matches class name Gitlab::GithubImport::Stage::ImportNotesWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/gitlab/github_import/stage/import_pull_requests_worker.log matches class name Gitlab::GithubImport::Stage::ImportPullRequestsWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/gitlab/github_import/stage/import_repository_worker.log matches class name Gitlab::GithubImport::Stage::ImportRepositoryWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/gitlab_shell_worker.log matches class name GitlabShellWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/gitlab_usage_ping_worker.log matches class name GitlabUsagePingWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/group_destroy_worker.log matches class name GroupDestroyWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/import_export_project_cleanup_worker.log matches class name ImportExportProjectCleanupWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/invalid_gpg_signature_update_worker.log matches class name InvalidGpgSignatureUpdateWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/irker_worker.log matches class name IrkerWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/issue_due_scheduler_worker.log matches class name IssueDueSchedulerWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/mail_scheduler/issue_due_worker.log matches class name MailScheduler::IssueDueWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/merge_worker.log matches class name MergeWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/namespaceless_project_destroy_worker.log matches class name NamespacelessProjectDestroyWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/new_issue_worker.log matches class name NewIssueWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/new_merge_request_worker.log matches class name NewMergeRequestWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/new_note_worker.log matches class name NewNoteWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/object_storage/background_move_worker.log matches class name ObjectStorage::BackgroundMoveWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/object_storage/migrate_uploads_worker.log matches class name ObjectStorage::MigrateUploadsWorker::Upload
Dataflow file: ../applications/pw-gitlab//dataflow/workers/object_storage_upload_worker.log matches class name ObjectStorageUploadWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/pages_domain_verification_cron_worker.log matches class name PagesDomainVerificationCronWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/pages_domain_verification_worker.log matches class name PagesDomainVerificationWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/pages_worker.log matches class name PagesWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/pipeline_hooks_worker.log matches class name PipelineHooksWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/pipeline_metrics_worker.log matches class name PipelineMetricsWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/pipeline_notification_worker.log matches class name PipelineNotificationWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/pipeline_process_worker.log matches class name PipelineProcessWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/pipeline_schedule_worker.log matches class name PipelineScheduleWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/pipeline_success_worker.log matches class name PipelineSuccessWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/pipeline_update_worker.log matches class name PipelineUpdateWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/plugin_worker.log matches class name PluginWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/post_receive.log matches class name PostReceive
Dataflow file: ../applications/pw-gitlab//dataflow/workers/process_commit_worker.log matches class name ProcessCommitWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/project_cache_worker.log matches class name ProjectCacheWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/project_destroy_worker.log matches class name ProjectDestroyWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/project_export_worker.log matches class name ProjectExportWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/project_migrate_hashed_storage_worker.log matches class name ProjectMigrateHashedStorageWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/project_service_worker.log matches class name ProjectServiceWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/propagate_service_template_worker.log matches class name PropagateServiceTemplateWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/prune_old_events_worker.log matches class name PruneOldEventsWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/reactive_caching_worker.log matches class name ReactiveCachingWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/rebase_worker.log matches class name RebaseWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/remove_expired_group_links_worker.log matches class name RemoveExpiredGroupLinksWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/remove_expired_members_worker.log matches class name RemoveExpiredMembersWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/remove_old_web_hook_logs_worker.log matches class name RemoveOldWebHookLogsWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/remove_unreferenced_lfs_objects_worker.log matches class name RemoveUnreferencedLfsObjectsWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/repository_archive_cache_worker.log matches class name RepositoryArchiveCacheWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/repository_check/batch_worker.log matches class name RepositoryCheck::BatchWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/repository_check/clear_worker.log matches class name RepositoryCheck::ClearWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/repository_check/single_repository_worker.log matches class name RepositoryCheck::SingleRepositoryWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/repository_fork_worker.log matches class name RepositoryForkWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/repository_import_worker.log matches class name RepositoryImportWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/requests_profiles_worker.log matches class name RequestsProfilesWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/run_pipeline_schedule_worker.log matches class name RunPipelineScheduleWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/schedule_update_user_activity_worker.log matches class name ScheduleUpdateUserActivityWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/stage_update_worker.log matches class name StageUpdateWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/storage_migrator_worker.log matches class name StorageMigratorWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/stuck_ci_jobs_worker.log matches class name StuckCiJobsWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/stuck_import_jobs_worker.log matches class name StuckImportJobsWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/stuck_merge_jobs_worker.log matches class name StuckMergeJobsWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/system_hook_push_worker.log matches class name SystemHookPushWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/trending_projects_worker.log matches class name TrendingProjectsWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/update_head_pipeline_for_merge_request_worker.log matches class name UpdateHeadPipelineForMergeRequestWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/update_merge_requests_worker.log matches class name UpdateMergeRequestsWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/update_user_activity_worker.log matches class name UpdateUserActivityWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/upload_checksum_worker.log matches class name UploadChecksumWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/wait_for_cluster_creation_worker.log matches class name WaitForClusterCreationWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/web_hook_worker.log matches class name WebHookWorker
read_dataflow: 2005.161974
	TIME-read_util_function: 0.002261
	TIME-read_repeatable_function: 1.7e-05
	TIME-Fill in the empty CFG: 0.271051
in MilestoneActions Reject ApplicationController . view_to_html_string
in RendersBlob Reject ApplicationController . view_to_html_string
in RoutableActions Reject ApplicationController . route_not_found
in AccessRequestable Reject UsersController . exists
in TokenAuthenticatable Reject UsersController . exists
in ValidAttribute Reject UsersController . exists
in ProjectFeaturesCompatibility Reject UsersController . exists
in Presentable Reject UsersController . exists
in Routable Reject UsersController . exists
in GroupDescendant Reject UsersController . exists
in DeploymentPlatform Reject UsersController . exists
in ChronicDurationAttribute Reject UsersController . exists
in RunnerJobsFinder Reject Admin::RunnersController . runner
Find caller_type = deploy_token, DeployToken, in func DeployTokensHelper.expand_deploy_tokens_section?
Find caller_type = external_wiki_service, ExternalWikiService, in func ExternalWikiHelper.get_project_wiki_path
in BlobLike Reject Projects::ArtifactsController . entry
in Ci::ArtifactBlob Reject Projects::ArtifactsController . entry
in BlobLike Reject Projects::ArtifactsController . entry
in Ci::ArtifactBlob Reject Projects::ArtifactsController . entry
in Importable Reject Admin::UsersController . block
in HasStatus Reject Admin::UsersController . block
in Ci::Stage Reject Admin::UsersController . block
in Importable Reject Profiles::TwoFactorAuthsController . skip
in HasStatus Reject Profiles::TwoFactorAuthsController . skip
in Ci::Stage Reject Profiles::TwoFactorAuthsController . skip
in Importable Reject Profiles::TwoFactorAuthsController . skip
in HasStatus Reject Profiles::TwoFactorAuthsController . skip
in Ci::Stage Reject Profiles::TwoFactorAuthsController . skip
in Clusters::Applications::Runner Reject Admin::RunnersController . runner
in HasStatus Reject Projects::PipelinesController . stage
in Importable Reject Projects::PipelinesController . stage
in AccessRequestable Reject Projects::MergeRequestsController . merge!
in TokenAuthenticatable Reject Projects::MergeRequestsController . merge!
in ValidAttribute Reject Projects::MergeRequestsController . merge!
in ProjectFeaturesCompatibility Reject Projects::MergeRequestsController . merge!
in Presentable Reject Projects::MergeRequestsController . merge!
in Routable Reject Projects::MergeRequestsController . merge!
in GroupDescendant Reject Projects::MergeRequestsController . merge!
in DeploymentPlatform Reject Projects::MergeRequestsController . merge!
in ChronicDurationAttribute Reject Projects::MergeRequestsController . merge!
in Routable Reject Projects::EnvironmentsController . folder
in AccessRequestable Reject Projects::EnvironmentsController . folder
in GroupDescendant Reject Projects::EnvironmentsController . folder
in GitlabRoutingHelper Reject Projects::PipelinesController . stage
in RequestAwareEntity Reject Projects::PipelinesController . stage
in StageEntity Reject Projects::PipelinesController . stage
Find caller_type = chat_name, ChatName, in func ChatNames::FindUserService.execute
in Ci::RegisterJobService Reject Admin::RunnersController . runner
in Ci::RegisterJobService Reject Admin::RunnersController . runner
in Ci::RegisterJobService Reject Admin::RunnersController . runner
in Ci::RegisterJobService Reject Admin::RunnersController . runner
in Ci::RegisterJobService Reject Admin::RunnersController . runner
in Ci::RegisterJobService Reject Admin::RunnersController . runner
in Ci::RegisterJobService Reject Admin::RunnersController . runner
in Ci::RegisterJobService Reject Admin::RunnersController . runner
in Ci::RegisterJobService Reject Admin::RunnersController . runner
in Ci::UpdateRunnerService Reject Admin::RunnersController . runner
in Ci::UpdateRunnerService Reject Admin::RunnersController . runner
Find caller_type = commit_status, CommitStatus, in func MergeRequests::AddTodoWhenBuildFailsService.execute
Find caller_type = protected_tag, ProtectedTag, in func ProtectedTags::DestroyService.execute
Find caller_type = protected_tag, ProtectedTag, in func ProtectedTags::UpdateService.execute
in TokenAuthenticatable Reject Admin::UsersController . block
in FeatureGate Reject Admin::UsersController . block
in CreatedAtFilterable Reject Admin::UsersController . block
in BulkMemberAccessLoad Reject Admin::UsersController . block
in BlocksJsonSerialization Reject Admin::UsersController . block
in TokenAuthenticatable Reject Admin::UsersController . block
in FeatureGate Reject Admin::UsersController . block
in CreatedAtFilterable Reject Admin::UsersController . block
in BulkMemberAccessLoad Reject Admin::UsersController . block
in BlocksJsonSerialization Reject Admin::UsersController . block
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
	TIME-ADD associates: 5.0e-06 t1: 0.0026869999999999707 t2: 0.027173000000000364 t3: 0.0014249999999999788 t4: 429.3287889999979 t4_1: 107.06754100000272 t4_2: 2100.8802590000487
in MilestoneActions Reject ApplicationController . view_to_html_string
in RendersBlob Reject ApplicationController . view_to_html_string
in RoutableActions Reject ApplicationController . route_not_found
in AccessRequestable Reject UsersController . exists
in TokenAuthenticatable Reject UsersController . exists
in ValidAttribute Reject UsersController . exists
in ProjectFeaturesCompatibility Reject UsersController . exists
in Presentable Reject UsersController . exists
in Routable Reject UsersController . exists
in GroupDescendant Reject UsersController . exists
in DeploymentPlatform Reject UsersController . exists
in ChronicDurationAttribute Reject UsersController . exists
in RunnerJobsFinder Reject Admin::RunnersController . runner
in BlobLike Reject Projects::ArtifactsController . entry
in Ci::ArtifactBlob Reject Projects::ArtifactsController . entry
in BlobLike Reject Projects::ArtifactsController . entry
in Ci::ArtifactBlob Reject Projects::ArtifactsController . entry
in Importable Reject Admin::UsersController . block
in HasStatus Reject Admin::UsersController . block
in Ci::Stage Reject Admin::UsersController . block
in Importable Reject Profiles::TwoFactorAuthsController . skip
in HasStatus Reject Profiles::TwoFactorAuthsController . skip
in Ci::Stage Reject Profiles::TwoFactorAuthsController . skip
in Importable Reject Profiles::TwoFactorAuthsController . skip
in HasStatus Reject Profiles::TwoFactorAuthsController . skip
in Ci::Stage Reject Profiles::TwoFactorAuthsController . skip
in Clusters::Applications::Runner Reject Admin::RunnersController . runner
in AccessRequestable Reject Projects::MergeRequestsController . merge!
in TokenAuthenticatable Reject Projects::MergeRequestsController . merge!
in ValidAttribute Reject Projects::MergeRequestsController . merge!
in ProjectFeaturesCompatibility Reject Projects::MergeRequestsController . merge!
in Presentable Reject Projects::MergeRequestsController . merge!
in Routable Reject Projects::MergeRequestsController . merge!
in GroupDescendant Reject Projects::MergeRequestsController . merge!
in DeploymentPlatform Reject Projects::MergeRequestsController . merge!
in ChronicDurationAttribute Reject Projects::MergeRequestsController . merge!
in Routable Reject Projects::EnvironmentsController . folder
in AccessRequestable Reject Projects::EnvironmentsController . folder
in GroupDescendant Reject Projects::EnvironmentsController . folder
in GitlabRoutingHelper Reject Projects::PipelinesController . stage
in RequestAwareEntity Reject Projects::PipelinesController . stage
in StageEntity Reject Projects::PipelinesController . stage
in Ci::RegisterJobService Reject Admin::RunnersController . runner
in Ci::RegisterJobService Reject Admin::RunnersController . runner
in Ci::RegisterJobService Reject Admin::RunnersController . runner
in Ci::RegisterJobService Reject Admin::RunnersController . runner
in Ci::RegisterJobService Reject Admin::RunnersController . runner
in Ci::RegisterJobService Reject Admin::RunnersController . runner
in Ci::RegisterJobService Reject Admin::RunnersController . runner
in Ci::RegisterJobService Reject Admin::RunnersController . runner
in Ci::RegisterJobService Reject Admin::RunnersController . runner
in Ci::UpdateRunnerService Reject Admin::RunnersController . runner
in Ci::UpdateRunnerService Reject Admin::RunnersController . runner
in TokenAuthenticatable Reject Admin::UsersController . block
in FeatureGate Reject Admin::UsersController . block
in CreatedAtFilterable Reject Admin::UsersController . block
in BulkMemberAccessLoad Reject Admin::UsersController . block
in BlocksJsonSerialization Reject Admin::UsersController . block
in TokenAuthenticatable Reject Admin::UsersController . block
in FeatureGate Reject Admin::UsersController . block
in CreatedAtFilterable Reject Admin::UsersController . block
in BulkMemberAccessLoad Reject Admin::UsersController . block
in BlocksJsonSerialization Reject Admin::UsersController . block
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
	TIME-second do_type_inference_cfg: 1269.429152
Set ResolvableDiscussion.can_resolve? funcname to be can_resolve_note_Project
Set LfsFileLock.can_be_unlocked_by? funcname to be can_admin_project_Project
Set DeleteBranchService.execute funcname to be can_push_code_Project
	TIME-third do_type_inference_cfg: 1.773606
do_type_inference: 3479.511274
k: [User.ldap_user?] (1.) %self[1.0]  self . identities 
complexity: 1
k: [User.ldap_user?] (1.) %self[1.0]  self . identities 
complexity: 1
k: [User.ldap_user?] (1.) %self[1.0]  identities(Identity) . find 
complexity: 1
k: [User.ldap_user?] (1.) %self[1.0]  self . identities 
complexity: 1
k: [User.ldap_user?] (1.) %self[1.0]  identities(Identity) . exists? 
complexity: 1
k: [User.ldap_user?] (1.) %self[1.0]  self . identities 
complexity: 1
k: [User.ldap_user?] (1.) %self[1.0]  self . identities 
complexity: 1
k: [User.ldap_user?] (1.) %self[1.0]  identities(Identity) . find 
complexity: 1
k: [User.ldap_user?] (1.) %self[1.0]  self . identities 
complexity: 1
k: [User.ldap_user?] (1.) %self[1.0]  identities(Identity) . exists? 
complexity: 1
k: [User.ldap_user?] (1.) %self[1.0]  self . identities 
complexity: 1
k: [User.ldap_user?] (1.) %self[1.0]  self . identities 
complexity: 1
k: [User.ldap_user?] (1.) %self[1.0]  identities(Identity) . find 
complexity: 1
k: [User.ldap_user?] (1.) %self[1.0]  self . identities 
complexity: 1
k: [User.ldap_user?] (1.) %self[1.0]  identities(Identity) . exists? 
complexity: 1
k: [AbuseReportsController.set_user] (2.10) %v_3[2.6] %v_6[2.9]  %v_3 -> find_by 
complexity: 1
k: [AbuseReport.before_validation] (1.) %self[1.0]  self . reporter 
complexity: 1
k: [AbuseReportsController.create] (2.16) %v_8[2.15]  %v_8 -> save 
complexity: 1
k: [AbuseReportMailer.notify] (3.3) %v_5[3.2] abuse_report_id[2.5]  %v_5 -> find 
complexity: 1
ppppp #<Call_instr:0x00007fa33a138de8> [Ability.allowed?] (12.2) %v_14[12.1] %self[2.0]  %v_14 -> user_scope ["models/ability.rb", 58, 0]
ppppp #<Call_instr:0x00007fa338501e68> [Ability.allowed?] (13.2) %v_16[13.1] %self[2.0]  %v_16 -> subject_scope ["models/ability.rb", 60, 0]
ppppp #<Call_instr:0x00007fa33a138de8> [Ability.allowed?] (12.2) %v_14[12.1] %self[2.0]  %v_14 -> user_scope ["models/ability.rb", 58, 0]
ppppp #<Call_instr:0x00007fa338501e68> [Ability.allowed?] (13.2) %v_16[13.1] %self[2.0]  %v_16 -> subject_scope ["models/ability.rb", 60, 0]
  choices = []
ALL DURATION OF ../applications/pw-gitlab/ 5555.816798
ruby main.rb -d ../applications/pw-gitlab/ -p AbuseReportsController,new
Start 2018-08-18 16:48:29 -0500
dir = ../applications/pw-gitlab/
run performance
resolve_upper_class: 0.014327
resolve_upper_class: 0.015682
ADD INDEX: AuditEvent, author_id
ADD INDEX: AuditEvent, entity_id
ADD INDEX: AuditEvent, type
ADD INDEX: Ci::Build, commit_id
ADD INDEX: Ci::Build, commit_id
ADD INDEX: Ci::Build, commit_id
ADD INDEX: Ci::Build, commit_id
ADD INDEX: Ci::Build, commit_id
ADD INDEX: Ci::Build, erased_by_id
ADD INDEX: Ci::Build, gl_project_id
ADD INDEX: Ci::Build, project_id
ADD INDEX: Ci::Build, project_id
ADD INDEX: Ci::Build, runner_id
ADD INDEX: Ci::Build, status
ADD INDEX: Ci::Build, type
read schema: class ci_commits (CiCommit) cannot be found!
INDEX:: TABLE ci_commits - CiCommit field gl_project_id cannot be found
INDEX:: TABLE ci_commits - CiCommit field gl_project_id cannot be found
INDEX:: TABLE ci_commits - CiCommit field gl_project_id cannot be found
INDEX:: TABLE ci_commits - CiCommit field project_id cannot be found
INDEX:: TABLE ci_commits - CiCommit field project_id cannot be found
INDEX:: TABLE ci_commits - CiCommit field project_id cannot be found
INDEX:: TABLE ci_commits - CiCommit field project_id cannot be found
INDEX:: TABLE ci_commits - CiCommit field sha cannot be found
INDEX:: TABLE ci_commits - CiCommit field status cannot be found
ADD INDEX: Event, created_at
ADD INDEX: Event, is_admin
ADD INDEX: Event, project_id
read schema: class ci_jobs (CiJob) cannot be found!
INDEX:: TABLE ci_jobs - CiJob field deleted_at cannot be found
INDEX:: TABLE ci_jobs - CiJob field project_id cannot be found
read schema: class ci_projects (CiProject) cannot be found!
INDEX:: TABLE ci_projects - CiProject field gitlab_id cannot be found
INDEX:: TABLE ci_projects - CiProject field shared_runners_enabled cannot be found
ADD INDEX: Ci::RunnerProject, gl_project_id
ADD INDEX: Ci::RunnerProject, runner_id
ADD INDEX: Ci::Runner, description
ADD INDEX: Ci::Runner, token
ADD INDEX: Ci::Runner, token
ADD INDEX: CiService, project_id
read schema: class ci_sessions (CiSession) cannot be found!
INDEX:: TABLE ci_sessions - CiSession field session_id cannot be found
INDEX:: TABLE ci_sessions - CiSession field updated_at cannot be found
read schema: class ci_taggings (CiTagging) cannot be found!
INDEX:: TABLE ci_taggings - CiTagging field tag_id cannot be found
INDEX:: TABLE ci_taggings - CiTagging field taggable_id cannot be found
read schema: class ci_tags (CiTag) cannot be found!
INDEX:: TABLE ci_tags - CiTag field name cannot be found
ADD INDEX: Ci::Trigger, deleted_at
ADD INDEX: Ci::Trigger, gl_project_id
ADD INDEX: Ci::Variable, gl_project_id
read schema: class ci_web_hooks (CiWebHook) cannot be found!
ADD INDEX: DeployKeysProject, project_id
ADD INDEX: Email, email
ADD INDEX: Email, user_id
ADD INDEX: Event, action
ADD INDEX: Event, author_id
ADD INDEX: Event, created_at
ADD INDEX: Event, project_id
ADD INDEX: Event, target_id
ADD INDEX: Event, target_type
ADD INDEX: ForkedProjectLink, forked_to_project_id
ADD INDEX: Identity, created_at
ADD INDEX: Identity, user_id
ADD INDEX: Issue, assignee_id
ADD INDEX: Issue, author_id
ADD INDEX: Issue, confidential
ADD INDEX: Issue, created_at
ADD INDEX: Issue, created_at
ADD INDEX: Issue, deleted_at
ADD INDEX: Issue, description
ADD INDEX: Issue, due_date
ADD INDEX: Issue, milestone_id
ADD INDEX: Issue, project_id
ADD INDEX: Issue, project_id
ADD INDEX: Issue, state
ADD INDEX: Issue, title
ADD INDEX: Issue, title
ADD INDEX: Key, created_at
ADD INDEX: Key, user_id
ADD INDEX: LabelLink, label_id
ADD INDEX: LabelLink, target_id
ADD INDEX: Label, project_id
ADD INDEX: LfsObject, oid
ADD INDEX: LfsObjectsProject, project_id
ADD INDEX: Member, access_level
ADD INDEX: Member, created_at
ADD INDEX: Member, invite_token
ADD INDEX: Member, source_id
ADD INDEX: Member, type
ADD INDEX: Member, user_id
ADD INDEX: MergeRequestDiff, merge_request_id
ADD INDEX: MergeRequest, assignee_id
ADD INDEX: MergeRequest, author_id
ADD INDEX: MergeRequest, created_at
ADD INDEX: MergeRequest, created_at
ADD INDEX: MergeRequest, deleted_at
ADD INDEX: MergeRequest, description
ADD INDEX: MergeRequest, milestone_id
ADD INDEX: MergeRequest, source_branch
ADD INDEX: MergeRequest, source_project_id
ADD INDEX: MergeRequest, target_branch
ADD INDEX: MergeRequest, target_project_id
ADD INDEX: MergeRequest, title
ADD INDEX: MergeRequest, title
ADD INDEX: Milestone, created_at
ADD INDEX: Milestone, description
ADD INDEX: Milestone, due_date
ADD INDEX: Milestone, project_id
ADD INDEX: Milestone, project_id
ADD INDEX: Milestone, title
ADD INDEX: Milestone, title
ADD INDEX: Namespace, created_at
ADD INDEX: Namespace, name
ADD INDEX: Namespace, name
ADD INDEX: Namespace, owner_id
ADD INDEX: Namespace, path
ADD INDEX: Namespace, path
ADD INDEX: Namespace, type
ADD INDEX: Namespace, visibility_level
read schema: class notes (Note) cannot be found!
INDEX:: TABLE notes - Note field author_id cannot be found
INDEX:: TABLE notes - Note field commit_id cannot be found
INDEX:: TABLE notes - Note field created_at cannot be found
INDEX:: TABLE notes - Note field created_at cannot be found
INDEX:: TABLE notes - Note field is_award cannot be found
INDEX:: TABLE notes - Note field line_code cannot be found
INDEX:: TABLE notes - Note field note cannot be found
INDEX:: TABLE notes - Note field noteable_id cannot be found
INDEX:: TABLE notes - Note field noteable_type cannot be found
INDEX:: TABLE notes - Note field project_id cannot be found
INDEX:: TABLE notes - Note field project_id cannot be found
INDEX:: TABLE notes - Note field updated_at cannot be found
ADD INDEX: NotificationSetting, source_id
ADD INDEX: NotificationSetting, user_id
ADD INDEX: OauthAccessGrant, token
ADD INDEX: OauthAccessToken, refresh_token
ADD INDEX: OauthAccessToken, resource_owner_id
ADD INDEX: OauthAccessToken, token
read schema: class oauth_applications (OauthApplication) cannot be found!
INDEX:: TABLE oauth_applications - OauthApplication field owner_id cannot be found
INDEX:: TABLE oauth_applications - OauthApplication field uid cannot be found
ADD INDEX: Project, builds_enabled
ADD INDEX: Project, builds_enabled
ADD INDEX: Project, ci_id
ADD INDEX: Project, created_at
ADD INDEX: Project, creator_id
ADD INDEX: Project, description
ADD INDEX: Project, last_activity_at
ADD INDEX: Project, last_repository_check_failed
ADD INDEX: Project, name
ADD INDEX: Project, namespace_id
ADD INDEX: Project, path
ADD INDEX: Project, path
ADD INDEX: Project, pending_delete
ADD INDEX: Project, runners_token
ADD INDEX: Project, star_count
ADD INDEX: Project, visibility_level
ADD INDEX: ProtectedBranch, project_id
ADD INDEX: Release, project_id
ADD INDEX: Release, project_id
ADD INDEX: SentNotification, reply_key
ADD INDEX: Service, category
ADD INDEX: Service, created_at
ADD INDEX: Service, default
ADD INDEX: Service, project_id
ADD INDEX: Service, template
ADD INDEX: Snippet, author_id
ADD INDEX: Snippet, created_at
ADD INDEX: Snippet, created_at
ADD INDEX: Snippet, file_name
ADD INDEX: Snippet, project_id
ADD INDEX: Snippet, title
ADD INDEX: Snippet, updated_at
ADD INDEX: Snippet, visibility_level
ADD INDEX: Subscription, subscribable_id
read schema: class taggings (Tagging) cannot be found!
INDEX:: TABLE taggings - Tagging field tag_id cannot be found
INDEX:: TABLE taggings - Tagging field taggable_id cannot be found
read schema: class tags (Tag) cannot be found!
INDEX:: TABLE tags - Tag field name cannot be found
ADD INDEX: Todo, author_id
ADD INDEX: Todo, commit_id
ADD INDEX: Todo, note_id
ADD INDEX: Todo, project_id
ADD INDEX: Todo, state
ADD INDEX: Todo, target_type
ADD INDEX: Todo, user_id
ADD INDEX: User, admin
ADD INDEX: User, authentication_token
ADD INDEX: User, confirmation_token
ADD INDEX: User, created_at
ADD INDEX: User, current_sign_in_at
ADD INDEX: User, email
ADD INDEX: User, email
ADD INDEX: User, name
ADD INDEX: User, name
ADD INDEX: User, reset_password_token
ADD INDEX: User, username
ADD INDEX: User, username
ADD INDEX: UsersStarProject, project_id
ADD INDEX: UsersStarProject, user_id
ADD INDEX: UsersStarProject, user_id
ADD INDEX: WebHook, created_at
ADD INDEX: WebHook, project_id
read_schema: 0.990842
ForkProjectsFinder.initialize, Found super ProjectsFinder
GroupProjectsFinder.initialize, Found super ProjectsFinder
DeferScriptTagHelper.javascript_include_tag, Found super 
LazyImageTagHelper.image_tag, Found super 
ApplicationSetting.default_project_visibility=, Found super ActiveRecord::Base
ApplicationSetting.default_snippet_visibility=, Found super ActiveRecord::Base
ApplicationSetting.default_group_visibility=, Found super ActiveRecord::Base
ApplicationSetting.restricted_visibility_levels=, Found super ActiveRecord::Base
ApplicationSetting.performance_bar_allowed_group_id=, Found super ActiveRecord::Base
ApplicationSetting.performance_bar_allowed_group_id=, Found super ActiveRecord::Base
ApplicationSetting.performance_bar_allowed_group_id=, Found super ActiveRecord::Base
AwardEmoji.downvotes, Found super ActiveRecord::Base
AwardEmoji.upvotes, Found super ActiveRecord::Base
Badge.order_created_at_asc, Found super ActiveRecord::Base
Blob.initialize, Found super SimpleDelegator
Blob.load_all_data!, Found super SimpleDelegator
Ci::Build.unstarted, Found super 
Ci::Build.ignore_failures, Found super 
Ci::Build.with_artifacts_archive, Found super 
Ci::Build.with_artifacts_stored_locally, Found super 
Ci::Build.with_artifacts_not_expired, Found super 
Ci::Build.with_expired_artifacts, Found super 
Ci::Build.last_month, Found super 
Ci::Build.manual_actions, Found super 
Ci::Build.ref_protected, Found super 
Ci::Build.matches_tag_ids, Found super 
Ci::Build.with_any_tags, Found super 
Ci::Build.serializable_hash, Found super 
Ci::GroupVariable.unprotected, Found super 
Ci::JobArtifact.with_files_stored_locally, Found super 
Ci::Pipeline.internal, Found super 
Ci::PipelineSchedule.active, Found super 
Ci::PipelineSchedule.inactive, Found super 
Ci::Runner.specific, Found super 
Ci::Runner.shared, Found super 
Ci::Runner.active, Found super 
Ci::Runner.paused, Found super 
Ci::Runner.online, Found super 
Ci::Runner.ordered, Found super 
Ci::Runner.owned_or_shared, Found super 
Ci::Runner.assignable_for, Found super 
Ci::Variable.unprotected, Found super 
Clusters::Cluster.enabled, Found super 
Clusters::Cluster.disabled, Found super 
Clusters::Cluster.user_provided, Found super 
Clusters::Cluster.gcp_provided, Found super 
Clusters::Cluster.gcp_installed, Found super 
Clusters::Cluster.default_environment, Found super 
Clusters::Concerns::ApplicationStatus.installed, Found super 
Commit.link_reference_pattern, Found super 
CommitRange.link_reference_pattern, Found super 
CommitStatus.failed_but_allowed, Found super ActiveRecord::Base
CommitStatus.exclude_ignored, Found super ActiveRecord::Base
CommitStatus.latest, Found super ActiveRecord::Base
CommitStatus.retried, Found super ActiveRecord::Base
CommitStatus.ordered, Found super ActiveRecord::Base
CommitStatus.latest_ordered, Found super ActiveRecord::Base
CommitStatus.retried_ordered, Found super ActiveRecord::Base
CommitStatus.after_stage, Found super ActiveRecord::Base
CreatedAtFilterable.created_before, Found super 
CreatedAtFilterable.created_after, Found super 
Expirable.expired, Found super 
HasStatus.created, Found super 
HasStatus.relevant, Found super 
HasStatus.running, Found super 
HasStatus.pending, Found super 
HasStatus.success, Found super 
HasStatus.failed, Found super 
HasStatus.canceled, Found super 
HasStatus.skipped, Found super 
HasStatus.manual, Found super 
HasStatus.alive, Found super 
HasStatus.created_or_pending, Found super 
HasStatus.running_or_pending, Found super 
HasStatus.finished, Found super 
HasStatus.failed_or_canceled, Found super 
HasStatus.cancelable, Found super 
HasVariable.order_key_asc, Found super 
HasVariable.key=, Found super 
Issuable::ClassMethods.authored, Found super 
Issuable::ClassMethods.recent, Found super 
Issuable::ClassMethods.of_projects, Found super 
Issuable::ClassMethods.of_milestones, Found super 
Issuable::ClassMethods.with_milestone, Found super 
Issuable::ClassMethods.opened, Found super 
Issuable::ClassMethods.only_opened, Found super 
Issuable::ClassMethods.closed, Found super 
Issuable::ClassMethods.left_joins_milestones, Found super 
Issuable::ClassMethods.order_milestone_due_desc, Found super 
Issuable::ClassMethods.order_milestone_due_asc, Found super 
Issuable::ClassMethods.without_label, Found super 
Issuable::ClassMethods.join_project, Found super 
Issuable::ClassMethods.inc_notes_with_associations, Found super 
Issuable::ClassMethods.references_project, Found super 
Issuable::ClassMethods.non_archived, Found super 
ManualInverseAssociation::ClassMethods.manual_inverse_association, Found super 
ProtectedRefAccess.master, Found super 
ProtectedRefAccess.developer, Found super 
ResolvableNote::ClassMethods.potentially_resolvable, Found super 
ResolvableNote::ClassMethods.resolvable, Found super 
ResolvableNote::ClassMethods.resolved, Found super 
ResolvableNote::ClassMethods.unresolved, Found super 
Routable.with_route, Found super 
Sortable::ClassMethods.order_id_desc, Found super 
Sortable::ClassMethods.order_id_asc, Found super 
Sortable::ClassMethods.order_created_desc, Found super 
Sortable::ClassMethods.order_created_asc, Found super 
Sortable::ClassMethods.order_updated_desc, Found super 
Sortable::ClassMethods.order_updated_asc, Found super 
Sortable::ClassMethods.order_name_asc, Found super 
Sortable::ClassMethods.order_name_desc, Found super 
UpdatedAtFilterable.updated_before, Found super 
UpdatedAtFilterable.updated_after, Found super 
DeployKey.in_projects, Found super Key
DeployKey.are_public, Found super Key
DeployKeysProject.without_project_deleted, Found super ActiveRecord::Base
DeployKeysProject.in_project, Found super ActiveRecord::Base
DeployKeysProject.with_write_access, Found super ActiveRecord::Base
DeployToken.active, Found super ActiveRecord::Base
Email.confirmed, Found super ActiveRecord::Base
Environment.available, Found super ActiveRecord::Base
Environment.stopped, Found super ActiveRecord::Base
Environment.order_by_last_deployed_at, Found super ActiveRecord::Base
Environment.in_review_folder, Found super ActiveRecord::Base
Event.recent, Found super ActiveRecord::Base
Event.code_push, Found super ActiveRecord::Base
Event.in_projects, Found super ActiveRecord::Base
Event.with_associations, Found super ActiveRecord::Base
Event.for_milestone_id, Found super ActiveRecord::Base
GpgKey.with_subkeys, Found super ActiveRecord::Base
GpgKey.key=, Found super ActiveRecord::Base
GroupMilestone.build_collection, Found super GlobalMilestone
GroupMilestone.build, Found super GlobalMilestone
Identity.with_provider, Found super ActiveRecord::Base
Identity.with_extern_uid, Found super ActiveRecord::Base
Issue.in_projects, Found super ActiveRecord::Base
Issue.assigned, Found super ActiveRecord::Base
Issue.unassigned, Found super ActiveRecord::Base
Issue.assigned_to, Found super ActiveRecord::Base
Issue.without_due_date, Found super ActiveRecord::Base
Issue.due_before, Found super ActiveRecord::Base
Issue.due_between, Found super ActiveRecord::Base
Issue.due_tomorrow, Found super ActiveRecord::Base
Issue.order_due_date_asc, Found super ActiveRecord::Base
Issue.order_due_date_desc, Found super ActiveRecord::Base
Issue.preload_associations, Found super ActiveRecord::Base
Issue.public_only, Found super ActiveRecord::Base
Issue.link_reference_pattern, Found super ActiveRecord::Base
Issue.as_json, Found super ActiveRecord::Base
Label.templates, Found super ActiveRecord::Base
Label.with_title, Found super ActiveRecord::Base
Label.with_lists_and_board, Found super ActiveRecord::Base
Label.on_group_boards, Found super ActiveRecord::Base
Label.on_project_boards, Found super ActiveRecord::Base
Label.as_json, Found super ActiveRecord::Base
LfsObject.with_files_stored_locally, Found super ActiveRecord::Base
List.destroyable, Found super ActiveRecord::Base
List.movable, Found super ActiveRecord::Base
List.as_json, Found super ActiveRecord::Base
Member.active, Found super ActiveRecord::Base
Member.active_without_invites_and_requests, Found super ActiveRecord::Base
Member.invite, Found super ActiveRecord::Base
Member.non_invite, Found super ActiveRecord::Base
Member.request, Found super ActiveRecord::Base
Member.non_request, Found super ActiveRecord::Base
Member.has_access, Found super ActiveRecord::Base
Member.guests, Found super ActiveRecord::Base
Member.reporters, Found super ActiveRecord::Base
Member.developers, Found super ActiveRecord::Base
Member.masters, Found super ActiveRecord::Base
Member.owners, Found super ActiveRecord::Base
Member.owners_and_masters, Found super ActiveRecord::Base
Member.order_name_asc, Found super ActiveRecord::Base
Member.order_name_desc, Found super ActiveRecord::Base
Member.order_recent_sign_in, Found super ActiveRecord::Base
Member.order_oldest_sign_in, Found super ActiveRecord::Base
ProjectMember.in_project, Found super Member
MergeRequest.by_source_or_target_branch, Found super ActiveRecord::Base
MergeRequest.by_milestone, Found super ActiveRecord::Base
MergeRequest.of_projects, Found super ActiveRecord::Base
MergeRequest.from_project, Found super ActiveRecord::Base
MergeRequest.merged, Found super ActiveRecord::Base
MergeRequest.closed_and_merged, Found super ActiveRecord::Base
MergeRequest.from_source_branches, Found super ActiveRecord::Base
MergeRequest.by_commit_sha, Found super ActiveRecord::Base
MergeRequest.join_project, Found super ActiveRecord::Base
MergeRequest.references_project, Found super ActiveRecord::Base
MergeRequest.assigned, Found super ActiveRecord::Base
MergeRequest.unassigned, Found super ActiveRecord::Base
MergeRequest.assigned_to, Found super ActiveRecord::Base
MergeRequest.link_reference_pattern, Found super ActiveRecord::Base
MergeRequestDiff.viewable, Found super ActiveRecord::Base
MergeRequestDiff.by_commit_sha, Found super ActiveRecord::Base
MergeRequestDiff.recent, Found super ActiveRecord::Base
Milestone.of_projects, Found super ActiveRecord::Base
Milestone.of_groups, Found super ActiveRecord::Base
Milestone.active, Found super ActiveRecord::Base
Milestone.closed, Found super ActiveRecord::Base
Milestone.for_projects, Found super ActiveRecord::Base
Milestone.for_projects_and_groups, Found super ActiveRecord::Base
Milestone.link_reference_pattern, Found super ActiveRecord::Base
Namespace.for_user, Found super ActiveRecord::Base
Namespace.with_statistics, Found super ActiveRecord::Base
Note::SpecialRole.for_commit_id, Found super ActiveRecord::Base
Note::SpecialRole.system, Found super ActiveRecord::Base
Note::SpecialRole.user, Found super ActiveRecord::Base
Note::SpecialRole.common, Found super ActiveRecord::Base
Note::SpecialRole.fresh, Found super ActiveRecord::Base
Note::SpecialRole.updated_after, Found super ActiveRecord::Base
Note::SpecialRole.inc_author_project, Found super ActiveRecord::Base
Note::SpecialRole.inc_author, Found super ActiveRecord::Base
Note::SpecialRole.inc_relations_for_view, Found super ActiveRecord::Base
Note::SpecialRole.diff_notes, Found super ActiveRecord::Base
Note::SpecialRole.new_diff_notes, Found super ActiveRecord::Base
Note::SpecialRole.non_diff_notes, Found super ActiveRecord::Base
Note::SpecialRole.with_associations, Found super ActiveRecord::Base
Note::SpecialRole.with_metadata, Found super ActiveRecord::Base
Note::SpecialRole.noteable_type=, Found super ActiveRecord::Base
Note::SpecialRole.discussion_id, Found super ActiveRecord::Base
NotificationSetting.for_groups, Found super ActiveRecord::Base
NotificationSetting.for_projects, Found super ActiveRecord::Base
OauthAccessToken.scopes=, Found super Doorkeeper::AccessToken
PagesDomain.enabled, Found super ActiveRecord::Base
PagesDomain.needs_verification, Found super ActiveRecord::Base
PersonalAccessToken.active, Found super ActiveRecord::Base
PersonalAccessToken.inactive, Found super ActiveRecord::Base
PersonalAccessToken.with_impersonation, Found super ActiveRecord::Base
PersonalAccessToken.without_impersonation, Found super ActiveRecord::Base
Project.pending_delete, Found super ActiveRecord::Base
Project.without_deleted, Found super ActiveRecord::Base
Project.with_storage_feature, Found super ActiveRecord::Base
Project.without_storage_feature, Found super ActiveRecord::Base
Project.with_unmigrated_storage, Found super ActiveRecord::Base
Project.sorted_by_activity, Found super ActiveRecord::Base
Project.sorted_by_stars, Found super ActiveRecord::Base
Project.in_namespace, Found super ActiveRecord::Base
Project.personal, Found super ActiveRecord::Base
Project.joined, Found super ActiveRecord::Base
Project.starred_by, Found super ActiveRecord::Base
Project.visible_to_user, Found super ActiveRecord::Base
Project.archived, Found super ActiveRecord::Base
Project.non_archived, Found super ActiveRecord::Base
Project.for_milestones, Found super ActiveRecord::Base
Project.with_push, Found super ActiveRecord::Base
Project.with_project_feature, Found super ActiveRecord::Base
Project.with_statistics, Found super ActiveRecord::Base
Project.with_shared_runners, Found super ActiveRecord::Base
Project.inside_path, Found super ActiveRecord::Base
Project.with_feature_enabled, Found super ActiveRecord::Base
Project.with_feature_access_level, Found super ActiveRecord::Base
Project.with_builds_enabled, Found super ActiveRecord::Base
Project.with_issues_enabled, Found super ActiveRecord::Base
Project.with_issues_available_for_user, Found super ActiveRecord::Base
Project.with_merge_requests_enabled, Found super ActiveRecord::Base
Project.active, Found super ActiveRecord::Base
Project.abandoned, Found super ActiveRecord::Base
Project.excluding_project, Found super ActiveRecord::Base
Project.import_started, Found super ActiveRecord::Base
Project.ci_config_path=, Found super ActiveRecord::Base
Project.import_url=, Found super ActiveRecord::Base
Project.import_url=, Found super ActiveRecord::Base
ProjectAutoDevops.enabled, Found super ActiveRecord::Base
ProjectAutoDevops.disabled, Found super ActiveRecord::Base
ProjectLabel.to_reference, Found super Label
MicrosoftTeamsService.custom_data, Found super ChatNotificationService
ProjectSnippet.fresh, Found super Snippet
ReadmeBlob.initialize, Found super SimpleDelegator
RedirectRoute.matching_path_and_descendants, Found super ActiveRecord::Base
Route.inside_path, Found super ActiveRecord::Base
SentNotification.position=, Found super ActiveRecord::Base
Service.visible, Found super ActiveRecord::Base
Service.issue_trackers, Found super ActiveRecord::Base
Service.external_wikis, Found super ActiveRecord::Base
Service.active, Found super ActiveRecord::Base
Service.without_defaults, Found super ActiveRecord::Base
Service.push_hooks, Found super ActiveRecord::Base
Service.tag_push_hooks, Found super ActiveRecord::Base
Service.issue_hooks, Found super ActiveRecord::Base
Service.confidential_issue_hooks, Found super ActiveRecord::Base
Service.merge_request_hooks, Found super ActiveRecord::Base
Service.note_hooks, Found super ActiveRecord::Base
Service.confidential_note_hooks, Found super ActiveRecord::Base
Service.job_hooks, Found super ActiveRecord::Base
Service.pipeline_hooks, Found super ActiveRecord::Base
Service.wiki_page_hooks, Found super ActiveRecord::Base
Service.external_issue_trackers, Found super ActiveRecord::Base
Service.deployment, Found super ActiveRecord::Base
Snippet.are_internal, Found super ActiveRecord::Base
Snippet.are_private, Found super ActiveRecord::Base
Snippet.are_public, Found super ActiveRecord::Base
Snippet.public_and_internal, Found super ActiveRecord::Base
Snippet.fresh, Found super ActiveRecord::Base
Snippet.link_reference_pattern, Found super ActiveRecord::Base
Todo.pending, Found super ActiveRecord::Base
Todo.done, Found super ActiveRecord::Base
Upload.with_files_stored_locally, Found super ActiveRecord::Base
User.admins, Found super ActiveRecord::Base
User.blocked, Found super ActiveRecord::Base
User.external, Found super ActiveRecord::Base
User.active, Found super ActiveRecord::Base
User.without_projects, Found super ActiveRecord::Base
User.todo_authors, Found super ActiveRecord::Base
User.order_recent_sign_in, Found super ActiveRecord::Base
User.order_oldest_sign_in, Found super ActiveRecord::Base
User.authorized_projects, Found super ActiveRecord::Base
AnalyticsGenericSerializer.represent, Found super BaseSerializer
WithPagination.represent, Found super 
WithPagination.represent, Found super 
ContainerTagsSerializer.represent, Found super BaseSerializer
EnvironmentSerializer.represent, Found super BaseSerializer
EnvironmentSerializer.represent, Found super BaseSerializer
GroupChildSerializer.represent, Found super BaseSerializer
IssueSerializer.represent, Found super BaseSerializer
MergeRequestSerializer.represent, Found super BaseSerializer
PipelineSerializer.represent, Found super BaseSerializer
PipelineSerializer.represent, Found super BaseSerializer
Boards::Issues::CreateService.initialize, Found super 
CreateBranchService.success, Found super BaseService
CreateReleaseService.success, Found super BaseService
DeleteBranchService.error, Found super BaseService
DeleteBranchService.success, Found super BaseService
MergeRequests::CreateFromIssueService.initialize, Found super 
MergeRequests::CreateFromIssueService.success, Found super 
Search::GroupService.initialize, Found super 
Tags::DestroyService.error, Found super 
Tags::DestroyService.success, Found super 
UpdateReleaseService.success, Found super BaseService
UpdateSnippetService.initialize, Found super BaseService
FileUploader.initialize, Found super GitlabUploader
GitlabUploader.initialize, Found super CarrierWave::Uploader::Base
UrlPlaceholderValidator.validate_each, Found super UrlValidator
WaitableWorker::ClassMethods.perform, Found super 
ObjectStorage::MigrateUploadsWorker::Upload.stored_locally, Found super ActiveRecord::Base
ObjectStorage::MigrateUploadsWorker::Upload.stored_remotely, Found super ActiveRecord::Base
ObjectStorage::MigrateUploadsWorker::Report::MigrationFailures.stored_locally, Found super 
ObjectStorage::MigrateUploadsWorker::Report::MigrationFailures.stored_remotely, Found super 
retrieve_func_calls: 1738.124508
CALLS: ["new", "user_id", "id", "params", "fetch", "form_errors", "hidden_field", "label", "user", "name", "user", "username", "label", "sanitize", "text_area", "submit"]
CALLS: ["akismet_enabled?", "text", "owner", "name", "owner", "email", "akismet_client", "options", "options", "public_send", "logger", "error"]
CALLS: []
CALLS: ["", "merge"]
CALLS: ["author_id", "created_at", "update!"]
CALLS: ["version", "date"]
CALLS: ["persisted?", "version"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["raw_repository", "target_branch", "update", "merge", "with_cache_hooks"]
CALLS: ["change_state", "change_subscription", "change_todo", "toggle_award", "filter_params", "associations_before_update", "params", "label_ids", "process_label_ids", "label_ids", "labels_changing?", "params", "changed?", "params", "present?", "params", "current_user", "merge", "assign_attributes", "has_title_or_description_changed?", "now", "current_user", "assign_attributes", "before_update", "project", "update_project_counter_caches?", "save", "with_transaction_returning_status", "project", "current_user", "new", "execute", "no_touching", "handle_changes", "assignees", "to_a", "compact", "invalidate_cache_counts", "after_update", "current_user", "create_new_cross_references!", "execute_hooks", "update_project_counter_caches"]
CALLS: ["move", "update_markdown", "uploader", "record_upload", "uploader", "schedule_background_upload"]
CALLS: ["model", "file", "file", "exists?", "transaction_begin", "uploads", "upload_path", "where", "delete_all", "upload", "upload", "destroy!", "upload", "build_upload", "tap", "transaction_end", "transaction"]
CALLS: ["class", "to_s", "file", "size", "upload_path", "model", "mounted_as", "new"]
CALLS: ["success?", "upload", "id", "error", "message"]
CALLS: ["errors", "map", "join"]
CALLS: ["error", "nil?"]
CALLS: ["error", "nil?"]
CALLS: ["version", "try"]
CALLS: ["user_combined_name", "action", "wiki_page_link", "project_link", "title"]
CALLS: ["create?", "remove?"]
CALLS: ["revision_after", "blank_ref?"]
CALLS: ["fetch"]
CALLS: ["revision_before", "blank_ref?"]
CALLS: ["fetch"]
CALLS: ["params", "params"]
CALLS: ["environment_options"]
CALLS: ["job", "options", "dig"]
CALLS: ["project", "builds", "params", "find"]
CALLS: ["pipeline", "builds", "name", "where"]
CALLS: ["actual_head_pipeline"]
CALLS: ["head_pipeline", "sha", "diff_head_sha", "head_pipeline"]
CALLS: ["build", "sha"]
CALLS: ["build", "group", "tap"]
CALLS: ["params", "present?", "params", "find_by", "current_user", "can?"]
CALLS: ["allowed?"]
CALLS: ["is_a?", "policy_for", "can?", "user_scope", "can?", "subject_scope", "can?"]
CALLS: ["includes"]
CALLS: ["includes"]
CALLS: ["active?", "policy_for"]
CALLS: ["revoked?", "expired?"]
CALLS: ["domain", "enabled_until", "domain", "enabled_until", "now"]
CALLS: ["pages_domains", "params", "to_s", "find_by!"]
CALLS: ["skip_cross_project_check"]
CALLS: ["should_skip_cross_project_check", "should_skip_cross_project_check"]
CALLS: ["execute", "find_by!"]
CALLS: ["x509", "new", "x509", "not_before", "x509", "not_after"]
CALLS: ["certificate", "certificate", "new"]
CALLS: ["action"]
CALLS: ["due_date", "due_date", "past?"]
CALLS: ["due_date", "first", "due_date", "all?", "first", "due_date"]
CALLS: ["expires?", "expires_at", "current"]
CALLS: ["read_attribute", "date"]
CALLS: ["due_date", "due_date", "past?", "due_date", "to_s", "due_date", "to_s"]
CALLS: ["expires_at", "present?"]
CALLS: ["cache", "cache_expires_in", "current_and_future_messages", "to_a", "fetch", "empty?", "select", "empty?", "cache", "delete", "select"]
CALLS: ["wiki", "delete_page"]
CALLS: ["wiki", "path", "title", "commit_details", "delete_page", "update_project_activity"]
CALLS: ["touch"]
CALLS: ["touch_noteable"]
CALLS: ["for_commit?", "association", "loaded?", "noteable", "scope", "select", "take", "touch"]
CALLS: ["params", "delete"]
CALLS: ["params", "delete"]
CALLS: ["params", "delete"]
CALLS: ["params", "params", "process_scope"]
CALLS: ["split", "split", "process_registry_access", "new", "process_repository_access"]
CALLS: ["valid?", "repository_project", "can_access?", "select", "present?", "ensure_container_repository!", "to_s"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["container_registry_enabled?", "build_can_pull?", "user_can_pull?", "deploy_token_can_pull?", "build_can_push?", "user_can_push?", "user_can_admin?"]
CALLS: ["has_authentication_ability?", "can_user?"]
CALLS: ["to_a", "include?"]
CALLS: ["current_user", "is_a?", "current_user", "can?"]
CALLS: ["authentication_abilities", "include?"]
CALLS: ["has_authentication_ability?", "project"]
CALLS: ["has_authentication_ability?", "current_user", "is_a?", "current_user", "has_access_to?", "current_user", "read_registry?"]
CALLS: ["active?", "project"]
CALLS: ["deploy_keys_project_for", "present?"]
CALLS: ["deploy_keys_projects", "find_by"]
CALLS: ["has_authentication_ability?", "can_user?"]
CALLS: ["has_authentication_ability?", "can_user?"]
CALLS: ["has_authentication_ability?", "project", "can_user?"]
CALLS: ["config", "registry", "enabled", "current_user", "can?"]
CALLS: ["config", "registry"]
CALLS: []
CALLS: ["", "where"]
CALLS: ["", "now", "where"]
CALLS: ["path", "full_access_token", "config", "registry", "api_url", "config", "registry", "host_port", "new"]
CALLS: ["flatten", "config", "registry", "key", "new", "issuer", "issuer", "audience", "expire_time", "token_expire_at", "map", "encoded"]
CALLS: ["now", "container_registry_token_expire_delay", "minutes"]
CALLS: ["", "where"]
CALLS: ["has_repository?", "include?", "create_from_path!"]
CALLS: ["build_from_path", "tap"]
CALLS: ["repository_project", "repository_name", "new"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["project_id", "target_id", "target_type"]
CALLS: ["id"]
CALLS: ["id"]
CALLS: ["project", "id"]
CALLS: []
CALLS: ["project"]
CALLS: ["teamcity_url", "build_type", "username", "password"]
CALLS: []
CALLS: []
CALLS: []
CALLS: ["project_url", "issues_url", "new_issue_url"]
CALLS: ["url"]
CALLS: ["domain", "certificate", "present?", "domain", "domain"]
CALLS: ["url"]
CALLS: ["project", "web_url"]
CALLS: ["url_helpers", "project_wiki_url"]
CALLS: ["url_helpers"]
CALLS: ["url_helpers", "project_url"]
CALLS: ["url_helpers", "group_canonical_url"]
CALLS: ["project", "new_project_issue_url"]
CALLS: ["project", "project_issues_url"]
CALLS: ["project", "web_url"]
CALLS: ["api_key", "user_key", "priority"]
CALLS: ["index", "length"]
CALLS: ["params", "present?", "params", "find_by", "render_404", "current_user", "params", "new", "execute", "params", "page", "current_user", "dashboard_snippets_path", "explore_snippets_path", "redirect_to", "snippets_path", "current_user"]
CALLS: ["message", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["properties", "properties", "present?", "properties"]
CALLS: []
CALLS: ["s_"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["properties", "properties", "present?", "properties"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["properties", "properties", "present?", "properties"]
CALLS: []
CALLS: []
CALLS: ["properties", "properties", "present?", "properties"]
CALLS: []
CALLS: []
CALLS: []
CALLS: ["route", "route", "name", "present?", "route", "name", "persisted?", "update_route", "build_full_name"]
CALLS: ["read_only?", "prepare_route", "route", "save"]
CALLS: ["sync_profile_from_provider?", "synced?"]
CALLS: ["provider", "sync_profile_from_provider?"]
CALLS: ["gcp?", "provider_gcp"]
CALLS: []
CALLS: []
CALLS: ["config_for"]
CALLS: ["read_attribute"]
CALLS: ["route", "build_route", "route", "path", "build_full_path", "route", "name", "build_full_name"]
CALLS: ["parent", "path", "parent", "full_path", "path", "path"]
CALLS: ["project"]
CALLS: ["username"]
CALLS: ["full_path"]
CALLS: ["group", "project"]
CALLS: ["active?", "persisted?", "uncached_full_path", "full_path_key", "uncached_full_path"]
CALLS: ["class", "name", "id"]
CALLS: ["route", "route", "path", "present?", "route", "path", "persisted?", "update_route", "build_full_path"]
CALLS: ["parent_id", "project", "parent_id", "commit_by", "strong_memoize"]
CALLS: ["key?", "find_commit"]
CALLS: ["is_a?", "raw_repository", "find", "new"]
CALLS: ["repository", "commit_by"]
CALLS: ["repository"]
CALLS: ["full_path", "disk_path", "new"]
CALLS: ["project", "full_path"]
CALLS: ["disk_hash", "base_dir", "disk_hash"]
CALLS: ["options", "base_dir", "model_path_segment", "join"]
CALLS: ["class", "to_s", "underscore", "id", "to_s", "join"]
CALLS: ["id", "to_s", "join"]
CALLS: ["disk_path", "hashed_storage?", "disk_path", "full_path"]
CALLS: ["include?", "storage_version", "storage_version"]
CALLS: []
CALLS: ["options", "base_dir", "model_path_segment", "join"]
CALLS: ["model", "project_id", "to_s", "hexdigest"]
CALLS: ["file", "hexdigest"]
CALLS: ["file", "hexdigest"]
CALLS: ["file", "hexdigest"]
CALLS: ["hexdigest"]
CALLS: ["hexdigest"]
CALLS: ["options", "fetch"]
CALLS: ["class", "object_store", "base_dir"]
CALLS: ["model"]
CALLS: ["model", "store_serialization_column", "try"]
CALLS: ["serialization_column", "compact", "join", "to_sym"]
CALLS: ["class", "model", "class", "mounted_as", "serialization_column"]
CALLS: ["namespace", "full_path"]
CALLS: ["project", "id", "project", "id", "to_s", "hexdigest"]
CALLS: ["disk_hash", "disk_hash", "disk_hash"]
CALLS: ["project", "disk_path"]
CALLS: ["full_path", "disk_path", "new"]
CALLS: ["project", "repository"]
CALLS: []
CALLS: []
CALLS: ["wiki?", "project", "wiki", "repository", "project", "repository"]
CALLS: ["parse_repo_path"]
CALLS: ["params", "params", "parse"]
CALLS: ["flat_map", "flat_map"]
CALLS: ["project", "repository"]
CALLS: ["group", "project"]
CALLS: []
CALLS: []
CALLS: ["group?", "group", "project", "strong_memoize"]
CALLS: ["params", "present?"]
CALLS: ["instance_variable_defined?"]
CALLS: ["parent", "name", "parent", "human_name", "name", "name"]
CALLS: ["owner_name"]
CALLS: ["full_name"]
CALLS: ["full_title", "length", "safe_message", "safe_message", "split", "try"]
CALLS: ["safe_message", "blank?", "no_commit_message", "safe_message", "split", "first"]
CALLS: ["group", "group", "group_title", "namespace", "owner", "name", "simple_sanitize", "user_path", "link_to", "project_path", "avatar_url", "env", "test?", "name", "project_icon", "name", "simple_sanitize", "content_tag", "html_safe", "group", "breadcrumb_list_item", "html_safe"]
CALLS: ["helpers", "content_tag"]
CALLS: ["new", "email", "username", "execute"]
CALLS: ["avatar_in_git", "url_helpers", "project_avatar_url"]
CALLS: ["repository", "avatar"]
CALLS: ["file_on_head", "path", "allow_n_plus_1_calls"]
CALLS: ["tree", "blobs", "path", "type_of", "find"]
CALLS: ["select"]
CALLS: ["head_commit", "nil?", "head_tree", "head_commit", "sha", "new"]
CALLS: ["head_commit", "head_commit", "sha", "new"]
CALLS: ["root_ref", "commit"]
CALLS: ["params", "merge_request", "merge_commit_message", "merge_jid", "log_info", "repository", "current_user", "source", "merge_request", "merge", "merge_jid", "log_info", "merge_request", "update", "message", "message", "merge_request", "update"]
CALLS: ["diff_head_sha"]
CALLS: ["logger", "merge_request_info", "info"]
CALLS: ["merge_request", "to_reference"]
CALLS: ["class", "reference_prefix", "username"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["reference_prefix"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["class", "reference_prefix", "id", "project", "present?", "project", "to_reference"]
CALLS: ["to_reference"]
CALLS: ["cross_namespace_reference?", "full_path", "cross_project_reference?", "path"]
CALLS: ["is_a?"]
CALLS: ["namespace", "namespace", "namespace"]
CALLS: ["milestone_format_reference", "class", "reference_prefix", "project", "project", "to_reference"]
CALLS: ["include?", "group_milestone?", "name", "include?", "iid"]
CALLS: ["group_id", "present?"]
CALLS: ["to_s"]
CALLS: []
CALLS: ["class", "reference_prefix", "iid", "project", "to_reference"]
CALLS: ["label_format_reference", "class", "reference_prefix", "to_reference"]
CALLS: ["include?", "name", "include?", "id"]
CALLS: ["class", "reference_prefix", "iid", "project", "to_reference"]
CALLS: ["class", "reference_prefix", "full_path"]
CALLS: ["reference_link_text"]
CALLS: ["title"]
CALLS: ["id", "id", "id"]
CALLS: ["to_reference"]
CALLS: ["project", "to_reference", "ref_from", "notation", "ref_to", "present?", "class", "reference_prefix"]
CALLS: ["short_id", "commit_reference"]
CALLS: ["project", "to_reference", "present?", "class", "reference_prefix"]
CALLS: ["short_id"]
CALLS: []
CALLS: ["project", "to_reference", "present?", "class", "reference_prefix", "id", "id"]
CALLS: ["id", "commit_reference"]
CALLS: ["project", "current_user", "merge_request_params", "new", "execute"]
CALLS: ["project", "id", "branch_name", "project", "id", "ref", "issue", "milestone_id"]
CALLS: ["fetch"]
CALLS: ["build", "ref"]
CALLS: ["project", "default_branch"]
CALLS: ["wiki", "class", "default_ref"]
CALLS: ["repository", "exists?", "repository", "root_ref"]
CALLS: ["issue", "to_branch_name"]
CALLS: ["confidential?", "iid", "iid", "title", "parameterize"]
CALLS: ["noteable", "try"]
CALLS: ["current_user", "project", "id", "new", "find_by"]
CALLS: ["target_project", "issue_iid", "current_user", "get_issue"]
CALLS: ["merge_request", "target_project"]
CALLS: ["target_project", "external_issue_tracker", "source_branch", "target_project", "external_issue_reference_pattern", "match", "try", "source_branch", "match", "try", "strong_memoize"]
CALLS: ["has_external_issue_tracker", "nil?", "cache_has_external_issue_tracker", "has_external_issue_tracker?", "services", "external_issue_trackers", "first"]
CALLS: ["", "issue_trackers", "active", "without_defaults"]
CALLS: ["", "with_state", "non_internal"]
CALLS: ["internal_attributes", "map", "join", "where"]
CALLS: []
CALLS: ["", "where"]
CALLS: ["", "where"]
CALLS: ["", "where"]
CALLS: ["", "joins", "order"]
CALLS: ["nulls_last_order", "reorder", "order"]
CALLS: ["", "where"]
CALLS: ["", "with_state"]
CALLS: ["", "arel_table", "eq", "arel_table", "not_eq", "and", "arel_table", "eq", "new", "or", "left_join_users", "where", "where", "reorder"]
CALLS: ["arel_table", "arel_table", "join", "eq", "on", "join_sources", "joins"]
CALLS: ["", "where"]
CALLS: ["", "where"]
CALLS: ["", "where"]
CALLS: ["read_write?", "services", "external_issue_trackers", "any?", "update_column"]
CALLS: ["from_services"]
CALLS: ["external_issue_tracker", "class", "issues_enabled?", "reference_pattern"]
CALLS: ["reference_prefix", "escape"]
CALLS: ["reference_pattern", "reference_prefix", "escape"]
CALLS: []
CALLS: ["reference_prefix"]
CALLS: ["issues_access_level"]
CALLS: []
CALLS: ["reference_pattern", "reference_prefix", "escape"]
CALLS: ["reference_pattern", "reference_prefix", "escape"]
CALLS: ["reference_pattern", "reference_prefix", "escape"]
CALLS: ["reference_pattern", "reference_prefix", "escape"]
CALLS: ["reference_pattern"]
CALLS: ["reference_pattern"]
CALLS: ["__method__"]
CALLS: ["reference_pattern", "reference_pattern", "union"]
CALLS: ["find_union", "with_route"]
CALLS: ["", "includes"]
CALLS: ["length", "select", "map", "new", "table_name", "to_sql", "where", "first"]
CALLS: ["one?", "first", "find_union"]
CALLS: ["reference_pattern", "reference_prefix"]
CALLS: ["reference_pattern", "reference_prefix"]
CALLS: ["params", "presence"]
CALLS: ["issues_enabled?", "id", "new", "find_by", "external_issue_tracker", "new"]
CALLS: ["params", "ref_name"]
CALLS: ["push_event_payload", "ref"]
CALLS: ["issue?", "target"]
CALLS: ["note", "noteable"]
CALLS: ["note?", "target"]
CALLS: ["target", "is_a?"]
CALLS: ["snippet", "notes", "params", "find"]
CALLS: ["none"]
CALLS: ["project", "notes", "id", "for_commit_id"]
CALLS: ["", "where"]
CALLS: ["project", "notes", "sha", "for_commit_id"]
CALLS: ["params", "find_by"]
CALLS: ["params", "find_by"]
CALLS: ["snippets", "params", "find"]
CALLS: ["load_snippets", "html", "view_to_html_string", "json", "respond_to"]
CALLS: ["current_user", "user", "params", "new", "execute", "params", "page"]
CALLS: ["render_to_string"]
CALLS: ["notes", "params", "find"]
CALLS: []
CALLS: ["for_commit?", "project", "commit_id", "commit"]
CALLS: ["commit_to", "commit_from"]
CALLS: ["target_type"]
CALLS: ["allowed?", "commit", "noteables_for_type", "find"]
CALLS: ["id", "new", "execute", "id", "new", "execute", "new", "execute", "all"]
CALLS: ["params", "downcase", "current_user", "id", "new", "params", "find_by", "current_user", "id", "new", "params", "find_by", "params", "commit"]
CALLS: ["params", "try"]
CALLS: ["issues", "params", "where", "reorder", "take!", "notes", "new", "current_user", "can?", "render_404"]
CALLS: ["current_user", "project", "id", "new", "execute", "select"]
CALLS: ["milestoneish_ids", "of_milestones", "includes"]
CALLS: ["id"]
CALLS: ["milestones", "select"]
CALLS: ["id", "group", "group", "id", "new", "execute", "select"]
CALLS: ["milestones?", "project?", "project", "group", "id", "project", "id", "group", "group", "id", "params", "new", "execute", "none"]
CALLS: ["object", "is_a?"]
CALLS: ["params", "present?"]
CALLS: ["params", "present?"]
CALLS: ["params", "present?"]
CALLS: ["params", "present?"]
CALLS: ["search_params", "new", "execute"]
CALLS: ["group", "current_user", "group", "can?", "group", "params", "permit", "id", "id", "merge"]
CALLS: ["params", "permit", "group", "id", "merge"]
CALLS: ["milestones", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["search_params", "new", "execute", "group", "group_projects", "params", "build_collection", "params", "sort"]
CALLS: ["build_collection", "group", "each"]
CALLS: ["members", "current_user", "present", "each"]
CALLS: ["fetch_members"]
CALLS: ["project", "authorized_users", "where"]
CALLS: ["attributes", "new", "fabricate!"]
CALLS: ["attributes_before_markdown_cache", "delete", "cached_markdown_fields", "html_fields", "delete", "each"]
CALLS: ["markdown_fields", "html_field", "map"]
CALLS: []
CALLS: ["keys"]
CALLS: ["user", "keys", "order_id_desc", "name", "name", "blocked?", "internal?", "admin", "current_user", "can?", "impersonate_admin_user_path", "edit_admin_user_path", "admin_user_path", "nav_link", "projects_admin_user_path", "nav_link", "keys_admin_user_path", "nav_link", "admin_user_identities_path", "nav_link", "admin_user_impersonation_tokens_path", "nav_link", "admin_root_path"]
CALLS: ["class", "internal_attributes", "any?"]
CALLS: []
CALLS: ["", "reorder"]
CALLS: ["status"]
CALLS: ["all", "status_sql", "pluck", "first"]
CALLS: ["respond_to?", "exclude_ignored", "all", "respond_to?", "failed_but_allowed", "none", "select", "to_sql", "created", "select", "to_sql", "success", "select", "to_sql", "manual", "select", "to_sql", "pending", "select", "to_sql", "running", "select", "to_sql", "skipped", "select", "to_sql", "canceled", "select", "to_sql", "select", "to_sql", "presence"]
CALLS: ["success", "merge"]
CALLS: ["", "merge"]
CALLS: ["success", "delete_artifact!"]
CALLS: ["build", "reload", "build", "has_expiring_artifacts?", "build", "erase_artifacts!"]
CALLS: ["artifacts_expire_at", "present?", "artifacts_expire_at", "now"]
CALLS: ["remove_artifacts_file!", "remove_artifacts_metadata!", "save"]
CALLS: ["job_artifacts_metadata", "job_artifacts_metadata", "destroy", "remove_legacy_artifacts_metadata!"]
CALLS: ["current_user", "can?", "access_denied!", "destroy", "snippets_path", "snippets_path", "current_user"]
CALLS: ["any", "html", "respond_to"]
CALLS: ["current_user", "username", "request", "remote_ip", "info", "flash"]
CALLS: ["options", "fetch"]
CALLS: ["", "where", "not"]
CALLS: ["destroy_confirmation_valid?", "current_user", "current_user", "delete_async", "session", "try", "new_user_session_path", "s_", "profile_account_path", "destroy_confirmation_failure_message"]
CALLS: ["block", "id", "id", "perform_async"]
CALLS: ["block", "update_user", "redirect_back_or_admin_user", "redirect_back_or_admin_user", "admin_root_path"]
CALLS: ["current_user", "user", "new", "execute"]
CALLS: ["default_route", "redirect_back_or_default"]
CALLS: ["root_path", "request", "referer", "present?"]
CALLS: []
CALLS: ["current_user", "confirm_deletion_with_password?", "s_", "s_"]
CALLS: ["password_automatically_set?", "allow_password_authentication?"]
CALLS: ["allow_password_authentication_for_web?", "allow_password_authentication_for_git?"]
CALLS: ["password_authentication_enabled_for_git?", "ldap_user?"]
CALLS: ["identities", "loaded?", "identities", "provider", "ldap_provider?", "extern_uid", "nil?", "find", "identities", "exists?"]
CALLS: ["password_authentication_enabled_for_web?", "ldap_user?"]
CALLS: ["current_user", "confirm_deletion_with_password?", "current_user", "params", "valid_password?", "current_user", "username", "params"]
CALLS: ["current_user", "can?", "access_denied!", "current_user", "new", "async_execute", "flash", "_", "full_name", "dashboard_projects_path", "edit_project_path", "message", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["hook", "id", "data", "hook_name", "perform_async"]
CALLS: ["snippet", "content"]
CALLS: ["text_data"]
CALLS: []
CALLS: ["path"]
CALLS: ["binary?", "encode"]
CALLS: ["binary"]
CALLS: []
CALLS: ["binary"]
CALLS: ["hooks", "params", "find"]
CALLS: ["hooks", "params", "find"]
CALLS: ["params", "find"]
CALLS: ["params", "find"]
CALLS: ["project", "update_attribute", "project", "id", "current_user", "id", "params", "perform_async", "logger", "current_user", "id", "project", "full_path", "info"]
CALLS: ["group", "id", "current_user", "id", "perform_async", "logger", "current_user", "id", "group", "id", "info"]
CALLS: ["project", "id", "current_user", "id", "perform_async"]
CALLS: ["supported_events", "include?", "id", "perform_async"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["new", "async_execute"]
CALLS: ["params", "find_page", "current_user", "new", "execute", "project_wiki_path", "fluid_layout", "_", "title", "capitalize", "_", "wiki_page_errors", "icon", "persisted?", "title", "capitalize", "project_wiki_path", "title", "capitalize", "persisted?", "s_", "s_", "current_user", "can?", "s_", "persisted?", "project_wiki_history_path", "s_", "current_user", "can?", "project_wiki_path", "s_", "_", "persisted?", "s_", "s_", "title", "namespace", "becomes", "persisted?", "form_errors", "persisted?", "last_commit_sha", "hidden_field", "label", "title", "text_field", "persisted?", "icon", "s_", "icon", "help_page_path", "label", "format", "options_for_select", "select", "label", "slug", "project_wiki_preview_markdown_path", "s_", "slug", "project_wiki_preview_markdown_path", "s_", "html_safe", "s_", "help_page_path", "s_", "html_safe", "label", "text_field", "persisted?", "_", "submit", "_", "project_wiki_path", "s_", "submit", "_", "project_wiki_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["last_version", "sha"]
CALLS: ["versions", "first"]
CALLS: ["persisted?", "wiki", "wiki", "path", "page_versions"]
CALLS: []
CALLS: ["present?", "wiki", "wiki", "title", "format", "preview_slug"]
CALLS: ["page_title_and_dir", "wiki", "page", "new"]
CALLS: ["split", "pop", "join"]
CALLS: ["format"]
CALLS: ["format"]
CALLS: ["format"]
CALLS: ["commit_shas", "first"]
CALLS: ["merge_request_diff_commits", "map"]
CALLS: ["persisted?", "merge_request_diff", "commit_shas", "compare_commits", "compare_commits", "to_a", "reverse", "map", "diff_head_sha"]
CALLS: ["empty?", "association", "loaded?", "latest_merge_request_diff"]
CALLS: ["presence", "generate_slug"]
CALLS: ["name", "to_s", "downcase", "gsub", "cover?", "gsub!", "end_with?", "chop!", "name", "end_with?", "random_suffix", "slug"]
CALLS: ["sample", "map", "join"]
CALLS: ["s_", "project_wiki_path", "s_", "html_safe", "concat", "s_", "message", "content_tag"]
CALLS: ["current_user", "current_user", "layout"]
CALLS: ["keys", "empty?", "include?", "fa_stacked_icon", "fa_icon"]
CALLS: ["trigger", "destroy", "flash", "flash", "project_settings_ci_cd_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["success?", "merge_when_pipeline_succeeds?", "mergeable?", "todo_service", "merge_request_became_unmergeable", "merge_user_id", "merge_params", "merge_async", "pipeline_merge_requests"]
CALLS: ["merge_when_pipeline_succeeds?", "merge_user", "create_unmergeable_todo"]
CALLS: ["project", "attributes_for_todo", "create_todos"]
CALLS: ["attributes_for_target", "id", "id", "merge!"]
CALLS: ["project", "id", "id", "class", "name", "is_a?", "id", "merge!"]
CALLS: ["merge_when_pipeline_succeeds_active?", "mergeable?", "params", "diff_head_sha", "update", "params", "present?", "actual_head_pipeline", "actual_head_pipeline", "active?", "current_user", "merge_params", "new", "execute", "actual_head_pipeline", "success?", "current_user", "id", "params", "merge_async", "current_user", "id", "params", "merge_async"]
CALLS: ["params", "present?", "head_pipeline", "head_pipeline", "active?"]
CALLS: ["pending_todos", "exists?", "id", "merge", "create", "update_todos_count_cache", "map"]
CALLS: ["request", "spammable", "request", "env", "request", "env", "to_s", "create_user_agent_detail"]
CALLS: ["class", "__method__"]
CALLS: ["todos", "pending", "slice", "where"]
CALLS: ["params", "new", "params", "new", "verify_params!", "params", "access_levels", "access_levels", "new", "execute"]
CALLS: []
CALLS: ["ce_style_access_level"]
CALLS: ["params", "type"]
CALLS: ["object", "class", "name", "downcase"]
CALLS: ["params"]
CALLS: ["sym_options_with_owner"]
CALLS: ["sym_options"]
CALLS: []
CALLS: ["handle_quick_actions_on_create", "filter_params", "params", "delete", "params", "current_user", "params", "process_label_ids", "params", "assign_attributes", "before_create", "params", "present?", "params", "create_issuable", "after_create", "execute_hooks", "assignees", "invalidate_cache_counts", "update_project_counter_caches"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["handle_wip_event"]
CALLS: ["params", "delete", "params", "title", "params", "wip_title", "wipless_title"]
CALLS: ["class", "title", "wip_title"]
CALLS: ["class", "title", "wipless_title"]
CALLS: ["todo_service", "current_user", "new_merge_request", "current_user", "cache_merge_request_closes_issues!", "update_merge_requests_head_pipeline"]
CALLS: ["new_issuable"]
CALLS: ["create_assignment_todo", "project", "create_mention_todos"]
CALLS: ["filter_directly_addressed_users", "attributes_for_todo", "create_todos", "filter_mentioned_users", "attributes_for_todo", "create_todos"]
CALLS: ["directly_addressed_users", "filter_todo_users"]
CALLS: ["reject_users_without_access", "uniq"]
CALLS: ["is_a?", "for_issue?", "for_merge_request?", "noteable", "is_a?", "to_ability_name", "select_users", "select_users"]
CALLS: ["to_sym", "can?", "select"]
CALLS: ["for_personal_snippet?", "noteable_type", "underscore"]
CALLS: ["noteable", "is_a?"]
CALLS: ["noteable_type"]
CALLS: ["noteable_type"]
CALLS: ["class", "to_ability_name"]
CALLS: ["all_references", "directly_addressed_users"]
CALLS: ["extractors", "extractors", "project", "new", "reset_memoized_values", "class", "mentionable_attrs", "__send__", "author", "skip_project_check?", "merge", "analyze", "each"]
CALLS: ["for_project_noteable?"]
CALLS: ["for_personal_snippet?"]
CALLS: []
CALLS: []
CALLS: []
CALLS: ["author_email", "downcase", "find_by_any_email"]
CALLS: ["by_any_email", "take"]
CALLS: ["where", "joins", "where", "new", "to_sql", "table_name", "from"]
CALLS: ["author?", "params", "params", "find"]
CALLS: ["params", "present?"]
CALLS: ["author_id?", "params", "find_by", "author_username?", "params", "find_by"]
CALLS: ["params", "present?", "params"]
CALLS: ["params", "present?", "params"]
CALLS: ["mentioned_users", "filter_todo_users"]
CALLS: ["all_references", "users"]
CALLS: ["params", "current_user", "new", "execute", "new", "represent"]
CALLS: ["is_a?", "preload", "paginated?", "represent", "represent"]
CALLS: ["present?"]
CALLS: ["paginator", "present?"]
CALLS: ["subgroups", "projects", "with_route", "params", "new"]
CALLS: ["group", "none", "group", "full_path", "inside_path"]
CALLS: ["", "sanitize_sql_like", "where"]
CALLS: ["", "joins", "sanitize_sql_like", "where"]
CALLS: ["current_user", "new", "execute"]
CALLS: ["user", "authorized_projects"]
CALLS: ["", "where"]
CALLS: ["milestoneish_ids", "for_milestones"]
CALLS: ["", "joins", "where", "distinct"]
CALLS: ["except"]
CALLS: ["target_user", "project_interactions", "joins", "current_user", "where", "select", "target_user", "project_interactions", "where", "select", "new", "to_sql"]
CALLS: ["skip_authorization", "all", "current_user", "new", "execute", "group?", "params", "in_namespace", "projects?", "params", "where", "reorder"]
CALLS: ["", "where"]
CALLS: ["params"]
CALLS: ["project?", "project", "current_user", "params", "presence", "current_user_related?", "current_user", "authorized_projects", "group", "params", "group", "current_user", "new", "execute", "current_user", "item_project_ids", "new", "execute", "klass", "current_user", "with_feature_available_for_user", "reorder"]
CALLS: ["admin?", "with_feature_enabled", "quoted_access_level_column", "with_project_feature", "authorizations_for_projects", "where", "with_feature_access_level"]
CALLS: ["project_authorizations", "select", "where"]
CALLS: ["connection", "access_level_attribute", "quote_column_name", "connection", "table_name", "quote_table_name"]
CALLS: ["respond_to?", "model_name", "plural", "to_sym", "include?", "to_sym"]
CALLS: ["new"]
CALLS: ["new"]
CALLS: ["new"]
CALLS: ["new"]
CALLS: ["", "access_level_attribute", "with_project_feature", "where"]
CALLS: ["", "access_level_attribute", "with_project_feature", "where"]
CALLS: ["", "joins"]
CALLS: ["reorder", "select"]
CALLS: []
CALLS: ["reorder", "select"]
CALLS: ["includes"]
CALLS: ["params", "params", "params"]
CALLS: ["params", "projects_matching_filter", "direct_child_projects", "with_route", "sort", "order_by"]
CALLS: ["to_s", "order_created_asc", "order_created_desc", "order_created_desc", "order_id_asc", "order_id_desc", "order_name_asc", "order_name_desc", "order_updated_asc", "order_updated_desc", "all"]
CALLS: ["", "left_join_users", "nulls_last_order", "reorder"]
CALLS: ["", "left_join_users", "nulls_last_order", "reorder"]
CALLS: ["", "reorder"]
CALLS: ["", "reorder"]
CALLS: ["", "reorder"]
CALLS: ["", "reorder"]
CALLS: ["", "reorder"]
CALLS: ["", "reorder"]
CALLS: ["", "reorder"]
CALLS: ["include?", "include?", "reverse!", "tap", "first", "public_send", "second", "public_send", "in?", "casecmp", "sort"]
CALLS: ["hierarchy_for_parent", "base_and_descendants", "select", "where", "params", "params", "merge", "current_user", "new", "execute"]
CALLS: ["parent_group", "id", "where", "new"]
CALLS: ["parent_group", "current_user", "params", "new", "execute"]
CALLS: ["supports_nested_groups?", "none", "params", "subgroups_matching_filter", "direct_child_groups", "params", "with_selects_for_list", "sort", "order_by"]
CALLS: ["postgresql?"]
CALLS: ["with_route", "with_counts"]
CALLS: ["project_count_sql", "to_sql", "member_count_sql", "to_sql", "subgroup_count_sql", "to_sql", "select"]
CALLS: ["arel_table", "arel_table", "star", "count", "as", "project", "name", "eq", "where", "eq", "where", "eq", "where"]
CALLS: ["cache", "cache_key", "cache_options", "uncached_count", "fetch", "to_i"]
CALLS: ["user", "id"]
CALLS: ["id", "cache_key_name"]
CALLS: []
CALLS: []
CALLS: []
CALLS: ["raise"]
CALLS: ["raw?"]
CALLS: []
CALLS: []
CALLS: []
CALLS: ["relation_for_count", "count"]
CALLS: ["user", "keys"]
CALLS: ["merge_requests", "opened"]
CALLS: ["merge_requests", "map"]
CALLS: ["current_user", "project", "id", "new", "execute", "select"]
CALLS: ["milestoneish_ids", "of_milestones", "includes"]
CALLS: ["projects", "where"]
CALLS: ["", "with_state"]
CALLS: ["project", "merge_requests", "sha", "by_commit_sha"]
CALLS: ["", "joins", "where", "reorder"]
CALLS: ["", "select", "where", "by_commit_sha", "where", "reorder"]
CALLS: ["merge_requests", "iid", "merge_request_path", "title", "map", "to_json", "json", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["class", "name"]
CALLS: ["project", "project_merge_request_path"]
CALLS: ["merge_requests", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["milestone_redirect_path", "html", "sorted_merge_requests", "tabs_json", "json", "respond_to"]
CALLS: ["merge_requests", "sort_by_attribute"]
CALLS: ["to_s", "order_recent_sign_in", "order_oldest_sign_in", "order_by"]
CALLS: ["", "nulls_last_order", "reorder"]
CALLS: ["", "nulls_last_order", "reorder"]
CALLS: ["", "left_join_users", "nulls_last_order", "reorder"]
CALLS: ["", "left_join_users", "nulls_last_order", "reorder"]
CALLS: ["to_s", "order_by_labels_priority", "order_by", "order"]
CALLS: ["highest_label_priority", "to_sql", "table_name", "select", "nulls_last_order", "order", "order"]
CALLS: ["arel_table", "minimum", "select", "left_join_priorities", "joins", "where", "where", "reorder", "where", "where", "present?", "where", "not"]
CALLS: ["arel_table", "arel_table", "join", "eq", "on", "join_sources", "joins"]
CALLS: ["to_s", "reorder", "reorder", "reorder", "order_by"]
CALLS: ["to_s", "nulls_last_order", "reorder", "nulls_last_order", "reorder", "nulls_last_order", "reorder", "nulls_last_order", "reorder", "order_by"]
CALLS: ["to_s", "reorder", "reorder", "order_recent_sign_in", "order_oldest_sign_in", "order_created_desc", "order_created_asc", "order_by"]
CALLS: ["to_s", "order_due_date_asc", "order_due_date_asc", "order_due_date_desc"]
CALLS: ["", "reorder"]
CALLS: ["", "reorder"]
CALLS: ["reorder", "order_by"]
CALLS: ["to_s", "order_downvotes_desc", "order_labels_priority", "order_milestone_due_asc", "order_milestone_due_asc", "order_milestone_due_desc", "order_upvotes_desc", "order_due_date_and_labels_priority", "order_upvotes_desc", "order_by", "order"]
CALLS: ["name", "table_name", "table_name", "project_foreign_key", "highest_label_priority", "to_sql", "table_name", "join", "select", "arel_table", "group", "nulls_last_order", "reorder"]
CALLS: []
CALLS: []
CALLS: ["order_milestone_due_asc", "order_labels_priority", "nulls_last_order", "nulls_last_order", "reorder"]
CALLS: ["", "left_joins_milestones", "reorder"]
CALLS: ["", "table_name", "joins"]
CALLS: ["", "left_joins_milestones", "reorder"]
CALLS: ["order_votes_desc"]
CALLS: ["arel_table", "arel_table", "join", "eq", "name", "eq", "eq", "and", "and", "on", "join_sources", "joins", "group", "reorder"]
CALLS: ["order_votes_desc"]
CALLS: ["project_milestone_path", "safe_title", "title", "group_milestone_path", "safe_title", "title", "dashboard_milestone_path"]
CALLS: ["title", "to_slug", "normalize", "to_s"]
CALLS: ["to_slug", "normalize", "to_s"]
CALLS: ["view_to_html_string"]
CALLS: ["issuables_collection", "params", "page", "collection_type", "issuable_meta_data"]
CALLS: ["finder"]
CALLS: ["current_user", "merge", "new"]
CALLS: ["finder_type", "issuable_finder_for", "strong_memoize"]
CALLS: []
CALLS: []
CALLS: []
CALLS: ["action_name"]
CALLS: ["action"]
CALLS: ["push?", "push_action_name", "closed?", "merged?", "joined?", "left?", "expired?", "destroyed?", "commented?", "created_project?", "created_project_action_name"]
CALLS: []
CALLS: ["state"]
CALLS: ["milestones", "state", "each"]
CALLS: ["project", "external_import?"]
CALLS: ["import_url", "present?"]
CALLS: ["import_data", "present?", "import_data", "credentials", "new", "full_url"]
CALLS: ["has_importer?", "project", "gitlab_project_import?", "project", "repository", "expire_content_cache", "importer", "execute"]
CALLS: ["importer_class", "project", "new"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["project", "import_type", "importer"]
CALLS: ["importer_names", "project", "import_type", "include?"]
CALLS: ["expire_tags_cache", "expire_branches_cache", "expire_root_ref_cache", "expire_emptiness_caches", "expire_exists_cache", "expire_statistics_caches"]
CALLS: ["expire_method_caches"]
CALLS: ["empty?", "expire_method_caches", "raw_repository", "expire_has_local_branches_cache"]
CALLS: ["expire_method_caches"]
CALLS: ["expire_method_caches"]
CALLS: ["expire_method_caches"]
CALLS: ["expire_method_caches"]
CALLS: ["import_type"]
CALLS: ["new", "create!"]
CALLS: ["session", "session", "session", "session"]
CALLS: ["new_ref?", "rm_ref?"]
CALLS: ["push_event_payload", "removed?"]
CALLS: ["push_event_payload", "created?"]
CALLS: ["action"]
CALLS: ["status_name"]
CALLS: ["provider", "provider", "status_name"]
CALLS: ["created?", "target", "target_type", "nil?"]
CALLS: ["action"]
CALLS: ["action"]
CALLS: ["action"]
CALLS: ["action"]
CALLS: ["action"]
CALLS: ["action"]
CALLS: []
CALLS: ["action_name"]
CALLS: ["current_user", "filter_params", "new"]
CALLS: ["user", "merge", "new"]
CALLS: ["params", "find"]
CALLS: ["finder", "execute", "preload_for_collection", "preload"]
CALLS: ["collection_type"]
CALLS: ["class", "id", "query"]
CALLS: ["opened", "public_only", "where"]
CALLS: ["", "where"]
CALLS: ["where"]
CALLS: ["raise"]
CALLS: []
CALLS: ["can_query?", "to_s", "classify", "const_get", "map!", "name", "method", "with_reactive_cache"]
CALLS: []
CALLS: ["cache", "full_reactive_cache_key", "read", "present?", "within_reactive_cache_lifetime", "cache", "alive_reactive_cache_key", "class", "reactive_cache_lifetime", "write", "class", "id", "perform_async"]
CALLS: ["cache", "alive_reactive_cache_key", "read"]
CALLS: ["full_reactive_cache_key"]
CALLS: ["class", "reactive_cache_key", "respond_to?", "call", "flatten", "join"]
CALLS: ["prometheus_client", "present?"]
CALLS: ["api_url", "manual_configuration?", "active?", "api_url", "new"]
CALLS: []
CALLS: ["kube_client", "kube_client", "service_name", "service_port", "proxy_url", "kube_client", "rest_client", "options", "kube_client", "headers", "merge", "new"]
CALLS: ["cluster", "kubeclient"]
CALLS: ["provider", "cluster"]
CALLS: ["params"]
CALLS: ["cluster", "kubeclient"]
CALLS: ["app", "cluster"]
CALLS: ["build_kubeclient!"]
CALLS: ["api_url", "username", "password", "join_api_url", "username", "password", "kubeclient_ssl_options", "new"]
CALLS: ["ca_pem", "present?", "new", "ca_pem", "new", "add_cert"]
CALLS: ["api_url", "parse", "path", "sub", "path", "join", "to_s"]
CALLS: ["api_url", "parse", "path", "sub", "path", "join", "to_s"]
CALLS: ["ca_pem", "present?", "new", "ca_pem", "new", "add_cert"]
CALLS: ["api_url", "parse", "path", "sub", "path", "join", "to_s"]
CALLS: ["ca_pem", "present?", "new", "ca_pem", "new", "add_cert"]
CALLS: ["api_url", "actual_namespace", "token", "join_api_url", "kubeclient_auth_options", "kubeclient_ssl_options", "new"]
CALLS: ["token"]
CALLS: ["namespace", "present?", "namespace", "default_namespace"]
CALLS: ["project", "project", "path", "project", "id", "downcase", "gsub", "gsub"]
CALLS: ["project", "project", "path", "project", "id", "downcase", "gsub", "gsub"]
CALLS: ["token"]
CALLS: ["namespace", "present?", "namespace", "default_namespace"]
CALLS: ["api_url", "actual_namespace", "username", "password", "token", "join_api_url", "kubeclient_auth_options", "kubeclient_ssl_options", "new"]
CALLS: ["build_kubeclient!"]
CALLS: ["kubernetes?", "platform_kubernetes", "kubeclient"]
CALLS: ["project", "clusters", "params", "find", "current_user", "present"]
CALLS: ["project", "clusters", "params", "find", "render_404"]
CALLS: []
CALLS: []
CALLS: ["raise"]
CALLS: ["class", "table_name", "id", "read_attribute_before_type_cast"]
CALLS: ["arel_table", "alias", "star", "count", "as", "project", "from", "eq", "where"]
CALLS: ["arel_table", "arel_table", "star", "count", "as", "project", "eq", "where", "eq", "where", "to_boolean", "not_eq", "where"]
CALLS: ["supports_nested_groups?"]
CALLS: ["all_visible_descendant_groups", "params", "search"]
CALLS: ["where", "ago", "where", "includes", "limit", "to_a", "empty?", "each", "loop"]
CALLS: ["blank?", "none", "downcase", "fuzzy_arel_match", "fuzzy_arel_match", "or", "arel_table", "eq", "or", "where", "connection", "quote", "reorder"]
CALLS: ["fuzzy_search"]
CALLS: ["fuzzy_search"]
CALLS: ["fuzzy_search"]
CALLS: ["fuzzy_search"]
CALLS: ["fuzzy_search"]
CALLS: ["joins", "search", "merge"]
CALLS: ["fuzzy_search"]
CALLS: ["fuzzy_search"]
CALLS: ["presence"]
CALLS: ["search"]
CALLS: ["params", "presence"]
CALLS: ["arel_table", "current_user", "levels_for_user", "in", "current_user", "current_user", "new", "execute", "as", "project", "from", "eq", "where", "exists", "or", "hierarchy_for_parent", "descendants", "where"]
CALLS: ["class", "id", "where", "new", "base_and_descendants"]
CALLS: ["params", "find_by_path_or_name"]
CALLS: ["downcase", "find_by"]
CALLS: ["presence"]
CALLS: ["current_user", "parent_group", "new", "execute"]
CALLS: ["load_projects", "html", "view_to_html_string", "json", "respond_to"]
CALLS: ["user", "new", "current_user", "execute", "params", "page", "prepare_projects_for_rendering"]
CALLS: ["preload_max_member_access_for_collection"]
CALLS: ["current_user", "blank?", "name", "underscore", "current_user", "ids", "public_send"]
CALLS: ["current_user", "params", "new", "execute", "includes", "params", "page", "without_count", "prepare_projects_for_rendering"]
CALLS: ["current_user", "new", "execute", "includes", "prepare_projects_for_rendering"]
CALLS: ["projects", "with_statistics", "params", "page", "name", "current_user", "id", "new_project_path", "visibility_level", "visibility_level_color", "visibility_level", "visibility_level_icon", "full_name", "archived", "statistics", "storage_size", "storage_counter", "project_project_members_path", "dom_id", "edit_project_path", "dom_id", "remove_project_message", "each", "blank?", "name", "page_description", "description", "header_title", "group_title", "current_user"]
CALLS: ["", "includes"]
CALLS: ["", "where"]
CALLS: ["", "joins", "group", "select"]
CALLS: []
CALLS: ["megabyte", "number_to_human_size"]
CALLS: ["_", "full_name"]
CALLS: ["icon"]
CALLS: ["current_user", "authorized_projects", "sorted_by_activity", "non_archived"]
CALLS: ["", "where"]
CALLS: ["", "reorder"]
CALLS: ["", "join_project", "where"]
CALLS: ["create_event"]
CALLS: ["transaction_begin", "event_service", "current_user", "reopen_mr", "merge_request_metrics_service", "reopen", "transaction_end", "transaction"]
CALLS: ["reopen_resource_email"]
CALLS: ["build_recipients", "mailer", "user", "id", "id", "id", "reason", "send", "deliver_later", "each"]
CALLS: []
CALLS: ["new", "notification_recipients"]
CALLS: ["build!", "filter!", "recipients", "reason", "priority", "sort_by", "uniq", "freeze"]
CALLS: ["delete", "build!"]
CALLS: []
CALLS: ["recipients", "select!"]
CALLS: ["note", "author", "add_participants", "note", "author", "note", "add_mentions", "note", "for_project_noteable?", "add_project_watchers", "add_custom_notifications", "add_subscribed_users"]
CALLS: ["target", "respond_to?", "target", "project", "subscribers", "add_recipients"]
CALLS: ["is_a?", "includes", "compact", "recipients", "make_recipient", "map", "concat"]
CALLS: ["project", "custom_action", "target", "acting_user", "new"]
CALLS: []
CALLS: ["note", "author"]
CALLS: ["action", "target", "class", "model_name", "name", "underscore", "to_sym"]
CALLS: ["skip_current_user", "current_user"]
CALLS: []
CALLS: ["current_user"]
CALLS: ["project", "custom_action", "target", "acting_user", "new"]
CALLS: ["is_a?", "includes", "compact", "recipients", "make_recipient", "map", "concat"]
CALLS: ["subscriptions_available", "where", "map"]
CALLS: ["arel_table", "subscriptions", "eq", "try", "eq", "or", "where"]
CALLS: ["project_watchers", "add_recipients"]
CALLS: ["project", "user_ids_notifiable_on", "project", "user_ids_notifiable_on", "project", "group", "user_ids_notifiable_on", "uniq", "user_ids_with_global_level_watch", "select_project_members_ids", "project", "group", "select_group_members_ids", "user_scope", "concat", "uniq", "where"]
CALLS: ["settings_with_global_level_of", "pluck"]
CALLS: ["levels", "where"]
CALLS: ["levels", "where"]
CALLS: ["user_ids_notifiable_on"]
CALLS: ["project", "user_ids_notifiable_on"]
CALLS: ["notification_settings", "levels", "where", "pluck"]
CALLS: ["settings_with_global_level_of", "pluck"]
CALLS: ["user_ids_notifiable_on"]
CALLS: ["project", "user_ids_notifiable_on"]
CALLS: ["notification_settings", "levels", "where", "pluck"]
CALLS: ["project", "user_ids_notifiable_on", "project", "user_ids_notifiable_on", "project", "group", "user_ids_notifiable_on", "uniq", "user_ids_with_global_level_watch", "select_project_members_ids", "project", "group", "select_group_members_ids", "user_scope", "concat", "uniq", "where"]
CALLS: ["project", "user_ids_notifiable_on", "project", "group", "user_ids_notifiable_on", "project", "user_ids_notifiable_on", "project", "group", "user_ids_notifiable_on", "concat", "custom_action", "user_ids_with_global_level_custom", "user_scope", "where", "add_recipients"]
CALLS: ["settings_with_global_level_of", "pluck"]
CALLS: ["settings_with_global_level_of", "pluck"]
CALLS: ["respond_to?", "mentioned_users", "add_recipients"]
CALLS: ["target", "respond_to?", "target", "participants", "add_recipients"]
CALLS: ["joins", "id", "where", "uniq"]
CALLS: ["milestones", "map", "flatten", "uniq"]
CALLS: ["all_participants"]
CALLS: ["raw_participants", "new"]
CALLS: ["author", "project", "new", "new", "empty?", "pop", "class", "participant_attrs", "respond_to?", "instance_exec", "__send__", "each", "reverse_each", "users", "merge", "to_a", "users_that_can_read_personal_snippet", "to_a", "project", "users_that_can_read_project"]
CALLS: ["allowed?", "select", "subject_scope"]
CALLS: ["allowed?", "select", "subject_scope"]
CALLS: ["milestone_redirect_path", "html", "participants", "tabs_json", "json", "respond_to"]
CALLS: ["target", "respond_to?", "target", "project", "subscribers", "add_recipients"]
CALLS: ["project_watchers", "add_recipients"]
CALLS: ["project", "user_ids_notifiable_on", "project", "group", "user_ids_notifiable_on", "project", "user_ids_notifiable_on", "project", "group", "user_ids_notifiable_on", "concat", "custom_action", "user_ids_with_global_level_custom", "user_scope", "where", "add_recipients"]
CALLS: ["respond_to?", "mentioned_users", "add_recipients"]
CALLS: ["target", "respond_to?", "target", "participants", "add_recipients"]
CALLS: ["current_user", "add_participants", "add_project_watchers", "add_custom_notifications", "custom_action", "previous_assignee", "add_recipients", "target", "assignee", "add_recipients", "previous_assignee", "add_recipients", "target", "assignees", "add_recipients", "add_subscribed_users", "custom_action", "include?", "current_user", "target", "add_mentions", "custom_action", "target", "assignees", "target", "assignee", "add_recipients", "add_labels_subscribers"]
CALLS: ["target", "respond_to?", "target", "labels", "project", "subscribers", "add_recipients", "each"]
CALLS: ["current_user", "project", "id", "new", "execute", "select", "respond_to?", "labels", "pluck", "as_json", "find", "each"]
CALLS: ["new", "current_user", "enabled_keys", "represent", "available_project_keys", "represent", "available_public_keys", "represent"]
CALLS: ["are_public", "includes", "enabled_keys", "available_project_keys"]
CALLS: ["", "where"]
CALLS: ["", "where"]
CALLS: ["current_user", "project_deploy_keys", "includes", "enabled_keys"]
CALLS: ["unscoped", "authorized_projects", "pluck", "in_projects", "distinct"]
CALLS: ["unscoped", "where", "select", "unscoped", "where", "select", "new", "to_sql", "where"]
CALLS: ["", "where"]
CALLS: ["", "except", "select", "where", "where", "recent"]
CALLS: ["", "order", "limit"]
CALLS: ["", "reorder"]
CALLS: ["", "reorder"]
CALLS: ["recent_branches"]
CALLS: ["", "joins", "where"]
CALLS: ["project", "deploy_keys", "includes"]
CALLS: ["are_public"]
CALLS: ["", "key?", "label", "board", "project", "as_json", "tap"]
CALLS: ["parent", "boards", "params", "find"]
CALLS: ["parent", "boards"]
CALLS: ["parent", "boards", "params", "find"]
CALLS: ["parent", "boards", "params", "delete", "find"]
CALLS: ["first"]
CALLS: ["params", "find"]
CALLS: ["", "try", "key?", "priority", "tap"]
CALLS: ["", "key?", "project", "url_helpers", "to_reference", "to_reference", "project", "project_issue_path", "project", "project_issue_path", "project", "toggle_subscription_project_issue_path", "merge!", "key?", "labels", "project", "as_json", "tap"]
CALLS: ["milestones", "includes", "map", "flatten", "build_collection", "sort_by!"]
CALLS: ["labels?", "filter_by_no_label?", "current_user", "projects", "label_names", "new", "execute", "none"]
CALLS: ["labels", "order", "pluck"]
CALLS: ["labels?", "params", "is_a?", "params", "split", "params"]
CALLS: ["labels?", "params", "title", "include?"]
CALLS: ["params", "present?"]
CALLS: ["target", "labels", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["projects", "select", "current_user", "new", "execute", "build_collection"]
CALLS: ["milestone_redirect_path", "html", "labels", "tabs_json", "json", "respond_to"]
CALLS: ["current_user", "id", "new", "execute"]
CALLS: ["target", "respond_to?", "target", "labels", "project", "subscribers", "add_recipients", "each"]
CALLS: ["assignee_id?", "params", "find_by", "assignee_username?", "params", "find_by"]
CALLS: ["params", "present?", "params"]
CALLS: ["params", "present?", "params"]
CALLS: []
CALLS: ["recipients", "select!"]
CALLS: []
CALLS: ["build!", "filter!", "recipients", "reason", "priority", "sort_by", "uniq", "freeze"]
CALLS: ["metrics", "new"]
CALLS: ["merge_requests", "where"]
CALLS: ["root", "read", "parse"]
CALLS: ["options", "storage_path"]
CALLS: ["options", "storage_path"]
CALLS: ["options", "storage_path"]
CALLS: ["options", "storage_path", "join"]
CALLS: ["has_metrics?", "prometheus_adapter", "query"]
CALLS: ["service_prometheus_adapter", "can_query?", "service_prometheus_adapter", "cluster_prometheus_adapter"]
CALLS: ["deployment_platform", "respond_to?", "deployment_platform", "cluster", "application_prometheus", "installed?", "application_prometheus"]
CALLS: ["project", "name", "deployment_platform"]
CALLS: ["find_deployment_platform"]
CALLS: ["find_cluster_platform_kubernetes", "find_kubernetes_service_integration", "build_cluster_and_deployment_platform"]
CALLS: ["kubernetes_service_template", "cluster_attributes_from_service_template", "create", "persisted?", "platform_kubernetes"]
CALLS: ["platform_kubernetes_attributes_from_service_template"]
CALLS: ["kubernetes_service_template", "api_url", "kubernetes_service_template", "ca_pem", "kubernetes_service_template", "token", "kubernetes_service_template", "namespace"]
CALLS: ["active", "find_by_template"]
CALLS: ["find_by"]
CALLS: ["services", "deployment", "reorder", "find_by"]
CALLS: ["", "where"]
CALLS: ["environment", "deployments", "params", "find_by"]
CALLS: ["job", "persisted_environment"]
CALLS: ["has_environment?", "expanded_environment_name", "project", "find_by", "strong_memoize"]
CALLS: ["environment", "present?"]
CALLS: ["has_environment?", "environment", "simple_variables", "expand", "strong_memoize"]
CALLS: ["scoped_variables", "to_runner_variables", "strong_memoize"]
CALLS: ["expanded_environment_name", "new", "predefined_variables", "concat", "project", "predefined_variables", "concat", "pipeline", "predefined_variables", "concat", "runner", "runner", "predefined_variables", "concat", "project", "deployment_variables", "concat", "yaml_variables", "concat", "user_variables", "concat", "secret_group_variables", "concat", "secret_project_variables", "concat", "trigger_request", "trigger_request", "user_variables", "concat", "pipeline", "variables", "concat", "pipeline", "pipeline_schedule", "pipeline", "pipeline_schedule", "job_variables", "concat", "tap"]
CALLS: ["params", "to_h", "map"]
CALLS: ["markdown_name", "secure_url", "markdown_link"]
CALLS: ["base_dir", "secret", "file", "filename", "join"]
CALLS: ["file", "filename"]
CALLS: ["model", "oid"]
CALLS: ["params", "to_s"]
CALLS: ["file", "filename"]
CALLS: ["class", "generate_secret"]
CALLS: ["hex"]
CALLS: ["file", "filename"]
CALLS: ["file", "filename", "join"]
CALLS: ["image_or_video?", "filename", "filename", "extname", "basename", "filename", "gsub"]
CALLS: ["image?", "video?"]
CALLS: ["extension_match?"]
CALLS: ["file", "file", "try", "file", "path", "extname", "delete", "downcase", "include?"]
CALLS: ["extension_match?"]
CALLS: ["extension", "include?"]
CALLS: ["extname", "downcase", "delete"]
CALLS: ["uploader", "uploader", "exists?", "uploader", "image_or_video?"]
CALLS: ["markdown_name", "secure_url", "image_or_video?", "dangerous?", "prepend"]
CALLS: ["extension_match?"]
CALLS: ["kubeconfig", "dump", "new", "api_url", "append", "token", "append", "actual_namespace", "append", "append", "ca_pem", "present?", "ca_pem", "append", "ca_pem", "append", "tap"]
CALLS: ["api_url", "actual_namespace", "token", "ca_pem", "to_kubeconfig"]
CALLS: ["api_url", "actual_namespace", "token", "ca_pem", "to_kubeconfig"]
CALLS: []
CALLS: ["new", "has_domain?", "domain", "presence", "instance_domain", "append", "tap"]
CALLS: ["domain", "present?", "instance_domain", "present?"]
CALLS: ["auto_devops_domain"]
CALLS: ["deployment_platform", "predefined_variables"]
CALLS: ["visibility_level", "string_level", "new", "id", "to_s", "append", "path", "append", "full_path", "append", "full_path_slug", "append", "namespace", "full_path", "append", "web_url", "append", "append", "container_registry_variables", "concat", "auto_devops_variables", "concat"]
CALLS: ["auto_devops_enabled?", "auto_devops", "build_auto_devops", "predefined_variables"]
CALLS: ["auto_devops", "enabled", "nil?", "auto_devops_enabled?", "auto_devops", "enabled?"]
CALLS: ["pages_domain_verification_enabled?", "enabled_until", "present?"]
CALLS: ["new", "config", "registry", "enabled", "config", "registry", "host_port", "append", "container_registry_enabled?", "container_registry_url", "append", "tap"]
CALLS: ["config", "registry", "enabled", "config", "registry", "host_port", "full_path", "downcase"]
CALLS: ["full_path", "to_s", "slugify"]
CALLS: ["new", "name", "append", "slug", "append"]
CALLS: ["kubeconfig", "dump", "new", "api_url", "append", "token", "append", "actual_namespace", "append", "append", "ca_pem", "present?", "ca_pem", "append", "ca_pem", "append", "tap"]
CALLS: ["variables", "variables", "map"]
CALLS: ["new", "id", "to_s", "append", "description", "append", "tag_list", "to_s", "append"]
CALLS: ["tag_list", "tag_path", "link_to", "each", "html_safe"]
CALLS: []
CALLS: ["variables", "map"]
CALLS: ["new", "id", "to_s", "append", "ci_yaml_file_path", "append", "source", "to_s", "append"]
CALLS: ["project", "ci_config_path", "blank?", "project", "ci_config_path"]
CALLS: ["new", "append", "append", "project", "licensed_features", "join", "append", "append", "append", "append", "name", "append", "stage", "append", "sha", "append", "ref", "append", "ref_slug", "append", "tag?", "ref", "append", "trigger_request", "append", "action?", "append", "legacy_variables", "concat", "tap"]
CALLS: []
CALLS: ["new", "sha", "append", "before_sha", "append", "ref", "append", "ref_slug", "append", "name", "append", "stage", "append", "tag?", "ref", "append", "trigger_request", "append", "action?", "append", "tap"]
CALLS: ["pipeline", "before_sha"]
CALLS: ["ref", "to_s", "slugify"]
CALLS: ["when"]
CALLS: ["read_attribute", "build_attributes_from_config"]
CALLS: ["pipeline", "config_processor", "pipeline", "config_processor", "name", "build_attributes"]
CALLS: ["ci_yaml_file", "ci_yaml_file", "new", "yaml_errors", "message", "yaml_errors"]
CALLS: ["auto_devops_source?", "implied_ci_yaml_file", "ci_yaml_from_repo", "yaml_errors", "sha"]
CALLS: ["project", "project", "auto_devops_enabled?", "find", "content"]
CALLS: ["project", "sha", "project", "repository", "sha", "ci_yaml_file_path", "gitlab_ci_yml_for"]
CALLS: ["blob_data_at"]
CALLS: ["blob_at", "load_all_data!", "data"]
CALLS: ["raw_repository", "blob_at", "project", "decorate"]
CALLS: ["is_a?", "new"]
CALLS: ["is_a?", "new", "map"]
CALLS: ["nil?", "new"]
CALLS: []
CALLS: ["project", "", "allow_n_plus_1_calls"]
CALLS: ["action", "present?", "to_action_id"]
CALLS: ["action", "to_sym", "key"]
CALLS: ["pipeline", "params", "legacy_stage", "not_found", "view_to_html_string", "json", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["new", "statuses_count", "zero?"]
CALLS: ["statuses", "count"]
CALLS: ["pipeline", "statuses", "name", "where"]
CALLS: ["render_404"]
CALLS: ["persisted_environment", "project", "ref", "secret_variables_for"]
CALLS: ["protected_for?", "variables", "variables", "unprotected"]
CALLS: ["repository", "branch_exists?", "protected?", "repository", "tag_exists?", "protected?"]
CALLS: ["raw_repository", "tag_names", "include?"]
CALLS: ["raw_repository", "branch_names", "include?"]
CALLS: ["protected_tags", "select", "matching", "present?"]
CALLS: ["name", "matches?", "select"]
CALLS: ["name", "blank?", "exact_match?", "wildcard_match?"]
CALLS: ["wildcard?", "wildcard_regex"]
CALLS: ["name", "gsub", "quote", "gsub"]
CALLS: ["name", "name", "include?"]
CALLS: ["name"]
CALLS: ["matching"]
CALLS: ["empty_repo?", "default_branch_protected?", "protected_branches", "select", "matching", "present?"]
CALLS: ["default_branch_protection", "default_branch_protection"]
CALLS: ["repository", "empty?"]
CALLS: ["", "where"]
CALLS: ["", "where"]
CALLS: ["ancestors", "where", "protected_for?", "unprotected", "group_by", "reverse", "id", "map", "compact", "flatten"]
CALLS: ["parent_id", "class", "none", "class", "parent_id", "where", "new", "base_and_ancestors"]
CALLS: ["project", "group", "project", "group", "ref", "project", "secret_variables_for"]
CALLS: ["new", "user", "blank?", "user", "id", "to_s", "append", "user", "email", "append", "user", "username", "append", "user", "name", "append", "tap"]
CALLS: ["read_attribute", "build_attributes_from_config"]
CALLS: ["new", "persisted_variables", "concat", "scoped_variables", "concat", "persisted_environment_variables", "concat", "to_runner_variables"]
CALLS: ["new", "persisted?", "persisted_environment", "present?", "persisted_environment", "predefined_variables", "concat", "environment_url", "environment_url", "append", "tap"]
CALLS: ["environment_options"]
CALLS: ["options", "dig", "persisted_environment", "external_url"]
CALLS: ["external_link?", "full_path", "partition", "last", "id", "path", "join", "pages_group_url"]
CALLS: ["config", "pages", "url", "pages_subdomain", "sub", "downcase"]
CALLS: ["wiki", "pages", "new", "map"]
CALLS: ["full_path", "partition", "first"]
CALLS: ["pages", "paginate_array", "params", "page", "group_by_directory", "get_project_wiki_path", "s_", "s_", "_", "container_class", "s_", "project_wikis_git_access_path", "icon", "_", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["blank?", "directory", "slug", "sort_by", "group_by", "present?", "new", "map", "flatten"]
CALLS: ["wiki", "slug", "page_title_and_dir", "last", "to_s"]
CALLS: ["fluid_layout", "blank_container"]
CALLS: ["nil?"]
CALLS: ["external_wiki", "properties", "project_wiki_path"]
CALLS: ["has_external_wiki", "nil?", "cache_has_external_wiki", "has_external_wiki", "services", "external_wikis", "first"]
CALLS: ["", "where", "active"]
CALLS: ["read_write?", "services", "external_wikis", "any?", "update_column"]
CALLS: ["pages_config", "enabled", "pages_config", "artifacts_server", "name", "extname", "include?", "project", "public?"]
CALLS: ["pages_domains_config", "project", "pages_https_only?"]
CALLS: ["enabled_pages_domains", "domain", "certificate", "key", "project", "pages_https_only?", "https?", "map"]
CALLS: ["pages_domain_verification_enabled?", "project", "pages_domains", "enabled", "project", "pages_domains"]
CALLS: ["certificate", "present?"]
CALLS: ["config", "pages", "external_https"]
CALLS: ["config", "pages"]
CALLS: ["new", "persisted?", "id", "to_s", "append", "token", "append", "id", "to_s", "append", "token", "append", "append", "token", "append", "repo_url", "append", "tap"]
CALLS: ["ensure_token!", "project", "http_url_to_repo", "sub"]
CALLS: ["config", "gitlab", "url", "full_path"]
CALLS: ["web_url"]
CALLS: ["params", "find"]
CALLS: ["project", "environments", "params", "find"]
CALLS: ["project", "current_user", "new", "execute"]
CALLS: ["builds", "where", "not", "success", "pluck", "uniq"]
CALLS: ["project", "environments", "params", "find"]
CALLS: ["clusters", "enabled", "default_environment", "last", "platform_kubernetes"]
CALLS: ["", "where"]
CALLS: ["project", "find_or_initialize_service"]
CALLS: ["find_or_initialize_services", "to_param", "find"]
CALLS: ["username"]
CALLS: []
CALLS: ["reply_key"]
CALLS: ["hex"]
CALLS: ["reply_key"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["where", "available_services_names", "services", "find_service", "find_service", "nil?", "public_send", "id", "build_from_template", "map"]
CALLS: ["dup", "valid?", "active", "template", "project_id"]
CALLS: ["env", "development?", "sort_by"]
CALLS: ["to_param", "find"]
CALLS: ["persisted?", "errors", "include?", "path_was", "path"]
CALLS: ["domain"]
CALLS: ["full_path"]
CALLS: ["iid", "to_s"]
CALLS: ["sha_start", "sha_to"]
CALLS: ["sha_from", "exclude_start?", "sha_from", "sha_from"]
CALLS: ["id"]
CALLS: []
CALLS: ["id"]
CALLS: ["name"]
CALLS: ["project", "deployment_platform", "new", "prometheus_adapter"]
CALLS: ["prometheus_adapter", "can_query?", "available?", "last_deployment", "present?"]
CALLS: ["current_version"]
CALLS: ["current_version"]
CALLS: ["environment", "prometheus_adapter"]
CALLS: ["prometheus_adapter", "can_query?"]
CALLS: ["project", "new", "prometheus_adapter"]
CALLS: ["has_metrics?", "prometheus_adapter", "query", "created_at", "to_i", "merge"]
CALLS: ["environment", "metrics", "html", "any?", "json", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["deployment", "has_metrics?", "render_404", "deployment", "metrics", "any?", "render_404", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["update!"]
CALLS: ["create_record_event"]
CALLS: ["project", "id", "class", "name", "create_event"]
CALLS: ["new"]
CALLS: ["new"]
CALLS: ["transaction_begin", "current_user", "create_merge_event", "merge_request_metrics_service", "merge", "transaction_end", "transaction"]
CALLS: ["new", "merge_mr"]
CALLS: ["merge_when_pipeline_succeeds?", "close_resource_email"]
CALLS: ["build_recipients", "mailer", "user", "id", "id", "id", "reason", "send", "deliver_later", "each"]
CALLS: ["create_record_event"]
CALLS: ["transaction_begin", "event_service", "current_user", "close_mr", "merge_request_metrics_service", "close", "transaction_end", "transaction"]
CALLS: ["close_resource_email"]
CALLS: ["todo_service", "merge_request_build_retried", "commit_status_merge_requests"]
CALLS: ["author", "mark_pending_todos_as_done", "merge_when_pipeline_succeeds?", "merge_user", "mark_pending_todos_as_done"]
CALLS: ["attributes_for_target", "pending_todos", "update_all", "update_todos_count_cache"]
CALLS: ["ref", "merge_requests_for", "head_pipeline", "sha", "sha", "each"]
CALLS: ["with_state", "id", "where", "preload", "select"]
CALLS: ["author_id", "created_at", "update!"]
CALLS: ["create_record_event"]
CALLS: ["id", "reverse_merge!", "create!"]
CALLS: ["", "joins"]
CALLS: ["", "joins"]
CALLS: ["params", "find_by_id", "projects_finder", "params", "params", "execute", "to_json"]
CALLS: ["current_user", "new"]
CALLS: ["user", "personal_projects", "user", "projects", "joined", "admin_root_path"]
CALLS: ["", "namespace_id", "where"]
CALLS: ["namespace", "try"]
CALLS: ["represent"]
CALLS: ["represent"]
CALLS: ["should_expand_hierarchy", "paginated?", "paginator", "paginate", "represent_hierarchies", "represent"]
CALLS: ["is_a?", "hierarchy_root", "hierarchy", "represent_hierarchy", "first", "hierarchy_root", "build_hierarchy", "wrap", "represent_hierarchy"]
CALLS: ["class", "params", "new", "is_a?", "represent", "represent_hierarchy", "wrap", "merge", "map", "is_a?", "represent_hierarchy", "flat_map", "represent"]
CALLS: ["wrap", "uniq", "empty?", "is_a?", "all?", "new", "hierarchy", "map", "merge"]
CALLS: ["ancestors_upto", "expand_hierarchy_for_child"]
CALLS: ["namespace_id", "where", "new", "base_and_ancestors"]
CALLS: ["class", "id", "where", "new", "ancestors"]
CALLS: ["parent_id", "id", "is_a?", "id", "parent_id", "detect", "nil?", "parent_id", "nil?", "parent", "new", "map", "track_exception", "nil?", "present?", "new", "expand_hierarchy_for_child"]
CALLS: ["itemized?", "itemize", "name", "size", "represent", "map", "represent"]
CALLS: ["order", "group", "select", "paginated?", "paginate", "map", "where", "index_by", "folder", "size", "last_id", "new", "map"]
CALLS: ["project", "environments", "params", "where", "params", "with_state", "order", "params", "html", "new", "request", "response", "with_pagination", "represent", "available", "count", "stopped", "count", "json", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["new", "tap"]
CALLS: ["paginator", "new", "tap"]
CALLS: ["", "with_state"]
CALLS: ["", "with_state"]
CALLS: []
CALLS: ["paginated?", "paginate", "represent"]
CALLS: ["paginated?", "respond_to?", "", ""]
CALLS: ["class", "entity_class", "merge", "represent", "as_json"]
CALLS: []
CALLS: ["symbolize_keys!", "represent"]
CALLS: ["assignees", "any?", "assignees", "project", "attributes_for_todo", "create_todos"]
CALLS: ["new_resource_email"]
CALLS: ["author", "build_recipients", "mailer", "user", "id", "id", "reason", "send", "deliver_later", "each"]
CALLS: ["head_pipeline_for", "id", "update"]
CALLS: ["source_project", "source_branch_sha", "source_project", "pipelines", "source_branch", "where", "order", "first"]
CALLS: ["merge_request", "source_project"]
CALLS: ["source_branch_head", "try"]
CALLS: ["source_project", "source_branch_ref", "source_project", "repository", "source_branch_ref", "commit", "strong_memoize"]
CALLS: ["source_branch", "source_branch"]
CALLS: ["project"]
CALLS: ["project", "pipelines", "sha", "where"]
CALLS: ["all_pipelines", "response", "set_header", "new", "represent", "count", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["source_project", "none", "source_project", "pipelines", "all_commit_shas", "source_branch", "where", "order"]
CALLS: ["persisted?", "commit_shas", "all_commits", "pluck", "uniq"]
CALLS: ["postgresql?", "merge_request_diffs", "recent", "merge_request_diffs", "where", "limit"]
CALLS: ["all_pipelines", "response", "set_header", "new", "represent", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["pipelines", "order", "params", "params", "where", "html", "response", "set_header", "new", "represent", "count", "json", "respond_to", "title", "short_id", "id", "project_commit_path", "size", "nav_link", "current_user", "can?", "id", "pipelines_project_commit_path", "pipelines", "size", "nav_link", "id", "pipelines_project_commit_path", "id", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project", "issues_enabled?", "transaction_begin", "merge_requests_closing_issues", "delete_all", "closes_issues", "is_a?", "merge_requests_closing_issues", "create!", "each", "transaction_end", "transaction"]
CALLS: ["params", "merge_request", "current_user", "closes_issues"]
CALLS: ["author", "target_branch", "project", "default_branch", "title", "description", "merge_request_diff", "commits", "map", "concat", "project", "new", "join", "closed_by_message"]
CALLS: ["raw_repository", "length", "where", "present?", "decorate", "project", "new"]
CALLS: ["commits_between", "sha", "sha", "message", "author_name", "author_email", "map"]
CALLS: ["raw_repository", "between", "present?", "decorate"]
CALLS: ["user", "name"]
CALLS: ["load_commits"]
CALLS: ["merge_request_diff_commits", "to_hash", "project", "from_hash", "map", "merge_request", "source_project", "merge_request", "source_branch", "new"]
CALLS: ["as_json", "diff", "merge", "with_indifferent_access"]
CALLS: ["binary?", "unpack", "first"]
CALLS: ["st_diff", "respond_to?", "st_diff", "new"]
CALLS: ["apply_diff_view_cookie!", "load_all_data!", "path", "data", "highlight", "lines", "params", "new", "since", "to", "map", "bottom?", "length", "since", "join", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["length", "highlight"]
CALLS: ["params", "present?", "cookies", "permanent", "params", "delete"]
CALLS: ["public_send", "each_with_object"]
CALLS: ["repository", "raw", "new", "new"]
CALLS: ["trace_artifact_file", "trace_artifact_file", "raw_send_params", "raw_redirect_params", "send_upload", "build", "trace", "file?", "path", "raw", "read"]
CALLS: ["new"]
CALLS: ["build", "job_artifacts_trace", "file"]
CALLS: []
CALLS: []
CALLS: ["build", "trace", "id", "status", "complete?", "valid?", "limit", "params", "presence", "html_with_state", "to_h", "merge!", "json", "respond_to", "read", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["total_items_count", "total_items_count", "closed_items_count"]
CALLS: ["total_issues_count", "merge_requests", "size", "memoize_per_user"]
CALLS: ["memoized_users", "id"]
CALLS: ["new"]
CALLS: ["count_issues_by_state", "values", "sum"]
CALLS: ["constants", "const_get", "map"]
CALLS: ["issues_visible_to_user", "reorder", "group", "count", "memoize_per_user"]
CALLS: ["issues_finder_params", "new", "execute", "preload", "milestoneish_ids", "where", "memoize_per_user"]
CALLS: ["project_id"]
CALLS: ["group", "id"]
CALLS: []
CALLS: []
CALLS: ["chart_values_file", "read"]
CALLS: ["root", "name"]
CALLS: ["content_values", "to_yaml"]
CALLS: ["chart_values_file", "load_file", "specification", "deep_merge!"]
CALLS: ["gitlab_url", "ensure_runner", "token", "privileged"]
CALLS: ["url_helpers", "root_url"]
CALLS: ["runner", "create_and_assign_runner"]
CALLS: ["transaction_begin", "project", "runners", "create!", "id", "update!", "tap", "transaction_end", "transaction"]
CALLS: ["count_issues_by_state", "merge_requests", "closed_and_merged", "size", "memoize_per_user"]
CALLS: ["", "with_states"]
CALLS: ["status", "include?"]
CALLS: ["inspect", "merge!", "file_storage?", "path", "class", "proxy_download_enabled?", "headers", "url", "send_url", "store", "url"]
CALLS: ["storage", "is_a?"]
CALLS: ["object_store", "storage_for"]
CALLS: ["class", "object_store_enabled?", "new", "new"]
CALLS: ["object_store_options", "enabled"]
CALLS: ["options", "object_store"]
CALLS: ["hashed_storage?", "new", "new"]
CALLS: ["object_store_options", "proxy_download"]
CALLS: ["storage"]
CALLS: ["class", "merge_request", "to_reference"]
CALLS: ["class", "name"]
CALLS: []
CALLS: ["class", "name", "id", "commit_id", "path"]
CALLS: ["project", "job", "raw_project_job_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project", "job", "params", "raw_project_job_artifacts_path"]
CALLS: ["params", "new", "build", "send_artifacts_entry"]
CALLS: ["headers", "send_artifacts_entry", "store"]
CALLS: ["params", "content", "convert_line_endings", "sanitized_file_name", "send_data"]
CALLS: ["file_name", "gsub"]
CALLS: ["to_s"]
CALLS: ["params", "gsub"]
CALLS: ["persisted?", "merge_request_diff", "commits", "compare_commits", "compare_commits", "reverse"]
CALLS: ["commits", "project", "decorate"]
CALLS: ["commits", "with_pipeline_status", "prepare_commits_for_rendering", "view_to_html_string", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project", "pipelines", "map", "ref", "latest_status_per_commit", "ref", "id", "set_status_for_ref", "each"]
CALLS: []
CALLS: ["arel_table", "arel_table", "alias", "eq", "eq", "and", "lt", "and", "eq", "and", "join", "on", "select", "where", "eq", "where", "join_sources", "joins", "where", "each_with_object"]
CALLS: ["current_user", "render"]
CALLS: ["full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["committer", "project", "new", "safe_message", "closed_by_message"]
CALLS: ["committer_email", "downcase", "find_by_any_email"]
CALLS: ["current_user", "id", "id", "perform_async", "run_after_commit"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["todo_service", "current_user", "new_issue", "user_agent_detail_service", "create", "resolve_discussions_with_issue"]
CALLS: ["new_issuable"]
CALLS: ["new_resource_email"]
CALLS: ["new"]
CALLS: ["discussions_to_resolve", "empty?", "project", "current_user", "merge_request_to_resolve_discussions_of", "new", "discussions_to_resolve", "execute"]
CALLS: ["merge_request_to_resolve_discussions_of", "discussion_to_resolve_id", "merge_request_to_resolve_discussions_of", "discussion_to_resolve_id", "find_discussion", "merge_request_to_resolve_discussions_of", "discussions_to_be_resolved"]
CALLS: ["project", "project", "notes", "find_discussion", "find_discussion", "noteable", "noteable_without_project?"]
CALLS: ["is_a?", "current_user", "can?"]
CALLS: ["where", "fresh", "to_a", "empty?", "build"]
CALLS: ["", "order"]
CALLS: ["fresh", "order"]
CALLS: ["", "order"]
CALLS: ["resolvable_discussions", "select"]
CALLS: ["select", "discussion_notes", "resolvable", "discussions"]
CALLS: ["all", "includes", "fresh", "build_collection"]
CALLS: ["", "potentially_resolvable", "user"]
CALLS: ["", "where", "where"]
CALLS: ["discussion_notes", "inc_relations_for_view", "discussions"]
CALLS: ["", "includes"]
CALLS: ["notes"]
CALLS: ["notes", "non_diff_notes"]
CALLS: ["", "where"]
CALLS: ["issuable", "notes", "inc_relations_for_view", "includes", "fresh", "prepare_notes_for_rendering", "current_user", "cross_reference_not_visible_for?", "reject", "issuable", "build_collection", "discussion_serializer", "represent"]
CALLS: ["issue", "merge_request"]
CALLS: ["cross_reference?", "has_referenced_mentionables?"]
CALLS: ["cross_reference_note_prefix"]
CALLS: []
CALLS: ["user_visible_reference_count", "present?", "user_visible_reference_count", "referenced_mentionables", "any?"]
CALLS: ["author", "matches_cross_reference_regex?", "all_references", "issues", "merge_requests", "commits", "local_reference", "reject"]
CALLS: ["project", "project", "default_issues_tracker?", "class", "mentionable_attrs", "__send__", "any?"]
CALLS: ["external_issue_tracker"]
CALLS: []
CALLS: ["system?", "force_cross_reference_regex_check?", "matches_cross_reference_regex?", "note", "cross_reference?"]
CALLS: ["system?", "system_note_metadata", "action", "include?"]
CALLS: ["params", "current_user", "id", "new", "params", "find", "current_user", "id", "new", "params", "find"]
CALLS: ["preload_noteable_for_regular_notes", "preload_max_access_for_authors", "preload_first_time_contribution_for_authors", "current_user", "new", "execute"]
CALLS: ["is_a?", "first_contribution?", "specialize_for_first_contribution!", "each"]
CALLS: ["author_id", "author_id", "special_role"]
CALLS: ["project", "team", "author_id", "max_member_access", "project", "merge_requests", "merged", "author_id", "where", "empty?"]
CALLS: ["max_member_access_for_user_ids"]
CALLS: ["project", "id", "project", "project_authorizations", "where", "group", "maximum", "max_member_access_for_resource_ids"]
CALLS: ["id", "block_given?", "uniq", "max_member_access_for_resource_key", "active?", "store", "store", "keys", "empty?", "merge!", "keys", "each"]
CALLS: ["name", "underscore", "pluralize"]
CALLS: ["new"]
CALLS: ["", "with_state"]
CALLS: []
CALLS: ["new", "reject", "preload"]
CALLS: ["map", "team", "max_member_access_for_user_ids"]
CALLS: ["project", "issuable", "current_user", "new"]
CALLS: ["current_user", "project", "id", "new", "execute", "merge_request_to_resolve_discussions_of_iid", "find_by", "strong_memoize"]
CALLS: ["current_user", "spam_check", "move_to_end", "current_user", "id", "id", "perform_async", "run_after_commit"]
CALLS: ["new", "spam_logs", "find_by", "update!", "when_recaptcha_verified"]
CALLS: ["spammable", "spam", "check", "spammable", "spam_log", "spam_log"]
CALLS: ["has_pushes?", "repository", "git_fsck", "wiki_enabled?", "create_wiki", "wiki", "repository", "git_fsck"]
CALLS: ["with_push", "id", "exists?"]
CALLS: ["", "joins", "where"]
CALLS: ["exists?", "raw_repository", "fsck", "message", "error"]
CALLS: ["wiki_access_level"]
CALLS: ["owner", "new", "wiki", "errors", "add"]
CALLS: ["txt_records", "parse", "domain", "keyed_verification_code", "domain", "verification_code", "any?", "domain", "domain", "log_error"]
CALLS: ["logger", "class", "error"]
CALLS: ["getresources"]
CALLS: ["class", "name", "merge_request", "to_reference", "error", "merge_request", "update"]
CALLS: ["error"]
CALLS: ["verification_code", "present?", "verification_code"]
CALLS: ["request", "check_for_spam?", "akismet", "spam?", "create_spam_log"]
CALLS: ["spammable_owner_id", "spammable", "spam_title", "spammable", "spam_description", "options", "options", "spammable", "class", "to_s", "create!"]
CALLS: ["spammable", "respond_to?", "spammable", "author_id", "spammable", "respond_to?", "spammable", "creator_id"]
CALLS: ["class", "spammable_attrs", "fetch", "find", "first", "to_sym", "respond_to?", "first", "public_send"]
CALLS: ["class", "spammable_attrs", "fetch", "find", "first", "to_sym", "respond_to?", "first", "public_send"]
CALLS: ["spammable", "check_for_spam?"]
CALLS: ["spammable_owner", "spammable", "spammable_text", "options", "new"]
CALLS: ["spammable_owner_id", "find"]
CALLS: ["class", "spammable_attrs", "first", "public_send", "map", "reject", "join"]
CALLS: ["spam_log", "user", "spam_log", "text", "spam_log", "source_ip", "spam_log", "user_agent", "new"]
CALLS: ["akismet_enabled?", "text", "now", "owner", "name", "owner", "email", "options", "akismet_client", "options", "options", "check", "logger", "error"]
CALLS: ["visibility_level_changed?", "public?", "title_changed?", "content_changed?"]
CALLS: ["title", "present?", "class", "url_path", "unhyphenize", "title"]
CALLS: ["gsub"]
CALLS: ["project", "public?", "title_changed?", "description_changed?"]
CALLS: []
CALLS: ["relative_position", "max_relative_position", "position_between"]
CALLS: ["sort"]
CALLS: ["class", "parent_ids", "in_parents", "maximum"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["save", "update_attributes", "with_transaction_returning_status"]
CALLS: ["present?", "process_title", "slice!", "merge!"]
CALLS: ["blank?", "deep_title_squish", "dirname", "present?", "directory", "presence", "compact", "join"]
CALLS: ["split", "map", "join"]
CALLS: ["merge_quick_actions_into_params!"]
CALLS: ["params", "description", "fetch", "project", "current_user", "new", "execute", "params", "params", "merge!"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["delete_conflicting_redirects"]
CALLS: ["conflicting_redirects", "delete_all"]
CALLS: ["path", "matching_path_and_descendants"]
CALLS: ["", "postgresql?", "sanitize_sql_like", "where"]
CALLS: ["expire_exists_cache", "expire_root_ref_cache", "expire_emptiness_caches", "repository_event"]
CALLS: ["full_path", "merge", "add_event"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["track_user_interacted_projects", "set_last_repository_updated_at", "reset_project_activity"]
CALLS: ["created_at", "update_column"]
CALLS: ["available?", "track"]
CALLS: ["project_id", "project_id", "author_id", "transaction_begin", "where", "select", "first", "create!", "transaction_end", "transaction", "cached_exists?"]
CALLS: ["cache", "fetch"]
CALLS: ["unscoped", "project_id", "where", "created_at", "update_all"]
CALLS: ["project", "recent_update?", "unscoped", "project_id", "where", "ago", "where", "created_at", "update_all"]
CALLS: ["project", "last_activity_at", "ago"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["create_project_feature", "set_last_activity_at", "set_last_repository_updated_at", "check_repository_absence!", "ensure_storage_path_exists"]
CALLS: ["namespace", "gitlab_shell", "repository_storage_path", "base_dir", "add_namespace"]
CALLS: ["repository_storage_path"]
CALLS: ["config", "repositories", "storages", "repository_storage", "legacy_disk_path"]
CALLS: ["repository_storages", "first"]
CALLS: ["read_attribute"]
CALLS: ["gitlab_shell", "repository_storage_path", "base_dir", "add_namespace"]
CALLS: ["created_at", "update_column"]
CALLS: ["skip_disk_validation", "repository_storage_path", "blank?", "repository_with_same_path_already_exists?", "errors", "add"]
CALLS: ["gitlab_shell", "repository_storage_path", "disk_path", "exists?"]
CALLS: []
CALLS: []
CALLS: ["update_daemon"]
CALLS: ["project", "new", "execute"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["sync_share_with_group_lock_with_parent"]
CALLS: ["parent", "share_with_group_lock?", "share_with_group_lock"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["save_git_content"]
CALLS: ["merge_request_id", "id", "where", "id", "update_all", "ensure_commit_shas", "save_commits", "save_diffs", "save", "keep_around_commits"]
CALLS: ["repository", "merge_request", "source_project", "repository", "uniq", "start_commit_sha", "keep_around", "head_commit_sha", "keep_around", "base_commit_sha", "keep_around", "each"]
CALLS: ["present?", "commit_by", "kept_around?", "raw_repository", "keep_around_ref_name", "write_ref", "logger", "path", "error"]
CALLS: []
CALLS: ["keep_around_ref_name", "ref_exists?"]
CALLS: ["raw_repository", "ref_exists?"]
CALLS: ["persisted?", "nil?", "last_commit_sha"]
CALLS: ["commit", "sha"]
CALLS: ["start_commit", "head_commit", "project", "start_commit", "id", "head_commit", "id", "merge_base_commit", "sha", "strong_memoize"]
CALLS: ["repository", "merge_base", "commit_by"]
CALLS: ["commit", "try", "commit", "try", "raw_repository", "merge_base"]
CALLS: ["start_commit_sha", "project", "start_commit_sha", "commit_by"]
CALLS: ["base", "project", "new", "strong_memoize"]
CALLS: ["start_commit", "sha"]
CALLS: ["id", "compare", "commits", "reverse", "create_bulk", "merge_request_diff_commits", "commits_count", "size"]
CALLS: ["new", "map", "to_hash", "except", "delete", "serialize", "sanitize_timestamp", "sanitize_timestamp", "merge", "with_index", "table_name", "bulk_insert"]
CALLS: ["merge_request_diff_commits", "size"]
CALLS: ["repository", "raw_repository", "safe_start_commit_sha", "head_commit_sha", "new"]
CALLS: ["start_commit_sha", "merge_request", "target_branch_sha"]
CALLS: ["target_branch_head", "try"]
CALLS: ["target_project", "repository", "target_branch_ref", "commit", "strong_memoize"]
CALLS: ["target_branch", "target_branch"]
CALLS: ["persisted?", "merge_request_diff", "commits_count", "compare_commits", "compare_commits", "size"]
CALLS: ["compare", "commits", "size", "zero?", "compare", "max_diff_options", "diffs", "real_size", "any?", "create_merge_request_diff_files", "overflow?", "assign_attributes"]
CALLS: ["map", "to_hash", "id", "merge", "encoding", "ascii_only?", "pack", "tap", "with_index", "bulk_insert"]
CALLS: ["new"]
CALLS: ["compare", "compare", "merge", "diffs", "merge_request_diff", "diffs"]
CALLS: ["project", "diff_refs", "new"]
CALLS: ["start_commit_sha", "base_commit_sha", "base_commit_sha", "start_commit_sha", "head_commit_sha", "new"]
CALLS: ["persisted?", "merge_request_diff", "diff_refs", "diff_base_sha", "diff_start_sha", "diff_head_sha", "new"]
CALLS: ["persisted?", "merge_request_diff", "base_commit_sha", "branch_merge_base_commit", "try"]
CALLS: ["target_branch_sha", "source_branch_sha", "target_project", "merge_base_commit"]
CALLS: ["persisted?", "merge_request_diff", "start_commit_sha", "target_branch_head", "try"]
CALLS: ["start_commit_sha", "base_commit_sha", "start_commit_sha", "head_commit_sha", "new"]
CALLS: ["parent_id", "sha", "new"]
CALLS: ["new"]
CALLS: []
CALLS: ["can_be_created", "diff_options", "diffs", "current_user", "environments_for", "last", "view_to_html_string", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["diff_head_commit", "target_project", "target_branch", "diff_head_commit", "new", "execute", "source_project", "source_project", "source_branch", "diff_head_commit", "new", "execute", "concat", "uniq", "new"]
CALLS: ["persisted?", "merge_request_diff", "head_commit", "source_branch_head"]
CALLS: ["hide_whitespace?", "diffs_expanded?", "action_name", "params", "values_at"]
CALLS: ["params"]
CALLS: ["params", "present?"]
CALLS: ["start_commit_sha", "merge_request", "target_branch_sha", "head_commit_sha", "merge_request", "source_branch_sha", "base_commit_sha", "find_base_sha"]
CALLS: ["head_commit_sha", "start_commit_sha", "project", "head_commit_sha", "start_commit_sha", "merge_base_commit", "try"]
CALLS: ["project", "repository", "original_position", "base_sha", "keep_around", "project", "repository", "original_position", "start_sha", "keep_around", "project", "repository", "original_position", "head_sha", "keep_around", "position", "original_position", "project", "repository", "position", "base_sha", "keep_around", "project", "repository", "position", "start_sha", "keep_around", "project", "repository", "position", "head_sha", "keep_around"]
CALLS: ["project", "project", "repository", "sha", "keep_around", "project", "repository", "before_sha", "keep_around"]
CALLS: ["ensure_merge_request_diff"]
CALLS: ["merge_request_diff", "create_merge_request_diff"]
CALLS: ["fetch_ref!", "merge_request_diffs", "create", "reload_merge_request_diff", "allow_n_plus_1_calls"]
CALLS: ["target_project", "repository", "source_project", "repository", "source_branch", "ref_path", "fetch_source_branch!"]
CALLS: ["raw_repository", "raw_repository", "fetch_source_branch!"]
CALLS: ["iid"]
CALLS: ["slug"]
CALLS: ["environment", "ref_path", "iid", "to_s", "join"]
CALLS: ["merge_request_diff"]
CALLS: []
CALLS: ["post_create_hook", "create_notification_setting", "send_request", "send_invite"]
CALLS: ["owner?", "event_service", "project", "user", "join_project", "notification_service", "new_project_member"]
CALLS: ["notifiable?", "mailer", "real_source_type", "id", "member_access_granted_email", "deliver_later"]
CALLS: ["notifiable?"]
CALLS: ["new", "notifiable?"]
CALLS: ["has_access?", "own_activity?", "unsubscribed?", "suitable_notification_level?", "unsubscribed?"]
CALLS: ["user", "can?", "user", "can?", "user", "can?", "read_ability", "has_policy?", "user", "read_ability", "can?", "subject_scope"]
CALLS: ["instance_variable_defined?", "to_ability_name", "class", "model_name", "name", "underscore"]
CALLS: ["user", "notified_of_own_activity?"]
CALLS: ["respond_to?", "subscriptions", "id", "find_by_user_id", "subscribed"]
CALLS: ["notification_level", "custom_enabled?", "include?", "action_excluded?"]
CALLS: ["excluded_watcher_action?", "excluded_participating_action?"]
CALLS: ["notification_level", "include?"]
CALLS: ["notification_level", "include?"]
CALLS: ["notification_setting", "event_enabled?"]
CALLS: ["respond_to?", "public_send"]
CALLS: ["find_notification_setting"]
CALLS: ["user", "notification_settings_for", "nil?", "global?", "user", "notification_settings_for", "nil?", "global?", "user", "global_notification_setting"]
CALLS: ["notification_settings", "find_or_initialize_by", "persisted?", "levels", "update_attributes"]
CALLS: ["notification_settings", "loaded?", "notification_settings", "source", "find", "notification_settings", "find_or_initialize_by"]
CALLS: ["user", "source", "notification_settings_for"]
CALLS: ["notification_setting", "level", "to_sym"]
CALLS: []
CALLS: ["user", "blank?", "user", "notifiable_options", "merge", "notifiable?"]
CALLS: ["project"]
CALLS: ["group"]
CALLS: []
CALLS: ["source_type"]
CALLS: ["membershipable", "class", "to_s", "humanize"]
CALLS: ["access_level"]
CALLS: ["nil?", "max_member_access_for_user"]
CALLS: ["admin?", "members_with_parents", "where", "reorder", "first", "access_level"]
CALLS: ["parent_id", "self_and_ancestors", "reorder", "select", "id", "active_without_invites_and_requests", "where"]
CALLS: ["parent_id", "class", "id", "where", "class", "id", "where", "new", "base_and_ancestors"]
CALLS: ["", "left_join_users", "where", "non_request", "reorder"]
CALLS: ["", "where"]
CALLS: ["admin?"]
CALLS: ["access_level_attribute", "public_send"]
CALLS: []
CALLS: ["member", "user", "notification_email", "member_source", "human_name", "member_source", "model_name", "singular", "subject", "mail"]
CALLS: ["x509", "x509", "subject", "to_s"]
CALLS: ["name", "present?", "join", "config", "gitlab", "email_subject_suffix", "present?", "config", "gitlab", "email_subject_suffix"]
CALLS: ["member", "source"]
CALLS: ["find"]
CALLS: ["params", "find_by_invite_token", "render_404"]
CALLS: ["token_generator", "digest", "find_by"]
CALLS: ["new"]
CALLS: ["new"]
CALLS: ["new"]
CALLS: ["project", "owner", "user"]
CALLS: ["new"]
CALLS: ["notification_service", "invite_project_member"]
CALLS: ["notifiable?", "mailer", "real_source_type", "id", "member_invited_email", "deliver_later"]
CALLS: ["member", "invite_email", "member_source", "human_name", "member_source", "model_name", "singular", "subject", "mail"]
CALLS: ["notification_service", "new_group_member"]
CALLS: ["notifiable?", "mailer", "real_source_type", "id", "member_access_granted_email", "deliver_later"]
CALLS: ["notification_service", "invite_group_member"]
CALLS: ["mailer", "real_source_type", "id", "member_invited_email", "deliver_later"]
CALLS: ["system_hook_service", "execute_hooks_for"]
CALLS: ["build_event_data", "new", "execute_hooks", "run_after_commit_or_now"]
CALLS: ["build_event_name", "created_at", "xmlschema", "updated_at", "xmlschema", "key", "id", "merge!", "user", "user", "username", "project_data", "merge!", "old_path_with_namespace", "user_data", "merge!", "username_was", "state", "project_member_data", "merge!", "group_data", "merge!", "path_was", "full_path_was", "merge!", "group_member_data", "merge!"]
CALLS: ["name", "email", "id", "username"]
CALLS: ["group", "name", "group", "path", "group", "id", "user", "username", "user", "name", "user", "email", "user", "id", "human_access"]
CALLS: ["class", "access_options", "group_access", "key"]
CALLS: ["options"]
CALLS: ["owner", "name", "path", "full_path", "id", "try", "try"]
CALLS: ["project", "unscoped", "source_id", "find", "name", "path", "full_path", "id", "user", "username", "user", "name", "user", "email", "user", "id", "human_access", "visibility_levels", "visibility_level_value", "key", "downcase"]
CALLS: ["options"]
CALLS: ["owner", "name", "path", "full_path", "id", "name", "respond_to?", "email", "visibility", "downcase"]
CALLS: ["class", "name", "downcase"]
CALLS: ["namespace", "full_path", "previous_changes", "first", "join"]
CALLS: ["parent_id_was", "nil?", "path_was", "parent_id_was", "find_by", "full_path", "path_was"]
CALLS: ["new"]
CALLS: ["new"]
CALLS: ["new"]
CALLS: ["new"]
CALLS: ["notification_service", "new_access_request"]
CALLS: ["notifiable?", "source", "members", "active_without_invites_and_requests", "owners_and_masters", "fallback_to_group_owners_masters?", "source", "group", "members", "active_without_invites_and_requests", "owners_and_masters", "deliver_access_request_email", "each"]
CALLS: ["present?", "source", "respond_to?", "source", "group"]
CALLS: ["mailer", "real_source_type", "id", "user", "notification_email", "member_access_requested_email", "deliver_later"]
CALLS: ["member_source", "human_name", "member_source", "model_name", "singular", "subject", "mail"]
CALLS: ["", "active", "where"]
CALLS: []
CALLS: ["user", "notification_settings", "source", "find_or_create_for"]
CALLS: ["find_or_initialize_by", "persisted?", "save"]
CALLS: ["new", "execute_hooks_for"]
CALLS: ["name", "info", "system_hook_service", "execute_hooks_for"]
CALLS: ["post_create_hook", "create_notification_setting", "send_request", "send_invite", "update_two_factor_requirement"]
CALLS: ["expanded_groups_requiring_two_factor_authentication", "pluck", "require_two_factor_authentication_from_group", "any?", "two_factor_grace_period", "min", "column_defaults", "save"]
CALLS: ["all_expanded_groups", "where"]
CALLS: ["groups", "new", "all_groups"]
CALLS: ["current_user", "authorized_groups", "sort_by", "users", "count", "full_path", "full_name", "avatar_url", "map"]
CALLS: ["groups", "select", "authorized_projects", "select", "new", "to_sql", "where"]
CALLS: ["statuses", "ordered", "latest", "sort_by", "group_by", "new", "map"]
CALLS: ["", "order"]
CALLS: ["", "where"]
CALLS: ["", "order"]
CALLS: ["authorized_groups", "visible_to_user", "authorized_groups", "public_to_user"]
CALLS: ["", "authorized_projects", "select", "reorder", "where"]
CALLS: ["authorized_groups", "select", "reorder", "where"]
CALLS: ["params", "owned_groups", "current_user", "full_private_access?", "all", "current_user", "groups_for_ancestors", "groups_for_descendants", "new", "all_groups", "include_public_groups?", "unscoped", "current_user", "public_to_user", "empty?", "none"]
CALLS: ["admin?"]
CALLS: ["current_user", "nil?", "params", "fetch"]
CALLS: ["current_user", "owned_groups", "none"]
CALLS: ["current_user", "groups"]
CALLS: ["current_user", "authorized_groups"]
CALLS: ["load_groups", "html", "view_to_html_string", "json", "respond_to"]
CALLS: ["user", "new", "current_user", "execute", "prepare_groups_for_rendering"]
CALLS: ["preload_max_member_access_for_collection"]
CALLS: ["two_factor_grace_period", "current_user", "try", "current_user", "two_factor_grace_period", "min"]
CALLS: ["require_two_factor_authentication_changed?", "two_factor_grace_period_changed?", "users", "find_each"]
CALLS: ["send_invite", "send_request", "create_notification_setting", "post_create_hook"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["set_diff"]
CALLS: ["for_merge_request?", "diff_for_line_code", "find_diff", "st_diff", "to_hash"]
CALLS: ["noteable_type", "line_code", "for_commit?", "commit_id", "noteable_id", "class", "where", "last", "try"]
CALLS: ["noteable", "noteable", "max_diff_options", "raw_diffs", "new_path", "new_path", "hexdigest", "diff_file_hash", "find"]
CALLS: ["compare", "diffs", "load_diffs"]
CALLS: ["merge_request_diff_files", "map", "include?", "include?", "select", "new"]
CALLS: ["merge_request_diff", "merge_request_diff", "raw_diffs", "compare", "raw_diffs"]
CALLS: ["line_code", "line_code", "split"]
CALLS: ["diffs"]
CALLS: ["raw", "diffs"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["post_create_hook", "refresh_user_cache"]
CALLS: ["user", "user", "new", "refresh_cache"]
CALLS: ["count_service", "new", "count_stored?", "global_count", "id", "to_i", "refresh_cache", "each"]
CALLS: []
CALLS: ["count_service", "project_ids", "query", "group", "count"]
CALLS: ["hours", "ago", "where", "limit", "pluck", "month", "ago", "where", "reorder", "limit", "pluck"]
CALLS: ["map"]
CALLS: ["collection", "map", "uniq"]
CALLS: ["except", "select", "mysql?", "except", "select", "to_sql", "from"]
CALLS: []
CALLS: ["count_service", "project_ids", "query", "group", "count"]
CALLS: []
CALLS: []
CALLS: ["cache", "cache_key", "read", "present?"]
CALLS: ["cache", "cache_key", "block_given?", "uncached_count", "raw?", "write"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["sync_share_with_group_lock_with_parent", "post_create_hook"]
CALLS: []
CALLS: []
CALLS: ["generate_subkeys"]
CALLS: ["key", "subkeys_from_key", "primary_keyid", "subkeys", "create!", "each"]
CALLS: ["upcase"]
CALLS: []
CALLS: []
CALLS: ["before_create_do_block"]
CALLS: ["project", "user", "new", "id", "perform_async", "run_after_commit", "execute", "queued_at", "now", "started_at", "now", "any", "finished_at", "now", "any", "args", "first", "failure_reason", "project", "loopback?", "pipeline_id", "complete?", "manual?", "pipeline_id", "perform_async", "pipeline_id", "perform_async", "stage_id", "perform_async", "id", "perform_async", "run_after_commit", "after_transition", "any", "project", "project", "new", "execute", "run_after_commit"]
CALLS: ["pipeline", "failure_reason?", "pipeline", "failure_reason", "to_sym", "pipeline", "failure_reason"]
CALLS: ["all", "maximum"]
CALLS: ["all", "minimum"]
CALLS: ["id", "perform_async", "run_after_commit"]
CALLS: []
CALLS: []
CALLS: ["add_root_as_member"]
CALLS: ["projects", "root_project"]
CALLS: []
CALLS: []
CALLS: ["reset_project_activity", "set_last_repository_updated_at", "track_user_interacted_projects"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["create_ref", "invalidate_cache"]
CALLS: ["raw_repository", "write_ref"]
CALLS: ["environment", "expire_etag_cache"]
CALLS: ["noteable", "discussions_rendered_on_frontend?", "new", "etag_key", "touch"]
CALLS: ["url_helpers", "project", "noteable_type", "underscore", "noteable_id", "project_noteable_notes_path"]
CALLS: []
CALLS: []
CALLS: ["url_helpers", "project", "realtime_changes_project_issue_path", "new", "touch"]
CALLS: ["new", "etag_cache_key", "touch", "tap"]
CALLS: ["url_helpers", "project", "project_environments_path"]
CALLS: ["awardable", "try"]
CALLS: []
CALLS: ["project", "repository", "ref", "ref_path", "create_ref"]
CALLS: []
CALLS: []
CALLS: ["refresh_user_cache", "post_create_hook"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["refresh_markdown_cache"]
CALLS: ["skip_project_check?", "cached_markdown_fields", "markdown_fields", "cached_markdown_fields", "html_field", "cacheless_render_field", "map", "to_h", "latest_cached_markdown_version", "write_attribute", "each"]
CALLS: ["cached_markdown_version", "cached_markdown_version"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["before_create_do_block"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["keep_around_commits"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["ensure_metadata", "before_create_do_block"]
CALLS: ["metadata", "project", "build_metadata"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["update_attributes", "title", "wiki", "title", "content", "format", "message", "create_page", "save"]
CALLS: ["commit_details", "wiki", "to_sym", "write_page", "update_project_activity", "message"]
CALLS: ["todos_done_count", "todos_pending_count"]
CALLS: ["cache", "id", "minutes", "new", "execute", "count", "fetch"]
CALLS: ["cache", "id", "minutes", "new", "execute", "count", "fetch"]
CALLS: ["current_user", "todos_done_count"]
CALLS: ["current_user", "todos_pending_count"]
CALLS: ["ensure_callout", "persisted?", "json", "respond_to", "json", "respond_to"]
CALLS: ["current_user", "callouts", "feature_names", "feature_name", "find_or_create_by"]
CALLS: ["params", "require"]
CALLS: ["snippet_params", "spammable_params", "merge", "current_user", "new", "execute", "valid?", "params", "move_temporary_files", "recaptcha_check_with_fallback", "snippets_path", "current_user"]
CALLS: ["params", "new", "execute", "each"]
CALLS: ["params", "require", "permit"]
CALLS: ["params", "require", "permit"]
CALLS: ["request", "params", "ensure_spam_config_loaded!", "verify_recaptcha", "params", "merge"]
CALLS: ["load_configurations!", "strong_memoize"]
CALLS: ["spammable", "valid?", "spammable_path", "render_recaptcha?", "ensure_spam_config_loaded!", "params", "flash", "html", "spammable", "render_to_string", "json", "respond_to"]
CALLS: ["snippet_path"]
CALLS: ["project_snippet_path"]
CALLS: ["project_issue_path"]
CALLS: ["spammable", "errors", "count", "enabled?", "spammable", "spam"]
CALLS: ["class", "__method__"]
CALLS: ["reset_password_token", "present?", "update_attributes", "flash", "current_user", "authentication_method", "log_audit_event", "current_user", "log_user_activity"]
CALLS: ["user_params", "user_params"]
CALLS: ["params", "require", "permit"]
CALLS: ["params", "require", "permit"]
CALLS: ["params", "require", "permit"]
CALLS: ["params", "require", "permit"]
CALLS: ["params", "require", "user_params_ce", "permit"]
CALLS: []
CALLS: ["login_counter", "increment", "new", "execute"]
CALLS: ["counter"]
CALLS: ["counter"]
CALLS: ["counter"]
CALLS: ["counter_name", "counter_description", "counter"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["username", "request", "remote_ip", "admin?", "info", "new", "for_authentication", "security_event"]
CALLS: ["id", "id", "class", "name", "create"]
CALLS: ["id", "name"]
CALLS: ["user", "new", "execute"]
CALLS: ["new", "for_authentication", "security_event"]
CALLS: ["params", "resource_name", "present?", "params", "resource_name", "blank?", "params", "resource_name", "params", "resource_name", "delete", "load_configurations!", "verify_recaptcha", "flash", "flash", "delete", "new_user_session_path", "redirect_to"]
CALLS: []
CALLS: ["controller_name", "singularize"]
CALLS: ["current_user", "project_params", "new", "execute", "saved?", "cookies", "project_path", "at", "custom_import_params", "project_path", "_", "name", "redirect_to", "active_new_project_tab", "active_new_project_tab", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["id", "persisted?"]
CALLS: ["project_params", "present?"]
CALLS: []
CALLS: ["params", "require", "project_params_attributes", "permit"]
CALLS: []
CALLS: ["params", "require", "permit"]
CALLS: ["params", "permit"]
CALLS: ["current_user", "wiki_params", "new", "execute", "persisted?", "project_wiki_path", "redirect_to", "fluid_layout", "_", "title", "capitalize", "_", "wiki_page_errors", "icon", "persisted?", "title", "capitalize", "project_wiki_path", "title", "capitalize", "persisted?", "s_", "s_", "current_user", "can?", "s_", "persisted?", "project_wiki_history_path", "s_", "current_user", "can?", "project_wiki_path", "s_", "_", "persisted?", "s_", "s_", "title", "namespace", "becomes", "persisted?", "form_errors", "persisted?", "last_commit_sha", "hidden_field", "label", "title", "text_field", "persisted?", "icon", "s_", "icon", "help_page_path", "label", "format", "options_for_select", "select", "label", "slug", "project_wiki_preview_markdown_path", "s_", "slug", "project_wiki_preview_markdown_path", "s_", "html_safe", "s_", "help_page_path", "s_", "html_safe", "label", "text_field", "persisted?", "_", "submit", "_", "project_wiki_path", "s_", "submit", "_", "project_wiki_path", "wiki_params", "build_page", "fluid_layout", "_", "title", "capitalize", "_", "wiki_page_errors", "icon", "persisted?", "title", "capitalize", "project_wiki_path", "title", "capitalize", "persisted?", "s_", "s_", "current_user", "can?", "s_", "persisted?", "project_wiki_history_path", "s_", "current_user", "can?", "project_wiki_path", "s_", "_", "persisted?", "s_", "s_", "title", "namespace", "becomes", "persisted?", "form_errors", "persisted?", "last_commit_sha", "hidden_field", "label", "title", "text_field", "persisted?", "icon", "s_", "icon", "help_page_path", "label", "format", "options_for_select", "select", "label", "slug", "project_wiki_preview_markdown_path", "s_", "slug", "project_wiki_preview_markdown_path", "s_", "html_safe", "s_", "help_page_path", "s_", "html_safe", "label", "text_field", "persisted?", "_", "submit", "_", "project_wiki_path", "s_", "submit", "_", "project_wiki_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["with_reactive_cache"]
CALLS: ["mock_service_url", "project", "namespace", "path", "project", "path", "join", "to_s"]
CALLS: ["drone_url", "project", "full_path", "to_s", "encode", "join", "to_s"]
CALLS: []
CALLS: ["project_url"]
CALLS: ["with_reactive_cache"]
CALLS: ["new", "update_attributes", "tap"]
CALLS: ["params", "require", "permit"]
CALLS: ["project", "triggers", "trigger_params", "current_user", "merge", "create", "valid?", "flash", "flash", "project_settings_ci_cd_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["params", "require", "permit"]
CALLS: ["new", "issuable", "current_user", "mark_todo", "current_user", "new", "execute", "count", "dashboard_todo_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project", "attributes_for_todo", "create_todos"]
CALLS: ["current_user", "new", "params", "params", "params", "params", "execute", "name", "project_tag_path", "params", "params", "s_", "params", "default_branch", "s_", "namespace_project_tags_path", "params", "s_", "s_", "s_", "preview_markdown_path", "s_", "preview_markdown_path", "s_", "s_", "s_", "project_tags_path", "repository", "ref_names", "to_json", "html_safe", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["branch_names", "tag_names"]
CALLS: ["refs", "map"]
CALLS: ["repository", "public_send"]
CALLS: ["ref_names", "join", "notes", "id", "pluralize"]
CALLS: ["params", "nil?", "include?", "include?", "include?", "params", "new", "execute", "take", "map", "s_", "tag_count", "nonzero?", "params", "new", "execute", "take", "map", "s_", "params", "unescape", "flatten", "exclude?", "to_json", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["is_a?", "group_preview_markdown_path", "is_a?", "preview_markdown_snippets_path", "preview_markdown_project_path"]
CALLS: ["snippet_params", "spammable_params", "merge", "current_user", "new", "execute", "recaptcha_check_with_fallback", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["params", "find", "current_user", "can?", "head", "project", "runners_path", "project", "current_user", "assign_to", "persisted?", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["shared?", "is_shared", "save", "runner_projects", "id", "create"]
CALLS: ["is_shared"]
CALLS: ["project_runners_path"]
CALLS: ["create_repository", "project_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project", "create_repository"]
CALLS: ["forked?", "gitlab_shell", "repository_storage", "disk_path", "create_repository", "repository", "after_create", "errors", "add"]
CALLS: ["fork_network", "fork_network", "root_project", "forked_project_link", "nil?", "forked_project_link", "forked_from_project", "nil?"]
CALLS: ["fork_network", "fork_network", "forked_from_project", "fork_network", "create_root_of_fork_network", "create_root_of_fork_network"]
CALLS: ["create_service_class", "current_user", "protected_ref_params", "new", "execute", "persisted?", "flash", "errors", "full_messages", "join", "html_safe", "redirect_to_repository_settings"]
CALLS: ["params", "require", "access_level_attributes", "permit"]
CALLS: []
CALLS: ["service_namespace"]
CALLS: []
CALLS: []
CALLS: ["params", "require", "access_level_attributes", "access_level_attributes", "permit"]
CALLS: ["project_settings_repository_path"]
CALLS: ["project", "current_user", "create_params", "new", "execute", "persisted?", "project", "project_pipeline_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["url_helpers", "project_pipeline_path"]
CALLS: ["url_helpers", "project_pipeline_path"]
CALLS: ["params", "require", "permit"]
CALLS: ["params", "require", "permit"]
CALLS: ["params", "require", "permit", "dig", "id", "merge!"]
CALLS: ["params", "require", "permit"]
CALLS: ["params", "require", "permit", "merge"]
CALLS: ["params", "require", "permit", "merge"]
CALLS: ["params", "require", "permit"]
CALLS: ["current_user", "schedule_params", "new", "execute", "persisted?", "pipeline_schedules_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project_pipeline_schedules_path"]
CALLS: ["params", "require", "permit"]
CALLS: ["pages_domains", "create_params", "create", "valid?", "project_pages_domain_path", "project_pages_path", "namespace", "becomes", "errors", "any?", "errors", "full_messages", "each", "label", "persisted?", "text_field", "config", "pages", "external_https", "label", "text_area", "label", "text_area", "submit", "_", "project_pages_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project", "current_user", "milestone_params", "new", "execute", "valid?", "project_milestone_path", "container_class", "namespace", "becomes", "form_errors", "label", "text_field", "label", "preview_markdown_path", "preview_markdown_path", "label", "text_field", "label", "text_field", "new_record?", "submit", "project_milestones_path", "submit", "project_milestone_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["params", "require", "permit"]
CALLS: ["params", "require", "permit"]
CALLS: ["project", "current_user", "merge_request_params", "new", "execute", "valid?", "merge_request_path", "redirect_to", "source_project", "target_project", "define_new_vars", "can_be_created", "params", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["target_project", "target_project", "repository", "branch_names", "target_project", "source_project", "commits", "prepare_commits_for_rendering", "diff_head_commit", "current_user", "id", "new", "execute", "set_pipeline_variables"]
CALLS: ["all_pipelines", "head_pipeline", "present?", "statuses", "relevant", "count"]
CALLS: ["", "where"]
CALLS: ["current_user", "configure_params", "configure", "flash", "service", "edit_project_service_path", "flash", "new_project_mattermost_path"]
CALLS: ["kubeclient", "get_service", "strong_memoize"]
CALLS: ["new", "command", "create", "update", "message"]
CALLS: ["bitmaps_enabled?", "git", "bitmaps_enabled?", "git", "git", "inspect"]
CALLS: []
CALLS: ["housekeeping_bitmaps_enabled"]
CALLS: ["project", "full_name", "merge"]
CALLS: ["params", "find_or_initialize_service"]
CALLS: ["find_or_initialize_service"]
CALLS: ["params", "require", "permit", "service_trigger_url", "asset_url", "merge"]
CALLS: ["gitlab", "url", "project_id", "to_param"]
CALLS: ["params", "where", "first"]
CALLS: ["project", "user", "params", "new", "execute", "render_json"]
CALLS: ["build_payload", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["new", "represent", "error_payload"]
CALLS: ["help_url", "merge"]
CALLS: ["label_params", "new", "execute", "valid?", "project_labels_path", "html", "json", "respond_to", "html", "errors", "messages", "json", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: []
CALLS: ["repo", "tags", "new", "to_hashes"]
CALLS: ["raw_repository", "tags"]
CALLS: []
CALLS: []
CALLS: ["manifest", "manifest", "manifest", "new", "map"]
CALLS: ["client", "path", "repository_tags"]
CALLS: ["options", "new"]
CALLS: ["api_key", "authentication", "new"]
CALLS: ["session", "new"]
CALLS: ["session", "new"]
CALLS: ["session", "access_token_key", "client_options", "new"]
CALLS: []
CALLS: ["provider"]
CALLS: ["session", "host_key"]
CALLS: ["provider"]
CALLS: ["session", "session", "new"]
CALLS: ["provider", "app_id", "provider", "app_secret", "options", "new"]
CALLS: ["project", "repository", "tag_names"]
CALLS: ["image", "tags", "new"]
CALLS: ["from_image"]
CALLS: ["project", "container_repositories", "params", "find"]
CALLS: ["project", "container_repositories", "params", "find"]
CALLS: ["params", "require", "permit"]
CALLS: ["params", "require", "permit"]
CALLS: ["params", "permit"]
CALLS: ["issue_params", "spammable_params", "merge", "params", "params", "merge", "project", "current_user", "new", "execute", "discussions_to_resolve", "count", "flash", "discussion_to_resolve_id", "recaptcha_check_with_fallback", "html", "attachment", "url", "to_js", "js", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["issue_params_with_info_from_discussions", "whitelisted_issue_params", "merge"]
CALLS: ["current_user", "project", "can?", "params", "slice", "params", "slice"]
CALLS: ["merge_request_to_resolve_discussions_of", "title_from_merge_request", "description_for_discussions"]
CALLS: ["discussions_to_resolve", "empty?", "merge_request_to_resolve_discussions_of", "to_reference", "discussions_to_resolve", "size", "pluralize", "merge_request_to_resolve_discussions_of", "to_reference", "items_for_discussions", "join"]
CALLS: ["discussions_to_resolve", "item_for_discussion", "map"]
CALLS: ["first_note_to_resolve", "first_note", "first_note", "build", "notes", "size", "author", "to_reference", "pluralize", "note", "new", "call", "lines", "map", "join", "join"]
CALLS: ["resolvable?", "notes", "find", "strong_memoize"]
CALLS: ["potentially_resolvable?", "system?"]
CALLS: ["class", "name", "include?", "noteable", "supports_resolvable_notes?"]
CALLS: ["base_class_name", "include?"]
CALLS: ["class", "base_class", "name"]
CALLS: ["potentially_resolvable?", "notes", "any?", "strong_memoize"]
CALLS: ["notes", "first", "strong_memoize"]
CALLS: ["merge_request_to_resolve_discussions_of", "title"]
CALLS: ["move_between_lists?", "add_label_ids", "remove_label_ids", "issue_state", "merge!", "move_between_ids", "move_between_ids", "board", "group", "id"]
CALLS: ["params", "params", "params", "params"]
CALLS: ["moving_to_list", "movable?", "moving_from_list", "label_id", "board", "group_board?", "parent", "id", "on_group_boards", "pluck", "parent", "id", "on_project_boards", "pluck", "compact"]
CALLS: ["board", "lists", "params", "find_by"]
CALLS: ["board", "lists", "params", "find_by"]
CALLS: ["label?"]
CALLS: ["", "with_lists_and_board", "where"]
CALLS: ["", "joins", "movable", "merge"]
CALLS: ["", "list_types", "where"]
CALLS: ["", "with_lists_and_board", "where"]
CALLS: ["group_id", "present?"]
CALLS: ["moving_to_list", "label_id", "compact"]
CALLS: ["moving_from_list", "closed?", "moving_to_list", "closed?"]
CALLS: ["moving_from_list", "present?", "moving_to_list", "present?", "moving_from_list", "moving_to_list"]
CALLS: ["params", "require", "issue_params_attributes", "permit"]
CALLS: []
CALLS: ["params", "require", "permit", "params", "params", "request", "merge"]
CALLS: ["import_url", "params", "save", "reload", "import_schedule", "project_import_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["errors", "empty?", "import?", "bare_repository_import?", "import_schedule", "errors", "full_messages", "join", "fail"]
CALLS: ["dup", "id", "id", "logger", "error", "errors", "add", "import?", "mark_import_as_failed"]
CALLS: ["errors", "dup", "sanitize", "import_fail", "update_column", "logger", "message", "error"]
CALLS: ["import_type"]
CALLS: ["external_import?", "forked?", "gitlab_project_import?", "bare_repository_import?"]
CALLS: ["hooks", "hook_params", "new", "save", "valid?", "hooks", "select", "flash", "errors", "full_messages", "join", "html_safe", "project_settings_integrations_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["params", "require", "triggers", "values", "permit"]
CALLS: ["params", "require", "triggers", "values", "permit"]
CALLS: ["params", "present?", "params", "find", "current_user", "can?", "render_404", "project", "current_user", "group_link_create_params", "new", "execute", "flash", "project", "project_project_members_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["params", "permit"]
CALLS: ["params", "find", "projects", "project", "path", "find_by", "forked_from_project", "project", "project", "current_user", "new", "execute", "saved?", "forked?", "import_in_progress?", "continue_params", "project_import_path", "continue_params", "continue_params", "continue_params", "project_path", "name", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["import_started?", "import_scheduled?"]
CALLS: ["import_status"]
CALLS: ["import_status", "import?"]
CALLS: ["params", "permit", "start_with?", "start_with?"]
CALLS: ["project", "environments", "environment_params", "create", "persisted?", "project", "project_environment_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["params", "require", "permit"]
CALLS: ["current_user", "create_params", "new", "execute", "valid?", "flash", "errors", "full_messages", "join", "html_safe", "redirect_to_repository_settings", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["params", "blank?", "params", "blank?", "flash", "params", "presence", "params", "presence", "project_compare_index_path", "params", "params", "project_compare_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project", "current_user", "create_params", "new", "execute", "persisted?", "project", "project_cluster_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project", "current_user", "create_params", "new", "token_in_session", "execute", "persisted?", "project", "project_cluster_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["session", "session_key_for_token"]
CALLS: ["project", "current_user", "new", "execute"]
CALLS: ["params", "yaml_processor_options", "validation_message", "blank?", "blank?", "yaml_processor_options", "new", "stages", "builds", "jobs", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["prepare!", "blob", "data", "new", "message"]
CALLS: ["new", "decorate"]
CALLS: ["diff_file", "old_blob", "load_all_data!", "diff_file", "new_blob", "load_all_data!"]
CALLS: ["diff", "diff", "project_repository", "new"]
CALLS: ["active?", "project_id", "project", "repository", "fetch", "project", "repository"]
CALLS: ["original_position", "project", "repository", "diff_file"]
CALLS: []
CALLS: []
CALLS: ["new"]
CALLS: ["blob", "load_all_data!"]
CALLS: []
CALLS: ["id", "blob_at", "id", "tree", "entries", "any?", "join", "project_tree_path", "render_404"]
CALLS: ["namespace", "repository", "root_ref", "namespace_project_tree_path"]
CALLS: ["prepare!", "blob", "data", "validation_message"]
CALLS: ["project", "repository", "commit", "sha"]
CALLS: ["current_user", "created_projects", "where", "to_json"]
CALLS: ["current_user", "created_projects", "where", "to_json"]
CALLS: ["current_user", "created_projects", "provider", "where", "to_json"]
CALLS: ["current_user", "created_projects", "where", "to_json"]
CALLS: ["current_user", "created_projects", "where", "to_json"]
CALLS: ["params", "strip_tags", "sanitize", "unescape", "project", "empty_repo?", "project", "deployment_platform", "present?", "project", "current_user", "new", "ref", "execute", "params", "current_user", "id", "new", "params", "find_by", "current_user", "new_issue_branch", "project", "url_to_autodeploy_setup", "view_context", "autodeploy_flash_notice", "project_tree_path", "params", "default_branch", "namespace_project_branches_path", "params", "icon", "project_branches_path", "repository", "ref_names", "to_json", "html_safe", "html", "project_tree_url", "json", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["url_helpers", "default_branch", "project_compare_url", "new", "create_note"]
CALLS: ["note", "merge", "create", "metadata?", "system_note_metadata", "metadata", "new"]
CALLS: ["metadata", "present?"]
CALLS: ["state", "target_project", "current_user", "change_status"]
CALLS: ["dup", "gfm_reference", "new", "create_note"]
CALLS: ["class", "to_s", "underscore", "humanize", "downcase", "to_reference"]
CALLS: ["state", "project", "current_user", "change_status"]
CALLS: ["project", "current_user", "state", "change_status"]
CALLS: ["_", "sanitize", "truncate", "link_to_autodeploy_doc", "html_safe"]
CALLS: ["project", "truncate_team"]
CALLS: ["id"]
CALLS: ["_", "help_page_path"]
CALLS: ["project_new_blob_path"]
CALLS: ["join", "project_blob_path", "project_new_blob_path", "create_commit", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["user_access", "branch_name_or_ref", "can_push_to_branch?", "current_user", "fork_of", "repository", "next_branch", "merge", "current_user", "new", "execute", "update_flash_notice", "final_success_path", "html", "json", "respond_to", "flash", "respond_to?", "call", "html", "json", "respond_to"]
CALLS: ["namespace", "find_fork_of"]
CALLS: ["fork_network", "active?", "id", "fork_network", "projects", "find_forks_in", "first", "new", "fetch", "fork_network", "projects", "find_forks_in", "first"]
CALLS: ["projects", "where"]
CALLS: ["branch_names", "match", "to_i", "map", "compact", "max"]
CALLS: []
CALLS: ["create_merge_request?", "merge_request_exists?", "existing_merge_request_path", "new_merge_request_path", "respond_to?", "call"]
CALLS: ["params", "present?", "different_project?"]
CALLS: []
CALLS: ["current_user", "id", "new", "execute", "opened", "find_by", "strong_memoize"]
CALLS: ["project_merge_request_path"]
CALLS: ["id", "id", "project_new_merge_request_path"]
CALLS: ["flash", "create_merge_request?", "merge_request_exists?", "flash", "different_project?", "flash"]
CALLS: ["current_user", "new"]
CALLS: ["current_user", "params", "validate_and_consume_otp!", "current_user", "current_user", "new", "generate_otp_backup_codes!", "execute!", "build_qr_code", "setup_u2f_registration", "header_title", "profile_path"]
CALLS: ["execute", "new"]
CALLS: ["can_see_access_requests?", "source", "requesters"]
CALLS: ["source", "source", "class", "to_s", "underscore", "source", "allowed?"]
CALLS: ["new", "current_user", "u2f_registrations", "u2f_app_id", "new", "registration_requests", "map", "authentication_requests", "session", "map", "gon", "session", "u2f_app_id", "push"]
CALLS: ["transaction_begin", "create_event", "new", "execute", "transaction_end", "transaction", "new", "cache_last_push_event", "new", "execute"]
CALLS: ["project", "project_cache_key", "user_cache_key", "project", "forked_from_project", "project_cache_key", "id", "set_key", "each"]
CALLS: ["cache", "write"]
CALLS: ["id", "id"]
CALLS: ["id"]
CALLS: ["request", "base_url"]
CALLS: ["current_user", "account_string", "issuer_host", "otp_provisioning_uri", "render_qrcode"]
CALLS: ["config", "gitlab", "host"]
CALLS: ["gitlab", "host"]
CALLS: ["issuer_host", "current_user", "email"]
CALLS: ["finder", "personal_access_token_params", "build", "save", "current_user", "id", "token", "redis_store!", "profile_personal_access_tokens_path", "set_index_vars", "header_title", "profile_path"]
CALLS: ["redis_shared_state_key", "set", "with"]
CALLS: []
CALLS: ["current_user", "available_scopes", "finder", "execute", "finder", "execute", "order", "current_user", "id", "redis_getdel"]
CALLS: ["redis_shared_state_key", "get", "redis_shared_state_key", "del", "with"]
CALLS: ["params", "require", "permit"]
CALLS: ["current_user", "oauth_applications", "current_user", "oauth_authorized_tokens", "reject", "map", "uniq", "reject", "new"]
CALLS: ["id", "where"]
CALLS: ["current_user", "available_scopes", "finder", "build", "finder", "execute", "finder", "execute", "order"]
CALLS: ["password_automatically_set", "user_params", "valid_password?", "new_profile_password_path", "user_params", "user_params", "current_user", "merge", "new", "execute", "current_user", "new", "execute", "root_path", "header_title", "profile_path"]
CALLS: ["current_user", "key_params", "request", "remote_ip", "merge", "new", "execute", "persisted?", "profile_key_path", "current_user", "keys", "select", "header_title", "profile_path"]
CALLS: ["params", "require", "permit"]
CALLS: ["params", "require"]
CALLS: ["current_user", "gpg_key_params", "new", "execute", "persisted?", "profile_gpg_keys_path", "current_user", "gpg_keys", "select", "header_title", "profile_path"]
CALLS: ["params", "require", "permit"]
CALLS: ["current_user", "email_params", "current_user", "merge", "new", "execute", "errors", "blank?", "flash", "errors", "full_messages", "first", "profile_emails_url", "header_title", "profile_path"]
CALLS: ["params", "require", "permit"]
CALLS: ["current_user", "chat_names", "chat_name_params", "new", "save", "flash", "chat_name", "flash", "delete_chat_name_token", "profile_chat_names_path"]
CALLS: ["id"]
CALLS: ["current_user", "chat_names"]
CALLS: ["chat_name_token", "get", "render_404"]
CALLS: ["new"]
CALLS: ["params", "render_404", "render_404", "params", "new"]
CALLS: ["chat_name_token", "delete"]
CALLS: ["current_user", "create_application_params", "new", "request", "execute", "persisted?", "flash", "t", "oauth_application_url", "set_index_vars", "header_title", "profile_path"]
CALLS: ["application_params", "current_user", "tap"]
CALLS: ["params", "require", "permit"]
CALLS: ["resource", "can_read?", "render_404", "current_user", "resource", "notification_settings_for", "notification_setting_params", "update_attributes", "render_response"]
CALLS: ["current_user", "sign_up_params", "new", "execute"]
CALLS: ["params", "require", "permit"]
CALLS: ["dup", "params", "require", "permit"]
CALLS: ["view_to_html_string"]
CALLS: ["class", "name", "downcase", "to_sym", "current_user", "can?"]
CALLS: ["params", "present?", "params", "find", "params", "present?", "params", "find"]
CALLS: ["client", "params", "repo", "session", "current_user", "namespace", "current_user", "new", "execute", "persisted?", "new", "represent", "errors", "full_messages"]
CALLS: ["file_is_valid?", "redirect_back_or_default", "current_user", "project_params", "new", "execute", "saved?", "project_path", "name", "redirect_to", "errors", "full_messages", "join", "redirect_back_or_default"]
CALLS: ["project_params", "project_params", "respond_to?"]
CALLS: ["client", "params", "to_i", "project", "client", "user", "find_or_create_namespace", "current_user", "can?", "current_user", "access_params", "new", "execute", "persisted?", "new", "represent", "errors", "full_messages"]
CALLS: ["session"]
CALLS: ["session", "access_token_key"]
CALLS: ["params", "presence", "current_user", "namespace", "current_user", "new", "execute", "errors", "any?", "current_user", "namespace", "error", "current_user", "namespace"]
CALLS: ["client", "params", "to_i", "repo", "params", "presence", "name", "params", "presence", "current_user", "namespace_path", "current_user", "namespace_path", "find_or_create_namespace", "current_user", "can?", "current_user", "access_params", "provider", "new", "extra_project_attrs", "execute", "persisted?", "new", "represent", "errors", "full_messages"]
CALLS: []
CALLS: ["client", "params", "repo", "session", "session", "session", "client", "user_map", "current_user", "namespace", "current_user", "new", "execute", "persisted?", "new", "represent", "errors", "full_messages"]
CALLS: ["client", "user_map", "session", "update", "sort"]
CALLS: ["client", "user_map", "session", "update"]
CALLS: ["credentials", "new", "params", "to_s", "gsub", "repo", "params", "presence", "name", "owner", "user", "username", "current_user", "username", "params", "presence", "current_user", "find_or_create_namespace", "current_user", "can?", "session", "connection", "token", "current_user", "credentials", "new", "execute", "persisted?", "new", "represent", "errors", "full_messages"]
CALLS: ["current_user", "group_params", "new", "execute", "persisted?", "chat_team", "present?", "name", "name", "dashboard_groups_path", "dashboard_groups_path", "form_errors", "label", "_", "_", "file_field", "_", "default_group_visibility", "default_group_visibility", "local_assigns", "fetch", "icon", "help_page_path", "label", "can_change_visibility_level", "form_model", "values", "form_model", "disallowed_visibility_level?", "restricted_visibility_levels", "include?", "form", "model_method", "form", "model_method", "selected_level", "radio_button", "visibility_level_icon", "visibility_level_label", "form_model", "visibility_level_description", "restricted_visibility_level_description", "form_model", "disallowed_visibility_level_description", "label", "each", "form_model", "render", "visibility_level_icon", "visibility_level_label", "form_model", "visibility_level_description", "config", "mattermost", "enabled", "custom_icon", "label", "check_box", "label", "mattermost", "host", "submit", "dashboard_groups_path", "name", "page_description", "description", "header_title", "group_title", "current_user"]
CALLS: ["respond_to?", "visibility_level_allowed?"]
CALLS: ["visibility_level", "visibility_level_allowed_as_fork?", "visibility_level_allowed_by_group?"]
CALLS: ["visibility_level", "group", "group", "visibility_level"]
CALLS: ["visibility_level", "forked?", "forked_project_link", "forked_from_project", "visibility_level"]
CALLS: ["visibility_level", "visibility_level_allowed_by_parent?", "visibility_level_allowed_by_projects?", "visibility_level_allowed_by_sub_groups?"]
CALLS: ["visibility_level", "children", "where", "exists?"]
CALLS: ["paginator", "params", "paginate"]
CALLS: ["visibility_level", "projects", "where", "exists?"]
CALLS: ["visibility_level", "parent_id", "parent_id", "nonzero?", "parent", "visibility_level"]
CALLS: ["current_user", "admin?", "restricted_visibility_levels"]
CALLS: ["visibility_levels", "key", "s_"]
CALLS: ["disallowed_project_visibility_level_description", "disallowed_group_visibility_level_description"]
CALLS: ["level_name", "downcase", "visibility_level_allowed_by_projects?", "visibility_level_allowed_by_sub_groups?", "visibility_level_allowed_by_parent?", "parent", "visibility_level_errors_for_group", "any?", "to_sentence", "html_safe"]
CALLS: ["name", "group_path", "edit_group_path", "visibility"]
CALLS: ["level_name", "downcase", "visibility_level_allowed_as_fork?", "visibility_level_allowed_by_group?", "group", "visibility_level_errors_for_group", "any?", "to_sentence", "html_safe"]
CALLS: ["level_name", "capitalize"]
CALLS: ["project_visibility_level_description", "group_visibility_level_description", "snippet_visibility_level_description"]
CALLS: ["is_a?"]
CALLS: []
CALLS: ["_", "_", "_"]
CALLS: []
CALLS: ["params", "require", "group_params_attributes", "permit"]
CALLS: []
CALLS: ["params", "require", "group_params_ce", "permit"]
CALLS: []
CALLS: ["group", "current_user", "milestone_params", "new", "execute", "persisted?", "milestone_path", "form_errors", "label", "text_field", "label", "group_preview_markdown_path", "group_preview_markdown_path", "label", "text_field", "label", "text_field", "new_record?", "submit", "group_milestones_path", "submit", "group_milestone_path", "name", "page_description", "description", "header_title", "group_title", "current_user"]
CALLS: ["group_milestone?", "group", "group_milestone_path", "project_milestone?", "project", "project_milestone_path"]
CALLS: ["project_id", "present?"]
CALLS: []
CALLS: ["legacy_group_milestone?", "group", "safe_title", "title", "group_milestone_path", "group", "iid", "group_milestone_path"]
CALLS: []
CALLS: []
CALLS: ["label_params", "new", "group", "execute", "valid?", "group_labels_path", "html", "new", "represent_appearance", "json", "respond_to", "name", "page_description", "description", "header_title", "group_title", "current_user"]
CALLS: ["represent"]
CALLS: ["model", "params", "uploader_class", "new", "execute", "json", "json", "respond_to"]
CALLS: ["uploader", "const_get"]
CALLS: ["uploader", "const_get"]
CALLS: ["uploader", "const_get"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["note_params", "params", "params", "merge", "note_project", "current_user", "new", "execute", "is_a?", "current_user", "new", "execute", "note_json", "json", "redirect_back_or_default", "html", "respond_to"]
CALLS: ["params", "merge"]
CALLS: ["project", "params", "present?", "find", "project", "current_user", "can?", "access_denied!", "strong_memoize"]
CALLS: ["params", "require", "permit"]
CALLS: ["commands_changes", "persisted?", "use_note_serializer?", "note_serializer", "represent", "merge!", "id", "noteable", "discussion_id", "note_html", "note", "try", "merge!", "noteable", "to_discussion", "individual_note?", "resolvable?", "diff_discussion_html", "discussion_html", "merge!", "diff_discussion?", "line_code", "errors", "merge!"]
CALLS: ["build"]
CALLS: ["discussion_class", "override_discussion_id", ""]
CALLS: ["discussion_id"]
CALLS: ["noteable"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["build_discussion_id", "join", "hexdigest"]
CALLS: ["base_discussion_id"]
CALLS: ["noteable_id", "commit_id", "noteable_type", "try"]
CALLS: ["base_discussion_id", "hex"]
CALLS: []
CALLS: ["params", "noteable", "is_a?", "cookies", "noteable", "discussions_rendered_on_frontend?"]
CALLS: ["project", "noteable", "current_user", "new"]
CALLS: ["individual_note?", "render_to_string"]
CALLS: ["diff_discussion?", "on_image?", "params", "params", "render_to_string"]
CALLS: []
CALLS: []
CALLS: ["position", "position_type"]
CALLS: ["render_to_string"]
CALLS: ["params", "permit", "current_user", "new", "membershipable", "execute", "members_page_url", "members_page_url"]
CALLS: ["membershipable", "membershipable", "polymorphic_url", "membershipable", "project_project_members_path", "membershipable"]
CALLS: ["board", "parent", "current_user", "list_params", "new", "board", "execute", "valid?", "serialize_as_json", "errors"]
CALLS: ["as_json"]
CALLS: ["as_json"]
CALLS: ["as_json"]
CALLS: ["as_json"]
CALLS: ["params", "require", "permit"]
CALLS: ["board", "group_board?", "as_json"]
CALLS: ["board_parent", "project", "current_user", "issue_params", "new", "execute", "valid?", "serialize_as_json", "errors"]
CALLS: ["board", "parent"]
CALLS: ["current_user", "user_params", "merge", "new", "execute", "persisted?", "html", "json", "form_errors", "label", "text_field", "label", "text_field", "label", "text_field", "new_record?", "label", "label", "object", "force_random_password", "password_field", "label", "object", "force_random_password", "password_field", "label", "number_field", "label", "check_box", "label", "current_user", "radio_button", "radio_button", "label", "check_box", "label", "file_field", "label", "text_field", "label", "text_field", "label", "text_field", "label", "text_field", "new_record?", "submit", "admin_users_path", "submit", "admin_user_path", "html", "errors", "json", "respond_to", "admin_root_path"]
CALLS: ["params", "find", "current_user", "assign_to", "persisted?", "admin_runner_path", "admin_runner_path", "admin_root_path"]
CALLS: ["label_params", "new", "execute", "persisted?", "admin_labels_url", "admin_root_path"]
CALLS: ["finder", "impersonation_token_params", "build", "save", "admin_user_impersonation_tokens_path", "set_index_vars", "admin_root_path"]
CALLS: ["params", "require", "permit"]
CALLS: ["identity_params", "new", "user_id", "user", "id", "save", "admin_user_identities_path", "admin_root_path"]
CALLS: ["params", "require", "permit"]
CALLS: ["hook_params", "new", "save", "admin_hooks_path", "all", "admin_root_path"]
CALLS: ["group_params", "new", "name", "name", "path", "dup", "save", "current_user", "add_owner", "name", "default_group_visibility", "form_errors", "label", "_", "_", "file_field", "_", "visibility_level", "can_change_group_visibility_level?", "visibility_level", "local_assigns", "fetch", "icon", "help_page_path", "label", "can_change_visibility_level", "form_model", "values", "form_model", "disallowed_visibility_level?", "restricted_visibility_levels", "include?", "form", "model_method", "form", "model_method", "selected_level", "radio_button", "visibility_level_icon", "visibility_level_label", "form_model", "visibility_level_description", "restricted_visibility_level_description", "form_model", "disallowed_visibility_level_description", "label", "each", "form_model", "render", "visibility_level_icon", "visibility_level_label", "form_model", "visibility_level_description", "form", "form", "check_box", "label", "current_user", "admin?", "label", "lfs_enabled?", "check_box", "icon", "help_page_path", "label", "current_user", "label", "check_box", "icon", "help_page_path", "label", "text_field", "new_record?", "submit", "admin_groups_path", "submit", "admin_group_path", "admin_root_path"]
CALLS: ["nil?", "namespace", "lfs_enabled?", "config", "lfs", "enabled"]
CALLS: ["config", "lfs", "enabled"]
CALLS: ["add_user"]
CALLS: ["project", "add_user"]
CALLS: ["retrieve_member", "retrieve_access_level", "can_update_member?", "attributes", "created_by", "request?", "new", "execute", "save"]
CALLS: ["created_by_id", "created_by_id", "find_by"]
CALLS: ["owner?", "new_record?"]
CALLS: ["requested_at", "present?"]
CALLS: ["type", "underscore", "can?"]
CALLS: ["access_levels", "to_i", "fetch"]
CALLS: ["retrieve_user", "is_a?", "id", "members", "id", "build", "members_and_requesters", "id", "find_or_initialize_by", "members", "build"]
CALLS: ["is_a?", "find_by", "find_by"]
CALLS: ["add_user"]
CALLS: ["config", "lfs", "enabled", "nil?", "config", "lfs", "enabled"]
CALLS: ["current_user", "can?"]
CALLS: ["current_user", "create_params", "merge", "new", "execute", "persisted?", "admin_deploy_keys_path", "local_assigns", "fetch", "local_assigns", "fetch", "deploy_keys_project_for", "form_errors", "label", "text_field", "new_record?", "label", "help_page_path", "text_area", "label", "text_field", "present?", "check_box", "label", "fields_for", "submit", "admin_deploy_keys_path", "admin_root_path"]
CALLS: ["broadcast_message_params", "new", "save", "admin_broadcast_messages_path", "admin_root_path"]
CALLS: ["params", "require", "permit"]
CALLS: ["current_user", "application_params", "new", "request", "execute", "persisted?", "flash", "t", "admin_application_url", "admin_root_path"]
CALLS: ["appearance_params", "new", "save", "admin_appearances_path", "admin_appearances_path", "form_errors", "label", "header_logo?", "header_logo_url", "persisted?", "header_logos_admin_appearances_path", "hidden_field", "file_field", "label", "text_field", "label", "text_area", "label", "logo?", "logo_url", "persisted?", "logo_admin_appearances_path", "hidden_field", "file_field", "label", "text_area", "submit", "persisted?", "preview_sign_in_admin_appearances_path", "new_project_path", "updated_at", "admin_root_path"]
CALLS: ["params", "require", "allowed_appearance_params", "permit"]
CALLS: []
CALLS: ["report_params", "new", "reporter", "current_user", "save", "notify", "user"]
CALLS: ["verification_enabled?", "domain", "domain", "info", "notification_service", "domain", "public_send"]
CALLS: ["pages_domain_verification_enabled?"]
CALLS: ["webhook", "new", "project_name", "pretext", "activity", "attachments", "ping"]
CALLS: ["project", "full_name", "gsub"]
CALLS: ["project", "full_name", "gsub"]
CALLS: ["user_combined_name", "action", "wiki_page_link", "project_link", "title", "user_avatar"]
CALLS: ["user_avatar_without_link", "user_path", "link_to", "mail_to"]
CALLS: ["try", "merge", "user_avatar_url_for", "nil?", "push", "push", "placeholder_image", "tag"]
CALLS: ["new"]
CALLS: []
CALLS: ["avatar_icon_for_user", "avatar_icon_for_email"]
CALLS: ["avatar_url", "default_avatar", "gravatar_icon"]
CALLS: ["asset_path"]
CALLS: ["new", "execute", "default_avatar"]
CALLS: ["try", "find_by_any_email", "avatar_icon_for_user", "gravatar_icon"]
CALLS: ["params", "find_tag"]
CALLS: ["tags", "name", "find"]
CALLS: ["image", "params", "tag"]
CALLS: ["markdown", "description", "description_message"]
CALLS: ["project", "render", "merge!", "render", "post_process", "sanitize", "truncate"]
CALLS: ["format", "attachment_color"]
CALLS: []
CALLS: ["status"]
CALLS: []
CALLS: ["note", "format", "attachment_color"]
CALLS: ["issue_title", "issue_url", "description", "format"]
CALLS: ["issues_url", "to_s", "gsub"]
CALLS: ["project", "project_issue_url"]
CALLS: ["reference_prefix", "issue_iid", "title"]
CALLS: ["project", "project_issue_url"]
CALLS: ["present?", "markdown_unsafe", "prepare_for_rendering"]
CALLS: ["present?", "current_user", "current_user", "merge!", "post_process", "preserve"]
CALLS: ["render"]
CALLS: ["new_branch?", "removed_branch?", "user_combined_name", "ref_type", "project_link", "compare_link", "user_avatar"]
CALLS: ["ref", "tag_ref?"]
CALLS: ["compare_url"]
CALLS: ["truncate_sha", "truncate_sha", "config", "gitlab", "url"]
CALLS: []
CALLS: []
CALLS: ["truncate_sha"]
CALLS: ["project_url", "before", "after"]
CALLS: ["after", "blank_ref?"]
CALLS: ["before", "blank_ref?"]
CALLS: ["new_branch?", "removed_branch?", "markdown", "commit_messages", "commit_message_attachments"]
CALLS: ["commit_messages", "format", "attachment_color"]
CALLS: ["commits", "compose_commit_message", "map", "join"]
CALLS: ["truncate_sha"]
CALLS: ["pipeline_link", "ref_type", "branch_link", "user_combined_name", "humanized_status", "project_link", "duration", "pretty_duration", "user_avatar"]
CALLS: []
CALLS: ["ref", "branch_url"]
CALLS: ["project_url", "ref"]
CALLS: ["project_url", "ref"]
CALLS: ["pipeline_id", "pipeline_url"]
CALLS: ["project_url", "pipeline_id"]
CALLS: ["project", "id", "project_pipeline_url"]
CALLS: ["ref", "branch_url"]
CALLS: ["status", "status"]
CALLS: ["duration", "hour", "at", "utc", "strftime"]
CALLS: ["calculate_duration"]
CALLS: ["started_at", "finished_at", "finished_at", "started_at", "started_at", "now", "started_at"]
CALLS: ["markdown", "message", "message", "format", "attachment_color"]
CALLS: []
CALLS: ["user_combined_name", "target", "note_url", "link", "project_link", "formatted_title", "user_avatar"]
CALLS: ["title", "format_title"]
CALLS: ["render_line"]
CALLS: ["lines", "first", "chomp", "markdown"]
CALLS: ["lines", "first", "chomp"]
CALLS: ["lines", "first", "chomp"]
CALLS: []
CALLS: ["noteable", "is_a?", "noteable", "snippet_note_path", "project_note_path"]
CALLS: ["markdown", "note", "description_message"]
CALLS: ["state", "user_combined_name", "project_link", "merge_request_link", "user_avatar"]
CALLS: ["merge_request_title", "merge_request_url", "link"]
CALLS: ["project_url", "merge_request_iid"]
CALLS: ["reference_prefix", "merge_request_iid", "title"]
CALLS: ["project", "project_merge_request_url"]
CALLS: []
CALLS: ["state", "user_combined_name", "project_link", "issue_link", "user_avatar"]
CALLS: ["issue_title", "issue_url", "link"]
CALLS: ["opened_issue?", "markdown", "description", "description_message"]
CALLS: ["action"]
CALLS: []
CALLS: []
CALLS: ["markdown", "message", "message", "format"]
CALLS: ["project", "project", "full_name"]
CALLS: ["html", "load_events", "count", "pager_json", "json", "respond_to", "_", "container_class", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["current_user", "user", "params", "new", "execute", "current_user", "new", "request", "format", "atom?", "execute"]
CALLS: ["id", "where", "params", "to_i", "event_filter", "new", "to_a", "current_user", "new", "request", "format", "atom?", "execute"]
CALLS: ["cookies", "present?", "cookies", "split", "new"]
CALLS: ["params", "params", "params", "params", "group", "current_user", "new", "execute", "includes", "params", "to_i", "event_filter", "new", "to_a", "current_user", "new", "request", "format", "atom?", "execute"]
CALLS: ["params", "current_user", "new", "execute", "current_user", "authorized_projects", "params", "to_i", "new", "to_a", "current_user", "new", "execute"]
CALLS: ["params", "merge", "load_projects", "params", "to_i", "event_filter", "new", "to_a", "current_user", "new", "request", "format", "atom?", "execute"]
CALLS: ["render_to_string"]
CALLS: ["html", "load_events", "count", "pager_json", "json", "respond_to", "rss_url_options", "group_url", "name", "auto_discovery_link_tag", "rss_url_options", "group_path", "icon", "icon", "all", "_", "s_", "event_filter_visible", "push", "_", "s_", "event_filter_visible", "merged", "_", "s_", "event_filter_visible", "issue", "_", "s_", "comments_visible?", "comments", "_", "s_", "team", "_", "s_", "spinner", "name", "page_description", "description", "header_title", "group_title", "current_user"]
CALLS: ["current_user", "try"]
CALLS: ["icon"]
CALLS: ["event_filter_visible", "event_filter_visible", "event_filter_visible"]
CALLS: ["current_user", "feature_available?"]
CALLS: ["project", "project_feature", "access_level", "guest?", "admin?"]
CALLS: ["id", "max_member_access"]
CALLS: ["access_level", "get_permission"]
CALLS: ["project", "team", "member?", "full_private_access?"]
CALLS: ["id", "max_member_access"]
CALLS: ["max_member_access_for_user"]
CALLS: ["html", "load_events", "count", "pager_json", "json", "respond_to", "rss_url_options", "dashboard_projects_url", "auto_discovery_link_tag", "activity_dashboard_path", "container_class", "params", "nil?", "active_when", "activity_dashboard_path", "params", "active_when", "activity_dashboard_path", "rss_url_options", "dashboard_projects_path", "icon", "icon", "all", "_", "s_", "event_filter_visible", "push", "_", "s_", "event_filter_visible", "merged", "_", "s_", "event_filter_visible", "issue", "_", "s_", "comments_visible?", "comments", "_", "s_", "team", "_", "s_", "spinner", "header_title", "root_path"]
CALLS: []
CALLS: ["webhook", "new", "pretext", "attachments", "fallback", "ping"]
CALLS: ["message", "format"]
CALLS: []
CALLS: ["persisted?", "id", "notify", "deliver_later"]
CALLS: ["admins", "pluck", "mail"]
CALLS: ["", "where"]
CALLS: ["deliverable?", "find", "admin_notification_email", "user", "name", "user", "username", "mail"]
CALLS: ["admin_notification_email", "present?"]
CALLS: ["params", "require", "permit"]
CALLS: ["ref", "merge_requests_for", "head_pipeline", "each"]
CALLS: ["new"]
CALLS: ["mergeable_state?", "check_if_can_be_merged", "can_be_merged?", "should_be_rebased?"]
CALLS: ["project", "ff_merge_must_be_possible?", "ff_merge_possible?"]
CALLS: ["merge_requests_ff_only_enabled", "merge_requests_rebase_enabled"]
CALLS: ["project", "repository", "target_branch_sha", "diff_head_sha", "ancestor?"]
CALLS: ["nil?", "nil?", "raw_repository", "ancestor?"]
CALLS: ["open?", "work_in_progress?", "broken?", "mergeable_ci_state?", "mergeable_discussions_state?"]
CALLS: ["project", "only_allow_merge_if_pipeline_succeeds?", "head_pipeline", "actual_head_pipeline", "success?", "actual_head_pipeline", "skipped?"]
CALLS: ["has_no_commits?", "branch_missing?", "cannot_be_merged?"]
CALLS: ["has_commits?"]
CALLS: ["merge_request_diff", "commits_count"]
CALLS: ["source_branch_exists?", "target_branch_exists?"]
CALLS: ["target_branch", "blank?", "target_project", "target_branch", "commit"]
CALLS: ["source_branch", "blank?", "source_project", "source_branch", "commit"]
CALLS: ["target_project", "target_project", "repository", "target_branch", "branch_exists?"]
CALLS: ["source_project", "source_project", "repository", "source_branch", "branch_exists?"]
CALLS: ["project", "only_allow_merge_if_all_discussions_are_resolved?", "discussions_to_be_resolved?"]
CALLS: ["discussions_resolvable?", "discussions_resolved?"]
CALLS: ["discussions_resolvable?", "resolvable_discussions", "none?"]
CALLS: ["resolvable_discussions", "any?"]
CALLS: ["class", "title", "work_in_progress?"]
CALLS: ["opened?"]
CALLS: ["title"]
CALLS: ["unchecked?", "read_write?", "broken?", "project", "repository", "diff_head_sha", "target_branch", "can_be_merged?", "mark_as_mergeable", "mark_as_unmergeable"]
CALLS: ["check_if_can_be_merged"]
CALLS: ["id", "perform_async", "update_column"]
CALLS: ["diff_head_sha", "merge_params_ee", "merge"]
CALLS: []
CALLS: ["params", "merge_params_attributes", "permit"]
CALLS: []
CALLS: ["valid_token?", "find_chat_user", "user", "project", "new", "execute", "authorize_chat_name_url", "new", "authorize"]
CALLS: ["new", "execute"]
CALLS: ["new", "execute"]
CALLS: ["respond_to?", "token", "present?", "token", "variable_size_secure_compare"]
CALLS: ["respond_to?", "token", "present?", "token", "variable_size_secure_compare"]
CALLS: ["token", "token", "variable_size_secure_compare"]
CALLS: ["params", "presence", "request", "headers", "present?", "health_check_access_token", "variable_size_secure_compare"]
CALLS: ["ensure_health_check_access_token!"]
CALLS: ["is_a?", "format", "tap"]
CALLS: ["project", "triggers", "params", "find", "render_404"]
CALLS: ["project", "current_user", "new", "params", "execute", "project_tags_path", "html", "js", "project_tags_path", "html", "js", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["current_user", "can?", "access_denied!", "destroy", "project_snippets_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project", "only_for?", "destroy", "runners_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["projects"]
CALLS: ["project", "runner_projects", "params", "find", "destroy", "project", "runners_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["tag", "delete", "json", "respond_to", "json", "respond_to"]
CALLS: ["image", "destroy", "json", "respond_to", "json", "respond_to"]
CALLS: ["destroy_service_class", "current_user", "new", "execute", "redirect_to_repository_settings", "html", "js", "respond_to"]
CALLS: ["service_namespace"]
CALLS: ["schedule", "destroy", "pipeline_schedules_path", "pipeline_schedules_path", "_"]
CALLS: ["project", "pipeline_schedules", "params", "find"]
CALLS: ["destroy", "project_pages_path", "html", "js", "respond_to"]
CALLS: ["project", "remove_pages", "project", "pages_domains", "destroy_all", "project_pages_path", "html", "respond_to"]
CALLS: ["namespace", "new", "execute", "path", "hex", "new", "path", "namespace", "full_path", "rename_project", "minutes", "namespace", "full_path", "perform_in"]
CALLS: ["new", "execute"]
CALLS: ["collection", "clear"]
CALLS: ["new", "current_user", "mark_todos_as_done", "dashboard_todos_path", "html", "js", "todos_counts", "merge", "json", "respond_to", "header_title", "root_path"]
CALLS: ["update_todos_state"]
CALLS: ["where", "not", "pluck", "unscope", "update_all", "update_todos_count_cache"]
CALLS: ["current_user", "todos_pending_count", "number_with_delimiter", "current_user", "todos_done_count", "number_with_delimiter"]
CALLS: ["current_user", "can?", "access_denied!", "project", "current_user", "new", "milestone", "execute", "namespace_project_milestones_path", "html", "js", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["milestone?", "target"]
CALLS: ["target_type"]
CALLS: ["milestones", "params", "find_by!"]
CALLS: ["params", "group", "group_projects", "params", "build", "group", "milestones", "params", "find_by_iid", "render_404"]
CALLS: ["params", "build", "render_404"]
CALLS: ["destroy", "find_labels", "project_labels_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["extract_references", "current_user", "project", "id", "split", "new", "execute"]
CALLS: ["project", "current_user", "new", "current_user", "analyze", "references"]
CALLS: ["noteable", "part_of_discussion?", "discussion", "notes", "id", "id", "take_while"]
CALLS: ["to_discussion", "individual_note?"]
CALLS: ["part_of_discussion?", "noteable", "notes", "discussion_id", "find_discussion", "to_discussion"]
CALLS: ["params", "find_discussion", "render_404"]
CALLS: ["current_user", "id", "params", "new", "execute"]
CALLS: ["hook", "destroy", "project_settings_integrations_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project", "project_group_links", "params", "find", "project", "current_user", "new", "execute", "project", "project_project_members_path", "html", "js", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["cluster", "destroy", "flash", "_", "project", "project_clusters_path", "flash", "_", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["params", "unescape", "project", "current_user", "new", "execute", "flash", "project_branches_path", "html", "js", "json", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project_tree_path", "project_blob_path", "create_commit", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["remove_avatar!", "save", "edit_project_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["current_user", "u2f_registrations", "params", "find", "destroy", "profile_two_factor_auth_path"]
CALLS: ["current_user", "disable_two_factor!", "profile_account_path", "header_title", "profile_path"]
CALLS: ["transaction_begin", "update_attributes", "u2f_registrations", "destroy_all", "transaction_end", "transaction"]
CALLS: ["current_user", "keys", "params", "find", "destroy", "profile_keys_url", "html", "js", "respond_to", "header_title", "profile_path"]
CALLS: ["destroy", "profile_gpg_keys_url", "html", "js", "respond_to"]
CALLS: ["current_user", "current_user", "new", "execute", "profile_emails_url", "html", "js", "respond_to", "header_title", "profile_path"]
CALLS: ["chat_names", "params", "find", "destroy", "flash", "chat_name", "flash", "chat_name", "profile_chat_names_path"]
CALLS: ["current_user", "current_user", "new", "remove_avatar!", "execute", "profile_path", "header_title", "profile_path"]
CALLS: ["params", "present?", "current_resource_owner", "oauth_authorized_tokens", "params", "find", "revoke", "params", "current_resource_owner", "revoke_all_for", "applications_profile_url", "t"]
CALLS: ["with_key_and_subkeys", "where", "verification_statuses", "not", "verification_statuses", "zone", "now", "update_all", "destroy"]
CALLS: ["subkeys", "pluck", "arel_table", "id", "eq", "arel_table", "in", "or", "where"]
CALLS: ["deploy_tokens", "params", "find", "revoke!", "project", "project_settings_repository_path"]
CALLS: ["update!"]
CALLS: ["update!"]
CALLS: ["finder", "params", "find", "revoke!", "flash", "name", "flash", "name", "profile_personal_access_tokens_path"]
CALLS: ["revoke", "profile_gpg_keys_url", "html", "js", "respond_to"]
CALLS: ["finder", "params", "find", "revoke!", "flash", "name", "flash", "name", "admin_user_impersonation_tokens_path"]
CALLS: ["current_user", "new", "async_execute", "root_path", "name", "name", "page_description", "description", "header_title", "group_title", "current_user"]
CALLS: ["destroy", "group_labels_path", "name", "html", "js", "respond_to"]
CALLS: ["remove_avatar!", "save", "edit_group_path", "name", "page_description", "description", "header_title", "group_title", "current_user"]
CALLS: ["new", "params", "current_user", "mark_todos_as_done_by_ids", "dashboard_todos_path", "html", "js", "todos_counts", "json", "respond_to", "header_title", "root_path"]
CALLS: ["todos_by_ids", "mark_todos_as_done"]
CALLS: ["todos", "where"]
CALLS: ["note", "editable?", "project", "current_user", "new", "note", "execute", "js", "respond_to"]
CALLS: []
CALLS: ["manual_configuration?", "prometheus_installed?"]
CALLS: ["template?", "project", "project", "clusters", "enabled", "application_prometheus", "installed?", "any?"]
CALLS: ["template"]
CALLS: ["template"]
CALLS: ["system?"]
CALLS: ["membershipable", "members_and_requesters", "params", "find", "current_user", "new", "execute", "source_type", "members_page_url", "html", "js", "respond_to"]
CALLS: ["issuable", "project", "current_user", "new", "issuable", "execute", "issuable", "human_class_name", "flash", "parent", "issuable", "class", "polymorphic_path", "html", "json", "respond_to"]
CALLS: ["base_class_name", "titleize", "downcase"]
CALLS: ["board", "lists", "destroyable", "params", "find", "board_parent", "current_user", "new", "execute"]
CALLS: ["", "list_types", "where"]
CALLS: ["user", "current_user", "params", "permit", "delete_async", "admin_users_path", "html", "json", "respond_to", "admin_root_path"]
CALLS: ["params", "find", "params", "current_user", "remove_user", "admin_spam_logs_path", "user", "username", "destroy", "admin_root_path"]
CALLS: ["user", "delete_async"]
CALLS: ["user", "delete_async"]
CALLS: ["destroy", "admin_runners_path", "admin_root_path"]
CALLS: ["params", "find", "runner", "destroy", "admin_runner_path", "admin_root_path"]
CALLS: ["destroy", "templates", "admin_labels_path", "html", "js", "respond_to", "admin_root_path"]
CALLS: ["", "where"]
CALLS: ["user", "keys", "params", "find", "destroy", "user", "keys_admin_user_path", "html", "user", "keys_admin_user_path", "html", "respond_to", "admin_root_path"]
CALLS: ["current_user", "warden", "impersonator", "set_user", "impersonator", "username", "username", "info", "session", "admin_user_path", "admin_root_path"]
CALLS: ["find_by", "log_error"]
CALLS: ["current_user"]
CALLS: ["session", "session", "find"]
CALLS: ["params", "find_by", "nil?", "root_path", "blocked?"]
CALLS: ["destroy", "new", "execute", "admin_user_identities_path", "admin_user_identities_path", "admin_root_path"]
CALLS: ["hook", "destroy", "admin_hooks_path", "admin_root_path"]
CALLS: ["current_user", "new", "async_execute", "admin_groups_path", "name", "admin_root_path"]
CALLS: ["deploy_key", "destroy", "admin_deploy_keys_path", "html", "json", "respond_to", "admin_root_path"]
CALLS: ["params", "find"]
CALLS: ["deploy_keys", "params", "find"]
CALLS: ["destroy", "redirect_back_or_default", "html", "js", "respond_to", "admin_root_path"]
CALLS: ["destroy", "admin_applications_url", "admin_root_path"]
CALLS: ["params", "find", "params", "current_user", "remove_user", "destroy", "admin_root_path"]
CALLS: ["job_artifacts_archive", "job_artifacts_archive", "destroy", "remove_legacy_artifacts_file!"]
CALLS: ["", "merge"]
CALLS: ["success", "merge"]
CALLS: ["success", "merge"]
CALLS: ["success", "merge"]
CALLS: []
CALLS: ["", "with_state"]
CALLS: ["", "where"]
CALLS: ["", "where"]
CALLS: ["", "where"]
CALLS: ["", "where"]
CALLS: ["", "where"]
CALLS: ["", "where"]
CALLS: ["", "where"]
CALLS: ["", "all_state_names", "where"]
CALLS: ["state_machines", "values", "flat_map", "map", "flat_map"]
CALLS: ["", "where"]
CALLS: ["key?", "project", "pipelines", "id", "latest_status_per_commit", "id"]
CALLS: ["contacted_at", "nil?", "active?", "online?"]
CALLS: ["contacted_at", "contacted_at", "class", "contact_time_deadline"]
CALLS: ["ago"]
CALLS: ["statuses", "latest", "status"]
CALLS: ["commit_statuses", "status"]
CALLS: ["jobs", "map", "where"]
CALLS: ["new", "represent_status", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["present?", "represent", "dig"]
CALLS: ["represent"]
CALLS: ["represent", "fetch"]
CALLS: ["new", "represent_status", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["response", "set_header", "new", "represent_status", "json", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["client", "valid?", "new_import_google_code_path", "client", "repos", "client", "incompatible_repos", "current_user", "created_projects", "where", "pluck", "name", "include?", "reject!"]
CALLS: ["client", "projects", "current_user", "created_projects", "where", "pluck", "to_a", "include?", "reject"]
CALLS: ["client", "repos", "current_user", "created_projects", "provider", "where", "pluck", "full_name", "include?", "reject!", "has_ci_cd_only_params?", "_", "_", "root_path", "import_github_title"]
CALLS: ["_"]
CALLS: []
CALLS: ["session", "host_key", "root_path", "custom_icon"]
CALLS: ["client", "valid?", "new_import_fogbugz_path", "client", "repos", "current_user", "created_projects", "where", "pluck", "name", "include?", "reject!"]
CALLS: ["credentials", "new", "repos", "valid?", "partition", "current_user", "created_projects", "where", "pluck", "to_a", "full_name", "include?", "reject!"]
CALLS: ["active_nav_link?", "delete", "strip!", "block_given?", "capture", "content_tag", "content_tag"]
CALLS: ["delete", "respond_to?", "current_path?", "any?", "delete", "respond_to?", "current_page?", "any?", "delete", "delete", "current_controller?", "current_action?", "current_controller?", "current_action?"]
CALLS: ["split", "current_controller?", "current_action?"]
CALLS: ["to_s", "downcase", "action_name", "any?"]
CALLS: ["to_s", "downcase", "controller", "controller_name", "to_s", "downcase", "controller", "controller_path", "any?"]
CALLS: ["current_user", "new", "target", "execute", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["commits", "each"]
CALLS: ["map", "new", "execute", "select", "group_by", "map", "where", "new", "map", "due_date", "sort_by"]
CALLS: ["group_by", "new", "map"]
CALLS: ["discussion_id", "group_by", "values", "build", "map"]
CALLS: ["params", "params", "sort_by_attribute", "order_id_desc"]
CALLS: ["presence"]
CALLS: ["params", "present?", "params", "sort_by_attribute", "order_id_desc"]
CALLS: ["reorder"]
CALLS: ["params", "params", "label_names", "sort_by_attribute", "reorder"]
CALLS: ["params", "fetch"]
CALLS: ["presence"]
CALLS: ["params", "fetch", "sort_by_attribute"]
CALLS: ["group", "current_user", "new", "execute"]
CALLS: ["params", "build_collection"]
CALLS: ["", "where"]
CALLS: ["issues", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["issuables_collection", "non_archived", "params", "page", "collection_type", "issuable_meta_data", "html", "atom", "respond_to"]
CALLS: ["cycle_analytics", "events", "render_events"]
CALLS: ["project", "events_params", "options", "new"]
CALLS: ["params", "present?", "params", "permit"]
CALLS: ["html", "json", "respond_to"]
CALLS: ["params", "params", "strip_tags", "sanitize", "unescape", "default_branch"]
CALLS: ["issues_finder", "params", "find"]
CALLS: ["board", "group_board?", "current_user", "board_parent", "id", "new", "current_user", "board_parent", "id", "new"]
CALLS: ["params", "require", "merge_request_params_attributes", "permit"]
CALLS: []
CALLS: ["params"]
CALLS: ["params"]
CALLS: ["info"]
CALLS: ["info"]
CALLS: ["closes_issues", "target_project", "to_reference", "map", "source_branch", "target_branch", "title", "present?", "to_sentence", "description", "present?", "description", "to_reference", "join"]
CALLS: ["merge_request?", "target"]
CALLS: ["target_type"]
CALLS: ["includes", "ref", "pipeline", "project", "where", "reorder", "commit_shas", "pipeline", "sha", "include?", "find"]
CALLS: ["merge_requests", "params", "find_by!"]
CALLS: ["current_user", "id", "new", "params", "find_by!"]
CALLS: ["current_user", "id", "new", "execute", "opened", "find_by"]
CALLS: ["repository", "current_user", "source", "merge_request", "target_branch", "merge_request", "ff_merge", "message", "message", "merge_request", "update"]
CALLS: ["commit", "id", "nil?", "update", "raw", "ff_merge", "with_cache_hooks"]
CALLS: ["project", "origin_sha", "origin_ref", "commit"]
CALLS: ["raw_repository", "root_ref"]
CALLS: ["exists?", "is_a?", "find_commit"]
CALLS: ["repository", "commit"]
CALLS: ["commit_id", "present?", "project", "commit_id", "commit"]
CALLS: ["project", "commit_sha", "commit"]
CALLS: ["project", "sha", "commit"]
CALLS: ["project", "name", "commit"]
CALLS: ["project", "sha", "lazy"]
CALLS: ["for", "group_by", "map", "repository", "commits_by", "project", "id", "call", "each", "each", "batch"]
CALLS: ["find_by"]
CALLS: ["present?", "raw_repository", "batch_by_oid", "present?", "decorate"]
CALLS: ["objects", "present?", "render_lfs_not_found", "download_request?", "download_objects!", "upload_request?", "upload_objects!", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["action_name", "include?"]
CALLS: ["action_name"]
CALLS: ["params", "include?"]
CALLS: ["params"]
CALLS: ["objects", "existing_oids", "include?", "upload_actions", "each", "objects"]
CALLS: ["project", "http_url_to_repo", "request", "headers", "compact"]
CALLS: ["project", "all_lfs_objects", "objects", "to_s", "map", "where", "pluck"]
CALLS: ["lfs_storage_project", "lfs_objects"]
CALLS: ["forked?", "fork_source"]
CALLS: ["forked?", "forked_from_project", "fork_network", "root_project"]
CALLS: ["objects", "existing_oids", "include?", "download_actions", "project", "can?", "each", "objects"]
CALLS: ["project", "http_url_to_repo", "request", "headers", "compact"]
CALLS: ["params"]
CALLS: ["params"]
CALLS: ["upload_pack?"]
CALLS: ["git_command"]
CALLS: ["action_name", "params", "action_name", "dasherize"]
CALLS: []
CALLS: []
CALLS: ["params", "to_a"]
CALLS: ["help_url", "render"]
CALLS: ["for", "group_by", "values_at", "map", "repository", "blobs_at", "project", "commit_id", "path", "call", "each", "each", "batch"]
CALLS: ["raw_repository", "batch_blobs", "project", "decorate", "map"]
CALLS: ["params"]
CALLS: ["commit"]
CALLS: ["params", "presence", "all_commits", "exists?", "commit"]
CALLS: ["params", "commit_by"]
CALLS: ["commit", "render_404"]
CALLS: ["head_commit_sha", "project", "head_commit_sha", "commit_by"]
CALLS: ["head", "project", "new", "strong_memoize"]
CALLS: ["args", "fetch", "avatar_path"]
CALLS: ["present?", "asset_host", "present?", "respond_to?", "public?", "gitlab_config", "base_url", "gitlab_config", "relative_url_root", "avatar", "local_url"]
CALLS: ["class", "base_dir", "dynamic_segment", "filename", "join"]
CALLS: ["model", "oid", "model", "oid", "join"]
CALLS: ["model", "id", "model", "created_at", "utc", "strftime", "model", "project_id", "to_s", "model", "id", "to_s", "join"]
CALLS: ["model", "id", "model", "created_at", "utc", "strftime", "disk_hash", "disk_hash", "disk_hash", "model", "job_id", "to_s", "model", "id", "to_s", "join"]
CALLS: ["raise"]
CALLS: ["secret"]
CALLS: ["model", "class", "to_s", "underscore", "mounted_as", "to_s", "model", "id", "to_s", "join"]
CALLS: ["model", "class", "to_s", "underscore", "mounted_as", "to_s", "model", "id", "to_s", "join"]
CALLS: ["config", "gitlab"]
CALLS: ["config", "gitlab"]
CALLS: ["ancestors", "reverse", "group_title_link", "add_to_breadcrumb_dropdown", "group_title_link", "each_with_index", "_", "group_title_link", "html_safe", "simple_sanitize", "link_to", "html_safe"]
CALLS: ["group_path", "try", "env", "test?", "group_icon", "name", "simple_sanitize", "html_safe", "link_to"]
CALLS: ["group_icon_url"]
CALLS: ["is_a?", "find_by_full_path", "try", "helpers", "image_path"]
CALLS: ["for_user", "find_by_full_path", "owner"]
CALLS: ["", "where"]
CALLS: ["mysql?", "connection", "quote", "where_full_path_in", "reorder", "take", "postgresql?", "joins", "find_by", "joins", "find_by"]
CALLS: ["postgresql?", "connection", "quote", "each", "empty?", "none", "joins", "join", "where"]
CALLS: []
CALLS: ["sprite_icon"]
CALLS: ["blank?", "sprite_icon_path", "content_tag", "empty?", "content_tag"]
CALLS: ["asset_host", "config", "gitlab", "url", "helpers", "image_path"]
CALLS: ["sanitize"]
CALLS: ["respond_to?", "find_by_full_path", "avatar_url", "avatar_url", "project_identicon"]
CALLS: ["id", "values", "name", "upcase", "content_tag"]
CALLS: ["params", "sub"]
CALLS: ["link_to", "breadcrumb_list_item"]
CALLS: ["present?", "squish", "present?", "sanitize", "truncate_words"]
CALLS: ["root", "join"]
CALLS: ["root", "join", "html", "js", "any", "respond_to"]
CALLS: ["collection", "newest_first"]
CALLS: ["order", "where"]
CALLS: ["allow_n_plus_1_calls", "header_title", "root_path"]
CALLS: ["current_user", "root_path", "explore_root_path", "redirect_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project_settings_ci_cd_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["params", "params", "presence", "sort_value_recently_updated", "params", "params", "new", "execute", "paginate_array", "params", "page", "map", "pipelines", "latest_successful_for_refs", "project", "releases", "where", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["newest_first", "success", "ref", "each_with_object"]
CALLS: []
CALLS: ["current_user", "params", "new", "execute", "params", "page", "out_of_range?", "total_pages", "total_pages", "project_snippets_path", "current_user", "team", "current_user", "member?", "current_user", "admin?", "local_assigns", "current_user", "fetch", "local_assigns", "fetch", "params", "nil?", "active_when", "subject_snippets_path", "snippets", "count", "snippets", "public_and_internal", "count", "params", "active_when", "subject_snippets_path", "snippets", "are_private", "count", "params", "active_when", "subject_snippets_path", "snippets", "are_internal", "count", "params", "active_when", "subject_snippets_path", "snippets", "are_public", "count", "current_user", "can?", "new_project_snippet_path", "local_assigns", "fetch", "each", "empty?", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["", "where"]
CALLS: ["", "where"]
CALLS: ["", "where"]
CALLS: ["is_a?", "project_snippets_path", "dashboard_snippets_path"]
CALLS: ["id", "api_v4_projects_badges_path", "_", "_"]
CALLS: ["project_settings_ci_cd_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["new", "request", "response", "with_pagination", "tags", "represent", "json", "respond_to"]
CALLS: ["project", "container_repositories", "html", "project", "current_user", "new", "represent", "json", "respond_to"]
CALLS: ["redirect_to_repository_settings"]
CALLS: ["params", "presence", "sort_value_name", "project_group_links", "pluck", "personal?", "namespace_id", "group", "group", "ancestors", "pluck", "current_user", "new", "execute", "params", "present?", "joins", "params", "search", "merge", "invited_groups", "params", "search", "select", "where", "sort_by_attribute", "params", "page", "present_members", "new", "current_user", "execute", "present_members", "project_members", "new", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["group"]
CALLS: []
CALLS: ["current_user", "new", "fabricate!"]
CALLS: ["params", "project", "new", "execute", "params", "page", "per", "project", "new", "execute", "count", "project", "new", "execute", "count", "project", "new", "execute", "count", "project", "new", "execute", "count", "map", "html", "response", "set_header", "new", "request", "response", "with_pagination", "represent", "json", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["params", "new", "execute", "new", "params", "execute", "includes", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["params", "milestones", "sort_by_attribute", "namespace", "becomes", "for_projects", "params", "page", "html", "to_json", "json", "respond_to", "container_class", "milestones", "milestone_counts", "milestones", "params", "milestone_class_for_state", "milestones_filter_path", "counts", "params", "milestone_class_for_state", "milestones_filter_path", "counts", "params", "milestone_class_for_state", "milestones_filter_path", "counts", "current_user", "can?", "new_project_milestone_path", "blank?", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["", "includes", "references", "where", "where", "not"]
CALLS: ["", "where", "includes"]
CALLS: ["blank?"]
CALLS: ["reorder", "group", "count", "values", "sum"]
CALLS: ["project_milestones_path", "group_milestones_path", "dashboard_milestones_path"]
CALLS: ["html", "view_to_html_string", "as_json", "json", "respond_to", "current_user", "can?", "merge_request_source_project_for_project", "project_new_merge_request_path", "current_user", "new_issuable_address", "container_class", "merge_requests", "exists?", "container_class", "exists?", "local_assigns", "fetch", "local_assigns", "fetch", "_", "_", "_", "_", "_", "_", "present?", "merge_request", "local_assigns", "fetch", "local_assigns", "fetch", "_", "_", "_", "_", "_", "_", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["supports_issue_creation?", "ensure_incoming_email_token!", "full_path", "incoming_email_token", "reply_address"]
CALLS: ["current_user", "can?", "current_user", "can?", "current_user", "fork_of"]
CALLS: ["supports_issue_creation?", "render_404", "current_user", "reset_incoming_email_token!", "current_user", "params", "new_issuable_address", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project", "user", "params", "new", "execute", "render_json"]
CALLS: ["prioritized", "unprioritized", "params", "page", "html", "new", "represent_appearance", "json", "respond_to", "current_user", "can?", "exists?", "exists?", "container_class", "new_project_label_path", "empty?", "params", "present?", "params", "set_priorities_project_labels_path", "empty?", "present?", "each", "present?", "each", "_", "_", "current_user", "can?", "_", "new_project_label_path", "_", "_", "generate_project_labels_path", "_", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["arel_table", "arel_table", "join", "eq", "id", "eq", "and", "on", "join_sources", "joins", "eq", "where"]
CALLS: ["joins", "where", "reorder"]
CALLS: ["params", "project", "builds", "relevant", "order", "pending", "reverse_order", "running", "reverse_order", "finished", "includes", "params", "page", "per", "without_count", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["", "where"]
CALLS: ["html", "atom", "view_to_html_string", "as_json", "json", "respond_to", "current_user", "can?", "current_user", "new_issuable_address", "safe_params", "rss_url_options", "merge", "to_h", "name", "auto_discovery_link_tag", "project_issues", "exists?", "container_class", "local_assigns", "fetch", "each", "blank?", "present?", "issue", "new_project_issue_path", "local_assigns", "fetch", "local_assigns", "fetch", "current_user", "_", "_", "_", "_", "_", "new_user_session_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["params", "respond_to?", "params", "except", "permit!", "params"]
CALLS: ["current_user", "id", "new", "execute"]
CALLS: ["project_settings_integrations_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["namespace_project_settings_members_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project", "forks", "includes", "project", "params", "params", "merge", "current_user", "new", "execute", "size", "size", "params", "page", "html", "view_to_html_string", "json", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project", "environments", "params", "with_state", "html", "response", "set_header", "new", "request", "response", "with_pagination", "within_folders", "represent", "project", "environments", "available", "count", "project", "environments", "stopped", "count", "json", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["tap"]
CALLS: ["environment", "deployments", "reorder", "params", "to_time", "params", "to_time", "where", "project", "new", "represent_concise", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["represent"]
CALLS: ["redirect_to_repository_settings", "html", "current_user", "new", "as_json", "json", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["container_class", "_", "capture", "capture", "_", "html_safe", "_", "html_safe", "project_compare_index_path", "params", "params", "icon", "params", "params", "s_", "params", "params", "refs_project_path", "params", "params", "_", "local_assigns", "fetch", "dropdown_content", "dropdown_loading", "s_", "params", "params", "refs_project_path", "params", "params", "_", "local_assigns", "fetch", "dropdown_content", "dropdown_loading", "s_", "present?", "_", "project_merge_request_path", "create_mr_button?", "_", "create_mr_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["icon"]
CALLS: ["capture", "content_tag"]
CALLS: ["params", "params", "project_new_merge_request_path"]
CALLS: ["params", "params", "present?", "present?", "current_user", "can?", "repository", "branch_exists?", "repository", "branch_exists?"]
CALLS: ["project", "current_user", "new", "execute", "params", "page", "per", "empty?", "s_", "_", "help_page_path", "link_to", "s_", "html_safe", "current_user", "can?", "s_", "new_project_cluster_path", "s_", "s_", "s_", "s_", "current_user", "present", "present", "each", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project", "project_jobs_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["params", "presence", "sort_value_recently_updated", "params", "presence", "fetch_branches_by_mode", "pipelines", "map", "latest_successful_for_refs", "repository", "map", "merged_branch_names", "repository", "diverging_commit_counts", "max", "reduce", "allow_n_plus_1_calls", "render", "html", "params", "new", "execute", "paginate_array", "params", "page", "map", "json", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["raw_repository", "root_ref", "commit", "id", "cache", "name", "raw_repository", "dereferenced_target", "sha", "count_commits_between", "fetch"]
CALLS: ["sort_value_recently_updated", "new", "execute", "partition", "first", "first", "params", "merge", "new", "execute", "include?", "state", "to_s", "select", "paginate_array", "params", "page"]
CALLS: ["project", "current_user", "new", "execute", "respond_with_boards", "first", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["respond_with"]
CALLS: ["html", "serialize_as_json", "json", "respond_to"]
CALLS: ["set_index_vars", "finder", "build", "fluid_layout", "page_title", "clipboard_button", "profile_personal_access_tokens_path", "impersonation", "token", "path", "token", "form_errors", "label", "text_field", "label", "text_field", "label", "token", "scopes", "submit", "current_user", "rss_token", "incoming_email_token_enabled?", "current_user", "incoming_email_token", "header_title", "profile_path"]
CALLS: ["ensure_rss_token!"]
CALLS: ["read_attribute", "select"]
CALLS: ["any?", "compact", "push", "any?", "last", "join"]
CALLS: ["delete", "delete", "delete", "merge", "icon", "concat", "concat"]
CALLS: ["current_user", "incoming_email_token", "supports_issue_creation?"]
CALLS: ["current_user", "keys", "order_id_desc", "new", "fluid_layout", "page_title", "help_page_path", "help_page_path", "form_errors", "label", "text_area", "label", "text_field", "submit", "local_assigns", "fetch", "any?", "header_title", "profile_path"]
CALLS: ["current_user", "gpg_keys", "with_subkeys", "new", "fluid_layout", "page_title", "help_page_path", "form_errors", "label", "text_area", "submit", "local_assigns", "fetch", "any?", "emails_with_verified_status", "map", "fingerprint", "subkeys", "present?", "subkeys", "fingerprint", "each", "profile_gpg_key_path", "icon", "revoke_profile_gpg_key_path", "each", "header_title", "profile_path"]
CALLS: ["upcase"]
CALLS: ["user_infos", "user", "verified_email?", "map", "to_h"]
CALLS: ["downcase", "email", "primary_email_verified?", "emails", "confirmed", "where", "exists?"]
CALLS: ["confirmed?", "temp_oauth_email?"]
CALLS: ["email", "start_with?"]
CALLS: ["", "where", "not"]
CALLS: ["key", "user_infos_from_key"]
CALLS: ["upcase"]
CALLS: ["", "includes"]
CALLS: ["current_user", "email", "current_user", "emails", "order_id_desc", "fluid_layout", "page_title", "profile_emails_path", "label", "text_field", "submit", "current_user", "confirmed?", "current_user", "confirmed?", "current_user", "public_email", "current_user", "notification_email", "email", "confirmed?", "email", "confirmed?", "email", "current_user", "public_email", "email", "current_user", "notification_email", "confirmed?", "confirmation_sent_at", "resend_confirmation_instructions_profile_email_path", "profile_email_path", "icon", "each", "header_title", "profile_path"]
CALLS: ["current_user", "chat_names", "fluid_layout", "page_title", "present?", "header_title", "profile_path"]
CALLS: ["set_index_vars"]
CALLS: ["prometheus_metrics_enabled?", "metrics_service", "metrics_text", "help_page_url"]
CALLS: ["prometheus_metrics_text", "health_metrics_text", "concat"]
CALLS: ["flat_map", "formatter", "marshal"]
CALLS: ["new"]
CALLS: ["multiprocess_metrics_path", "marshal_multiprocess"]
CALLS: ["configuration", "multiprocess_files_dir"]
CALLS: ["new"]
CALLS: ["root", "join", "read", "icon", "koding_project_url", "koding_url", "koding_path"]
CALLS: ["full_path", "default_branch", "commit", "short_id", "koding_url", "join", "to_s", "koding_url"]
CALLS: []
CALLS: ["root", "join", "read", "sub", "config", "gitlab", "relative_url_root", "gsub!", "help_page_text", "present?", "current_application_settings", "markdown_field", "user_signed_in?", "namespace_project_commits_path", "version_status_badge", "help_page_hide_commercial_content?", "help_instance_configuration_url", "markdown", "support_url", "help_page_hide_commercial_content?", "help_path"]
CALLS: ["env", "production?", "version_check_enabled", "new", "url"]
CALLS: ["respond_to?", "for_display", "try", "present?", "render_field", "respond_to?", "banzai_render_context", "reverse_merge!", "prepare_for_rendering"]
CALLS: ["noteable", "merge"]
CALLS: []
CALLS: []
CALLS: []
CALLS: ["cached_markdown_fields", "markdown_fields", "include?", "inspect", "new", "respond_to?", "project", "respond_to?", "group", "cached_markdown_fields", "merge", "respond_to?", "author", "markdown_engine"]
CALLS: ["latest_cached_markdown_version"]
CALLS: ["project", "author", "author"]
CALLS: ["current_application_settings", "help_page_support_url", "presence", "promo_url"]
CALLS: ["promo_host"]
CALLS: []
CALLS: ["current_user", "dashboard_groups_path", "explore_groups_path", "redirect_to", "name", "page_description", "description", "header_title", "group_title", "current_user"]
CALLS: ["id", "api_v4_groups_badges_path", "_", "_"]
CALLS: ["group_projects", "group", "states_count", "milestones", "paginate_array", "params", "page", "html", "milestones", "for_display", "slice", "map", "json", "respond_to", "params", "milestone_class_for_state", "milestones_filter_path", "counts", "params", "milestone_class_for_state", "milestones_filter_path", "counts", "params", "milestone_class_for_state", "milestones_filter_path", "counts", "current_user", "can?", "new_group_milestone_path", "blank?", "each", "name", "page_description", "description", "header_title", "group_title", "current_user"]
CALLS: ["legacy_group_milestone_states_count", "group_milestones_states_count", "merge"]
CALLS: ["map", "new", "execute", "reorder", "group", "count", "count_by_state", "count_by_state", "map", "uniq", "count"]
CALLS: ["count"]
CALLS: ["params", "merge", "label_names", "any?", "label_names", "count", "class", "current_user", "new", "new", "execute", "reorder", "group", "count", "last", "to_sym", "each", "values", "sum"]
CALLS: ["id", "new", "execute", "reorder", "group", "count", "values", "sum"]
CALLS: ["labels", "params", "page", "html", "current_user", "id", "params", "params", "params", "new", "execute", "new", "represent_appearance", "json", "respond_to", "_", "to_sentence", "current_user", "can?", "new_group_label_path", "present?", "each", "_", "name", "page_description", "description", "header_title", "group_title", "current_user"]
CALLS: ["params", "presence", "sort_value_name", "params", "projects", "params", "find", "new", "execute", "current_user", "can?", "non_invite", "params", "present?", "params", "search", "sort_by_attribute", "params", "page", "per", "includes", "present_members", "new", "current_user", "execute", "present_members", "group_members", "new", "current_user", "can?", "name", "group_group_members_path", "users_select_tag", "access_level_roles", "access_level", "options_for_select", "help_page_path", "submit", "local_assigns", "fetch", "local_assigns", "fetch", "local_assigns", "fetch", "empty?", "name", "size", "each", "group_group_members_path", "params", "icon", "member_sort_options_hash", "dropdown_toggle", "member_sort_options_hash", "filter_group_project_member_path", "each", "name", "total_count", "each", "name", "page_description", "description", "header_title", "group_title", "current_user"]
CALLS: ["member", "class", "access_level_roles"]
CALLS: ["options"]
CALLS: ["options_with_owner"]
CALLS: ["", "where"]
CALLS: ["sort_value_access_level_asc", "sort_title_access_level_asc", "sort_value_access_level_desc", "sort_title_access_level_desc", "sort_value_last_joined", "sort_title_last_joined", "sort_value_name", "sort_title_name_asc", "sort_value_name_desc", "sort_title_name_desc", "sort_value_oldest_joined", "sort_title_oldest_joined", "sort_value_oldest_signin", "sort_title_oldest_signin", "sort_value_recently_signin", "sort_title_recently_signin"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["users_select_data_attributes", "id", "id", "hidden_field_tag"]
CALLS: ["current_user", "current_user", "username", "map"]
CALLS: ["params", "slice", "merge", "request", "path", "to_param"]
CALLS: ["key?", "key?", "content_tag", "icon", "html_safe", "content_tag"]
CALLS: ["params", "present?", "current_user", "new", "params", "execute", "nil?", "render_404", "setup_children", "current_user", "new", "request", "response", "with_pagination", "params", "present?", "expand_hierarchy", "represent", "json", "respond_to"]
CALLS: []
CALLS: ["current_user", "params", "new", "execute", "params", "page"]
CALLS: ["group", "current_user", "new", "execute", "respond_with_boards", "first", "name", "page_description", "description", "header_title", "group_title", "current_user"]
CALLS: ["current_user", "new", "execute", "params", "page", "snippets_path", "current_user", "dashboard_snippets_path", "dashboard_snippets_path", "nav_link", "explore_snippets_path", "explore_snippets_path", "nav_link", "current_user", "new_snippet_path", "current_user", "explore_root_path"]
CALLS: ["params", "params", "load_projects", "html", "view_to_html_string", "json", "respond_to", "dashboard_projects_path", "current_user", "cookies", "blank?", "current_user", "hide_project_limit", "current_user", "can_create_project?", "current_user", "projects_limit", "profile_path", "icon", "icon", "dashboard_projects_path", "root_path", "dashboard_projects_path", "nav_link", "starred_dashboard_projects_path", "starred_dashboard_projects_path", "nav_link", "explore_root_path", "trending_explore_projects_path", "starred_explore_projects_path", "explore_projects_path", "explore_root_path", "nav_link", "sort_value_latest_activity", "projects_sort_options_hash", "dropdown_toggle", "projects_sort_options_hash", "filter_projects_path", "each", "filter_projects_path", "params", "present?", "filter_projects_path", "params", "to_boolean", "filter_projects_path", "params", "current_user", "filter_projects_path", "params", "present?", "filter_projects_path", "params", "present?", "shared_projects", "present?", "filter_projects_path", "params", "present?", "filter_projects_path", "params", "filter_projects_path", "params", "current_user", "can_create_project?", "new_project_path", "trending_explore_projects_path", "explore_root_path", "trending_explore_projects_path", "nav_link", "starred_explore_projects_path", "starred_explore_projects_path", "nav_link", "explore_projects_path", "explore_projects_path", "nav_link", "current_user", "sort_value_latest_activity", "projects_sort_options_hash", "dropdown_toggle", "projects_sort_options_hash", "filter_projects_path", "each", "filter_projects_path", "params", "present?", "filter_projects_path", "params", "to_boolean", "filter_projects_path", "params", "current_user", "filter_projects_path", "params", "present?", "filter_projects_path", "params", "present?", "shared_projects", "present?", "filter_projects_path", "params", "present?", "filter_projects_path", "params", "filter_projects_path", "params", "projects", "current_user", "current_user", "explore_root_path"]
CALLS: ["projects_limit_left"]
CALLS: ["projects_limit", "personal_projects_count"]
CALLS: ["cache", "id", "hours", "personal_projects", "count", "fetch", "to_i"]
CALLS: []
CALLS: ["sort_value_latest_activity", "sort_title_latest_activity", "sort_value_name", "sort_title_name", "sort_value_oldest_activity", "sort_title_oldest_activity", "sort_value_oldest_created", "sort_title_oldest_created", "sort_value_recently_created", "sort_title_recently_created", "current_controller?", "sort_value_largest_repo", "sort_title_largest_repo"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["params", "params", "params", "params", "params", "params", "params", "params", "params", "params", "merge", "blank?", "delete_if", "request_path_with_options"]
CALLS: ["request", "path", "to_param"]
CALLS: ["group", "shared_projects"]
CALLS: ["current_user", "new", "execute", "dashboard_groups_path", "current_user", "dashboard_groups_path", "dashboard_groups_path", "_", "nav_link", "explore_groups_path", "explore_groups_path", "_", "nav_link", "request", "path", "params", "s_", "local_assigns", "groups_sort_options_hash", "fetch", "local_assigns", "fetch", "present?", "params", "params", "sort_value_recently_created", "icon", "_", "filter_groups_path", "each", "filter_groups_path", "params", "present?", "filter_groups_path", "params", "to_boolean", "filter_groups_path", "params", "current_user", "can_create_group?", "_", "new_group_path", "explore_groups_path", "explore_groups_path", "nav_link", "request", "path", "params", "s_", "local_assigns", "groups_sort_options_hash", "fetch", "local_assigns", "fetch", "present?", "params", "params", "sort_value_recently_created", "icon", "_", "filter_groups_path", "each", "filter_groups_path", "params", "present?", "filter_groups_path", "params", "to_boolean", "filter_groups_path", "params", "cookies", "icon", "custom_icon", "params", "blank?", "empty?", "current_user", "explore_root_path"]
CALLS: ["subgroup?", "current_user", "parent", "can?", "parent", "errors", "add", "current_user", "can?", "errors", "add"]
CALLS: ["has_parent?"]
CALLS: ["parent", "present?"]
CALLS: ["can?"]
CALLS: ["sort_value_name", "sort_title_name", "sort_value_name_desc", "sort_title_name_desc", "sort_value_recently_created", "sort_title_recently_created", "sort_value_oldest_created", "sort_title_oldest_created", "sort_value_recently_updated", "sort_title_recently_updated", "sort_value_oldest_updated", "sort_title_oldest_updated"]
CALLS: []
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["request_path_with_options"]
CALLS: ["params", "params", "page", "redirect_out_of_range", "header_title", "root_path"]
CALLS: ["todo_params", "except", "empty?", "current_user", "todos_pending_count", "to_f", "limit_value", "ceil", "total_pages", "zero?", "current_page", "safe_params", "merge", "url_for"]
CALLS: []
CALLS: ["params", "permit"]
CALLS: ["nil?", "zero?", "current_page", "params", "merge", "url_for", "redirect_to"]
CALLS: ["current_user", "current_user", "params", "new", "execute", "params", "page", "dashboard_snippets_path", "dashboard_snippets_path", "dashboard_snippets_path", "nav_link", "explore_snippets_path", "explore_snippets_path", "nav_link", "current_user", "new_snippet_path", "new_snippet_path", "header_title", "root_path"]
CALLS: ["params", "merge", "load_projects", "params", "page", "html", "load_events", "atom", "view_to_html_string", "json", "respond_to", "rss_url_options", "dashboard_projects_url", "auto_discovery_link_tag", "dashboard_projects_path", "container_class", "params", "show_projects?", "cookies", "blank?", "current_user", "hide_project_limit", "current_user", "can_create_project?", "current_user", "projects_limit", "profile_path", "icon", "icon", "dashboard_projects_path", "root_path", "dashboard_projects_path", "nav_link", "starred_dashboard_projects_path", "starred_dashboard_projects_path", "nav_link", "explore_root_path", "trending_explore_projects_path", "starred_explore_projects_path", "explore_projects_path", "explore_root_path", "nav_link", "sort_value_latest_activity", "projects_sort_options_hash", "dropdown_toggle", "projects_sort_options_hash", "filter_projects_path", "each", "filter_projects_path", "params", "present?", "filter_projects_path", "params", "to_boolean", "filter_projects_path", "params", "current_user", "filter_projects_path", "params", "present?", "filter_projects_path", "params", "present?", "shared_projects", "present?", "filter_projects_path", "params", "present?", "filter_projects_path", "params", "filter_projects_path", "params", "current_user", "can_create_project?", "new_project_path", "params", "present?", "s_", "dashboard_projects_path", "nav_link", "params", "present?", "s_", "filter_projects_path", "nav_link", "current_user", "current_user", "admin?", "current_user", "admin?", "new_project_path", "custom_icon", "current_user", "can_create_group?", "new_group_path", "custom_icon", "new_admin_user_path", "custom_icon", "admin_root_path", "custom_icon", "current_user", "new", "execute", "count", "current_user", "can_create_project?", "new_project_path", "custom_icon", "custom_icon", "current_user", "can_create_group?", "new_group_path", "custom_icon", "trending_explore_projects_path", "custom_icon", "number_with_delimiter", "custom_icon", "header_title", "root_path"]
CALLS: ["any_projects?"]
CALLS: ["is_a?", "any?", "limit_value", "to_a", "any?", "except", "any?"]
CALLS: ["states_count", "milestones", "paginate_array", "params", "page", "html", "milestones", "json", "respond_to", "dashboard_milestones_path", "params", "milestone_class_for_state", "milestones_filter_path", "counts", "params", "milestone_class_for_state", "milestones_filter_path", "counts", "params", "milestone_class_for_state", "milestones_filter_path", "counts", "blank?", "each", "header_title", "root_path"]
CALLS: ["new", "labels", "represent_appearance", "json", "respond_to", "header_title", "root_path"]
CALLS: ["current_user", "new", "execute", "render_group_tree", "dashboard_groups_path", "dashboard_groups_path", "dashboard_groups_path", "_", "nav_link", "explore_groups_path", "explore_groups_path", "_", "nav_link", "request", "path", "params", "s_", "local_assigns", "groups_sort_options_hash", "fetch", "local_assigns", "fetch", "present?", "params", "params", "sort_value_recently_created", "icon", "_", "filter_groups_path", "each", "filter_groups_path", "params", "present?", "filter_groups_path", "params", "to_boolean", "filter_groups_path", "params", "current_user", "can_create_group?", "_", "new_group_path", "params", "blank?", "empty?", "header_title", "root_path"]
CALLS: ["params", "present?", "params", "search", "select", "where", "new", "base_and_ancestors", "params", "where", "params", "with_selects_for_list", "params", "sort_by_attribute", "params", "page", "html", "current_user", "new", "request", "response", "with_pagination", "params", "present?", "expand_hierarchy", "represent", "json", "respond_to"]
CALLS: ["now", "to_i", "notes_finder", "execute", "inc_relations_for_view", "prepare_notes_for_rendering", "current_user", "cross_reference_not_visible_for?", "reject", "use_note_serializer?", "note_serializer", "represent", "note_json", "map"]
CALLS: ["project", "current_user", "finder_params", "new"]
CALLS: ["params", "last_fetched_at", "snippet", "id", "merge"]
CALLS: ["request", "headers"]
CALLS: ["params", "last_fetched_at", "merge"]
CALLS: ["board", "parent", "current_user", "new", "board", "execute", "serialize_as_json"]
CALLS: ["board_parent", "current_user", "filter_params", "new", "execute", "params", "page", "params", "per", "read_write?", "make_sure_position_is_set", "preload", "serialize_as_json", "total_count"]
CALLS: ["relative_position", "move_to_end", "save", "each"]
CALLS: ["order_name_asc", "params", "filter", "params", "present?", "params", "search_with_secondary_emails", "params", "sort_by_attribute", "params", "page", "container_class", "admin_users_path", "params", "present?", "params", "h", "params", "icon", "present?", "sort_options_hash", "sort_title_name", "dropdown_toggle", "sort_value_name", "params", "admin_users_path", "sort_title_name", "sort_value_recently_signin", "params", "admin_users_path", "sort_title_recently_signin", "sort_value_oldest_signin", "params", "admin_users_path", "sort_title_oldest_signin", "sort_value_recently_created", "params", "admin_users_path", "sort_title_recently_created", "sort_value_oldest_created", "params", "admin_users_path", "sort_title_oldest_created", "sort_value_recently_updated", "params", "admin_users_path", "sort_title_recently_updated", "sort_value_oldest_updated", "params", "admin_users_path", "sort_title_oldest_updated", "new_admin_user_path", "icon", "icon", "params", "nil?", "active_when", "admin_users_path", "active", "count", "number_with_delimiter", "nav_link", "params", "active_when", "admin_users_path", "admins", "count", "number_with_delimiter", "nav_link", "params", "active_when", "admin_users_path", "with_two_factor", "count", "number_with_delimiter", "nav_link", "params", "active_when", "admin_users_path", "without_two_factor", "count", "number_with_delimiter", "nav_link", "params", "active_when", "admin_users_path", "external", "count", "number_with_delimiter", "nav_link", "params", "active_when", "admin_users_path", "blocked", "count", "number_with_delimiter", "nav_link", "params", "active_when", "admin_users_path", "without_projects", "count", "number_with_delimiter", "nav_link", "empty?", "each", "admin_root_path"]
CALLS: ["blank?", "none", "downcase", "arel_table", "project", "eq", "where", "fuzzy_arel_match", "fuzzy_arel_match", "or", "arel_table", "eq", "or", "arel_table", "in", "or", "where"]
CALLS: ["admins", "blocked", "without_two_factor", "with_two_factor", "without_projects", "external", "active"]
CALLS: ["joins", "where"]
CALLS: ["joins", "where", "arel_table", "distinct"]
CALLS: ["", "where"]
CALLS: ["", "where"]
CALLS: ["", "with_states"]
CALLS: ["sort_value_created_date", "sort_title_created_date", "sort_value_downvotes", "sort_title_downvotes", "sort_value_due_date", "sort_title_due_date", "sort_value_due_date_later", "sort_title_due_date_later", "sort_value_due_date_soon", "sort_title_due_date_soon", "sort_value_label_priority", "sort_title_label_priority", "sort_value_largest_group", "sort_title_largest_group", "sort_value_largest_repo", "sort_title_largest_repo", "sort_value_milestone", "sort_title_milestone", "sort_value_milestone_later", "sort_title_milestone_later", "sort_value_milestone_soon", "sort_title_milestone_soon", "sort_value_name", "sort_title_name", "sort_value_name_desc", "sort_title_name_desc", "sort_value_oldest_created", "sort_title_oldest_created", "sort_value_oldest_signin", "sort_title_oldest_signin", "sort_value_oldest_updated", "sort_title_oldest_updated", "sort_value_recently_created", "sort_title_recently_created", "sort_value_recently_signin", "sort_title_recently_signin", "sort_value_recently_updated", "sort_title_recently_updated", "sort_value_popularity", "sort_title_popularity", "sort_value_priority", "sort_title_priority", "sort_value_upvotes", "sort_title_upvotes"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["order", "params", "page", "present?", "admin_root_path"]
CALLS: ["services_templates", "sort_by", "activated?", "id", "edit_admin_application_settings_service_path", "title", "description", "updated_at", "each", "admin_root_path"]
CALLS: ["active"]
CALLS: ["available_services_names", "concat", "camelize", "constantize", "where", "first_or_create", "map"]
CALLS: ["params", "order", "params", "present?", "params", "search", "params", "page", "per", "online", "count", "admin_root_path"]
CALLS: ["", "contact_time_deadline", "where"]
CALLS: ["profile_token", "all", "group_by", "container_class", "page_title", "present?", "time", "to_s", "admin_requests_profile_path", "each", "each", "admin_root_path"]
CALLS: ["params", "params", "params", "current_user", "new", "execute", "html", "view_to_html_string", "json", "respond_to", "params", "container_class", "params", "present?", "params", "params", "find", "kind", "full_path", "dropdown_toggle", "dropdown_title", "dropdown_filter", "dropdown_content", "dropdown_loading", "sort_value_latest_activity", "projects_sort_options_hash", "dropdown_toggle", "projects_sort_options_hash", "filter_projects_path", "each", "filter_projects_path", "params", "present?", "filter_projects_path", "params", "to_boolean", "filter_projects_path", "params", "current_user", "filter_projects_path", "params", "present?", "filter_projects_path", "params", "present?", "shared_projects", "present?", "filter_projects_path", "params", "present?", "filter_projects_path", "params", "filter_projects_path", "params", "new_project_path", "params", "present?", "admin_projects_path", "admin_projects_path", "nav_link", "params", "to_s", "active_when", "admin_projects_path", "nav_link", "params", "to_s", "active_when", "admin_projects_path", "nav_link", "params", "to_s", "active_when", "admin_projects_path", "nav_link", "admin_root_path"]
CALLS: ["type"]
CALLS: ["icon", "icon", "html_safe"]
CALLS: ["fetch", "icon", "content_tag", "content_tag", "fetch", "icon", "content_tag", "html_safe"]
CALLS: ["templates", "params", "page", "new_admin_label_path", "present?", "admin_root_path"]
CALLS: ["params", "order", "pending", "reverse_order", "running", "reverse_order", "finished", "params", "page", "per", "admin_root_path"]
CALLS: ["set_index_vars", "name", "name", "blocked?", "internal?", "admin", "current_user", "can?", "impersonate_admin_user_path", "edit_admin_user_path", "admin_user_path", "nav_link", "projects_admin_user_path", "nav_link", "keys_admin_user_path", "nav_link", "admin_user_identities_path", "nav_link", "admin_user_impersonation_tokens_path", "nav_link", "admin_user_impersonation_tokens_path", "impersonation", "token", "path", "token", "form_errors", "label", "text_field", "label", "text_field", "label", "token", "scopes", "submit", "admin_root_path"]
CALLS: ["identities", "name", "name", "blocked?", "internal?", "admin", "current_user", "can?", "impersonate_admin_user_path", "edit_admin_user_path", "admin_user_path", "nav_link", "projects_admin_user_path", "nav_link", "keys_admin_user_path", "nav_link", "admin_user_identities_path", "nav_link", "admin_user_impersonation_tokens_path", "nav_link", "new_admin_user_identity_path", "present?", "admin_root_path"]
CALLS: ["all", "new", "admin_root_path"]
CALLS: ["with_statistics", "with_route", "params", "sort_by_attribute", "params", "present?", "params", "search", "params", "page", "container_class", "admin_groups_path", "params", "present?", "params", "icon", "admin_groups_sort_options_hash", "local_assigns", "groups_sort_options_hash", "fetch", "local_assigns", "fetch", "present?", "params", "params", "sort_value_recently_created", "icon", "_", "filter_groups_path", "each", "filter_groups_path", "params", "present?", "filter_groups_path", "params", "to_boolean", "filter_groups_path", "params", "new_admin_group_path", "admin_root_path"]
CALLS: ["groups_sort_options_hash", "sort_value_largest_group", "sort_title_largest_group", "merge"]
CALLS: ["all", "_", "_", "any?", "_", "n_", "_", "_", "_", "storage", "address", "server_version", "git_binary_version", "up_to_date?", "boolean_to_icon", "each", "_", "admin_root_path"]
CALLS: ["icon", "icon"]
CALLS: ["new_admin_deploy_key_path", "any?", "title", "fingerprint", "projects_with_write_access", "full_name", "admin_project_path", "each", "edit_admin_deploy_key_path", "admin_deploy_key_path", "each", "admin_root_path"]
CALLS: ["preload", "deploy_keys_projects", "with_write_access", "select", "where"]
CALLS: ["", "where"]
CALLS: ["order_id_desc", "without_deleted", "with_route", "limit", "order_id_desc", "limit", "order_id_desc", "with_route", "limit", "admin_root_path"]
CALLS: ["", "where"]
CALLS: ["usage_ping_enabled", "cache", "day", "new", "execute", "fetch", "new", "represent", "container_class", "icon", "help_page_path", "times", "each", "each", "help_page_path", "admin_application_settings_path", "admin_root_path"]
CALLS: ["usage_ping_can_be_configured?"]
CALLS: ["gitlab", "usage_ping_enabled"]
CALLS: ["order", "params", "page", "new", "any?", "broadcast_message_status", "broadcast_message", "starts_at", "ends_at", "icon", "edit_admin_broadcast_message_path", "icon", "admin_broadcast_message_path", "each", "admin_root_path"]
CALLS: ["active?", "ended?"]
CALLS: ["ends_at", "zone", "now"]
CALLS: ["present?", "broadcast_message_style", "icon", "render_broadcast_message"]
CALLS: ["render_field", "html_safe"]
CALLS: ["color", "present?", "color", "font", "present?", "font", "present?", "font"]
CALLS: []
CALLS: ["where", "new_admin_application_path", "id", "name", "admin_application_path", "redirect_uri", "access_tokens", "map", "uniq", "count", "trusted?", "edit_admin_application_path", "admin_application_path", "each", "admin_root_path"]
CALLS: ["order", "params", "page", "includes", "present?", "admin_root_path"]
CALLS: ["priorities", "loaded?", "priorities", "project", "first", "priorities", "find_by", "try"]
CALLS: ["api_url"]
CALLS: ["token"]
CALLS: ["recipients"]
CALLS: ["username", "token"]
CALLS: []
CALLS: []
CALLS: []
CALLS: ["mock_service_url"]
CALLS: []
CALLS: []
CALLS: []
CALLS: ["api_url", "token", "enforce_namespace_to_lower_case", "namespace"]
CALLS: ["namespace", "namespace", "downcase"]
CALLS: ["namespace", "namespace", "downcase"]
CALLS: ["url", "api_url", "username", "password"]
CALLS: []
CALLS: ["recipients", "get_channels"]
CALLS: ["activated?", "recipients", "nil?", "recipients", "empty?", "map_recipients", "channels", "empty?", "errors", "add"]
CALLS: ["channels", "recipients", "split", "format_channel", "map", "channels", "reject!"]
CALLS: ["parse", "consider_uri", "present?", "default_irc_uri", "nil?", "default_irc_uri", "join", "to_s", "parse", "consider_uri", "logger", "default_irc_uri", "error"]
CALLS: ["scheme", "nil?", "is_a?", "scheme", "path", "nil?", "to_s"]
CALLS: ["token"]
CALLS: ["project_url", "issues_url", "new_issue_url"]
CALLS: ["token", "api_key"]
CALLS: ["token"]
CALLS: ["external_wiki_url"]
CALLS: ["recipients"]
CALLS: ["drone_url", "token"]
CALLS: []
CALLS: ["project_url", "issues_url", "new_issue_url"]
CALLS: []
CALLS: ["webhook"]
CALLS: ["token"]
CALLS: []
CALLS: ["project_url", "token"]
CALLS: ["project_url", "issues_url", "new_issue_url"]
CALLS: ["bamboo_url", "build_key", "username", "password"]
CALLS: ["token"]
CALLS: ["api_key"]
CALLS: ["project"]
CALLS: []
CALLS: []
CALLS: ["source_type", "access_level"]
CALLS: ["source_type"]
CALLS: []
CALLS: []
CALLS: []
CALLS: ["service"]
CALLS: ["project"]
CALLS: []
CALLS: ["group"]
CALLS: ["variables", "two_factor_grace_period"]
CALLS: ["set_default_values", "target_url"]
CALLS: ["context", "stage", "stage_idx"]
CALLS: ["token", "blank?", "token", "hex"]
CALLS: ["token", "blank?", "token", "hex"]
CALLS: []
CALLS: []
CALLS: []
CALLS: ["validation_message", "blank?"]
CALLS: ["validation_message", "blank?"]
CALLS: ["project"]
CALLS: ["group"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["current_user", "admin?"]
CALLS: ["target_type"]
CALLS: ["for_commit?", "project", "commit_id", "commit"]
CALLS: ["noteable_type"]
CALLS: ["for_commit?", "commit"]
CALLS: ["noteable_type"]
CALLS: ["notes_finder", "target", "noteable"]
CALLS: ["zone", "now", "updated_at"]
CALLS: []
CALLS: ["default_message", "id", "username", "name", "email", "new"]
CALLS: ["username"]
CALLS: ["path"]
CALLS: ["project", "full_path", "name", "select", "join", "downcase"]
CALLS: []
CALLS: ["project", "gl_repository", "project", "repository_storage", "disk_path", "new", "exists?", "create_repo!", "new"]
CALLS: ["gitlab_shell", "project", "repository_storage", "disk_path", "create_repository", "exists?", "repository", "after_create"]
CALLS: ["gl_repository"]
CALLS: ["owner", "new"]
CALLS: ["new"]
CALLS: ["exists?", "has_visible_content?"]
CALLS: ["options", "project", "jobs_cache_index", "project", "jobs_cache_index", "merge"]
CALLS: []
CALLS: ["zone", "now", "where", "order_id_asc"]
CALLS: ["raw_size"]
CALLS: ["stored_externally?", "external_size", "size"]
CALLS: []
CALLS: ["external_storage", "external_storage_error?"]
CALLS: []
CALLS: []
CALLS: ["external_storage", "project", "lfs_enabled?"]
CALLS: ["ensure_cache_setup", "cache", "last", "tap", "fetch", "last"]
CALLS: ["define_attribute_methods"]
CALLS: ["cache", "first", "fetch"]
CALLS: []
CALLS: ["for_commit?", "diff_line", "noteable", "noteable", "diff_refs", "find_noteable_diff", "new", "diff", "each_line", "parse", "text", "diff_line", "text", "any?"]
CALLS: ["noteable", "max_diff_options", "raw_diffs", "new_path", "diff", "new_path", "find"]
CALLS: ["diff_file", "line_code", "line_for_line_code"]
CALLS: ["diff_file", "original_position", "line_for_position"]
CALLS: []
CALLS: ["present?", "first_note", "active?"]
CALLS: ["state"]
CALLS: ["supported?", "for_commit?", "noteable", "diff_refs", "position", "diff_refs"]
CALLS: ["class", "supported?"]
CALLS: ["for_commit?", "noteable", "has_complete_diff_refs?"]
CALLS: ["diff_refs", "diff_refs", "complete?"]
CALLS: ["revoked"]
CALLS: []
CALLS: ["status", "include?"]
CALLS: ["started?", "ended?"]
CALLS: ["status", "include?", "started_at"]
CALLS: ["zone", "now", "starts_at"]
CALLS: ["allowed?"]
CALLS: ["current_user", "action", "subject", "allowed?"]
CALLS: ["allowed?"]
CALLS: ["skip_cross_project_check"]
CALLS: ["execute", "find_by"]
CALLS: ["allowed?"]
CALLS: ["parent", "group", "raise_error"]
CALLS: ["new"]
CALLS: []
CALLS: []
CALLS: ["project", "group"]
CALLS: ["source"]
CALLS: ["params", "present?", "params", "find"]
CALLS: ["params", "params", "find_routable!"]
CALLS: ["request", "get?", "find_by_full_path", "routable_authorized?", "ensure_canonical_path", "handle_not_found_or_authorized"]
CALLS: ["request", "get?", "full_path", "casecmp", "flash", "class", "to_s", "titleize", "build_canonical_path"]
CALLS: ["safe_params", "to_param", "merge", "url_for"]
CALLS: ["params", "namespace", "to_param", "params", "to_param", "safe_params", "url_for"]
CALLS: ["params", "namespace", "to_param", "params", "to_param", "params", "url_for"]
CALLS: ["action_name", "group_path", "params", "to_param", "safe_params", "url_for"]
CALLS: ["params", "to_param", "params", "url_for"]
CALLS: ["class", "to_s", "underscore", "current_user", "can?", "call"]
CALLS: ["route_not_found"]
CALLS: ["current_user", "not_found", "authenticate_user!"]
CALLS: ["current_user", "request", "get?", "request", "xhr?", "request", "fullpath", "new_user_session_path"]
CALLS: ["current_user", "allow_signup?", "request", "fullpath", "new_user_session_path"]
CALLS: ["signup_enabled?", "password_authentication_enabled_for_web?"]
CALLS: ["group"]
CALLS: ["params", "find_by_full_path"]
CALLS: ["of_projects", "where", "blank?", "new"]
CALLS: ["", "where"]
CALLS: ["", "where"]
CALLS: ["", "where"]
CALLS: ["first", "discussion_class", "new"]
CALLS: ["project", "builds", "params", "find", "current_user", "present"]
CALLS: ["build_from_id", "build_from_ref", "current_user", "present"]
CALLS: ["project", "latest_successful_builds_for", "params", "find_by"]
CALLS: ["default_branch", "pipelines", "latest_successful_for", "builds", "latest", "with_artifacts_archive", "builds", "none"]
CALLS: ["newest_first", "success", "take"]
CALLS: ["", "select", "where", "archive", "where"]
CALLS: ["current_user", "can?", "access_denied!", "archive!", "project_path", "html", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["update_attribute"]
CALLS: ["params", "path", "tr", "params", "logger", "class", "name", "error", "git_not_found!", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: []
CALLS: ["params", "project", "builds", "params", "find_by"]
CALLS: ["commit", "try"]
CALLS: ["persisted?", "merge_request_diff", "head_commit_sha", "source_branch_head", "try"]
CALLS: ["project", "pipelines", "params", "find_by!", "current_user", "present"]
CALLS: ["project", "params", "new"]
CALLS: ["skip_cross_project_check"]
CALLS: ["model", "find"]
CALLS: ["render_show"]
CALLS: ["current_user", "new", "deploy_tokens", "active", "define_deploy_token", "define_protected_refs", "fluid_layout", "current_user", "can?", "empty?", "each", "env", "test?", "current_user", "current_user", "can?", "each", "env", "test?", "current_user", "expand_deploy_tokens_section?", "s_", "s_", "persisted?", "s_", "deploy_token", "username", "deploy_token", "username", "s_", "clipboard_button", "s_", "deploy_token", "token", "deploy_token", "token", "s_", "clipboard_button", "s_", "s_", "s_", "token", "project", "namespace", "project", "create_deploy_token_namespace_project_settings_repository_path", "token", "form_errors", "label", "text_field", "label", "object", "expires_at", "text_field", "label", "check_box", "s_", "project", "container_registry_enabled?", "check_box", "s_", "s_", "submit", "s_", "active_tokens", "length", "active_tokens", "present?", "s_", "s_", "s_", "s_", "s_", "active_tokens", "name", "username", "created_at", "to_date", "to_s", "expires?", "expires_soon?", "scopes", "present?", "scopes", "join", "s_", "id", "project", "project", "each", "s_"]
CALLS: ["expires?", "expires_at", "days", "from_now"]
CALLS: ["persisted?", "errors", "present?", "env", "test?"]
CALLS: ["new"]
CALLS: ["protected_branches", "order", "params", "page", "protected_tags", "order", "params", "page", "protected_branches", "new", "protected_tags", "new", "repository", "branches", "matching", "size", "reduce", "repository", "tags", "matching", "size", "reduce", "load_gon_index"]
CALLS: ["project", "repository", "branch_names"]
CALLS: ["gon", "protectable_tags_for_dropdown", "push", "gon", "protectable_branches_for_dropdown", "push", "gon", "access_levels_options", "push"]
CALLS: ["new", "hash"]
CALLS: ["protectable_ref_names", "map"]
CALLS: ["ref_names", "non_wildcard_protected_ref_names"]
CALLS: ["protections", "reject", "map"]
CALLS: ["public_send"]
CALLS: ["class", "to_s", "hash"]
CALLS: ["new", "hash"]
CALLS: ["levels_for_dropdown", "levels_for_dropdown", "levels_for_dropdown"]
CALLS: ["map"]
CALLS: ["repository", "branch_count", "repository", "commit", "id", "branch_names_contains", "repository", "tag_count", "repository", "commit", "id", "tag_names_contains", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["raw_repository", "tag_names_contains_sha"]
CALLS: ["raw_repository", "branch_names_contains_sha"]
CALLS: ["html", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["job_from_id", "job_from_ref"]
CALLS: ["project", "latest_successful_builds_for", "params", "find_by"]
CALLS: ["params", "project", "builds", "params", "find_by"]
CALLS: ["class", "unhyphenize", "unescape_html"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["properties", "properties", "present?", "properties"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["properties", "properties", "present?", "properties"]
CALLS: []
CALLS: ["project_url", "project_name"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["properties", "properties", "present?", "properties"]
CALLS: ["wiki_page_url"]
CALLS: ["project_name", "project_url"]
CALLS: ["project_name", "project_url"]
CALLS: ["project_name", "project_url"]
CALLS: ["project_name", "project_url", "link"]
CALLS: ["project_name", "project_url", "link"]
CALLS: ["project_name", "project_url", "link"]
CALLS: ["user_full_name", "present?", "user_full_name", "user_name", "user_name"]
CALLS: []
CALLS: []
CALLS: ["properties", "properties", "present?", "properties"]
CALLS: []
CALLS: []
CALLS: []
CALLS: ["label?", "label", "name", "list_type", "humanize"]
CALLS: []
CALLS: ["full_title", "length", "full_title", "full_title", "truncate"]
CALLS: ["params"]
CALLS: ["params", "params"]
CALLS: ["new_branch?", "new_branch_message", "removed_branch?", "removed_branch_message", "push_message"]
CALLS: ["user_combined_name", "ref_type", "branch_link", "project_link", "compare_link"]
CALLS: ["user_combined_name", "ref_type", "ref", "project_link"]
CALLS: ["user_combined_name", "ref_type", "branch_link", "project_link"]
CALLS: ["project_link", "pipeline_link", "ref_type", "branch_link", "user_combined_name", "humanized_status", "duration", "pretty_duration"]
CALLS: ["user_combined_name", "target", "note_url", "link", "project_link", "formatted_title"]
CALLS: ["merge_request_message"]
CALLS: ["user_combined_name", "state", "merge_request_link", "project_link", "title"]
CALLS: ["opened_issue?", "project_link", "state", "user_combined_name", "project_link", "issue_link", "state", "user_combined_name"]
CALLS: []
CALLS: ["response_status"]
CALLS: ["status", "to_s"]
CALLS: ["success?", "upload", "id", "error", "message"]
CALLS: []
CALLS: ["data", "bytesize"]
CALLS: ["exists?", "raw_repository", "size"]
CALLS: ["real_size", "presence", "raw_diffs", "size"]
CALLS: ["to_s"]
CALLS: []
CALLS: ["sha_from", "notation", "sha_to"]
CALLS: ["entry", "metadata"]
CALLS: ["build", "params", "artifacts_metadata_entry", "exists?", "render_404"]
CALLS: ["artifacts_metadata", "options", "new", "to_entry", "use_file"]
CALLS: ["unsafe_use_file", "with_exclusive_lease"]
CALLS: ["file_storage?", "path", "cache_stored_file!", "cache_path", "cache_path", "rm_f", "cache_storage", "cache_path", "delete_dir!"]
CALLS: ["exclusive_lease_key", "hour", "to_i", "new", "try_obtain", "exclusive_lease_key", "cancel"]
CALLS: ["model", "class", "model", "id"]
CALLS: ["merge_when_pipeline_succeeds?", "open?", "reset_merge_when_pipeline_succeeds", "cancel_merge_when_pipeline_succeeds", "success", "error"]
CALLS: ["new", "create_note"]
CALLS: ["merge_requests_for_source_branch", "each"]
CALLS: ["merge_requests_for"]
CALLS: ["merge_when_pipeline_succeeds?", "merge_when_pipeline_succeeds", "merge_user", "merge_params", "merge_params", "delete", "merge_params", "delete", "save"]
CALLS: ["to_reference", "new", "create_note"]
CALLS: ["current_user", "can_cancel_merge_when_pipeline_succeeds?", "access_denied!", "current_user", "new", "cancel", "serialize_widget", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["can_be_merged_by?", "author"]
CALLS: ["project", "new", "target_branch", "can_update_branch?"]
CALLS: ["serializer", "represent"]
CALLS: ["current_user", "merge_request", "project", "new"]
CALLS: ["current_user", "issue", "project", "new"]
CALLS: []
CALLS: ["pipeline", "cancel_running", "project", "project_pipelines_path", "html", "json", "respond_to"]
CALLS: ["url_helpers", "project_pipelines_path"]
CALLS: ["cancelable_statuses", "block_given?", "cancel", "find_each", "retry_optimistic_lock"]
CALLS: ["cancelable?", "respond_422", "cancel", "build_path"]
CALLS: ["build", "cancelable?", "request", "current_user", "build", "can?"]
CALLS: []
CALLS: ["cancelable_statuses", "any?"]
CALLS: ["active?"]
CALLS: ["project", "project_job_path"]
CALLS: ["url_helpers", "id", "project_build_path"]
CALLS: []
CALLS: ["job_artifacts_metadata", "file", "legacy_artifacts_metadata"]
CALLS: ["params", "to_i"]
CALLS: ["order", "class", "to_s", "where"]
CALLS: ["store_dir", "filename", "to_s", "join"]
CALLS: ["store_dirs", "object_store"]
CALLS: ["base_dir", "dynamic_segment", "join", "class", "model", "model_path_segment", "dynamic_segment", "join"]
CALLS: ["base_dir", "dynamic_segment", "join", "dynamic_segment", "join"]
CALLS: ["base_dir", "dynamic_segment", "join", "class", "model", "model_path_segment", "dynamic_segment", "join"]
CALLS: ["base_dir", "dynamic_segment", "join", "base_dir", "dynamic_segment", "join"]
CALLS: ["store_dirs", "object_store"]
CALLS: ["store_dirs", "object_store"]
CALLS: ["dynamic_segment"]
CALLS: ["dynamic_segment"]
CALLS: ["dynamic_segment"]
CALLS: ["file", "present?"]
CALLS: ["store", "object_store", "tap"]
CALLS: ["store", "object_store", "tap"]
CALLS: ["file", "present?"]
CALLS: ["secret", "secret", "tap"]
CALLS: ["file_storage?", "dynamic_segment", "identifier", "join", "store_dir", "identifier", "join"]
CALLS: ["path", "basename"]
CALLS: ["path", "basename"]
CALLS: ["filename"]
CALLS: ["path", "basename"]
CALLS: ["model", "avatar", "file", "model", "avatar", "file", "present?"]
CALLS: ["full_path", "raw_repository", "exists?"]
CALLS: ["execute", "model"]
CALLS: ["project", "job", "params", "file_project_job_artifacts_path"]
CALLS: ["blob", "conditionally_expand_blob", "build", "external_link?", "build", "external_url", "name", "id", "browse_project_job_artifacts_path", "truncate", "file_project_job_artifacts_path", "browse_project_job_artifacts_path", "path_breadcrumbs", "blob", "mode", "name", "name", "path", "copy_file_path_button", "raw_size", "number_to_human_size", "stored_externally?", "external_storage", "copy_blob_source_button", "open_raw_blob_button", "simple_viewer", "rich_viewer", "params", "html", "render_blob_json", "json", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: []
CALLS: ["entry", "metadata"]
CALLS: ["rich_viewer_class", "new"]
CALLS: ["viewer_class_from"]
CALLS: ["empty?", "external_storage_error?", "stored_externally?", "can_render?", "find"]
CALLS: ["old_blob", "can_render_blob?", "new_blob", "can_render_blob?"]
CALLS: ["nil?", "binary?", "binary?", "extensions", "extension", "include?", "file_types", "file_type", "include?"]
CALLS: ["path", "basename", "path", "type_of", "type_of"]
CALLS: ["binary?", "binary?", "extensions", "extension", "include?", "file_types", "file_type", "include?"]
CALLS: ["simple_viewer_class", "new"]
CALLS: ["empty?", "raw_binary?"]
CALLS: ["stored_externally?", "rich_viewer", "rich_viewer", "binary?", "name", "find_by_extension", "any?", "_mime_type", "_mime_type", "binary?", "binary?"]
CALLS: ["present?", "split", "count", "count", "first", "join", "empty?", "join", "empty?", "count", "last", "include?", "each"]
CALLS: ["empty?", "raw_binary?", "stored_externally?", "sprite_icon", "icon", "blob_raw_path"]
CALLS: ["blob_raw_url"]
CALLS: ["path", "raw_project_job_artifacts_url", "project_id", "raw_project_snippet_url", "raw_snippet_url", "project_raw_url"]
CALLS: ["rendered_as_text?", "id", "clipboard_button"]
CALLS: ["simple_viewer", "is_a?", "simple_viewer", "render_error", "nil?"]
CALLS: []
CALLS: ["diff_file", "stored_externally?"]
CALLS: ["too_large?"]
CALLS: ["diff_file", "too_large?", "size_limit", "diff_file", "raw_size", "size_limit"]
CALLS: ["size_limit", "blob", "raw_size", "size_limit"]
CALLS: []
CALLS: ["blob", "stored_externally?"]
CALLS: ["project", "has_external_wiki?", "project", "wiki_enabled?", "project", "wiki", "has_home_page?"]
CALLS: ["find_page"]
CALLS: ["license"]
CALLS: ["license_key", "license_key", "new"]
CALLS: ["exists?", "raw_repository", "license_short_name"]
CALLS: ["repository", "license", "nickname", "name"]
CALLS: ["project", "repository", "license"]
CALLS: ["project", "repository", "tag_count"]
CALLS: ["too_large?", "collapsed?"]
CALLS: ["active?"]
CALLS: ["resolved?"]
CALLS: ["resolvable?", "resolved_at", "present?"]
CALLS: ["resolvable?", "notes", "none?", "strong_memoize"]
CALLS: ["diff_file", "collapsed?", "diff_file", "expanded?", "collapse_limit", "diff_file", "raw_size", "collapse_limit"]
CALLS: ["collapsed?"]
CALLS: []
CALLS: ["blob", "expanded?", "collapse_limit", "blob", "raw_size", "collapse_limit"]
CALLS: ["errors", "full_messages", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["errors", "full_messages"]
CALLS: ["clipboard_button"]
CALLS: ["params", "expand!"]
CALLS: []
CALLS: ["blob_json", "render_404"]
CALLS: ["params", "rich_viewer", "auxiliary_viewer", "simple_viewer", "view_to_html_string"]
CALLS: ["auxiliary_viewer_class", "new"]
CALLS: ["viewer_class_from"]
CALLS: ["find_model", "strong_memoize"]
CALLS: ["params", "upload_model_class", "params", "find"]
CALLS: ["params", "raise"]
CALLS: []
CALLS: []
CALLS: ["params", "params", "find_by_full_path"]
CALLS: ["params", "find_by_full_path"]
CALLS: []
CALLS: ["schedule_background_upload?", "class", "name", "model", "class", "name", "mounted_as", "model", "id", "perform_async"]
CALLS: ["class", "object_store_enabled?", "class", "background_upload_enabled?", "file_storage?"]
CALLS: ["object_store_options", "background_upload"]
CALLS: ["any?", "send", "schedule_background_upload", "each", "run_after_commit"]
CALLS: ["any?", "send", "schedule_background_upload", "each", "run_after_commit"]
CALLS: ["schedule_background_upload?", "upload", "class", "name", "upload", "class", "to_s", "mounted_as", "upload", "id", "perform_async"]
CALLS: ["model", "secret", "new"]
CALLS: ["model", "update_field", "read_attribute", "temp_file_uploader", "markdown_link", "uploader", "markdown_link", "gsub", "model", "update_field", "update_attribute", "revert"]
CALLS: ["logger", "model", "warn", "file_path", "temp_file_path", "move"]
CALLS: ["uploader", "file_name", "retrieve_from_store!", "uploader", "file", "path"]
CALLS: ["store_dirs", "join", "map", "model", "current_upload_satisfies?", "upload", "uploads", "model", "find_by"]
CALLS: ["upload", "upload", "path", "include?", "upload", "model_id", "id", "upload", "model_type", "class", "base_class", "sti_name"]
CALLS: []
CALLS: ["upload", "upload", "path", "include?", "upload", "model_id", "id", "upload", "model_type", "class", "base_class", "sti_name"]
CALLS: ["store_dirs", "join", "map", "model", "current_upload_satisfies?", "upload", "uploads", "model", "find_by"]
CALLS: ["temp_file_uploader", "file_name", "retrieve_from_store!", "temp_file_uploader", "file", "path"]
CALLS: ["secret", "new"]
CALLS: ["project", "raw_repository", "raw", "repository", "raw_repository", "revert", "with_cache_hooks"]
CALLS: ["assign_change_commit_vars", "blank?", "render_404", "create_new_branch?", "revert_branch_name", "current_user", "change_type_title", "successful_change_path", "failed_change_path", "create_commit", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["merged_merge_request?"]
CALLS: ["merged_merge_request"]
CALLS: ["merged_merge_request_no_cache", "new"]
CALLS: ["merge_commit?", "project", "id", "new", "id", "find_by"]
CALLS: ["parents", "size"]
CALLS: ["parent_ids", "values_at", "compact"]
CALLS: ["parent_ids", "project", "lazy", "map"]
CALLS: ["short_id"]
CALLS: ["params"]
CALLS: ["referenced_merge_request_url", "params", "project_commit_url"]
CALLS: ["current_user", "merged_merge_request", "target_project", "project_merge_request_url"]
CALLS: ["referenced_merge_request_url", "project_commits_url"]
CALLS: ["params", "present?", "current_user", "can?"]
CALLS: ["file_path", "dirname", "mkdir_p", "temp_file_path", "file_path", "move"]
CALLS: ["params", "require", "params", "to_i", "params", "find", "issue", "current_user", "can_move?", "render_404", "project", "current_user", "new", "issue", "execute", "render_issue_json", "json", "respond_to", "render_conflict_response"]
CALLS: ["can?", "moved?", "persisted?", "project", "can?"]
CALLS: ["moved_to", "nil?"]
CALLS: []
CALLS: ["valid?", "serializer", "represent", "errors", "full_messages", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["html", "issuable", "human_class_name", "json", "respond_to"]
CALLS: ["uploader_mounted?", "model", "upload_mount", "public_send", "build_uploader_from_upload", "build_uploader_from_params", "strong_memoize"]
CALLS: ["build_uploader", "params", "retrieve_from_store!"]
CALLS: ["uploader_class", "model", "new", "upload", "identifier", "retrieve_from_store!", "tap"]
CALLS: ["uploader_class", "model", "new", "upload", "identifier", "retrieve_from_store!", "tap"]
CALLS: ["build_uploader", "send"]
CALLS: ["uploader_class", "model", "mount_point", "new", "upload", "identifier", "retrieve_from_store!", "tap"]
CALLS: ["to_sym"]
CALLS: ["params", "params", "uploader_class", "model", "params", "new", "model_valid?"]
CALLS: []
CALLS: ["model"]
CALLS: ["build_uploader", "params", "upload_paths", "uploader_class", "to_s", "find_by", "build_uploader"]
CALLS: ["secret", "join", "base_dir", "secret", "join"]
CALLS: ["upload_model_class", "upload_mount", "nil?"]
CALLS: ["params", "include?"]
CALLS: ["update", "execute_hooks"]
CALLS: ["delete", "execute_hooks"]
CALLS: ["current_user", "new", "new", "create", "execute_hooks"]
CALLS: ["current_user", "build", "execute_hooks", "execute_services"]
CALLS: ["services", "public_send", "async_execute", "each", "run_after_commit_or_now"]
CALLS: ["now", "parsed_url", "userinfo", "blank?", "hook", "url", "make_request", "make_request_with_auth", "hook_name", "hook", "url", "data", "now", "log_execution", "code", "to_s", "hook_name", "hook", "url", "data", "new", "now", "to_s", "log_execution", "logger", "error", "to_s"]
CALLS: ["hook", "is_a?", "hook", "hook_name", "build_headers", "format_response_headers", "safe_response_body", "code", "create"]
CALLS: ["body", "body", "encode"]
CALLS: ["note", "present?", "note", "note", "target", "title"]
CALLS: ["headers", "each_capitalized", "to_h"]
CALLS: ["singularize", "titleize", "hook", "token", "present?", "hook", "token", "remove_line_breaks", "tap"]
CALLS: ["hook", "url", "parsed_url", "userinfo", "gsub", "parsed_url", "user", "unescape", "parsed_url", "password", "unescape", "make_request"]
CALLS: ["data", "to_json", "hook_name", "build_headers", "hook", "enable_ssl_verification", "request_options", "post"]
CALLS: ["hook", "url", "parse"]
CALLS: ["path"]
CALLS: ["cycle_analytics", "events", "render_events"]
CALLS: ["domain", "verification_code", "present?", "domain", "domain", "error", "verification_enabled?", "dns_record_present?", "verify_domain!", "expired?", "disable_domain!", "unverify_domain!"]
CALLS: ["timeouts", "domain", "domain", "check", "domain", "verification_domain", "check", "open"]
CALLS: ["file_storage?", "path", "path", "open", "url", "url", "cached_size", "new"]
CALLS: ["model", "size", "present?", "model", "file_changed?", "model", "size", "size"]
CALLS: ["domain", "present?", "domain"]
CALLS: ["domain", "assign_attributes", "domain", "save!", "notify", "domain", "domain", "error"]
CALLS: ["domain", "verified?", "domain", "assign_attributes", "domain", "save!", "notify", "domain", "domain", "error"]
CALLS: ["verified_at"]
CALLS: ["emails_with_verified_status", "values", "any?"]
CALLS: ["domain", "enabled?", "domain", "unverified?", "domain", "enabled_until", "from_now", "compact", "max", "domain", "now", "assign_attributes", "domain", "save!", "notify", "notify", "success"]
CALLS: ["verified?"]
CALLS: ["validate", "error", "project", "repository", "branch_exists?", "error", "success", "message", "error"]
CALLS: ["token", "expired?", "token", "revoked?", "include_any_scope?"]
CALLS: ["blank?", "token", "scopes", "map", "is_a?", "new", "request", "sufficient?", "any?"]
CALLS: ["user_synced_attributes_metadata", "params", "user_synced_attributes_metadata", "read_only_attributes", "except!", "params", "any?", "params", "assign_attributes"]
CALLS: ["sync_profile_from_provider?", "synced?", "select"]
CALLS: ["block_given?", "persisted?", "assign_attributes", "save", "notify_success", "errors", "full_messages", "uniq", "join", "error"]
CALLS: ["notify_new_user", "success"]
CALLS: ["name", "email", "log_info", "notification_service", "new_user", "system_hook_service", "execute_hooks_for"]
CALLS: ["notifiable?", "identities", "any?", "mailer", "id", "new_user_email", "deliver_later"]
CALLS: ["find", "user_url", "notification_email", "subject", "mail"]
CALLS: ["logger", "project", "name", "project", "id", "info"]
CALLS: ["user", "id", "new", "try_obtain", "sleep", "execute_without_lease", "cancel"]
CALLS: ["current_authorizations_per_project", "fresh_access_levels_per_project", "access_level", "project_id", "each_with_object", "access_level", "user", "id", "each_with_object", "update_authorizations"]
CALLS: ["current_authorizations", "index_by"]
CALLS: ["user", "project_authorizations", "select"]
CALLS: ["fresh_authorizations", "project_id", "access_level", "each_with_object"]
CALLS: ["supports_nested_groups?", "user", "new", "calculate"]
CALLS: ["empty?", "empty?", "transaction_begin", "empty?", "user", "remove_project_authorizations", "empty?", "insert_authorizations", "transaction_end", "transaction", "user", "reload"]
CALLS: ["project_authorizations", "where", "delete_all"]
CALLS: ["connection", "quote", "map", "map", "connection", "')}\n      EOF", "execute", "each_slice"]
CALLS: ["user", "block_transition", "user", "transaction_begin", "user", "block", "migrate_records_in_transaction", "rollback", "user", "save!", "transaction_end", "transaction", "user", "reload"]
CALLS: ["user", "transaction_begin", "ghost", "migrate_records", "transaction_end", "transaction"]
CALLS: ["migrate_issues", "migrate_merge_requests", "migrate_notes", "migrate_abuse_reports", "migrate_award_emojis"]
CALLS: ["user", "award_emoji", "ghost_user", "id", "update_all"]
CALLS: ["user", "reported_abuse_reports", "ghost_user", "id", "update_all"]
CALLS: ["user", "notes", "ghost_user", "id", "update_all"]
CALLS: ["user", "merge_requests", "ghost_user", "id", "update_all", "user", "id", "where", "ghost_user", "id", "update_all"]
CALLS: ["user", "issues", "ghost_user", "id", "update_all", "user", "id", "where", "ghost_user", "id", "update_all"]
CALLS: ["where", "bio", "name", "unique_internal"]
CALLS: ["first", "create_unique_internal"]
CALLS: ["minute", "to_i", "new", "try_obtain", "sleep", "first", "uncached", "present?", "new", "find_by_username", "string", "sprintf", "find_by_email", "string", "build", "new", "execute", "cancel"]
CALLS: ["iwhere", "take"]
CALLS: ["postgresql?", "connection", "quote_table_name", "where", "each"]
CALLS: ["base_string", "increment_counter!", "base_string"]
CALLS: []
CALLS: ["respond_to?", "call"]
CALLS: ["fetch", "current_user", "allowed?", "current_user", "solo_owned_groups", "present?", "errors", "members", "run_callbacks", "find_each", "solo_owned_groups", "current_user", "new", "execute", "each", "namespace", "prepare_for_destroy", "personal_projects", "current_user", "legacy_storage?", "new", "execute", "each", "block_given?", "new", "execute", "destroy", "destroy"]
CALLS: ["active_external_issue_tracker?", "where", "update_all", "active_external_wiki?", "where", "update_all"]
CALLS: ["type"]
CALLS: ["issue_tracker?", "default"]
CALLS: ["category"]
CALLS: ["read_attribute", "to_sym"]
CALLS: ["owned_groups", "owners", "select"]
CALLS: ["group", "group", "owners", "project", "owner"]
CALLS: ["", "active", "where"]
CALLS: ["storage_version", "include?"]
CALLS: ["old_repository_storage_paths"]
CALLS: ["repository_storage_paths"]
CALLS: ["all_projects", "select", "to_a", "map", "unscoped"]
CALLS: ["full_path", "inside_path"]
CALLS: ["personal_projects", "visible_to_user", "personal_projects", "public_to_user"]
CALLS: ["contributed_projects", "visible_to_user", "contributed_projects", "public_to_user"]
CALLS: ["select", "contributions", "where", "now", "year", "where", "uniq", "reorder", "where"]
CALLS: ["where"]
CALLS: ["user", "new", "current_user", "execute"]
CALLS: ["current_user", "params", "new", "execute", "recently_sent_password_reset?", "generate_reset_token", "save", "notify_new_user"]
CALLS: ["reset_password_sent_at", "present?", "reset_password_sent_at", "minute", "ago"]
CALLS: ["token_generator", "class", "generate", "reset_password_token", "reset_password_sent_at", "now", "utc"]
CALLS: ["subject", "transaction_begin", "lookup", "create_record", "maximum_iid", "increment_and_save!", "transaction_end", "transaction"]
CALLS: ["init", "subject", "call"]
CALLS: ["subject", "transaction_begin", "scope", "usage_value", "maximum_iid", "create!", "transaction_end", "transaction", "lookup"]
CALLS: ["usages", "usage", "to_s"]
CALLS: ["scope", "usage_value", "find_by"]
CALLS: ["lock!", "last_value", "last_value", "max", "save!", "last_value"]
CALLS: ["generate", "params", "project_issues_path", "params", "project_merge_requests_path", "project_labels_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["board_parent", "current_user", "new", "board", "execute", "board", "lists", "movable", "serialize_as_json"]
CALLS: ["can_create_user?", "build_user_params", "new", "current_user", "admin?", "params", "generate_reset_token", "friendly_token", "password_length", "min", "first", "password", "password_confirmation", "params", "slice", "any?", "identities", "build"]
CALLS: ["current_user", "admin?", "params", "admin_create_params", "slice", "current_user", "id", "params", "merge!", "signup_params", "params", "slice", "nil?", "skip_user_confirmation_email_from_setting"]
CALLS: ["send_user_confirmation_email"]
CALLS: []
CALLS: []
CALLS: ["current_user", "nil?", "allow_signup?", "current_user", "admin?"]
CALLS: ["is_a?", "record_activity"]
CALLS: ["read_write?", "id", "record", "logger", "id", "username", "debug"]
CALLS: ["reply_key", "is_a?", "id", "id", "project", "class", "name", "reverse_merge!", "create"]
CALLS: ["map", "bulk_perform_and_wait", "bulk_perform_async"]
CALLS: ["size", "bulk_perform_inline", "size", "new", "key", "map", "bulk_perform_async", "wait"]
CALLS: ["new", "perform", "each", "present?", "bulk_perform_async"]
CALLS: ["find", "with_indifferent_access", "new", "execute"]
CALLS: ["find_by_id", "provider", "gcp?", "new", "execute", "try", "try"]
CALLS: ["find", "calculate_checksum!", "save!", "logger", "error"]
CALLS: ["checksum", "checksummable?", "checksum", "class", "absolute_path", "hexdigest"]
CALLS: ["checksum", "nil?", "local?", "exist?"]
CALLS: ["store", "nil?", "store"]
CALLS: ["absolute_path", "exist?"]
CALLS: ["store", "nil?", "store"]
CALLS: ["absolute_path", "exist?"]
CALLS: ["store", "nil?", "store"]
CALLS: ["absolute_path", "exist?"]
CALLS: ["local?", "relative_path?", "path", "uploader_class", "absolute_path"]
CALLS: ["path", "start_with?"]
CALLS: ["path", "start_with?"]
CALLS: ["path", "start_with?"]
CALLS: ["checksum", "nil?", "local?", "exist?"]
CALLS: ["local?", "relative_path?", "path", "uploader_class", "absolute_path"]
CALLS: ["root", "path", "join"]
CALLS: ["class", "absolute_path"]
CALLS: ["checksum", "nil?", "local?", "exist?"]
CALLS: ["local?", "relative_path?", "path", "uploader_class", "absolute_path"]
CALLS: ["checksum", "checksummable?", "checksum", "class", "absolute_path", "hexdigest"]
CALLS: ["checksum", "checksummable?", "checksum", "absolute_path", "file", "hexdigest"]
CALLS: ["cast_data", "keys", "length", "where", "to_a", "flatten", "update_all", "new", "delete"]
CALLS: ["to_i", "to_i", "at", "to_s", "each_with_object"]
CALLS: ["find_by", "find_by", "new", "execute", "measure", "real", "join", "real", "logger", "info"]
CALLS: ["find", "source_project", "source_branch", "where", "last", "latest?", "diff_head_sha", "sha", "log_error_message_for", "id", "update_attribute"]
CALLS: ["logger", "id", "source_branch", "diff_head_sha", "error"]
CALLS: ["sha", "latest_sha"]
CALLS: ["project", "build", "ref", "commit", "try", "to_s", "project", "cleanup"]
CALLS: ["cleanup"]
CALLS: ["cleanup"]
CALLS: ["historical?"]
CALLS: ["historical?", "last_version", "sha", "version", "sha"]
CALLS: ["id", "merge_request", "latest_merge_request_diff_id"]
CALLS: ["ref", "commit", "present?", "project", "ref", "commit", "commit"]
CALLS: ["retried?"]
CALLS: ["logger", "info", "refresh!"]
CALLS: ["transaction_begin", "delete_all", "connection", "months", "ago", "quote", "connection", "T};\n      EOF", "execute", "transaction_end", "transaction"]
CALLS: ["blank?", "include?", "public_send", "each", "save!"]
CALLS: ["new", "execute_hooks"]
CALLS: ["stuck_merge_requests", "map", "completed_jids", "any?", "merge_jid", "include?", "select", "map", "apply_current_state!", "find_in_batches"]
CALLS: ["select", "with_state", "where", "not", "reorder"]
CALLS: ["where", "where", "not", "update_all", "where", "each", "logger", "join", "info"]
CALLS: ["mark_projects_without_jid_as_failed!", "mark_projects_with_jid_as_failed!", "add_event"]
CALLS: ["enqueued_projects_with_jid", "pluck", "to_h", "keys", "completed_jids", "any?", "values_at", "enqueued_projects_with_jid", "where", "logger", "map", "join", "info", "error_message", "mark_import_as_failed", "each", "count"]
CALLS: []
CALLS: ["enqueued_projects", "where", "not"]
CALLS: ["with_import_status"]
CALLS: ["enqueued_projects_without_jid", "error_message", "mark_import_as_failed", "each", "count"]
CALLS: ["enqueued_projects", "where"]
CALLS: ["try_obtain_lease", "logger", "class", "info", "remove_lease"]
CALLS: ["cancel"]
CALLS: ["minutes", "new", "try_obtain"]
CALLS: ["hours", "new", "try_obtain"]
CALLS: ["new", "try_obtain"]
CALLS: ["new", "try_obtain"]
CALLS: ["lease_key", "new", "try_obtain", "measure"]
CALLS: []
CALLS: ["id"]
CALLS: ["app", "id", "new", "try_obtain"]
CALLS: ["build_relation", "with_route", "logger", "full_path", "id", "info", "migrate_to_hashed_storage!", "logger", "message", "full_path", "id", "backtrace", "error", "find_each"]
CALLS: ["arel_table", "gteq", "where", "lteq", "where"]
CALLS: ["hashed_storage?", "update!", "repo_reference_count", "wiki_reference_count", "id", "perform_in", "id", "perform_async"]
CALLS: ["reference_counter", "value"]
CALLS: ["gl_repository", "new"]
CALLS: ["reference_counter", "value"]
CALLS: ["find_by", "update_status", "try"]
CALLS: ["statuses", "latest", "status", "enqueue", "run", "succeed", "drop", "cancel", "block", "skip", "skip", "retry_optimistic_lock"]
CALLS: ["search"]
CALLS: ["popen"]
CALLS: ["two_factor_grace_period_expired?", "new_profile_two_factor_auth_path", "session", "current_user", "otp_grace_period_started_at", "two_factor_grace_period", "hours", "root_path", "header_title", "profile_path"]
CALLS: ["current_user", "otp_grace_period_started_at", "two_factor_grace_period", "hours", "current"]
CALLS: ["latest_builds_status", "enqueue", "run", "succeed", "drop", "cancel", "skip", "block", "retry_optimistic_lock"]
CALLS: ["yaml_errors", "blank?", "statuses", "latest", "status"]
CALLS: ["new", "perform_async", "each_slice"]
CALLS: ["find_by", "find_by", "run_pipeline_schedule"]
CALLS: ["project", "ref", "new", "execute"]
CALLS: ["remove_all_profiles"]
CALLS: ["find", "start_import", "import_url", "full_path", "add_event", "creator", "new", "execute", "async?", "gitlab_project_import?", "fail_import", "after_import"]
CALLS: ["mark_import_as_failed"]
CALLS: ["start", "logger", "full_path", "import_status", "info"]
CALLS: ["import_started?", "import_jid", "jid", "import_start"]
CALLS: ["has_importer?", "importer_class", "try"]
CALLS: ["expire_content_cache"]
CALLS: ["repository", "after_import", "import_finish", "remove_import_jid", "update_project_counter_caches", "after_create_default_branch", "refresh_markdown_cache!"]
CALLS: ["import_jid", "import_jid", "unset", "update_column"]
CALLS: ["default_branch", "default_branch", "change_head", "default_branch_protection", "default_branch", "protected?", "default_branch", "default_branch_protection", "default_branch_protection", "creator", "new", "execute"]
CALLS: ["repository", "branch_exists?", "repository", "before_change_head", "repository", "raw_repository", "write_ref", "repository", "copy_gitattributes", "repository", "after_change_head", "reload_default_branch", "errors", "add"]
CALLS: ["root_ref", "raw_repository", "copy_gitattributes"]
CALLS: ["keys", "expire_method_caches"]
CALLS: ["expire_branch_cache", "expire_root_ref_cache", "repository_event"]
CALLS: ["root_ref", "branches", "cache", "name", "expire", "cache", "name", "expire", "each", "cache", "expire", "cache", "expire"]
CALLS: ["cache", "delete"]
CALLS: ["default_branch"]
CALLS: ["refresh_markdown_cache", "persisted?", "read_write?", "update_columns"]
CALLS: ["shift", "find", "empty?", "forked_from_project", "mark_import_as_failed", "repository_storage", "disk_path", "fork_repository", "logger", "id", "info", "config", "repositories", "storages", "legacy_disk_path", "find", "first", "raise", "fork_repository"]
CALLS: ["start_fork", "disk_path", "add_event", "gitlab_shell", "repository_storage", "disk_path", "fork_repository", "id", "disk_path", "after_import"]
CALLS: ["start", "logger", "full_path", "import_status", "info"]
CALLS: ["find", "check", "now", "update_columns"]
CALLS: ["select", "map", "where", "update_all", "find_in_batches"]
CALLS: ["now", "project_ids", "now", "current_settings", "repository_checks_enabled", "try_obtain_lease", "new", "perform", "each"]
CALLS: ["env", "test?", "fake_application_settings", "current"]
CALLS: ["new", "execute"]
CALLS: ["destroy_unreferenced"]
CALLS: ["table_name", "joins", "where", "destroy_all"]
CALLS: ["now", "destroy_all"]
CALLS: ["expired", "new", "execute", "logger", "id", "error", "find_each"]
CALLS: ["", "current", "where"]
CALLS: ["expired", "destroy_all"]
CALLS: ["find", "find", "source_project", "new", "execute"]
CALLS: ["const_get", "find_by", "try"]
CALLS: ["unscoped", "unscoped", "months", "day", "ago", "where", "select", "limit", "where", "delete_all"]
CALLS: ["try_obtain_lease_for", "find_by", "propagate"]
CALLS: ["new", "try_obtain"]
CALLS: ["new", "try_obtain"]
CALLS: ["hash", "new", "try_obtain"]
CALLS: ["active?", "logger", "id", "info", "propagate_projects_with_template"]
CALLS: ["project_ids_batch", "empty?", "bulk_create_from_template", "size", "loop"]
CALLS: ["connection", "select_values"]
CALLS: ["service_hash", "values", "map", "transaction_begin", "service_hash", "keys", "bulk_insert_services", "run_callbacks", "transaction_end", "transaction"]
CALLS: ["as_json", "except", "is_a?", "to_json", "connection", "quote_column_name", "sanitize", "each_with_object"]
CALLS: ["connection", "')}\n      SQL", "execute"]
CALLS: ["with_indifferent_access", "find", "execute"]
CALLS: ["find_by", "nil?", "pending_delete?", "lease_for", "try_obtain", "logger", "new", "execute", "cancel_lease_for"]
CALLS: ["lease_key", "cancel"]
CALLS: ["lease_key", "new"]
CALLS: ["class", "name", "new"]
CALLS: ["find", "find", "build!", "new", "execute"]
CALLS: ["find", "find", "symbolize_keys", "new", "execute", "logger", "message", "error"]
CALLS: ["find_by", "repository", "exists?", "map", "update_statistics", "repository", "map", "refresh_method_caches", "cleanup"]
CALLS: ["id", "try_obtain_lease_for", "logger", "id", "info", "statistics", "refresh!"]
CALLS: ["to_sym", "concat", "each", "expire_method_caches", "send", "each"]
CALLS: ["find_by", "commit_exists_in_upstream?", "find_by", "build_commit", "author", "process_commit_message", "update_issue_metrics"]
CALLS: ["forked?", "forked_from_project", "with_indifferent_access", "commit", "present?"]
CALLS: ["to_s", "end_with?", "is_a?", "parse", "each", "from_hash"]
CALLS: ["all_references", "issues", "empty?", "map", "where", "committed_date", "update_all"]
CALLS: ["merged_merge_request?", "closes_issues", "any?", "close_issues", "create_cross_references!"]
CALLS: ["new", "updatable_by_user", "new", "close_issue", "each"]
CALLS: ["mark_pending_todos_as_done"]
CALLS: ["close_resource_email"]
CALLS: ["new", "execute"]
CALLS: ["project", "jira_tracker?", "project", "jira_service", "active", "is_a?", "project", "jira_service", "close_issue", "todo_service", "current_user", "close_issue", "project", "issues_enabled?", "close", "current_user", "update", "event_service", "current_user", "close_issue", "create_note", "notification_service", "current_user", "close_issue", "todo_service", "current_user", "close_issue", "execute_hooks", "assignees", "invalidate_cache_counts", "update_project_counter_caches"]
CALLS: ["issues_tracker", "to_param"]
CALLS: ["config", "issues_tracker", "to_param"]
CALLS: ["external_issue_tracker", "external_issue_tracker", "default_issue_tracker"]
CALLS: ["gitlab_issue_tracker_service", "create_gitlab_issue_tracker_service"]
CALLS: ["create_record_event"]
CALLS: ["client", "iid", "find", "jira_request", "nil?", "has_resolution?", "jira_issue_transition_id", "present?", "is_a?", "id", "is_a?", "diff_head_sha", "build_entity_url", "transition_issue", "client", "key", "find", "jira_request", "has_resolution?", "add_issue_solved_comment"]
CALLS: ["message", "logger", "class", "name", "client_url", "info"]
CALLS: ["api_url", "present?", "api_url", "url"]
CALLS: ["project", "namespace", "becomes", "project", "to_sym", "gitlab", "base_url", "polymorphic_url"]
CALLS: ["respond_to?", "resolution", "present?"]
CALLS: ["build_remote_link_props", "send_message"]
CALLS: ["gitlab_config", "url", "asset_url"]
CALLS: ["client_url", "present?", "find_remote_link", "save!", "comments", "build", "save!", "remotelink", "build", "save!", "class", "name", "client_url", "logger", "info", "jira_request"]
CALLS: ["remotelink", "all", "jira_request", "object", "find"]
CALLS: ["transitions", "build", "jira_issue_transition_id", "save"]
CALLS: ["admin?", "collection", "project_ids", "projects_with_reporter_access_limited_to", "pluck", "collection", "project_id", "include?", "is_a?", "assignee_or_author?", "select"]
CALLS: ["authorized_projects", "where"]
CALLS: ["author_id", "id", "assignee_id", "id"]
CALLS: ["author_id", "id", "assignees", "id", "exists?"]
CALLS: ["target_branch", "project", "default_branch", "current_user", "closes_issues", "current_user", "can?", "project", "current_user", "new", "execute", "each"]
CALLS: ["author", "referenced_mentionables", "include?", "cross_reference_exists?", "reject!", "local_reference", "cross_reference", "each"]
CALLS: ["notes", "system", "notes_for_mentioner", "exists?"]
CALLS: ["is_a?", "cross_reference_note_prefix", "to_reference", "capitalize", "where", "project", "group", "gfm_reference", "cross_reference_note_content", "capitalize", "where"]
CALLS: ["cross_reference_note_prefix"]
CALLS: ["", "where"]
CALLS: ["cross_reference_disallowed?", "project", "group", "gfm_reference", "cross_reference_note_content", "is_a?", "project", "issues_tracker", "create_cross_reference_note", "project", "new", "create_note"]
CALLS: ["is_a?", "project", "jira_tracker_active?", "is_a?", "is_a?", "commits", "include?"]
CALLS: ["jira_tracker?", "jira_service", "active"]
CALLS: ["can_cross_reference?", "model_name", "plural", "humanize", "client", "id", "find", "jira_request", "present?", "respond_to?", "iid", "id", "noteable_name", "build_entity_url", "name", "user_path", "resource_url", "project", "full_path", "project", "namespace", "project", "namespace_project_path", "resource_url", "humanize", "downcase", "title", "add_comment"]
CALLS: ["model_name", "singular"]
CALLS: ["gitlab", "base_url", "chomp"]
CALLS: ["chomp", "build_remote_link_props", "comment_exists?", "send_message"]
CALLS: ["comments", "jira_request", "present?", "body", "include?", "any?"]
CALLS: ["commit_events", "merge_requests_events"]
CALLS: ["local_reference", "cross_reference_exists?"]
CALLS: ["parse", "nil?", "log", "include?", "decode64", "logger", "inspect", "info", "new", "process_wiki_changes", "process_project_changes"]
CALLS: ["error"]
CALLS: ["project", "touch"]
CALLS: ["new", "identify", "identifier", "log", "tag_ref?", "project", "new", "execute", "branch_ref?", "project", "new", "execute", "single_change", "changes_refs", "to_a", "after_project_changes_hooks"]
CALLS: ["project", "update", "new", "execute_hooks"]
CALLS: ["execute", "error"]
CALLS: ["find_by", "try"]
CALLS: ["find_by", "project", "new", "trigger", "try"]
CALLS: ["active", "now", "where", "preload", "project", "owner", "ref", "new", "execute", "persisted?", "deactivate!", "logger", "id", "message", "error", "schedule_next_run!", "find_each"]
CALLS: ["save!", "update_attribute"]
CALLS: ["update_attribute"]
CALLS: ["find_by", "try"]
CALLS: ["find_by", "new", "pipeline_finished"]
CALLS: ["status", "mailer", "respond_to?", "user", "status", "notifiable_users", "map", "any?", "mailer", "public_send", "deliver_later"]
CALLS: ["notifiable_users"]
CALLS: ["compact", "new", "map", "select", "map"]
CALLS: ["find_by", "active?", "update_metrics_for_active_pipeline", "success?", "update_metrics_for_succeeded_pipeline", "try"]
CALLS: ["metrics", "started_at", "finished_at", "id", "update_all"]
CALLS: ["metrics", "started_at", "id", "update_all"]
CALLS: ["find_by", "try"]
CALLS: ["send"]
CALLS: ["find_by", "new", "execute"]
CALLS: ["needs_verification", "id", "perform_async", "find_each"]
CALLS: ["", "arel_table", "arel_table", "now", "eq", "eq", "lt", "or", "or", "where"]
CALLS: ["constantize", "constantize", "object_store_enabled?", "background_upload_enabled?", "find", "public_send", "migrate!"]
CALLS: ["unsafe_migrate!", "with_exclusive_lease"]
CALLS: ["object_store", "file", "file", "object_store", "object_store", "file_storage?", "cache_stored_file!", "storage", "file", "store!", "persist_object_store!", "file", "with_callbacks", "with_callbacks", "file", "nil?", "delete", "object_store", "file"]
CALLS: ["class", "object_store_enabled?", "class", "direct_upload_enabled?", "object_store"]
CALLS: ["object_store_options", "direct_upload"]
CALLS: ["persist_object_store?", "model", "store_serialization_column", "object_store", "update_column"]
CALLS: ["model", "store_serialization_column", "respond_to?"]
CALLS: ["args_check!", "constantize", "to_sym", "preload", "where", "sanity_check!", "migrate", "report!", "logger", "class", "message", "warn"]
CALLS: ["build_uploaders", "method", "map"]
CALLS: ["build_uploader", "map"]
CALLS: ["count", "count"]
CALLS: ["class", "sanity_check!"]
CALLS: ["partition", "logger", "header", "info", "logger", "failures", "warn", "any?", "map", "new"]
CALLS: ["map", "join"]
CALLS: ["count", "count", "count"]
CALLS: ["statuses", "latest", "failed", "present?", "render_show", "pipeline_path"]
CALLS: ["", "where"]
CALLS: ["project", "id", "project_pipeline_path"]
CALLS: ["constantize", "constantize", "object_store_enabled?", "background_upload_enabled?", "find", "to_sym", "build_uploader", "migrate!"]
CALLS: ["find_by", "can_create_notification?", "new", "new_note", "new", "execute", "logger", "error"]
CALLS: ["handle_note"]
CALLS: ["can_create_todo?", "project", "noteable", "mark_pending_todos_as_done", "create_mention_todos"]
CALLS: ["system?", "for_snippet?"]
CALLS: ["noteable_type", "end_with?"]
CALLS: ["noteable_type"]
CALLS: ["noteable_type", "present?", "cross_reference?", "system?", "to_ability_name", "to_sym", "build_new_note_recipients", "mailer", "user", "id", "id", "send", "deliver_later", "each"]
CALLS: ["new", "notification_recipients"]
CALLS: []
CALLS: ["objects_found?", "new", "issuable", "user", "open_mr", "new", "issuable", "user", "new_merge_request", "issuable", "user", "create_cross_references!"]
CALLS: ["set_user", "set_issuable", "user", "issuable"]
CALLS: ["issuable_class", "find_by", "issuable_class", "log_error"]
CALLS: []
CALLS: []
CALLS: ["create_record_event"]
CALLS: ["objects_found?", "new", "issuable", "user", "open_issue", "new", "issuable", "user", "new_issue", "issuable", "user", "create_cross_references!"]
CALLS: ["create_record_event"]
CALLS: ["unscoped", "find", "namespace", "team", "truncate", "forked?", "unlink_fork", "destroy!"]
CALLS: ["forked_from_project", "merge_requests", "opened", "from_project", "update_all", "forked_project_link", "destroy"]
CALLS: ["", "id", "where"]
CALLS: ["with_indifferent_access", "find", "find", "target_project", "new", "execute"]
CALLS: ["new", "opened", "due_tomorrow", "in_projects", "preload", "issue_due", "find_each"]
CALLS: ["author", "build_recipients", "mailer", "user", "id", "id", "reason", "send", "deliver_later", "each"]
CALLS: ["", "tomorrow", "where"]
CALLS: ["opened", "due_tomorrow", "group", "pluck", "map", "bulk_perform_async"]
CALLS: ["find", "gsub", "close_connection"]
CALLS: ["close"]
CALLS: ["find_by", "new", "run"]
CALLS: ["new", "execute"]
CALLS: ["find", "find", "new", "execute"]
CALLS: ["try_obtain_lease", "new", "execute"]
CALLS: ["gitlab_shell", "__send__"]
CALLS: ["find_project", "running?", "refresh_import_jid_expiration", "class", "perform_in_the_future"]
CALLS: ["select", "import_started", "find_by"]
CALLS: ["", "where"]
CALLS: ["perform_in"]
CALLS: ["select", "import_started", "find_by"]
CALLS: ["import_started", "find_by"]
CALLS: ["import_jid", "import_jid", "set"]
CALLS: ["find_project", "wait_for_jobs", "empty?", "refresh_import_jid_expiration", "to_sym", "fetch", "perform_async", "class", "perform_in"]
CALLS: ["new", "wait", "jobs_remaining", "positive?", "key", "jobs_remaining", "each_with_object"]
CALLS: ["find", "get_lease_uuid", "renew_lease", "try_obtain_lease", "to_sym", "command", "repository", "raw_repository", "gitaly_call", "repository", "path_to_repo", "join", "info", "popen", "zero?", "error", "gitaly_migrate", "flush_ref_caches", "cleanup", "present?", "present?", "cancel_lease"]
CALLS: ["migrate", "error", "new", "error", "new"]
CALLS: ["repository", "after_create_branch", "repository", "branch_names", "repository", "has_visible_content?"]
CALLS: ["expire_branches_cache", "repository_event"]
CALLS: ["new", "bitmaps_enabled?", "garbage_collect", "bitmaps_enabled?", "repack_full", "repack_incremental"]
CALLS: ["get_uuid"]
CALLS: ["cancel"]
CALLS: ["new", "renew"]
CALLS: ["repository_storage_path", "disk_path", "join", "expand_path"]
CALLS: ["find_by", "project", "new", "project_pipelines_path", "touch", "project_pipeline_path", "touch", "commit", "nil?", "commit", "commit_pipelines_path", "touch", "new_merge_request_pipelines_path", "touch", "touch", "each_pipelines_merge_request_path", "update_for_pipeline"]
CALLS: ["all_merge_requests", "url_helpers", "pipelines_project_merge_request_path", "each"]
CALLS: ["project", "merge_requests", "ref", "where"]
CALLS: ["url_helpers", "project_new_merge_request_path"]
CALLS: ["url_helpers", "id", "pipelines_project_commit_path"]
CALLS: ["joins", "find_by", "pipeline", "project", "new", "project_pipeline_path", "touch", "project_job_path", "touch", "tap"]
CALLS: ["with_expired_artifacts", "reorder", "find_by", "project", "project", "pending_delete", "logger", "id", "info", "erase_artifacts!"]
CALLS: ["", "where"]
CALLS: ["", "with_artifacts_archive", "now", "where"]
CALLS: ["logger", "info", "with_expired_artifacts", "pluck", "map", "bulk_perform_async"]
CALLS: ["symbolize_keys!", "reverse_merge!", "find", "blank_ref?", "blank_ref?", "new", "execute", "diff_refs", "same", "commits", "empty?", "new", "execute", "diff_refs", "commits", "empty?", "split", "send_email", "logger", "full_name", "info", "each", "start"]
CALLS: ["email", "present?", "repository_push_email", "email", "to", "email", "add_message_id", "skip_premailer", "email", "header", "email", "deliver_now"]
CALLS: ["new", "target_url", "find", "add_project_headers", "headers", "author_username", "author_id", "send_from_committer_email?", "sender", "reply_to", "subject", "mail"]
CALLS: ["send_from_committer_email", "to_boolean"]
CALLS: ["headers", "name", "headers", "id", "headers", "full_path"]
CALLS: ["find", "default_sender_address", "display_name", "name", "can_send_from_user_email?", "address", "email", "format"]
CALLS: ["description", "blank?", "short_sha", "description"]
CALLS: ["sha", "truncate_sha"]
CALLS: ["token", "token"]
CALLS: ["sha", "truncate_sha"]
CALLS: ["truncate_sha"]
CALLS: ["email", "split", "last", "class", "allowed_email_domains", "include?"]
CALLS: ["config", "gitlab", "host", "split", "length", "tld_length", "join", "shift"]
CALLS: ["config", "gitlab", "email_from", "new", "display_name", "config", "gitlab", "email_display_name"]
CALLS: ["enabled?", "new", "execute", "handle_failure"]
CALLS: ["logger", "warn", "present?", "message", "rejection", "deliver_later"]
CALLS: ["new", "from", "from", "subject", "hex", "config", "gitlab", "host", "message_id", "message_id", "to", "first", "mail"]
CALLS: ["class", "model_name", "singular_route_key", "id", "config", "gitlab", "host"]
CALLS: ["find", "find", "new", "symbolize_keys", "execute", "logger", "warn"]
CALLS: ["find", "find", "new", "execute"]
CALLS: ["find", "find", "deep_symbolize_keys", "new", "execute"]
CALLS: ["find_by", "commit", "new", "signature"]
CALLS: ["gpg_commit", "signature"]
CALLS: ["commit", "commit", "new"]
CALLS: ["last", "key?", "pop", "", "jid", "notify"]
CALLS: ["find_project", "new_client_for", "try_import"]
CALLS: ["import", "class", "rate_limit_resets_in", "id", "perform_in"]
CALLS: ["id", "jid", "perform_in_the_future", "new", "execute", "counter", "increment", "id", "perform_async"]
CALLS: ["new", "execute", "refresh_import_jid_expiration", "id", "key", "jobs_remaining", "perform_async"]
CALLS: ["new", "execute", "id", "key", "jobs_remaining", "perform_async"]
CALLS: ["new", "execute", "key", "jobs_remaining", "each_with_object", "id", "perform_async"]
CALLS: ["new", "execute", "each", "refresh_import_jid_expiration", "id", "perform_async"]
CALLS: ["after_import", "report_import_time"]
CALLS: ["zone", "now", "created_at", "full_path", "histogram", "observe", "counter", "increment", "logger", "round", "info"]
CALLS: ["histogram"]
CALLS: ["representation_class", "from_json_hash", "importer_class", "new", "execute", "counter", "full_path", "increment"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["project", "project_members", "to_a", "project_members", "pluck", "invite?", "user_id", "include?", "reject!", "dup", "id", "source", "created_by", "map!", "transaction_begin", "save", "each", "transaction_end", "transaction"]
CALLS: ["invite_token", "present?"]
CALLS: ["current_user", "authorized_projects", "order_id_desc", "apply_import_project_project_members_path", "options_from_collection_for_select", "select_tag", "project_project_members_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["import"]
CALLS: ["find_by", "notify_waiter", "new_client_for", "try_import", "notify_waiter", "class", "rate_limit_resets_in", "id", "perform_in"]
CALLS: ["jid", "notify"]
CALLS: ["new", "execute", "find_application"]
CALLS: ["find", "try"]
CALLS: ["new", "execute", "find_application"]
CALLS: ["find_by_id", "provider", "gcp?", "new", "execute", "try", "try"]
CALLS: ["new", "execute", "find_application"]
CALLS: ["class", "get_session_token", "try_obtain_lease_for", "new", "execute", "empty?", "class", "get_billing_state", "update_billing_change_counter", "class", "set_billing_state"]
CALLS: ["billing_changed_counter", "state_transition", "increment"]
CALLS: ["nil?", "nil?"]
CALLS: ["counter"]
CALLS: ["redis_shared_state_key_for", "set", "with"]
CALLS: ["hexdigest"]
CALLS: ["redis_shared_state_key_for", "get", "new", "type_cast_from_user", "with"]
CALLS: ["get_redis_session_key", "get", "with"]
CALLS: []
CALLS: ["find_by", "parse_trace_sections!"]
CALLS: ["project", "user", "new", "execute"]
CALLS: ["find_by", "has_environment?", "create_deployment", "try"]
CALLS: ["new", "execute"]
CALLS: ["find_by", "new", "execute", "try"]
CALLS: ["find_by", "try"]
CALLS: ["find_by", "new", "id", "perform", "new", "id", "perform", "id", "perform_async", "id", "perform_async", "try"]
CALLS: ["find_by", "update_coverage"]
CALLS: ["trace", "coverage_regex", "extract_coverage", "present?", "update_attributes"]
CALLS: ["project", "try"]
CALLS: ["perform_and_ttl", "perform", "class", "perform_in"]
CALLS: ["always_perform?", "lease_for", "try_obtain", "ttl"]
CALLS: ["env", "test?"]
CALLS: ["find_by", "refresh_authorized_projects"]
CALLS: ["new", "execute"]
CALLS: ["find_by", "trace", "archive!", "try"]
CALLS: ["where", "count", "zero?", "notify", "deliver_now"]
CALLS: ["push_bulk"]
CALLS: []
CALLS: ["size", "max_attachment_size", "new", "store!", "to_h"]
CALLS: ["max_attachment_size", "megabytes", "to_i"]
CALLS: ["max_attachment_size", "megabytes", "to_i"]
CALLS: ["params", "to_i", "snippet", "visibility_level", "current_user", "allowed_for?", "snippet", "deny_visibility_level", "snippet", "filter_spam_check_params", "snippet", "params", "assign_attributes", "snippet", "current_user", "spam_check", "snippet", "save"]
CALLS: ["params", "delete", "params", "delete", "params", "delete", "params", "delete"]
CALLS: ["visibility_level", "level_name", "downcase", "errors", "add"]
CALLS: ["project", "repository", "find_tag", "project", "releases", "find_by", "update_attributes", "success", "error", "error"]
CALLS: ["hook", "project"]
CALLS: ["hook", "class", "triggers", "trigger", "to_sym", "key", "trigger", "nil?", "respond_to?", "error", "__send__", "hook", "execute", "catch", "error"]
CALLS: ["project", "repository", "find_tag", "error", "current_user", "rm_tag", "project", "releases", "find_by", "destroy", "build_push_data", "new", "project", "current_user", "push", "project", "dup", "execute_hooks", "project", "dup", "execute_services", "success", "error", "message", "error"]
CALLS: ["project", "current_user", "dereferenced_target", "sha", "name", "build"]
CALLS: ["params", "blank_ref?", "params", "ref_name", "project", "repository", "find_tag", "target", "params", "project", "dereferenced_target", "commit", "compact", "message", "project", "current_user", "params", "params", "params", "build"]
CALLS: ["current_user", "params", "params", "params", "build"]
CALLS: ["project", "current_user", "dereferenced_target", "sha", "name", "build"]
CALLS: ["before_remove_tag", "raw_repository", "rm_tag", "after_remove_tag"]
CALLS: ["expire_tags_cache"]
CALLS: ["expire_tags_cache", "expire_statistics_caches", "repository_event"]
CALLS: ["validate", "error", "project", "repository", "strip!", "current_user", "add_tag", "error", "message", "error", "new", "execute", "success", "merge", "error"]
CALLS: ["raw_repository", "add_tag"]
CALLS: ["hooks_for", "async_execute", "find_each", "execute_all_async"]
CALLS: ["triggers", "keys", "include?", "none", "public_send"]
CALLS: ["usage_ping_enabled?", "to_json", "post", "store_metrics", "logger", "info"]
CALLS: ["present?", "slice", "create!"]
CALLS: ["params", "present?", "params", "find_by", "current_user", "can?"]
CALLS: ["current_user", "new", "execute", "params", "new"]
CALLS: ["current_user", "project", "params", "params", "new"]
CALLS: ["current_user", "projects", "params", "default_project_filter", "new"]
CALLS: ["increment!"]
CALLS: ["increment_pushes_since_gc", "measure"]
CALLS: ["pushes_since_gc_redis_shared_state_key", "incr", "with"]
CALLS: ["id"]
CALLS: ["path", "directory?", "clean_up_old_archives", "clean_up_empty_directories", "measure"]
CALLS: ["path", "path", "run"]
CALLS: ["path", "path", "mmin", "run"]
CALLS: ["ldap_hard_blocked?", "user", "block"]
CALLS: ["user", "ldap_blocked?", "user", "ldap_user?"]
CALLS: ["current_user", "can?", "extractor", "extract_commands", "extract_updates"]
CALLS: ["class", "definition_by_name", "execute", "each"]
CALLS: ["class", "command_definitions", "new"]
CALLS: ["supported?", "note", "project", "current_user", "new", "note", "noteable", "execute"]
CALLS: ["commit_count", "action", "ref_type", "commit_from_id", "commit_to_id", "trimmed_ref", "commit_title", "id", "build_push_event_payload", "push_event_payload", "save!", "push_event_payload"]
CALLS: ["commit"]
CALLS: ["ref", "ref_name"]
CALLS: ["fetch"]
CALLS: ["remove?", "revision_after"]
CALLS: ["create?", "revision_before"]
CALLS: ["fetch", "last", "index", "strip", "truncate"]
CALLS: ["root_ref", "raw_repository", "root_ref", "commit_count"]
CALLS: ["commit", "try"]
CALLS: ["current_user", "project", "can?", "params", "update"]
CALLS: ["destroy"]
CALLS: ["current_user", "project", "can?", "project", "protected_tags", "params", "create"]
CALLS: ["current_user", "can?", "params", "update"]
CALLS: ["params", "delete", "params", "delete", "transaction_begin", "delete_redundant_access_levels", "params", "params", "params", "params", "new", "execute", "transaction_end", "transaction"]
CALLS: ["nil?", "merge_access_levels", "destroy_all", "nil?", "push_access_levels", "destroy_all"]
CALLS: ["params", "delete", "params", "delete", "merge!", "new", "execute"]
CALLS: ["current_user", "can?", "destroy"]
CALLS: ["authorized?", "protected_branch", "save", "protected_branch"]
CALLS: ["project", "protected_branches", "params", "new"]
CALLS: ["current_user", "protected_branch", "can?"]
CALLS: ["project", "params", "valid_visibility_level_change?", "error", "renaming_project_with_container_registry_tags?", "error", "changing_default_branch?", "project", "params", "change_head", "error", "enabling_wiki?", "ensure_wiki_exists", "project", "params", "except", "update_attributes", "project", "previous_changes", "include?", "project", "rename_repo", "system_hook_service", "project", "execute_hooks_for", "changing_pages_https_only?", "update_pages_config", "success", "project", "errors", "full_messages", "to_sentence", "presence", "error"]
CALLS: ["project", "previous_changes", "include?"]
CALLS: ["project", "new", "execute"]
CALLS: ["project", "project", "owner", "new", "wiki", "project", "full_name", "log_error", "counter"]
CALLS: ["wiki_enabled?", "params", "dig", "to_i"]
CALLS: ["params", "project", "repository", "exists?", "project", "default_branch"]
CALLS: ["params", "project", "path", "project", "has_container_registry_tags?"]
CALLS: ["container_repositories", "to_a", "any?", "has_root_container_repository_tags?"]
CALLS: ["config", "registry", "enabled", "build_root_repository", "has_tags?"]
CALLS: ["new"]
CALLS: ["tags", "any?"]
CALLS: ["tag_list", "any?"]
CALLS: ["tag_list", "any?"]
CALLS: ["to_i", "visibility_level", "current_user", "can?", "current_user", "allowed_for?", "deny_visibility_level"]
CALLS: ["project", "build_full_path", "gitlab_shell", "repository_storage_path", "project", "full_path_was", "mv_repository", "gitlab_shell", "repository_storage_path", "project", "full_path_was", "mv_repository", "logger", "project", "full_path_was", "error"]
CALLS: ["gitlab_shell", "project", "repository_storage_path", "exists?", "gitlab_shell", "project", "repository_storage_path", "mv_repository"]
CALLS: []
CALLS: ["build_full_path", "logger", "full_path_was", "error", "has_container_registry_tags?", "logger", "full_path_was", "error", "new", "full_path_was", "expire_caches_before_rename", "storage", "rename_repo", "full_path_was", "info", "rename_repo_notify!", "after_rename_repo", "logger", "full_path_was", "error", "new"]
CALLS: ["started?", "full_path_was", "send_move_instructions", "expires_full_path_cache", "old_path_with_namespace", "full_path_was", "new", "execute_hooks_for", "reload_repository!"]
CALLS: ["new", "project_was_moved", "run_after_commit"]
CALLS: ["team", "members", "notifiable_users", "mailer", "id", "id", "project_was_moved_email", "deliver_later", "each"]
CALLS: ["find", "find", "project_url", "notification_email", "subject", "mail"]
CALLS: ["active?", "full_path_key", "delete"]
CALLS: ["write_repository_config", "previous_changes", "first", "hashed_storage?", "new", "path", "namespace", "full_path", "rename_project", "new", "path", "namespace", "full_path", "rename_project"]
CALLS: ["project", "write_repository_config"]
CALLS: ["full_path", "repository", "raw_repository", "write_config", "logger", "full_path", "id", "message", "error"]
CALLS: ["new", "new", "exists?", "before_delete", "exists?", "before_delete"]
CALLS: ["expire_exists_cache", "expire_all_method_caches", "exists?", "expire_branch_cache", "expire_content_cache", "repository_event"]
CALLS: ["expire_method_caches"]
CALLS: ["register_attempt", "create_status", "enqueue!", "run!", "build", "artifacts?", "latest?", "tmp_path", "mkdir_p", "tmp_path", "extract_archive!", "join", "exist?", "latest?", "deploy_page!", "success", "mktmpdir", "message", "error", "message", "error"]
CALLS: ["sanity_check!", "ids", "to_s", "perform_async"]
CALLS: ["pages_deployments_total_counter", "increment"]
CALLS: ["counter"]
CALLS: ["pages", "path", "join"]
CALLS: ["pages_path", "mkdir_p", "public_path", "previous_public_path", "move", "public_path", "move", "previous_public_path", "rm_r"]
CALLS: ["pages_path", "hex", "join"]
CALLS: ["pages_path", "join"]
CALLS: ["project", "pages_path"]
CALLS: ["project", "pages_path"]
CALLS: ["pages", "path", "full_path", "join"]
CALLS: ["artifacts", "ends_with?", "extract_zip_archive!"]
CALLS: ["build", "artifacts_file", "path"]
CALLS: ["job_artifacts_archive", "file", "legacy_artifacts_file"]
CALLS: ["build", "artifacts_file"]
CALLS: ["build", "artifacts_metadata?", "build", "artifacts_metadata_entry", "total_size", "max_size", "total_size", "join", "build", "artifacts_file", "system", "use_file"]
CALLS: ["max_pages_size", "megabytes", "zero?", "min"]
CALLS: ["artifacts?", "artifacts_metadata", "exists?"]
CALLS: ["statuses", "count"]
CALLS: ["options"]
CALLS: ["project", "build", "pipeline", "build", "user", "build", "ref", "new"]
CALLS: ["artifacts_expired?", "artifacts_file", "exists?"]
CALLS: ["artifacts_expire_at", "artifacts_expire_at", "now"]
CALLS: ["pages_config_file", "pages_config", "to_json", "update_file", "reload_daemon", "success", "message", "error"]
CALLS: ["remove", "hex", "write", "open", "move", "remove"]
CALLS: ["pages", "path", "join", "rm_r"]
CALLS: ["pages_path", "join"]
CALLS: ["pages_update_file", "hex", "update_file"]
CALLS: ["pages", "path", "join"]
CALLS: ["options", "delete", "options", "options", "multi_action"]
CALLS: ["options", "delete", "options", "repository", "raw_repository", "raw", "options", "multi_action", "with_cache_hooks"]
CALLS: ["forked?", "fork_source", "lfs_objects", "projects", "include?", "projects", "find_each", "refresh_forks_count", "fork_network", "merge_requests", "opened", "where", "not", "from_project", "new", "execute", "each", "fork_network_member", "destroy", "forked_project_link", "destroy"]
CALLS: ["new", "refresh_cache"]
CALLS: ["new", "refresh_cache"]
CALLS: ["new", "refresh_cache"]
CALLS: ["blank?", "current_user", "project", "allowed_transfer?", "project", "transfer", "current_user", "invalidate_personal_projects_count", "project", "reload", "project", "errors", "message", "add"]
CALLS: ["can?", "id", "namespace_id", "can?"]
CALLS: ["full_path", "group", "try", "path", "join", "namespace", "path", "try", "where", "exists?", "new", "has_container_registry_tags?", "new", "attempt_transfer_transaction"]
CALLS: ["transaction_begin", "project", "expire_caches_before_rename", "update_namespace_and_visibility", "project", "send_move_instructions", "project", "move_project_folders", "current_user", "project", "new", "execute", "project", "move_project_uploads", "new", "project", "path", "full_path", "full_path", "move_project", "project", "old_path_with_namespace", "project", "expires_full_path_cache", "write_repository_config", "execute_system_hooks", "transaction_end", "transaction", "rollback_side_effects", "raise", "refresh_permissions"]
CALLS: ["hashed_storage?", "new", "path", "full_path", "full_path", "move_project"]
CALLS: ["hashed_storage?", "move_repo_folder", "new", "reload_repository!", "move_repo_folder"]
CALLS: ["gitlab_shell", "project", "repository_storage_path", "mv_repository"]
CALLS: ["new", "project", "execute_hooks_for"]
CALLS: ["rollback_folder_move", "update_namespace_and_visibility", "write_repository_config"]
CALLS: ["move_repo_folder", "move_repo_folder"]
CALLS: ["move_repository", "move_repository"]
CALLS: ["gitlab_shell", "project", "repository_storage_path", "exists?", "gitlab_shell", "project", "repository_storage_path", "exists?", "logger", "project", "full_path", "project", "id", "warn", "gitlab_shell", "project", "repository_storage_path", "mv_repository"]
CALLS: ["user_ids_for_project_authorizations", "user_ids_for_project_authorizations", "new", "execute"]
CALLS: ["owner_id"]
CALLS: ["members_with_parents", "pluck"]
CALLS: ["project", "namespace", "project", "visibility_level_allowed_by_group?", "project", "visibility_level", "visibility_level", "project", "save!"]
CALLS: ["cache", "id", "delete"]
CALLS: ["current_user", "can?", "access_denied!", "params", "find_by", "project", "current_user", "new", "execute", "errors", "present?", "flash", "errors", "first", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["params", "find_by", "current_user", "new", "execute", "flash", "name", "group_path", "flash", "now", "error", "name", "page_description", "description", "header_title", "group_title", "current_user"]
CALLS: ["params", "find_by", "current_user", "params", "dup", "new", "execute", "reload", "admin_project_path", "admin_root_path"]
CALLS: ["project", "team", "members", "sorted", "noteable_owner", "participants_in_noteable", "all_members", "groups", "uniq"]
CALLS: ["project", "team", "members", "flatten", "count"]
CALLS: ["uniq", "to_a", "compact", "sort_by", "username", "name", "avatar_url", "map"]
CALLS: ["noteable", "noteable", "current_user", "participants", "sorted"]
CALLS: ["noteable", "noteable", "author", "present?", "noteable", "author", "name", "noteable", "author", "username", "noteable", "author", "avatar_url"]
CALLS: ["namespace", "namespace", "transaction_begin", "move_before_destroy_relationships", "destroy_old_project", "name", "path", "rename_project", "transaction_end", "transaction", "attempt_restore_repositories", "class", "message", "raise"]
CALLS: ["new", "attempt_repositories_rollback"]
CALLS: ["flush_caches", "repo_path", "removal_path", "repo_path", "mv_repository", "raise_error", "wiki_path", "removal_path", "wiki_path", "mv_repository", "raise_error"]
CALLS: ["repository", "before_delete", "wiki_path", "repo_path", "new", "before_delete", "new", "delete_cache"]
CALLS: ["cache", "cache_key", "delete"]
CALLS: ["project", "id"]
CALLS: ["project", "wiki", "disk_path"]
CALLS: ["project", "disk_path"]
CALLS: ["new", "execute"]
CALLS: ["new", "execute", "new", "execute", "new", "execute", "new", "execute", "new", "execute", "new", "execute", "add_source_project_to_fork_network"]
CALLS: ["fork_network", "fork_network", "create!"]
CALLS: ["users_star_projects", "any?", "transaction_begin", "id", "update_all", "id", "reset_counters", "id", "reset_counters", "success", "transaction_end", "transaction"]
CALLS: ["transaction_begin", "move_project_members", "remove_remaining_members", "success", "transaction_end", "transaction"]
CALLS: ["source_project", "project_members", "destroy_all"]
CALLS: ["non_existent_members", "prepare_relation", "id", "update_all"]
CALLS: ["source_project", "members", "select", "where", "project_members", "select", "not"]
CALLS: ["postgresql?", "model", "pluck", "where"]
CALLS: ["transaction_begin", "move_group_links", "remove_remaining_project_group_links", "success", "transaction_end", "transaction"]
CALLS: ["source_project", "reload", "project_group_links", "destroy_all"]
CALLS: ["non_existent_group_links", "prepare_relation", "id", "update_all"]
CALLS: ["source_project", "project_group_links", "where", "group_links_in_target_project", "not"]
CALLS: ["project_group_links", "select"]
CALLS: ["transaction_begin", "move_project_authorizations", "remove_remaining_authorizations", "success", "transaction_end", "transaction"]
CALLS: ["source_project", "project_authorizations", "delete_all"]
CALLS: ["non_existent_authorization", "prepare_relation", "id", "update_all"]
CALLS: ["source_project", "project_authorizations", "select", "where", "authorized_users", "not"]
CALLS: ["transaction_begin", "move_notification_settings", "remove_remaining_notification_settings", "success", "transaction_end", "transaction"]
CALLS: ["source_project", "notification_settings", "destroy_all"]
CALLS: ["non_existent_notifications", "prepare_relation", "id", "update_all"]
CALLS: ["source_project", "notification_settings", "select", "where", "users_in_target_project", "not"]
CALLS: ["notification_settings", "select"]
CALLS: ["transaction_begin", "move_lfs_objects_projects", "remove_remaining_lfs_objects_project", "success", "transaction_end", "transaction"]
CALLS: ["source_project", "lfs_objects_projects", "destroy_all"]
CALLS: ["non_existent_lfs_objects_projects", "prepare_relation", "lfs_storage_project", "id", "update_all"]
CALLS: ["source_project", "lfs_objects_projects", "where", "lfs_objects", "not"]
CALLS: ["fork_network", "transaction_begin", "move_forked_project_links", "move_fork_network_members", "update_root_project", "refresh_forks_count", "success", "transaction_end", "transaction"]
CALLS: ["source_project", "where", "id", "update_all"]
CALLS: ["source_project", "where", "id", "update_all", "source_project", "where", "id", "update_all"]
CALLS: ["source_project", "where", "id", "update_all", "source_project", "where", "id", "update_all"]
CALLS: ["transaction_begin", "move_deploy_keys_projects", "remove_remaining_deploy_keys_projects", "success", "transaction_end", "transaction"]
CALLS: ["source_project", "deploy_keys_projects", "destroy_all"]
CALLS: ["non_existent_deploy_keys_projects", "prepare_relation", "id", "update_all"]
CALLS: ["source_project", "deploy_keys_projects", "joins", "where", "deploy_keys", "select", "not"]
CALLS: ["namespace", "namespace", "namespace", "refresh_project_authorizations", "namespace", "refresh_project_authorizations", "run_after_commit", "new", "execute", "new", "execute", "new", "execute", "success", "with_transaction_returning_status"]
CALLS: ["owner", "refresh_authorized_projects"]
CALLS: ["refresh_members_authorized_projects"]
CALLS: ["user_ids_for_project_authorizations", "new", "execute"]
CALLS: ["add_repository_to_project", "import_data", "success", "project", "import_url", "project", "full_path", "message", "error"]
CALLS: ["project", "external_import?", "unknown_url?", "project", "import_url", "validate!", "message", "has_importer?", "importer_class", "try", "unknown_url?", "create_repository", "project", "repository_exists?", "import_repository"]
CALLS: ["project", "import_url"]
CALLS: ["has_importer?", "importer_class", "try", "project", "ensure_repository", "project", "repository", "project", "import_url", "fetch_as_mirror", "gitlab_shell", "project", "repository_storage", "project", "disk_path", "project", "import_url", "import_repository", "project", "repository_exists?", "project", "repository", "expire_content_cache", "message"]
CALLS: ["hex", "add_remote", "fetch_remote", "remove_remote"]
CALLS: ["gitlab_shell", "raw_repository", "fetch_remote"]
CALLS: ["wiki", "repository_exists?"]
CALLS: ["repository_exists?", "create_repository"]
CALLS: ["file_has_changed?"]
CALLS: ["repository", "last_for_path", "sha"]
CALLS: ["params", "validate_file_status!", "each"]
CALLS: ["include?", "file_has_changed?", "raise_error"]
CALLS: ["file_has_changed?"]
CALLS: ["validate_permissions!", "validate_on_branch!", "validate_branch_existance!", "different_branch?", "validate_new_branch_name!"]
CALLS: ["project", "current_user", "new", "execute", "raise_error"]
CALLS: ["project", "empty_repo?", "different_branch?", "repository", "branch_exists?", "raise_error"]
CALLS: ["empty_repo?", "repository", "branch_exists?", "raise_error"]
CALLS: ["current_user", "project", "new", "can_push_to_branch?", "raise_error"]
CALLS: []
CALLS: ["repository", "exists?"]
CALLS: ["repository", "exists?"]
CALLS: ["project", "import_export_shared", "save_all!", "execute_after_export_action"]
CALLS: ["save_services", "project", "save", "notify_success", "cleanup_and_notify_error!"]
CALLS: ["cleanup_and_notify_error", "errors", "join", "new"]
CALLS: ["logger", "project", "name", "project", "id", "errors", "join", "error", "export_path", "rm_rf", "notify_error"]
CALLS: ["notification_service", "errors", "project_not_exported"]
CALLS: ["notifiable?", "mailer", "project_was_not_exported_email", "deliver_later"]
CALLS: ["notification_email", "subject", "mail"]
CALLS: ["namespace", "present?", "hashed_storage?", "import_export_shared", "archive_path"]
CALLS: ["version_saver", "avatar_saver", "project_tree_saver", "uploads_saver", "repo_saver", "wiki_repo_saver", "lfs_saver", "all?"]
CALLS: ["project", "new"]
CALLS: ["project", "new"]
CALLS: ["project", "new"]
CALLS: ["project", "new"]
CALLS: ["project", "new"]
CALLS: ["project", "new"]
CALLS: ["new"]
CALLS: ["current_user", "project", "execute", "cleanup_and_notify_error"]
CALLS: ["new"]
CALLS: ["try_obtain_lease", "present?", "block_given?", "execute_gitlab_shell_gc"]
CALLS: ["id", "task", "lease_key", "perform_async", "pushes_since_gc", "gc_period", "reset_pushes_since_gc", "measure"]
CALLS: ["housekeeping_gc_period"]
CALLS: ["pushes_since_gc", "gc_period", "pushes_since_gc", "full_repack_period"]
CALLS: ["housekeeping_full_repack_period"]
CALLS: ["pushes_since_gc"]
CALLS: ["pushes_since_gc_redis_shared_state_key", "del", "with"]
CALLS: ["pushes_since_gc_redis_shared_state_key", "get", "to_i", "with"]
CALLS: ["project", "hashed_storage?", "project", "logger", "new", "execute", "project", "hashed_storage?", "project", "logger", "new", "execute"]
CALLS: ["project", "disk_path", "project", "wiki", "repository_exists?", "project", "storage_version", "project", "storage_version", "project", "ensure_storage_path_exists", "project", "disk_path", "move_repository", "move_repository", "project", "write_repository_config", "rollback_folder_move", "project", "storage_version", "project", "repository_read_only", "project", "save!", "block_given?"]
CALLS: ["project", "full_path", "project", "disk_path", "project", "absolute_base_dir", "project", "storage_version", "project", "absolute_base_dir", "move_folder!", "project", "save!", "block_given?"]
CALLS: ["root", "base_dir", "join"]
CALLS: ["directory?", "logger", "project", "id", "info", "exist?", "logger", "project", "id", "error", "dirname", "mkdir_p", "mv", "logger", "project", "id", "info"]
CALLS: ["destroy"]
CALLS: ["project", "project_group_links", "params", "params", "create"]
CALLS: ["import_upload_path", "dirname", "mkdir_p", "params", "delete", "path", "import_upload_path", "copy_entry", "params", "delete", "overwrite_project?", "params", "params", "tmp_filename", "params", "params", "import_upload_path", "present?", "params", "current_user", "params", "new", "execute"]
CALLS: ["project_with_same_full_path?"]
CALLS: ["current_namespace", "full_path", "params", "find_by_full_path", "present?"]
CALLS: ["params", "find_by"]
CALLS: ["hex"]
CALLS: ["tmp_filename", "import_upload_path"]
CALLS: ["link_existing_project", "fork_new_project"]
CALLS: ["id", "allowed_visibility_level", "description", "name", "path", "shared_runners_enabled", "target_namespace", "id", "avatar", "present?", "avatar", "image?", "avatar", "current_user", "new", "execute", "persisted?", "project_feature", "builds_access_level", "project_feature", "update_attributes", "link_fork_network"]
CALLS: ["visibility_level", "target_namespace", "visibility_level", "min", "closest_allowed_level"]
CALLS: ["current_user", "namespace"]
CALLS: ["fork_network", "fork_network_members", "create", "forked_project_link", "create_forked_project_link", "refresh_forks_count"]
CALLS: ["forked?", "link_fork_network"]
CALLS: ["accessible_keys", "params", "params", "find_by", "project", "deploy_keys", "include?", "project", "deploy_keys"]
CALLS: ["current_user", "accessible_deploy_keys"]
CALLS: ["project_deploy_keys", "pluck", "are_public", "pluck", "push", "where"]
CALLS: ["valid_url?", "new", "download!", "store!", "to_h"]
CALLS: ["nil?", "default_options", "options", "merge", "strip!", "regexp"]
CALLS: []
CALLS: ["valid_protocol?", "valid_uri?"]
CALLS: ["options", "merge", "regexp"]
CALLS: ["valid?"]
CALLS: ["http?", "valid_domain?"]
CALLS: ["parse", "host", "any?"]
CALLS: ["regexp"]
CALLS: ["current_user", "project", "can?", "project", "flush_caches", "project", "current_user", "new", "execute", "project", "root_of_fork_network", "project", "full_name", "update", "project", "attempt_destroy_transaction", "system_hook_service", "project", "execute_hooks_for", "project", "full_path", "log_info", "current_user", "invalidate_personal_projects_count", "project", "message", "attempt_rollback", "project", "message", "attempt_rollback", "raise"]
CALLS: ["transaction_begin", "remove_legacy_registry_tags", "raise_error", "trash_repositories!", "team", "truncate", "destroy!", "transaction_end", "transaction"]
CALLS: ["config", "registry", "enabled", "project", "build_root_repository", "has_tags?", "delete_tags!", "tap"]
CALLS: ["has_tags?", "tags", "digest", "map", "to_set", "client", "path", "delete_repository_tag", "all?"]
CALLS: ["repo_path", "remove_repository", "raise_error", "wiki_path", "remove_repository", "raise_error"]
CALLS: ["params", "removal_path", "mv_repository", "log_info", "project", "minutes", "repository_storage_path", "perform_in", "run_after_commit"]
CALLS: ["destroyed?", "update_attributes", "full_path", "log_error"]
CALLS: ["present?", "current_user", "params", "new", "execute", "params", "delete", "params", "delete", "params", "delete", "params", "new", "current_user", "visibility_level", "allowed_for?", "deny_visibility_level", "allowed_fork?", "errors", "add", "set_project_name_from_path", "params", "current_user", "allowed_namespace?", "namespace_id", "deny_namespace", "namespace_id", "current_user", "namespace_id", "block_given?", "creator", "current_user", "build_forked_project_link", "save_project_and_import_data", "persisted?", "after_create_actions", "import_schedule", "record", "type", "record", "errors", "full_messages", "join", "fail", "message", "fail"]
CALLS: ["name", "present?", "path", "present?", "path", "present?", "name", "path", "dup", "name", "present?", "path", "name", "dup", "parameterize"]
CALLS: ["transaction_begin", "create_or_update_import_data", "save", "gitlab_project_import?", "create_services_from_active_templates", "create_labels", "import?", "create_repository", "transaction_end", "transaction"]
CALLS: ["where", "id", "build_from_template", "save!", "each"]
CALLS: ["templates", "attributes", "except", "new", "execute", "each"]
CALLS: ["nil?", "nil?", "import_data", "build_import_data", "data", "data", "data", "merge", "credentials", "credentials", "credentials", "merge"]
CALLS: ["owner", "name", "full_name", "log_info", "gitlab_project_import?", "write_repository_config", "skip_wiki?", "create_wiki", "event_service", "current_user", "create_project", "system_hook_service", "execute_hooks_for", "setup_authorizations", "current_user", "invalidate_personal_projects_count"]
CALLS: ["current_user", "feature_available?"]
CALLS: ["group", "group", "refresh_members_authorized_projects", "current_user", "refresh_authorized_projects", "namespace", "owner", "current_user", "add_master"]
CALLS: ["add_user"]
CALLS: ["add_user"]
CALLS: ["create_event"]
CALLS: ["find_by", "current_user", "can?"]
CALLS: ["nil?", "find_by", "current_user", "can?"]
CALLS: ["errors", "add"]
CALLS: ["params", "delete", "find", "file", "params", "dup", "params", "current_user", "params", "new", "execute", "close"]
CALLS: ["blank?"]
CALLS: ["new", "repository", "delete_all_refs_except", "execute", "logger", "full_path", "id", "info"]
CALLS: ["params", "explain_quick_actions", "find_user_references", "join", "success"]
CALLS: ["project", "current_user", "new", "current_user", "analyze", "users", "map"]
CALLS: ["commands_target_type", "include?", "project", "current_user", "new", "find_commands_target", "explain"]
CALLS: ["current_user", "can?", "extractor", "extract_commands", "explain_commands"]
CALLS: ["class", "definition_by_name", "explain", "map", "compact"]
CALLS: ["params"]
CALLS: ["commands_target_id", "present?", "commands_target_type", "current_user", "project", "id", "new", "commands_target_id", "find", "commands_target_type", "project", "issues", "project", "merge_requests", "build"]
CALLS: ["params"]
CALLS: ["pages", "enabled", "data", "data", "data", "perform_async"]
CALLS: ["note", "project"]
CALLS: ["target", "project"]
CALLS: ["editable?", "mentioned_users", "to_a", "params", "current_user", "merge", "update_attributes", "current_user", "create_new_cross_references!", "previous_changes", "include?", "new", "current_user", "update_note"]
CALLS: ["handle_note"]
CALLS: ["current_user", "new", "render"]
CALLS: ["empty?", "supported?", "class", "noteable_update_service", "project", "current_user", "new", "noteable", "execute"]
CALLS: ["noteable_type"]
CALLS: ["system?", "new", "author", "leave_note", "for_personal_snippet?", "create_cross_references!", "execute_note_hooks"]
CALLS: ["project", "hook_data", "confidential?", "project", "execute_hooks", "project", "execute_services"]
CALLS: ["author", "build"]
CALLS: ["current_user", "to_hook_data", "blank_ref?"]
CALLS: ["previous_changes", "fetch", "fetch", "labels", "map", "labels", "map", "assignees", "is_a?", "map", "assignees", "map", "first", "hook_attrs", "assignee", "hook_attrs", "respond_to?", "fetch", "total_time_spent", "total_time_spent", "new", "build"]
CALLS: ["attributes"]
CALLS: ["name", "username", "avatar_url"]
CALLS: ["attributes"]
CALLS: ["web_url", "ssh_url_to_repo", "http_url_to_repo", "full_path", "default_branch"]
CALLS: ["url_to_repo"]
CALLS: ["gitlab_shell", "full_path", "url_to_repo"]
CALLS: ["gitlab_shell", "full_path", "url_to_repo"]
CALLS: ["url_to_repo"]
CALLS: ["id", "name", "description", "web_url", "avatar_url", "ssh_url_to_repo", "http_url_to_repo", "namespace", "name", "visibility_level", "full_path", "default_branch", "ci_config_path", "web_url", "url_to_repo", "ssh_url_to_repo", "http_url_to_repo", "merge!"]
CALLS: ["attributes"]
CALLS: ["new", "build"]
CALLS: ["attributes"]
CALLS: ["new", "build"]
CALLS: ["timelogs", "sum"]
CALLS: ["id", "safe_message", "committed_date", "xmlschema", "build", "author_name", "author_email", "repo_changes", "merge!"]
CALLS: ["raw_deltas", "deleted_file", "old_path", "renamed_file", "new_file", "new_path", "new_path", "each"]
CALLS: ["project", "lfs_enabled?", "lfs_file?", "decode64", "new", "create_lfs_object!", "link_lfs_object!", "pointer", "new", "new"]
CALLS: ["project", "lfs_objects"]
CALLS: ["sha256", "size", "file", "new", "find_or_create_by"]
CALLS: ["cached_attributes", "attributes"]
CALLS: ["repository", "branch_name", "new"]
CALLS: ["cache_attribute_key", "get", "parse", "with", "strong_memoize"]
CALLS: ["class", "name", "id"]
CALLS: ["raw", "deltas"]
CALLS: ["current_user", "to_hook_data"]
CALLS: ["create_record_event"]
CALLS: ["new", "destroy", "destroy_target"]
CALLS: ["todos", "pending", "select", "where", "to_a", "each"]
CALLS: ["params", "delete", "project", "current_user", "params", "new", "execute", "valid?", "allow_n_plus_1_calls", "project", "current_user", "new", "supported?", "extract_commands", "empty?", "note", "id", "perform_async", "run_after_commit", "save", "todo_service", "current_user", "new_note", "present?", "execute", "errors", "add", "commands_changes"]
CALLS: ["params", "delete", "present?", "find_discussion", "new", "errors", "add", "params", "reply_attributes", "merge!", "params", "new", "project", "project", "author", "current_user"]
CALLS: ["delete", "tap"]
CALLS: ["line_code", "merge"]
CALLS: ["delete", "tap"]
CALLS: ["first_note", "slice"]
CALLS: ["original_position", "to_json", "position", "to_json", "merge"]
CALLS: ["params", "parent", "current_user", "new", "execute", "parent", "current_user", "new", "execute", "params", "present?", "params", "except", "update_attributes"]
CALLS: ["activate", "project_milestone?", "event_service", "current_user", "reopen_milestone"]
CALLS: ["create_record_event"]
CALLS: ["check_project_milestone!", "transaction_begin", "clone_project_milestone", "move_children_to_group_milestone", "destroy_old_milestones", "valid?", "errors", "full_messages", "to_sentence", "raise_error", "transaction_end", "transaction"]
CALLS: ["milestone_ids_for_merge", "where", "destroy_all"]
CALLS: ["title", "group_project_ids", "new", "execute", "pluck"]
CALLS: ["group", "projects", "pluck"]
CALLS: ["slice", "group", "current_user", "new", "execute", "save"]
CALLS: ["project_milestone?", "raise_error"]
CALLS: ["milestone_ids_for_merge", "update_children", "in_groups_of"]
CALLS: ["group_project_ids", "where", "group_project_ids", "where", "id", "update_all", "each"]
CALLS: ["project_milestone?", "transaction_begin", "issues", "parent", "current_user", "new", "execute", "each", "merge_requests", "parent", "current_user", "new", "execute", "each", "event_service", "current_user", "destroy_milestone", "id", "for_milestone_id", "target_id", "save", "each", "destroy", "transaction_end", "transaction"]
CALLS: ["create_record_event"]
CALLS: ["", "where"]
CALLS: ["parent", "milestones", "params", "new", "save", "project_milestone?", "event_service", "current_user", "open_milestone"]
CALLS: ["create_record_event"]
CALLS: ["close", "project_milestone?", "event_service", "current_user", "close_milestone"]
CALLS: ["create_record_event"]
CALLS: ["current_user", "cache_merge_request_closes_issues!"]
CALLS: ["fetch", "fetch", "fetch", "has_changes?", "todo_service", "current_user", "mark_pending_todos_as_done", "previous_changes", "include?", "previous_changes", "include?", "todo_service", "current_user", "update_merge_request", "previous_changes", "include?", "previous_changes", "first", "target_branch", "create_branch_change_note", "previous_changes", "include?", "create_assignee_note", "notification_service", "current_user", "reassigned_merge_request", "todo_service", "current_user", "reassigned_merge_request", "previous_changes", "include?", "previous_changes", "include?", "mark_as_unchecked", "labels", "present?", "notification_service", "current_user", "relabeled_merge_request", "mentioned_users", "present?", "notification_service", "current_user", "new_mentions_in_merge_request"]
CALLS: ["create_assignment_todo"]
CALLS: ["update_issuable"]
CALLS: ["toggling_tasks?", "project", "create_mention_todos"]
CALLS: ["previous_changes", "include?", "tasks?", "updated_tasks", "any?"]
CALLS: ["tasks", "summary", "items?"]
CALLS: ["new", "data"]
CALLS: ["new"]
CALLS: ["previous_changes", "first", "description", "get_updated_tasks"]
CALLS: ["get_tasks", "get_tasks", "select", "source", "source", "complete?", "complete?", "with_index"]
CALLS: ["to_s", "scan", "strip", "new", "map"]
CALLS: ["relabeled_resource_email"]
CALLS: ["project", "subscribers", "flat_map", "uniq", "notifiable_users", "map", "mailer", "id", "id", "id", "send", "deliver_later", "each"]
CALLS: ["reassign_resource_email"]
CALLS: ["previous_record", "find_by", "build_recipients", "mailer", "user", "id", "id", "id", "reason", "send", "deliver_later", "each"]
CALLS: ["previous_changes", "include?", "previous_changes", "first"]
CALLS: ["new_mentions_in_resource_email"]
CALLS: ["build_recipients", "user", "include?", "select", "mailer", "user", "id", "id", "id", "reason", "send", "deliver_later", "each"]
CALLS: ["project", "current_user", "change_branch"]
CALLS: ["new", "create_note"]
CALLS: ["project", "current_user", "assignee", "change_assignee"]
CALLS: ["nil?", "to_reference", "new", "create_note"]
CALLS: ["project", "current_user", "change_issue_assignees"]
CALLS: ["assignees", "assignees", "to_a", "any?", "map", "to_sentence", "any?", "map", "to_sentence", "join", "new", "create_note"]
CALLS: ["previous_changes", "to_s", "include?", "any?", "labels", "assignees"]
CALLS: ["params", "except!", "params", "except!", "params", "except!", "params", "merge_from_quick_action", "closed_without_fork?", "params", "except!", "params", "present?", "merge_params", "params", "delete", "handle_wip_event", "update"]
CALLS: ["params", "delete", "current_user", "mergeable_with_quick_action?", "update", "head_pipeline", "head_pipeline", "active?", "project", "current_user", "new", "execute", "current_user", "id", "merge_async"]
CALLS: ["can_be_merged_by?", "mergeable?", "actual_head_pipeline", "actual_head_pipeline", "success?", "actual_head_pipeline", "active?", "diff_head_sha"]
CALLS: ["closed?", "source_project_missing?"]
CALLS: ["for_fork?", "source_project", "source_project", "target_project", "in_fork_network_of?"]
CALLS: ["forked_from?", "fork_network", "nil?", "fork_network", "nil?", "fork_network", "fork_network"]
CALLS: ["forked?", "forked_from_project"]
CALLS: ["target_project", "source_project"]
CALLS: ["discussions_resolved?", "project", "current_user", "resolve_all_discussions", "notification_service", "current_user", "resolve_all_discussions"]
CALLS: ["new", "create_note"]
CALLS: ["build_recipients", "mailer", "user", "id", "id", "id", "reason", "resolved_all_discussions_email", "deliver_later", "each"]
CALLS: ["setup_merge_request_mail", "find", "merge_request_thread_options", "mail_answer_thread"]
CALLS: ["hex", "config", "gitlab", "host", "message_id", "message_id", "prepend", "mail_thread"]
CALLS: ["add_project_headers", "add_unsubscription_headers_and_links", "class", "name", "id", "reply_key", "enabled?", "reply_key", "reply_address", "new", "display_name", "full_name", "reply_key", "config", "gitlab", "host", "freeze", "mail"]
CALLS: ["unsubscribable?", "unsubscribe_sent_notification_url", "enabled?", "supports_wildcard?", "reply_key", "unsubscribe_address", "headers", "map", "join", "unsubscribe_sent_notification_url"]
CALLS: ["for_commit?", "for_snippet?"]
CALLS: ["sender", "recipient", "title", "to_reference", "subject"]
CALLS: ["find", "notification_email"]
CALLS: ["find", "project", "project_merge_request_url", "reply_key", "record"]
CALLS: ["current_user", "can?", "reopen", "create_event", "create_note", "notification_service", "current_user", "reopen_mr", "execute_hooks", "current_user", "reload_diff", "mark_as_unchecked", "assignees", "invalidate_cache_counts", "update_project_counter_caches"]
CALLS: ["open?", "diff_refs", "create_merge_request_diff", "new", "execute", "diff_refs", "update_diff_discussion_positions"]
CALLS: ["has_complete_diff_refs?", "notes", "new_diff_notes", "discussions", "active?", "select", "empty?", "diff_file", "paths", "flat_map", "uniq", "project", "new", "execute", "each", "project", "resolve_outdated_diff_discussions?", "project", "new", "execute"]
CALLS: ["", "where"]
CALLS: ["branch_ref?", "ref_name", "method", "allow_n_plus_1_calls", "close_upon_missing_source_branch_ref", "post_merge_manually_merged", "reload_merge_requests", "reset_merge_when_pipeline_succeeds", "mark_pending_todos_done", "cache_merge_requests_closing_issues", "branch_added?", "branch_removed?", "comment_mr_branch_presence_changed", "notify_about_push", "mark_mr_as_wip_from_commits", "execute_mr_web_hooks"]
CALLS: ["blank_ref?"]
CALLS: ["blank_ref?"]
CALLS: ["merge_requests", "where", "cache_merge_request_closes_issues!", "each"]
CALLS: ["merge_requests_for_source_branch", "execute_hooks", "each"]
CALLS: ["present?", "merge_requests_for_source_branch", "commit_shas", "work_in_progress?", "sha", "include?", "detect", "work_in_progress?", "wip_title", "update", "project", "add_merge_request_wip_from_commit", "each"]
CALLS: ["to_reference", "new", "create_note"]
CALLS: ["present?", "merge_requests_for_source_branch", "commit_shas", "new", "id", "include?", "partition", "project", "add_commits", "notification_service", "push_to_merge_request", "each"]
CALLS: ["length", "length", "pluralize", "commits_list", "diff_comparison_url", "new", "create_note"]
CALLS: ["merge_request_diff", "id", "url_helpers", "diffs_project_merge_request_url"]
CALLS: ["existing_commit_summary", "new_commit_summary", "join", "html_safe", "content_tag"]
CALLS: ["empty?", "size", "first", "short_id", "blank_ref?", "truncate_sha", "last", "short_id", "first", "short_id", "last", "short_id", "pluralize", "target_branch", "for_fork?", "target_project_namespace", "content_tag", "html_safe", "content_tag"]
CALLS: ["target_project", "target_project", "namespace", "target_project", "namespace", "full_path"]
CALLS: ["short_id", "title", "content_tag", "collect"]
CALLS: ["short_id", "title", "map", "short_id", "title", "map", "build_recipients", "mailer", "user", "id", "id", "id", "reason", "send", "deliver_later", "each"]
CALLS: ["branch_added?", "merge_requests_for_source_branch", "project", "change_branch_presence", "each"]
CALLS: ["new", "create_note"]
CALLS: ["merge_requests_for_source_branch", "todo_service", "merge_request_push", "each"]
CALLS: ["mark_pending_todos_as_done"]
CALLS: ["merge_requests", "opened", "by_source_or_target_branch", "to_a", "opened", "where", "where", "not", "to_a", "filter_merge_requests", "source_branch", "force_push?", "current_user", "reload_diff", "commit_shas", "map", "any?", "current_user", "reload_diff", "mark_as_unchecked", "id", "perform_async", "each", "merge_requests_for_source_branch"]
CALLS: ["uniq", "select"]
CALLS: ["force_push?"]
CALLS: ["", "where"]
CALLS: ["map", "merge_requests", "preload", "opened", "where", "to_a", "select", "diff_head_sha", "include?", "merge_request_diff", "state", "select", "filter_merge_requests", "target_project", "new", "execute", "each"]
CALLS: ["merge_requests_for_source_branch", "reject", "target_project", "new", "execute", "each"]
CALLS: ["rebase", "success", "error"]
CALLS: ["merge_request", "rebase_in_progress?", "log_error", "repository", "current_user", "merge_request", "rebase", "merge_request", "update_attributes", "log_error", "message", "log_error"]
CALLS: ["source_project", "source_project", "repository", "id", "rebase_in_progress?", "strong_memoize"]
CALLS: ["raw", "id", "source_branch", "source_branch_sha", "target_project", "repository", "raw", "target_branch", "rebase"]
CALLS: ["id", "current_user", "id", "perform_async", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["close_issues", "todo_service", "current_user", "merge_merge_request", "mark_as_merged", "create_event", "create_note", "notification_service", "current_user", "merge_mr", "execute_hooks", "assignees", "invalidate_cache_counts", "update_project_counter_caches"]
CALLS: ["mark_pending_todos_as_done"]
CALLS: ["merge_params", "params", "merge!", "merge_when_pipeline_succeeds?", "merge_when_pipeline_succeeds", "merge_user", "diff_head_commit", "merge_when_pipeline_succeeds", "save"]
CALLS: ["project", "merge_requests_ff_only_enabled", "is_a?", "project", "current_user", "params", "new", "execute", "error_check!", "commit", "after_merge", "clean_merge_jid", "success", "in_locked_state", "merge_jid", "state", "log_info", "message", "handle_merge_error"]
CALLS: ["logger", "merge_request_info", "error", "update"]
CALLS: ["merge_request", "update_column"]
CALLS: ["merge_jid", "state", "log_info", "project", "current_user", "new", "merge_request", "execute", "merge_jid", "state", "log_info", "delete_source_branch?", "source_project", "branch_deletion_user", "new", "merge_request", "source_branch", "execute"]
CALLS: ["params", "force_remove_source_branch?", "fetch", "branch_deletion_user", "can_remove_source_branch?"]
CALLS: ["merge_params", "to_boolean"]
CALLS: ["source_project", "source_branch", "protected?", "source_project", "source_branch", "root_ref?", "source_project", "allowed?", "diff_head_sha", "source_branch_head", "try"]
CALLS: ["repository", "root_ref"]
CALLS: ["force_remove_source_branch?", "author", "current_user"]
CALLS: ["should_be_rebased?", "mergeable?", "source"]
CALLS: ["lock_mr", "unlock_mr"]
CALLS: ["diffs", "diff_files", "to_a", "where", "diffs", "clear_cache!", "each"]
CALLS: ["project", "printing_merge_request_link_enabled", "get_branches", "opened_merge_requests_from_source_branches", "url_for_existing_merge_request", "url_for_new_merge_request", "map"]
CALLS: ["target_project", "url_helpers", "project_merge_request_url", "source_branch"]
CALLS: ["url_helpers", "project", "project_new_merge_request_url"]
CALLS: ["project", "empty_repo?", "project", "merge_requests_enabled?", "new", "branch_ref?", "blank_ref?", "branch_name", "project", "default_branch", "map", "compact"]
CALLS: ["merge_requests_access_level"]
CALLS: ["project", "from_project", "opened", "from_source_branches", "index_by"]
CALLS: ["", "where"]
CALLS: ["set_projects!", "new", "target_project", "source_project", "source_branch", "params", "merge_params", "params", "delete", "create"]
CALLS: ["params", "params", "find", "params", "delete", "params", "delete", "current_user", "can?", "current_user", "can?"]
CALLS: ["present?", "issue", "present?", "error", "issue", "label_ids", "any?", "params", "issue", "label_ids", "project", "current_user", "new", "branch_name", "ref", "execute", "issue", "project", "current_user", "branch_name", "new_issue_branch", "merge_request", "create", "valid?", "success", "errors", "error"]
CALLS: ["merge_request", "new", "resolve"]
CALLS: ["note", "resolvable?", "render_404", "note", "current_user", "resolve!", "project", "current_user", "new", "note", "noteable", "execute", "note", "discussion", "serialize_notes?", "render_json_with_notes_serializer", "note", "resolved_by", "try", "view_to_html_string", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["resolve_without_save", "save!"]
CALLS: ["resolvable?", "resolved?", "resolved_at", "now", "resolved_by", "resolved_by_push"]
CALLS: ["resolvable?", "resolve!", "update"]
CALLS: ["has_vue_discussions_cookie?", "params"]
CALLS: ["cookies"]
CALLS: ["current_user", "new", "note", "execute", "note_serializer", "note", "represent", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project", "current_user", "merge_request", "new", "discussion", "execute", "render_discussion"]
CALLS: ["serialize_notes?", "discussion", "notes", "merge_request", "prepare_notes_for_rendering", "render_json_with_discussions_serializer", "render_json_with_html"]
CALLS: ["discussion", "resolved_by", "try", "discussion", "view_to_html_string", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project", "discussion", "noteable", "current_user", "new", "discussion", "represent", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["current_user", "can?", "allow_broken", "close", "create_event", "create_note", "notification_service", "current_user", "close_mr", "todo_service", "current_user", "close_merge_request", "execute_hooks", "assignees", "invalidate_cache_counts", "update_project_counter_caches"]
CALLS: ["mark_pending_todos_as_done"]
CALLS: ["params", "delete", "merge_request", "params", "new", "merge_request", "author", "current_user", "merge_request", "compare_commits", "merge_request", "source_project", "find_source_project", "merge_request", "target_project", "find_target_project", "merge_request", "target_branch", "find_target_branch", "merge_request", "can_be_created", "branches_valid?", "merge_request", "can_be_created", "compare_branches", "assign_title_and_description", "merge_request"]
CALLS: ["assign_title_and_description_from_single_commit", "target_project", "issues_enabled?", "target_project", "external_issue_tracker", "assign_title_from_issue", "merge_request", "title", "source_branch", "titleize", "humanize", "compare_commits", "empty?", "merge_request", "title", "wip_title", "append_closes_description"]
CALLS: ["issue", "issue", "is_a?", "merge_request", "title", "issue", "title", "merge_request", "title", "present?", "issue_iid", "present?", "merge_request", "title", "issue", "to_reference", "source_branch", "downcase", "issue_iid", "downcase", "remove", "titleize", "humanize", "present?", "merge_request", "title"]
CALLS: ["compare_commits", "count", "first", "merge_request", "title", "title", "merge_request", "description", "description", "try"]
CALLS: ["issue", "to_reference", "present?", "issue", "to_reference", "description", "present?", "merge_request", "description", "prepend", "merge_request", "description"]
CALLS: ["source_project", "source_branch_ref", "new", "target_project", "target_branch_ref", "execute", "merge_request", "compare_commits", "commits", "merge_request", "compare"]
CALLS: ["source_branch_specified?", "target_branch_specified?", "validate_branches", "errors", "blank?"]
CALLS: ["branches_present?", "add_error", "same_source_and_target?", "add_error", "source_branch_exists?", "source_branch", "add_error", "target_branch_exists?", "target_branch", "add_error"]
CALLS: ["source_project", "target_project", "target_branch", "source_branch"]
CALLS: ["target_branch", "present?", "source_branch", "present?"]
CALLS: ["errors", "add"]
CALLS: ["params", "present?"]
CALLS: ["params", "present?"]
CALLS: ["target_project", "source_project", "target_branch", "source_branch", "errors", "add", "opened?", "target_project", "merge_requests", "source_branch", "target_branch", "source_project", "try", "where", "opened", "id", "id", "where", "any?", "errors", "pluck", "add"]
CALLS: ["target_branch", "target_project", "default_branch"]
CALLS: ["target_project", "present?", "current_user", "target_project", "can?", "target_project", "project", "default_merge_request_target"]
CALLS: ["forked_from_project", "merge_requests_enabled?", "forked_from_project"]
CALLS: ["source_project", "present?", "current_user", "source_project", "can?", "source_project", "project"]
CALLS: ["current_user", "can_allow_maintainer_to_push?", "params", "delete"]
CALLS: ["maintainer_push_possible?", "source_project", "allowed?"]
CALLS: ["source_project", "present?", "for_fork?", "target_project", "visibility_level", "source_project", "visibility_level", "source_project", "source_branch", "protected?"]
CALLS: ["project", "hook_data", "project", "execute_hooks", "project", "execute_services"]
CALLS: ["assignable_issues", "project", "current_user", "current_user", "id", "new", "execute", "each", "assignable_issues", "count"]
CALLS: ["current_user", "merge_request", "author", "closes_issues", "is_a?", "assignees", "present?", "current_user", "can?", "select"]
CALLS: ["allow_failure?", "retried?", "todo_service", "merge_request_build_failed", "commit_status_merge_requests"]
CALLS: ["author", "create_build_failed_todo", "merge_when_pipeline_succeeds?", "merge_user", "create_build_failed_todo"]
CALLS: ["project", "attributes_for_todo", "create_todos"]
CALLS: ["current_user", "action_member_permission", "can?", "human_access", "params", "update_attributes", "after_execute"]
CALLS: ["update_member_permission", "override_member_permission"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["can_request_access?", "members", "current_user", "now", "utc", "create"]
CALLS: ["current_user", "can?"]
CALLS: ["can_destroy_member?", "is_a?", "source", "user", "last_owner?", "destroy", "user", "invalidate_cache_counts", "request?", "user", "current_user", "notification_service", "decline_access_request", "after_execute"]
CALLS: ["notifiable?", "mailer", "real_source_type", "source_id", "user_id", "member_access_denied_email", "deliver_later"]
CALLS: ["member_source_class", "find", "find", "notification_email", "member_source", "human_name", "member_source", "model_name", "singular", "subject", "mail"]
CALLS: ["classify", "constantize"]
CALLS: ["current_user", "destroy_member_permission", "can?"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["owners", "include?", "owners", "size"]
CALLS: ["params", "blank?", "error", "params", "split", "uniq", "user_limit", "size", "user_limit", "user_limit", "error", "params", "params", "current_user", "add_users", "after_execute", "each", "success"]
CALLS: ["params", "fetch"]
CALLS: ["project", "add_users"]
CALLS: ["present?", "parse_users_list", "transaction_begin", "add_user", "map!", "transaction_end", "transaction"]
CALLS: ["to_i", "email_regexp", "each", "present?", "where", "concat", "members_and_requesters", "where", "index_by"]
CALLS: ["add_users"]
CALLS: ["can_update_access_requester?", "params", "access_level", "params", "accept_request", "after_execute"]
CALLS: ["current_user", "update_member_permission", "can?"]
CALLS: ["request?", "update", "after_accept_request"]
CALLS: ["post_create_hook"]
CALLS: ["current_user", "new", "mattermost_team_params", "create", "errors", "message", "add"]
CALLS: ["path", "name", "public?"]
CALLS: ["current_user", "project", "can?", "unlock_file", "message", "error", "error", "message", "error"]
CALLS: ["params", "lock", "current_user", "can_be_unlocked_by?", "lock", "destroy!", "lock", "success", "error", "lock", "path", "lock", "user_id", "error"]
CALLS: ["params", "present?", "project", "lfs_file_locks", "params", "find", "params", "present?", "project", "lfs_file_locks", "params", "find_by!"]
CALLS: ["id", "user_id", "project", "can?"]
CALLS: ["find_locks", "success", "message", "error"]
CALLS: ["params", "slice", "compact", "symbolize_keys", "project", "lfs_file_locks", "where"]
CALLS: ["current_user", "project", "can?", "create_lock!", "current_lock", "error", "message", "error", "message", "error"]
CALLS: ["project", "lfs_file_locks", "current_user", "params", "create!", "success"]
CALLS: ["project", "lfs_file_locks", "params", "find_by"]
CALLS: ["params", "present?", "params", "convert_color_name_to_hex", "params", "update"]
CALLS: ["params", "strip", "downcase", "start_with?", "to_sym"]
CALLS: ["old_group", "present?", "transaction_begin", "labels_to_transfer", "find_or_create_label!", "id", "group_labels_applied_to_issues", "id", "update_label_links", "group_labels_applied_to_merge_requests", "id", "update_label_links", "id", "update_label_priorities", "find_each", "transaction_end", "transaction"]
CALLS: ["project", "id", "where", "update_all"]
CALLS: ["pluck", "where", "update_all"]
CALLS: ["attributes", "slice", "current_user", "project", "new", "execute", "id"]
CALLS: ["joins", "project", "id", "old_group", "id", "where"]
CALLS: ["joins", "project", "id", "old_group", "id", "where"]
CALLS: ["group_labels_applied_to_issues", "select", "group_labels_applied_to_merge_requests", "select", "new", "to_sql", "where", "reorder", "uniq"]
CALLS: ["project", "group", "is_a?", "transaction_begin", "clone_label_to_group_label", "label_ids_for_merge", "update_issuables", "update_issue_board_lists", "update_priorities", "subscribe_users", "update_project_labels", "find_in_batches", "valid?", "new", "transaction_end", "transaction"]
CALLS: ["attributes", "slice", "project", "group", "merge", "new", "save"]
CALLS: ["where", "destroy_all"]
CALLS: ["where", "update_all"]
CALLS: ["where", "update_all"]
CALLS: ["where", "update_all"]
CALLS: ["current_user", "title", "project", "group", "id", "new", "execute", "where", "not", "select"]
CALLS: ["where", "group", "pluck", "where", "id", "update_all"]
CALLS: ["find_or_create_label"]
CALLS: ["available_labels", "title", "find_by", "nil?", "skip_authorization", "current_user", "parent", "allowed?", "params", "new", "parent_type", "to_sym", "parent", "execute"]
CALLS: ["parent", "model_name", "param_key"]
CALLS: ["current_user", "parent_type", "to_sym", "parent", "id", "parent_is_group?", "new", "skip_authorization", "execute"]
CALLS: ["parent_type"]
CALLS: ["current_user", "id", "new", "execute"]
CALLS: ["current_user", "parent", "new", "execute"]
CALLS: ["params", "present?", "params", "convert_color_name_to_hex", "present?", "labels", "params", "create", "params", "new", "template", "save", "logger", "warn"]
CALLS: ["update?", "key", "zone", "now", "update_column"]
CALLS: ["read_only?", "key", "last_used_at", "zone", "now", "redis_lease", "try_obtain"]
CALLS: ["key", "id", "new"]
CALLS: []
CALLS: []
CALLS: ["user", "keys", "params", "create", "persisted?", "notification_service", "new_key"]
CALLS: ["user", "can?", "mailer", "id", "new_ssh_key_email", "deliver_later"]
CALLS: ["find_by", "user", "user_url", "notification_email", "subject", "mail"]
CALLS: ["new", "deploy_keys_projects", "build", "tap"]
CALLS: ["fetch", "fetch", "fetch", "fetch", "has_changes?", "todo_service", "current_user", "mark_pending_todos_as_done", "previous_changes", "include?", "previous_changes", "include?", "todo_service", "current_user", "update_issue", "assignees", "create_assignee_note", "notification_service", "current_user", "reassigned_issue", "todo_service", "current_user", "reassigned_issue", "previous_changes", "include?", "create_confidentiality_note", "labels", "present?", "notification_service", "current_user", "relabeled_issue", "mentioned_users", "present?", "notification_service", "current_user", "new_mentions_in_issue"]
CALLS: ["create_assignment_todo"]
CALLS: ["update_issuable"]
CALLS: ["relabeled_resource_email"]
CALLS: ["build_recipients", "map", "mailer", "user", "id", "id", "id", "reason", "send", "deliver_later", "each"]
CALLS: ["new_mentions_in_resource_email"]
CALLS: ["project", "current_user", "change_issue_confidentiality"]
CALLS: ["confidential", "new", "create_note"]
CALLS: ["current_user", "spam_check"]
CALLS: ["handle_move_between_ids", "filter_spam_check_params", "change_issue_duplicate", "move_issue_to_new_project", "update"]
CALLS: ["params", "delete", "current_user", "can_move?", "project", "update", "project", "current_user", "new", "execute"]
CALLS: ["params", "delete", "current_user", "new", "find_by", "project", "current_user", "new", "execute"]
CALLS: ["params", "params", "delete", "params", "delete", "get_issue_if_allowed", "get_issue_if_allowed", "move_between"]
CALLS: ["current_user", "new", "find_by", "project", "issues", "find", "current_user", "can?"]
CALLS: ["move_after", "move_before", "relative_position", "relative_position", "move_before", "relative_position", "relative_position", "relative_position", "position_between"]
CALLS: ["relative_position", "prev_relative_position", "shift_before?", "class", "parent_ids", "in_parents", "find_by!", "move_before", "relative_position", "relative_position", "position_between"]
CALLS: ["prev_relative_position", "relative_position"]
CALLS: ["relative_position", "class", "parent_ids", "in_parents", "relative_position", "where", "maximum"]
CALLS: ["relative_position", "next_relative_position", "shift_after?", "class", "parent_ids", "in_parents", "find_by!", "move_after", "relative_position", "relative_position", "position_between"]
CALLS: ["next_relative_position", "relative_position"]
CALLS: ["relative_position", "class", "parent_ids", "in_parents", "relative_position", "where", "minimum"]
CALLS: ["current_user", "can?", "reopen", "event_service", "current_user", "reopen_issue", "create_note", "notification_service", "current_user", "reopen_issue", "execute_hooks", "assignees", "invalidate_cache_counts", "update_project_counter_caches"]
CALLS: ["reopen_resource_email"]
CALLS: ["create_record_event"]
CALLS: ["current_user", "can_move?", "transaction_begin", "create_new_issue", "update_new_issue", "update_old_issue", "transaction_end", "transaction", "notify_participants"]
CALLS: ["notification_service", "issue_moved"]
CALLS: ["build_recipients", "mailer", "user", "reason", "issue_moved_email", "deliver_later", "map"]
CALLS: ["id", "id", "setup_issue_mail", "project", "id", "id", "issue_thread_options", "mail_answer_thread"]
CALLS: ["sender", "recipient", "title", "iid", "subject"]
CALLS: ["find", "project", "project_issue_url", "reply_key", "record"]
CALLS: ["cloneable_label_ids", "cloneable_milestone_id", "author", "description", "rewrite_content", "assignee_ids", "serializable_hash", "symbolize_keys", "merge", "new", "execute"]
CALLS: ["new", "rewrite", "inject"]
CALLS: ["milestone", "title", "group", "current_user", "group", "can?", "group", "id", "id", "new", "execute", "first", "id"]
CALLS: ["id", "labels", "pluck", "current_user", "new", "execute", "pluck"]
CALLS: ["assignee_id"]
CALLS: ["", "read_attribute", "merge"]
CALLS: ["add_note_moved_to", "close_issue", "mark_as_moved"]
CALLS: ["update"]
CALLS: ["noteable_moved"]
CALLS: ["include?", "to_reference", "new", "create_note"]
CALLS: ["rewrite_notes", "rewrite_issue_award_emoji", "add_note_moved_from"]
CALLS: ["noteable_moved"]
CALLS: ["rewrite_award_emoji"]
CALLS: ["award_emoji", "dup", "awardable", "save", "each"]
CALLS: ["notes_with_associations", "dup", "note", "rewrite_content", "created_at", "updated_at", "update", "rewrite_award_emoji", "find_each"]
CALLS: ["notes", "includes"]
CALLS: ["notes", "authors_loaded?", "notes", "award_emojis_loaded?", "any?", "notes", "includes", "notes"]
CALLS: ["loaded?", "to_a", "association", "loaded?", "all?"]
CALLS: ["loaded?", "to_a", "association", "loaded?", "all?"]
CALLS: ["notes", "includes"]
CALLS: ["current_user", "referenced_merge_requests", "project", "iid", "to_s", "sort", "current_user", "closed_by_merge_requests", "project", "iid", "to_s", "sort"]
CALLS: ["open?", "all_references", "notes", "system", "all_references", "each", "merge_requests", "select", "any?", "map", "id", "where", "pluck", "id", "in?", "select"]
CALLS: ["all_references", "notes_with_associations", "all_references", "each", "merge_requests", "sort_by", "target_project", "project", "select", "merge_requests_readable_by_user"]
CALLS: ["apply_filters_if_needed", "allowed?", "select", "user_scope"]
CALLS: ["allowed?", "call", "each"]
CALLS: ["project", "current_user", "new", "issue", "execute", "view_to_html_string", "json", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["current_user", "can?", "current_user", "can?", "create_issue_duplicate_note", "create_issue_canonical_note", "close_service", "project", "current_user", "new", "execute"]
CALLS: []
CALLS: ["project", "current_user", "mark_canonical_issue_of_duplicate"]
CALLS: ["to_reference", "new", "create_note"]
CALLS: ["project", "current_user", "mark_duplicate_issue"]
CALLS: ["to_reference", "new", "create_note"]
CALLS: []
CALLS: ["project", "current_user", "params", "new", "execute", "filter_spam_check_params", "filter_resolve_discussion_params", "create"]
CALLS: ["params", "delete", "params", "delete"]
CALLS: ["current_user", "can?", "close_issue"]
CALLS: ["filter_resolve_discussion_params", "project", "issues", "issue_params", "new"]
CALLS: ["confidential_changed?"]
CALLS: ["hook_data", "confidential?", "project", "execute_hooks", "project", "execute_services"]
CALLS: ["state_changed?"]
CALLS: []
CALLS: []
CALLS: ["model_name", "singular", "public_send", "each"]
CALLS: ["labels", "to_a", "mentioned_users", "to_a", "assignees", "to_a", "respond_to?", "total_time_spent"]
CALLS: ["params", "delete", "todo_service", "current_user", "new_award_emoji", "current_user", "toggle_award_emoji"]
CALLS: ["mark_pending_todos_as_done"]
CALLS: ["awarded_emoji?", "remove_award_emoji", "create_award_emoji"]
CALLS: ["award_emoji", "where", "destroy_all"]
CALLS: ["emoji_awardable?", "award_emoji", "normalize_name", "create"]
CALLS: ["system?"]
CALLS: ["normalize_emoji_name"]
CALLS: []
CALLS: ["award_emoji", "where", "exists?"]
CALLS: ["authenticate_user!", "params", "require", "awardable", "current_user", "user_can_award?", "awardable", "current_user", "toggle_award_emoji", "awardable", "to_todoable", "new", "current_user", "new_award_emoji"]
CALLS: ["awardable_by_user?", "allowed?"]
CALLS: ["user_authored?", "normalize_name", "awardable_votes?"]
CALLS: ["respond_to?", "author", "user"]
CALLS: []
CALLS: ["for_personal_snippet?", "noteable"]
CALLS: ["params", "delete", "todo_service", "current_user", "mark_todo", "current_user", "new", "find_by", "todo_service", "current_user", "mark_todos_as_done_by_ids"]
CALLS: ["params", "delete", "current_user", "project", "subscribe", "current_user", "project", "unsubscribe"]
CALLS: ["unsubscribe_from_other_levels", "find_or_initialize_subscription", "update"]
CALLS: ["subscriptions", "id", "try", "find_or_initialize_by"]
CALLS: ["subscriptions", "where", "blank?", "where", "not", "where", "update_all"]
CALLS: ["unsubscribe_from_other_levels", "find_or_initialize_subscription", "update"]
CALLS: ["params", "for", "unsubscribable?", "render_404", "current_user", "params", "unsubscribe_and_redirect"]
CALLS: ["noteable", "recipient", "project", "unsubscribe", "flash", "current_user", "issue_path", "merge_request_path", "root_path", "new_user_session_path"]
CALLS: ["issue_url"]
CALLS: ["project", "project_issue_path"]
CALLS: ["project", "project_issue_path"]
CALLS: ["params", "delete", "reopen_service", "project", "current_user", "new", "execute", "close_service", "project", "current_user", "new", "execute"]
CALLS: []
CALLS: []
CALLS: ["title_changed?", "description_changed?"]
CALLS: ["sort", "sort"]
CALLS: []
CALLS: []
CALLS: ["delete", "delete", "delete", "blank?", "blank?"]
CALLS: ["to_ability_name", "current_user", "can?", "params", "delete", "params", "delete", "params", "delete", "params", "delete", "params", "delete", "params", "delete", "params", "delete", "params", "delete", "params", "delete", "params", "delete", "params", "delete", "filter_assignee", "filter_milestone", "filter_labels"]
CALLS: ["params", "blank?", "params", "params", "params", "assignee_can_read?", "select", "params", "map", "params", "any?", "params", "params", "delete"]
CALLS: ["find_by_id", "to_ability_name", "persisted?", "project", "can?"]
CALLS: ["filter_labels_in_param", "filter_labels_in_param", "filter_labels_in_param", "find_or_create_label_ids"]
CALLS: ["params", "delete", "params", "split", "current_user", "parent", "strip", "available_labels", "new", "execute", "try", "map", "compact"]
CALLS: ["params", "to_a", "empty?", "params", "available_labels", "params", "where", "pluck"]
CALLS: ["params", "params", "project", "group", "self_and_ancestors", "pluck", "project", "id", "for_projects_and_groups", "find_by_id", "params"]
CALLS: ["", "compact", "any?", "arel_table", "in", "compact", "any?", "arel_table", "in", "reduce", "where"]
CALLS: ["params", "present?", "params", "to_s", "params", "assignee_can_read?", "params", "delete"]
CALLS: ["new", "destroy", "update_project_counter_caches", "assignees", "each", "destroy_target"]
CALLS: ["previous_changes", "include?", "previous_changes", "first", "create_title_change_note", "handle_description_change_note", "is_a?", "handle_time_tracking_note", "labels", "create_labels_note", "previous_changes", "include?", "create_discussion_lock_note", "previous_changes", "include?", "create_milestone_note"]
CALLS: ["issuable", "current_user", "discussion_lock"]
CALLS: ["discussion_locked?", "class", "to_s", "titleize", "downcase", "project", "new", "create_note"]
CALLS: ["issuable", "issuable", "project", "current_user", "issuable", "milestone", "change_milestone"]
CALLS: ["group_milestone?", "nil?", "to_reference", "new", "create_note"]
CALLS: ["create_wip_note", "issuable", "wipless_title_changed", "issuable", "issuable", "project", "current_user", "change_title"]
CALLS: ["title", "dup", "new", "inline_diffs", "new", "mark", "new", "mark", "new", "create_note"]
CALLS: ["issuable", "is_a?", "work_in_progress?", "issuable", "work_in_progress?", "issuable", "issuable", "project", "current_user", "handle_merge_request_wip"]
CALLS: ["work_in_progress?", "new", "create_note"]
CALLS: ["class", "wipless_title", "wipless_title"]
CALLS: ["title"]
CALLS: ["issuable", "labels", "issuable", "labels", "issuable", "issuable", "project", "current_user", "change_label"]
CALLS: ["count", "count", "to_reference", "map", "join", "map", "join", "present?", "present?", "present?", "pluralize", "new", "create_note"]
CALLS: ["issuable", "previous_changes", "include?", "issuable", "tasks?", "issuable", "updated_tasks", "any?", "create_task_status_note", "create_description_change_note"]
CALLS: ["issuable", "updated_tasks", "issuable", "issuable", "project", "current_user", "change_task_status", "each"]
CALLS: ["complete?", "source", "new", "create_note"]
CALLS: ["issuable", "issuable", "project", "current_user", "change_description"]
CALLS: ["new", "create_note"]
CALLS: ["issuable", "previous_changes", "include?", "create_time_estimate_note", "issuable", "time_spent?", "create_time_spent_note"]
CALLS: ["issuable", "issuable", "project", "issuable", "time_spent_user", "change_time_spent"]
CALLS: ["time_spent", "spent_at", "abs", "output", "new", "create_note"]
CALLS: ["issuable", "issuable", "project", "current_user", "change_time_estimate"]
CALLS: ["time_estimate", "output", "time_estimate", "new", "create_note"]
CALLS: ["classify", "constantize", "classify", "pluralize", "constantize", "params", "delete", "split", "where", "permitted_attrs", "params", "present?", "params", "delete", "each", "params", "to_s", "params", "current_user", "can?", "project", "current_user", "params", "new", "execute", "each", "count", "count", "zero?"]
CALLS: ["push", "push"]
CALLS: ["path", "directory?", "clean_up_export_files", "measure"]
CALLS: ["path", "path", "mmin", "popen"]
CALLS: ["reject_parent_id!", "group", "params", "valid_visibility_level_change?", "valid_share_with_group_lock_change?", "group", "params", "assign_attributes", "group", "save", "group", "errors", "message", "add"]
CALLS: ["changing_share_with_group_lock?", "current_user", "group", "can?", "group", "errors", "s_", "add"]
CALLS: ["params", "nil?", "params", "group", "share_with_group_lock"]
CALLS: ["params", "except!"]
CALLS: ["ensure_allowed_transfer", "proceed_to_transfer", "errors", "clear", "message"]
CALLS: ["group_is_already_root?", "raise_transfer_error", "supports_nested_groups?", "raise_transfer_error", "same_parent?", "raise_transfer_error", "valid_policies?", "raise_transfer_error", "namespace_with_same_path?", "raise_transfer_error"]
CALLS: []
CALLS: ["path", "exists?"]
CALLS: ["current_user", "can?", "current_user", "can?", "current_user", "can?"]
CALLS: ["id", "parent_id"]
CALLS: ["has_parent?"]
CALLS: ["transaction_begin", "update_group_attributes", "transaction_end", "transaction"]
CALLS: ["visibility_level", "visibility_level", "update_children_and_projects_visibility", "visibility_level", "visibility_level", "parent", "save!"]
CALLS: ["descendants", "visibility_level", "where", "select", "where", "visibility_level", "update_all", "all_projects", "visibility_level", "where", "visibility_level", "update_all"]
CALLS: ["group_path", "group_path", "namespace_or_group", "group_path", "include?", "supports_nested_groups?", "create_group_path"]
CALLS: ["find_by_full_path"]
CALLS: ["group_path", "split", "shift", "join", "params", "reverse_merge", "current_application_settings", "default_group_visibility", "namespace_or_group", "current_user", "new", "execute"]
CALLS: ["group", "prepare_for_destroy", "group", "projects", "current_user", "legacy_storage?", "new", "execute", "each", "group", "children", "current_user", "new", "execute", "each", "group", "chat_team", "current_user", "remove_mattermost_team", "group", "destroy"]
CALLS: ["new", "team_id", "destroy", "logger", "error"]
CALLS: ["params", "new", "can_use_visibility_level?", "can_create_group?", "name", "path", "dup", "create_chat_team?", "current_user", "new", "execute", "errors", "any?", "build_chat_team", "save", "current_user", "add_owner"]
CALLS: ["current_user", "params", "allowed_for?", "deny_visibility_level"]
CALLS: ["config", "mattermost", "enabled", "group", "chat_team", "nil?"]
CALLS: ["gravatar_enabled?", "presence", "presence", "strip", "downcase", "hexdigest", "gravatar_url", "strip", "url_encode", "strip", "url_encode"]
CALLS: ["gitlab_config", "https", "gravatar_config", "ssl_url", "gravatar_config", "plain_url"]
CALLS: ["config", "gravatar"]
CALLS: ["user", "gpg_keys", "params", "create", "persisted?", "notification_service", "new_gpg_key"]
CALLS: ["user", "can?", "mailer", "id", "new_gpg_key_email", "deliver_later"]
CALLS: ["find_by", "user", "user_url", "notification_email", "subject", "mail"]
CALLS: ["project", "empty_repo?", "project", "repository", "after_create", "project", "repository", "before_push_tag", "build_push_data", "new", "project", "current_user", "push", "project", "current_user", "new", "execute", "new", "build_system_push_data", "dup", "execute_hooks", "project", "dup", "execute_hooks", "project", "dup", "execute_services", "project", "id", "perform_async"]
CALLS: ["project", "current_user", "params", "params", "params", "build"]
CALLS: ["expire_statistics_caches", "expire_emptiness_caches", "expire_tags_cache", "repository_event"]
CALLS: ["empty_repo?", "repository", "after_create", "repository", "branch_name", "after_push_commit", "push_remove_branch?", "repository", "after_remove_branch", "push_to_new_branch?", "repository", "after_create_branch", "default_branch?", "process_default_branch", "repository", "default_branch", "params", "commits_between", "process_commit_messages", "push_to_existing_branch?", "repository", "params", "params", "commits_between", "process_commit_messages", "default_branch?", "update_gitattributes", "execute_related_hooks", "perform_housekeeping", "update_caches", "update_signatures"]
CALLS: ["params", "branch_ref?", "params", "ref_name", "project", "default_branch", "project", "default_branch", "nil?"]
CALLS: ["params", "branch_ref?", "params", "blank_ref?"]
CALLS: ["params", "branch_ref?", "params", "blank_ref?"]
CALLS: ["params", "branch_ref?", "params", "blank_ref?"]
CALLS: ["project", "repository", "params", "commit_count_for_ref", "max", "project", "repository", "params", "commits", "after_create_default_branch"]
CALLS: ["exists?", "cache", "raw_repository", "commit_count", "fetch"]
CALLS: ["new", "increment!", "needed?", "execute"]
CALLS: ["pushes_since_gc", "period_match?", "housekeeping_enabled?"]
CALLS: ["housekeeping_enabled"]
CALLS: ["gc_period", "full_repack_period", "repack_period", "pushes_since_gc", "any?"]
CALLS: ["housekeeping_incremental_repack_period"]
CALLS: ["id", "current_user", "id", "params", "params", "params", "perform_async", "new", "current_user", "build_push_data", "push", "current_user", "build_push_data", "new", "execute", "build_push_data", "dup", "perform_async", "build_push_data", "dup", "execute_hooks", "build_push_data", "dup", "execute_services", "push_remove_branch?", "project", "current_user", "new", "branch_name", "execute"]
CALLS: ["default_branch?", "last", "matches_cross_reference_regex?", "project", "id", "current_user", "id", "to_hash", "perform_async", "each"]
CALLS: ["last", "map", "empty?", "where", "pluck", "empty?", "project", "repository", "shas_with_signatures", "project", "id", "perform_async", "each"]
CALLS: ["default_branch?", "push_to_new_branch?", "new", "last", "raw_deltas", "new_path", "each", "each", "to_a", "types_in_paths", "id", "perform_async"]
CALLS: ["repository", "params", "copy_gitattributes"]
CALLS: ["expire_branches_cache"]
CALLS: ["expire_statistics_caches", "expire_branch_cache", "repository_event"]
CALLS: ["map", "compact", "render_notes"]
CALLS: ["current_user", "new", "render_options", "execute"]
CALLS: []
CALLS: ["destroy", "update_secondary_emails!"]
CALLS: ["new", "update_secondary_emails!", "execute"]
CALLS: ["set_notification_email", "set_public_email", "notification_email_changed?", "public_email_changed?", "save"]
CALLS: ["public_email", "blank?", "all_emails", "public_email", "include?", "public_email"]
CALLS: ["temp_oauth_email?", "email", "emails", "map", "concat"]
CALLS: ["notification_email", "blank?", "all_emails", "notification_email", "include?", "notification_email", "email"]
CALLS: ["emails", "merge", "create"]
CALLS: ["resend_confirmation_instructions"]
CALLS: ["current_user", "current_user", "new", "execute", "flash", "email", "flash", "profile_emails_url"]
CALLS: ["tracer", "position", "trace", "notes", "change_position", "project", "resolve_outdated_diff_discussions?", "current_user", "resolve_without_save", "position", "change_position", "each", "transaction_begin", "notes", "timeless", "each", "current_user", "project", "current_user", "diff_discussion_outdated", "transaction_end", "transaction"]
CALLS: ["noteable", "diff_refs", "merge_request_diffs", "viewable", "count", "version_params_for", "repository", "line_code", "url_helpers", "merge", "diffs_project_merge_request_url", "reply_attributes", "merge", "merge", "create", "system_note_metadata", "new"]
CALLS: ["", "without_state"]
CALLS: ["merge_request_diff_for", "id", "head_sha", "merge_request_diff_for", "id", "start_sha"]
CALLS: ["is_a?", "start_sha", "head_sha", "base_sha", "viewable_diffs", "attributes", "keys", "slice", "find"]
CALLS: ["merge_request_diffs", "viewable", "to_a"]
CALLS: ["project", "params", "params", "params", "new"]
CALLS: ["resolve_discussion", "each"]
CALLS: ["current_user", "can_resolve?", "current_user", "resolve!", "project", "current_user", "new", "merge_request", "execute", "follow_up_issue", "project", "current_user", "follow_up_issue", "discussion_continued_in_issue"]
CALLS: ["to_reference", "reply_attributes", "merge", "merge", "create", "system_note_metadata", "new"]
CALLS: ["params"]
CALLS: ["resolvable?", "noteable", "author", "project", "can?"]
CALLS: ["deploy_tokens", "params", "create"]
CALLS: ["params", "user", "merge", "create"]
CALLS: ["current_user", "project", "can?", "project", "repository", "merged_branch_names", "merge_request_branch_names", "project", "protected?", "reject", "project", "current_user", "new", "execute", "each"]
CALLS: ["project", "origin_merge_requests", "opened", "reorder", "uniq", "pluck", "project", "merge_requests", "opened", "reorder", "uniq", "pluck", "uniq"]
CALLS: ["merge_requests", "id", "where"]
CALLS: ["project", "repository", "find_branch", "current_user", "project", "can?", "error", "error", "current_user", "rm_branch", "success", "error", "message", "error"]
CALLS: ["before_remove_branch", "raw_repository", "rm_branch", "after_remove_branch"]
CALLS: ["expire_branches_cache", "repository_event"]
CALLS: ["raw_repository", "find_branch"]
CALLS: ["filter_spam_check_params", "project", "project", "snippets", "params", "build", "params", "new", "current_user", "params", "allowed_for?", "deny_visibility_level", "author", "current_user", "current_user", "spam_check", "save", "new", "create"]
CALLS: ["project", "repository", "find_tag", "project", "releases", "find_by", "error", "project", "releases", "new", "save", "success", "error"]
CALLS: ["executable?", "transaction_begin", "expanded_environment_url", "environment", "external_url", "expanded_environment_url", "environment", "action", "fire_state_event", "environment", "save", "environment", "stopped?", "deploy", "tap", "transaction_end", "transaction"]
CALLS: ["find_by", "project", "new", "execute", "project", "new", "execute"]
CALLS: ["environment_url", "environment_url", "variables", "expand"]
CALLS: ["project", "deployments", "environment", "job", "ref", "job", "tag", "job", "sha", "job", "user", "job", "on_stop", "create"]
CALLS: ["environment_options"]
CALLS: ["project", "job", "environment", "present?", "environment"]
CALLS: ["project", "empty_repo?", "create_master_branch", "project", "current_user", "new", "execute", "repository", "current_user", "add_branch", "success", "error", "message", "error"]
CALLS: ["project", "repository", "current_user", "create_file"]
CALLS: ["options", "options", "multi_action"]
CALLS: ["raw_repository", "add_branch", "after_create_branch"]
CALLS: ["repository", "start_project", "repository", "start_ref_name", "compare_source_branch", "new"]
CALLS: ["raw_repository", "raw_repository", "compare_source_branch"]
CALLS: ["validate!", "create_commit!", "success", "message", "error"]
CALLS: ["repository", "current_user", "update_file"]
CALLS: ["project", "new", "params", "actions_after_lfs_transformation", "commit_actions!"]
CALLS: ["repository", "current_user", "multi_action", "raise_error"]
CALLS: ["new_file", "content", "encoding", "map"]
CALLS: ["repository", "current_user", "delete_file"]
CALLS: ["options", "options", "multi_action"]
CALLS: ["project", "new", "new_file", "content", "create_transformed_commit"]
CALLS: ["repository", "current_user", "create_file"]
CALLS: ["repository", "current_user", "create_dir"]
CALLS: ["options", "options", "multi_action"]
CALLS: ["values", "all?", "render_404", "join", "project_tree_path", "project_tree_path", "create_commit", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["commit_change"]
CALLS: ["repository", "respond_to?", "current_user", "public_send", "repository", "current_user", "public_send", "to_s", "dasherize", "current_user", "change_type_title", "current_user", "change_type_title", "to_s", "dasherize"]
CALLS: []
CALLS: ["commit_change"]
CALLS: ["cohorts"]
CALLS: ["months", "ago", "beginning_of_month", "to_date", "new", "last", "running_totals", "counts_by_month", "to_i", "pop", "first", "new"]
CALLS: ["column_to_date", "column_to_date", "months", "ago", "end_of_month", "where", "group", "reorder", "count"]
CALLS: ["postgresql?"]
CALLS: ["counts_by_month", "map", "last", "to_i", "to_i", "reduce", "reverse", "first", "zero?", "map"]
CALLS: ["params", "update"]
CALLS: ["status", "continue_creation", "finalize_creation", "status", "status_message", "make_errored!", "request_operation"]
CALLS: ["new", "provider", "execute"]
CALLS: ["new", "provider", "execute"]
CALLS: ["elapsed_time_from_creation", "provider", "cluster_id", "perform_in", "provider", "_", "make_errored!"]
CALLS: ["now", "utc", "start_time", "to_time", "utc"]
CALLS: ["make_creating", "cluster_id", "perform_in", "errors", "make_errored!", "get_operation_id"]
CALLS: ["provider", "api_client", "provider", "gcp_project_id", "provider", "zone", "provider", "cluster", "name", "provider", "num_nodes", "provider", "machine_type", "projects_zones_clusters_create", "status", "status", "provider", "status_message", "make_errored!", "provider", "api_client", "self_link", "parse_operation_id", "provider", "make_errored!", "provider", "message", "make_errored!"]
CALLS: ["access_token", "access_token", "new"]
CALLS: ["configure_provider", "configure_kubernetes", "cluster", "save!", "message", "make_errored!", "message", "make_errored!"]
CALLS: ["cluster", "platform_type", "cluster", "gke_cluster", "endpoint", "gke_cluster", "master_auth", "cluster_ca_certificate", "decode64", "gke_cluster", "master_auth", "username", "gke_cluster", "master_auth", "password", "request_kubernetes_token", "build_platform_kubernetes"]
CALLS: ["provider", "api_client", "provider", "gcp_project_id", "provider", "zone", "cluster", "name", "projects_zones_clusters_get"]
CALLS: ["gke_cluster", "endpoint", "gke_cluster", "master_auth", "cluster_ca_certificate", "decode64", "gke_cluster", "master_auth", "username", "gke_cluster", "master_auth", "password", "new", "execute"]
CALLS: ["provider", "endpoint", "gke_cluster", "endpoint", "provider", "status_event"]
CALLS: ["api_client", "gcp_project_id", "zone", "operation_id", "projects_zones_operations", "block_given?", "message", "make_errored!"]
CALLS: ["can_create_cluster?", "_", "new", "create_cluster", "persisted?", "id", "perform_async", "tap"]
CALLS: ["project", "clusters", "empty?"]
CALLS: ["cluster_params", "create"]
CALLS: ["params", "access_token", "try", "params", "current_user", "project", "merge"]
CALLS: ["application_class", "cluster", "find_or_create_by!", "make_scheduled!", "name", "id", "perform_async", "try"]
CALLS: ["params"]
CALLS: ["params", "render_404"]
CALLS: ["app", "scheduled?", "app", "make_installing!", "helm_api", "install_command", "install", "app", "name", "app", "id", "perform_in", "app", "message", "make_errored!", "app", "make_errored!"]
CALLS: ["app", "install_command"]
CALLS: ["kubeclient", "new"]
CALLS: ["name", "chart", "values", "repository", "new"]
CALLS: ["name"]
CALLS: []
CALLS: []
CALLS: ["name", "chart", "values", "new"]
CALLS: ["name", "chart", "values", "new"]
CALLS: ["name", "new"]
CALLS: ["app", "installing?", "installation_phase", "on_success", "on_failed", "check_timeout", "app", "errored?", "app", "message", "make_errored!"]
CALLS: ["helm_api", "install_command", "pod_name", "installation_status"]
CALLS: ["timeouted?", "app", "make_errored!", "remove_installation_pod", "app", "name", "app", "id", "perform_in"]
CALLS: ["helm_api", "install_command", "pod_name", "delete_installation_pod!"]
CALLS: ["now", "utc", "app", "updated_at", "to_time", "utc"]
CALLS: ["app", "installation_errors", "make_errored!", "remove_installation_pod"]
CALLS: ["helm_api", "install_command", "pod_name", "installation_log"]
CALLS: ["app", "make_installed!", "remove_installation_pod"]
CALLS: ["app", "external_ip", "try_obtain_lease", "ingress_ip", "app", "ingress_ip", "update!"]
CALLS: ["service", "status", "loadBalancer", "ingress", "first", "ip"]
CALLS: ["project", "runners", "can_pick?", "tick_runner_queue", "each", "project", "shared_runners_enabled?", "shared", "can_pick?", "tick_runner_queue", "each"]
CALLS: ["projects", "with_shared_runners", "any?"]
CALLS: ["", "where"]
CALLS: ["hex", "runner_queue_key", "set_key_and_notify", "tap"]
CALLS: ["token"]
CALLS: ["ref_protected?", "protected?", "project_id", "assignable_for?", "accepting_tags?"]
CALLS: ["new", "can_create_tag?", "can_update_branch?"]
CALLS: ["run_untagged?", "has_tags?", "tag_list", "tag_list", "empty?"]
CALLS: ["is_shared?", "projects", "exists?"]
CALLS: ["", "where"]
CALLS: ["present?", "environments", "stop_action?", "current_user", "can?", "current_user", "stop_with_action!", "each"]
CALLS: ["available?", "stop!", "stop_action", "play"]
CALLS: ["on_stop", "present?", "manual_actions", "manual_actions", "on_stop", "find_by"]
CALLS: ["deployable", "try"]
CALLS: ["", "where"]
CALLS: ["project", "new", "execute"]
CALLS: ["schedule", "id", "current_user", "id", "perform_async", "flash", "project_pipelines_path", "html_safe", "flash", "pipeline_schedules_path"]
CALLS: ["playable?", "respond_422", "current_user", "play", "build_path"]
CALLS: ["build", "playable?", "request", "current_user", "build", "can?"]
CALLS: ["build", "playable?", "request", "current_user", "build", "can?"]
CALLS: []
CALLS: ["action?", "manual?", "complete?"]
CALLS: ["available?", "stop_action", "present?"]
CALLS: ["stop_action", "present?"]
CALLS: ["current_user", "can?", "retryable_builds", "current_user", "can?", "project", "current_user", "new", "reprocess!", "find_each", "builds", "latest", "skipped", "process", "retry_optimistic_lock", "find_each", "project", "current_user", "new", "close_all", "process!"]
CALLS: ["todo_service", "merge_request_build_retried", "pipeline_merge_requests"]
CALLS: ["current_user", "can?", "public_send", "map", "current_user", "push", "retried", "transaction_begin", "pipeline", "builds", "latest", "name", "where", "update_all", "project", "builds", "create!", "transaction_end", "transaction"]
CALLS: ["", "where"]
CALLS: ["statuses", "order", "statuses", "latest"]
CALLS: ["project", "user", "new", "execute"]
CALLS: ["reprocess!", "pipeline", "stage_idx", "mark_as_processable_after_stage", "enqueue!", "project", "current_user", "new", "close", "tap"]
CALLS: ["builds", "skipped", "after_stage", "find_each"]
CALLS: ["", "where"]
CALLS: ["runner", "shared?", "builds_for_shared_runner", "builds_for_specific_runner", "enabled?", "runner", "tags", "ids", "matches_tag_ids", "runner", "run_untagged?", "with_any_tags", "runner", "can_pick?", "runner_id", "runner", "id", "run!", "register_success", "new", "drop!", "find", "register_failure", "new"]
CALLS: ["pages_deployments_failed_total_counter", "increment"]
CALLS: ["counter"]
CALLS: ["runner", "shared?", "jobs_running_for_project", "queued_at", "nil?", "job_queue_duration_seconds", "now", "queued_at", "observe", "attempt_counter", "increment"]
CALLS: ["histogram"]
CALLS: ["counter"]
CALLS: ["runner", "shared?", "project", "builds", "running", "shared", "where", "limit", "count"]
CALLS: ["failed_attempt_counter", "increment", "attempt_counter", "increment"]
CALLS: ["counter"]
CALLS: ["new_builds", "runner", "projects", "without_deleted", "with_builds_enabled", "where", "order"]
CALLS: ["pending", "unstarted", "runner", "ref_protected?", "ref_protected"]
CALLS: ["", "where"]
CALLS: ["", "where"]
CALLS: ["", "with_feature_enabled"]
CALLS: ["new_builds", "joins", "where", "joins", "where", "running_builds_for_shared_runners", "to_sql", "joins", "order"]
CALLS: ["running", "shared", "where", "group", "select"]
CALLS: ["", "where", "where", "where", "select", "where"]
CALLS: ["", "where", "where", "where", "where", "not", "select", "where"]
CALLS: ["update_retried", "stage_indexes_of_created_builds", "process_stage", "map", "update_status", "flatten", "any?"]
CALLS: ["pipeline", "statuses", "latest", "group", "having", "pluck", "any?", "pipeline", "statuses", "latest", "map", "where", "where", "map", "not", "update_all"]
CALLS: ["created_builds", "order", "pluck"]
CALLS: ["pipeline", "builds", "created"]
CALLS: ["status_for_prior_stages", "include?", "created_builds_in_stage", "process_build", "retry_lock", "select"]
CALLS: ["created_builds", "where"]
CALLS: ["pipeline", "builds", "where", "latest", "status"]
CALLS: ["when", "valid_statuses_for_when", "include?", "action?", "actionize", "enqueue", "skip"]
CALLS: []
CALLS: ["current_user", "can?", "enqueue", "current_user", "update", "tap", "current_user", "retry"]
CALLS: ["project", "new", "execute"]
CALLS: ["pipeline", "current_user", "retry_failed", "project", "project_pipelines_path", "html", "json", "respond_to"]
CALLS: ["project", "new", "execute"]
CALLS: ["retryable?", "respond_422", "current_user", "retry", "build_path"]
CALLS: ["build", "retryable?", "request", "current_user", "build", "can?"]
CALLS: []
CALLS: ["retryable_builds", "any?"]
CALLS: ["success?", "failed?", "canceled?"]
CALLS: ["build", "failed?"]
CALLS: ["hook", "hook_log", "request_data", "hook_log", "trigger", "execute", "set_hook_execution_notice", "edit_project_hook_path"]
CALLS: ["hook", "web_hook_logs", "params", "find"]
CALLS: ["flash", "flash", "flash"]
CALLS: ["hook", "web_hook_logs", "params", "find"]
CALLS: ["hook", "hook_log", "request_data", "hook_log", "trigger", "execute", "set_hook_execution_notice", "edit_admin_hook_path"]
CALLS: ["trigger_from_token", "trigger_from_token", "create_pipeline_from_trigger"]
CALLS: ["params", "to_s", "find_by_token", "strong_memoize"]
CALLS: ["project", "project", "project", "owner", "params", "new", "trigger_requests", "build", "variables", "variables", "build", "execute", "persisted?", "success", "errors", "messages", "error"]
CALLS: ["read_secrets", "dig", "dig", "decode64", "each"]
CALLS: ["build_kubeclient!", "get_secrets", "as_json", "error_code"]
CALLS: ["trace_sections", "empty?", "table_name", "extract_sections", "bulk_insert"]
CALLS: ["trace", "extract_sections", "delete", "find_or_create_name", "id", "project", "id", "id", "merge", "map"]
CALLS: ["project", "build_trace_section_names", "find_or_create_by!", "project", "build_trace_section_names", "find_by!"]
CALLS: ["stage_id", "present?", "invalid?", "ensure_stage", "stage_id", "id", "block_given?", "tap"]
CALLS: ["find_stage", "create_stage"]
CALLS: ["stage", "pipeline", "project", "create!"]
CALLS: ["pipeline", "stages", "stage", "find_by"]
CALLS: ["new", "params", "params", "params", "params", "project", "current_user", "new", "pipeline", "new", "schedule_head_pipeline_update", "complete?", "project", "auto_cancel_pending_pipelines?", "cancel_pending_pipelines", "pipeline_created_counter", "increment", "process!", "build!", "pipeline"]
CALLS: ["related_merge_requests", "id", "perform_async", "each"]
CALLS: ["pipeline", "project", "source_of_merge_requests", "opened", "pipeline", "ref", "where"]
CALLS: ["counter"]
CALLS: ["auto_cancelable_pipelines", "pipeline", "auto_cancel_running", "find_each", "retry_lock"]
CALLS: ["project", "pipelines", "pipeline", "ref", "where", "where", "pipeline", "id", "not", "where", "project", "pipeline", "ref", "commit", "try", "not", "created_or_pending"]
CALLS: ["", "where"]
CALLS: ["update", "auto_canceled_by", "cancel_running"]
CALLS: ["project", "pipeline_schedules", "pipeline_schedule_params", "create"]
CALLS: ["params", "current_user", "merge"]
CALLS: ["new", "projects_list", "project_id", "projects_get_billing_info", "billing_enabled", "select"]
CALLS: ["find_chat_name", "update_last_used_at"]
CALLS: ["find_by"]
CALLS: ["new", "execute"]
CALLS: ["update_last_used_at?", "id", "to_i", "new", "try_obtain", "touch"]
CALLS: ["last_used_at", "nil?", "last_used_at", "ago"]
CALLS: ["chat_name_params", "values", "all?", "request_token", "new_profile_chat_name_url"]
CALLS: ["chat_name_token", "chat_name_params", "store!"]
CALLS: ["board", "position", "params", "movable?", "valid_move?", "reorder_intermediate_lists", "update_list_position", "with_lock"]
CALLS: ["new_position", "update_attribute"]
CALLS: ["old_position", "new_position", "decrement_intermediate_lists", "increment_intermediate_lists"]
CALLS: ["board", "lists", "movable", "new_position", "where", "old_position", "where", "update_all"]
CALLS: ["board", "lists", "movable", "old_position", "where", "new_position", "where", "update_all"]
CALLS: ["new_position", "present?", "new_position", "old_position", "new_position", "new_position", "board", "lists", "movable", "size"]
CALLS: ["lists", "backlog", "exists?", "lists", "create", "lists"]
CALLS: ["lists", "movable", "empty?", "transaction_begin", "label_params", "create_list", "each", "transaction_end", "transaction"]
CALLS: ["find_or_create_label", "parent", "current_user", "id", "new", "execute"]
CALLS: ["lists", "create"]
CALLS: ["destroyable?", "board", "decrement_higher_lists", "remove_list", "with_lock"]
CALLS: ["destroy"]
CALLS: ["board", "lists", "movable", "position", "where", "update_all"]
CALLS: ["label?"]
CALLS: ["transaction_begin", "available_labels_for", "params", "find", "next_position", "create_list", "transaction_end", "transaction"]
CALLS: ["lists", "movable", "maximum", "nil?", "succ"]
CALLS: ["group_board?", "parent", "id", "merge!", "parent", "id", "current_user", "new", "execute"]
CALLS: ["parent", "boards", "empty?", "create_board!", "boards"]
CALLS: ["parent", "current_user", "new", "execute"]
CALLS: ["parent", "boards", "params", "create", "persisted?", "lists", "create", "lists", "create"]
CALLS: ["current_user", "can?", "issue_params", "empty?", "update"]
CALLS: ["set_parent", "set_state", "set_scope", "params"]
CALLS: ["params", "board", "group_board?"]
CALLS: ["params", "list", "list", "closed?"]
CALLS: ["params", "key?", "board", "lists", "params", "find"]
CALLS: ["board", "lists", "params", "delete", "find"]
CALLS: ["ls_files", "json", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["root_ref", "raw_repository", "ls_files"]
CALLS: ["parent", "is_a?", "params", "parent", "id", "params", "parent", "id"]
CALLS: ["current_user", "filter_params", "new", "execute", "movable_list?", "closed_list?", "without_board_labels", "movable_list?", "with_list_label", "order_by_position_and_priority"]
CALLS: ["where", "list", "label_id", "where", "limit", "arel", "exists", "where"]
CALLS: ["board_label_ids", "any?", "where", "issues_label_links", "limit", "arel", "exists", "not"]
CALLS: ["where", "board_label_ids", "where"]
CALLS: ["board", "lists", "movable", "pluck"]
CALLS: ["list", "present?", "list", "closed?"]
CALLS: ["list", "present?", "list", "movable?"]
CALLS: ["order_labels_priority", "nulls_last_order", "nulls_last_order", "reorder"]
CALLS: ["params", "list", "label_id", "merge", "create_issue"]
CALLS: ["project", "current_user", "new", "execute"]
CALLS: ["can_create_board?", "create_board!"]
CALLS: ["parent", "boards", "size"]
CALLS: ["params", "present?", "params", "update_attributes"]
CALLS: ["params", "new", "execute", "save", "tap"]
CALLS: ["is_a?", "params", "merge", "new", "params", "merge", "new"]
CALLS: ["registry", "enabled", "error", "scope", "current_user", "project", "error", "scope", "authorized_token", "encoded"]
CALLS: ["registry", "key", "new", "issuer", "registry", "issuer", "audience", "params", "subject", "current_user", "try", "expire_time", "class", "token_expire_at", "compact", "tap"]
CALLS: ["create"]
CALLS: ["update"]
CALLS: ["stop_environments"]
CALLS: ["project", "current_user", "new", "branch_name", "execute"]
CALLS: ["request", "project"]
CALLS: ["request", "project"]
CALLS: ["request", "project"]
CALLS: ["build", "project"]
CALLS: ["request", "current_user"]
CALLS: ["job", "project"]
CALLS: []
CALLS: ["valid?", "errors", "wiki", "error_message", "add", "wiki", "page_title_and_dir", "wiki", "wiki", "page", "set_attributes", "errors", "blank?"]
CALLS: ["attributes", "url_path", "attributes", "title", "attributes", "format"]
CALLS: ["invalidate_issue_cache_counts", "invalidate_merge_request_cache_counts", "invalidate_todos_done_count", "invalidate_todos_pending_count", "invalidate_personal_projects_count"]
CALLS: ["cache", "id", "delete"]
CALLS: ["cache", "id", "delete"]
CALLS: ["cache", "id", "delete"]
CALLS: ["cache", "id", "delete"]
CALLS: []
CALLS: ["supported_events", "include?", "username", "password", "ref_name", "build_url", "build_type", "post"]
CALLS: ["teamcity_url", "join", "to_s"]
CALLS: ["bamboo_url", "join", "to_s"]
CALLS: ["supported_events", "include?", "ref_name", "blank_ref?", "blank_ref?", "api_key", "user_key", "device", "priority", "project", "full_name", "project", "full_name", "sound", "sound", "post"]
CALLS: ["supported_events", "include?", "allowed_branch?", "to_json", "token", "post", "each"]
CALLS: ["present?", "restrict_to_branch", "present?", "ref_name", "restrict_to_branch", "split", "map", "present?", "include?"]
CALLS: ["supported_events", "include?", "should_pipeline_be_notified?", "retrieve_recipients", "any?", "new", "perform"]
CALLS: ["recipients", "to_s", "split", "reject"]
CALLS: ["notify_only_broken_pipelines?"]
CALLS: ["notify_only_broken_pipelines?"]
CALLS: ["notify_for_ref?", "notify_for_pipeline?"]
CALLS: ["notify_only_broken_pipelines?"]
CALLS: ["dig", "notify_only_default_branch?", "ref_name", "dig", "project", "default_branch"]
CALLS: ["supported_events", "include?", "service_hook", "execute"]
CALLS: []
CALLS: ["supported_events", "include?", "type", "project_url", "project_url", "head", "type", "code", "project_url", "type", "project_url", "message", "logger", "info"]
CALLS: ["supported_events", "include?", "project_id", "channels", "colorize_messages", "settings", "perform_async"]
CALLS: ["server_host", "present?", "server_host", "server_port", "present?", "server_port"]
CALLS: ["cache", "ssh_algorithms_hashes", "host", "gitlab_pages", "gitlab_ci", "deep_symbolize_keys", "fetch"]
CALLS: ["gitlab_ci", "to_h", "artifacts", "max_size", "megabytes", "megabytes", "merge"]
CALLS: ["pages", "to_h", "pages", "host", "resolv_dns", "merge"]
CALLS: ["getaddress"]
CALLS: ["ssh_algorithm_hashes", "map", "compact"]
CALLS: ["ssh_algorithm_file_content", "present?", "ssh_algorithm_md5", "ssh_algorithm_sha256"]
CALLS: ["hexdigest"]
CALLS: ["hexdigest", "scan", "join"]
CALLS: ["ssh_algorithm_file", "exist?", "read"]
CALLS: ["downcase", "join"]
CALLS: ["supported_events", "include?", "create_message", "present?", "gate", "room", "message_options", "send"]
CALLS: ["create_push_message", "update?", "create_issue_message", "update?", "create_merge_request_message", "create_note_message", "should_pipeline_be_notified?", "create_pipeline_message"]
CALLS: ["project_url", "escape", "project_url", "project_link", "humanized_status"]
CALLS: ["new", "new", "new", "truncate_sha", "format_title", "new", "format_title", "new", "format_title", "new", "format_title", "project_link", "markdown"]
CALLS: ["new", "render_line", "project_url", "project_link", "markdown"]
CALLS: ["new", "render_line", "project_link", "markdown"]
CALLS: ["tag_ref?", "ref_name", "blank_ref?", "project_url", "escape", "project_link", "blank_ref?", "project", "web_url", "project_name", "project", "web_url", "escape", "project", "web_url", "project", "full_name", "gsub!", "project", "web_url", "take", "render_line", "each", "count", "count"]
CALLS: ["notify", "present?", "notify", "to_boolean", "message_color"]
CALLS: ["pipeline_status_color", "color"]
CALLS: []
CALLS: ["api_version", "present?", "api_version", "server", "blank?", "server", "token", "new"]
CALLS: ["supported_events", "include?", "token", "api_key", "project", "repository", "path_to_repo", "execute"]
CALLS: ["supported_events", "include?", "token", "project", "repository", "config", "gitlab", "url", "project", "full_path", "config", "gitlab", "url", "project", "full_path", "config", "gitlab", "url", "project", "full_path", "post"]
CALLS: ["properties", "get"]
CALLS: ["supported_events", "include?", "project_id", "recipients", "send_from_committer_email?", "disable_diffs?", "perform_async"]
CALLS: ["disable_diffs", "to_boolean"]
CALLS: ["push_valid?", "service_hook", "execute", "merge_request_valid?", "service_hook", "execute", "tag_push_valid?", "service_hook", "execute"]
CALLS: []
CALLS: ["project", "merge_requests", "opened", "project", "id", "ref_name", "where", "empty?", "blank_ref?"]
CALLS: ["blank_ref?"]
CALLS: ["supported_events", "include?", "webhook", "present?", "custom_data", "get_message", "get_channel_field", "presence", "channel", "username", "username", "notify"]
CALLS: ["custom_data", "merge"]
CALLS: ["event_channel_name", "public_send"]
CALLS: []
CALLS: ["notify_for_ref?", "new", "update?", "new", "update?", "new", "new", "should_pipeline_be_notified?", "new", "new"]
CALLS: ["project_url", "project_name", "merge"]
CALLS: ["supported_events", "include?", "build_message", "room", "auth", "speak"]
CALLS: ["ref_name", "project", "full_name", "blank_ref?", "blank_ref?", "project", "web_url"]
CALLS: ["rooms", "find", "base_uri", "merge", "post", "code"]
CALLS: ["base_uri", "get", "code"]
CALLS: ["subdomain"]
CALLS: ["token"]
CALLS: ["params", "project", "actor", "auth_params", "new", "authentication_abilities", "execute"]
CALLS: ["params", "permit"]
CALLS: ["supported_events", "include?", "service_hook", "execute"]
CALLS: ["supported_events", "include?", "build_key", "get_path"]
CALLS: ["build_url", "username", "password", "get"]
CALLS: ["build_url", "username", "blank?", "password", "blank?", "get", "username", "password", "get"]
CALLS: ["supported_events", "include?", "subdomain", "token", "to_json", "post"]
CALLS: ["supported_events", "include?", "ref_name", "restrict_to_branch", "to_s", "length", "index", "nil?", "project", "full_name", "check_commit", "each"]
CALLS: ["scan", "client", "find_by_id", "add_comment", "update", "logger", "message", "error", "each"]
CALLS: ["new", "refresh_cache", "each"]
CALLS: ["hooks", "hooks_for", "to_s", "async_execute", "each", "new", "execute_hooks", "run_after_commit_or_now"]
CALLS: ["merge_request", "target_project"]
CALLS: ["target_project", "new", "refresh_cache"]
CALLS: ["target_project"]
CALLS: ["assignee"]
CALLS: ["source"]
CALLS: ["project", "new", "refresh_cache"]
CALLS: ["new", "execute"]
CALLS: ["new", "execute"]
CALLS: []
CALLS: ["current_page", "join_lateral_supported?", "relation_with_join_lateral", "relation_without_join_lateral", "with_associations", "to_a"]
CALLS: ["", "includes"]
CALLS: ["projects", "select", "to_sql", "filtered_events", "limit_for_join_lateral", "limit", "where", "to_sql", "base_relation", "from", "table_name", "joins", "paginate_events"]
CALLS: []
CALLS: ["unscoped", "recent"]
CALLS: ["limit", "offset"]
CALLS: ["base_relation", "apply_filter", "base_relation"]
CALLS: ["filtered_events", "projects", "in_projects", "paginate_events"]
CALLS: ["", "includes", "preload"]
CALLS: ["projects", "first"]
CALLS: ["author", "detect_mentionable_changes", "empty?", "create_cross_references!"]
CALLS: ["changes", "present?", "changes", "previous_changes", "dup", "class", "mentionable_attrs", "map", "include?", "select"]
CALLS: ["pipeline_data", "project", "execute_hooks", "project", "execute_services"]
CALLS: ["build"]
CALLS: ["project", "build", "project", "dup", "execute_hooks", "project", "dup", "execute_services", "new", "execute", "project", "running_or_pending_build_count"]
CALLS: ["cache", "id", "builds", "running_or_pending", "count", "fetch"]
CALLS: ["", "where"]
CALLS: ["all", "order_id_desc", "by_username", "by_search", "by_blocked", "by_active", "by_external_identity", "by_external", "by_2fa", "by_created_at", "by_custom_attributes"]
CALLS: ["params", "with_two_factor", "without_two_factor"]
CALLS: ["current_user", "admin?", "where", "not", "params", "external"]
CALLS: ["current_user", "admin?", "params", "params", "joins", "params", "params", "with_extern_uid", "merge"]
CALLS: ["", "normalize_uid", "iwhere", "with_provider"]
CALLS: ["ldap_provider?", "normalize_dn", "to_s"]
CALLS: ["", "where"]
CALLS: ["params", "active"]
CALLS: ["params", "blocked"]
CALLS: ["params", "present?", "params", "search"]
CALLS: ["params", "params", "where"]
CALLS: ["params", "params", "params", "present?", "params", "search"]
CALLS: ["params", "present?", "joins", "params", "where"]
CALLS: ["search", "search", "full_search"]
CALLS: ["fuzzy_search"]
CALLS: ["params", "is_a?", "current_user", "allowed?", "reflect_on_association", "klass", "arel_table", "model", "arel_table", "klass", "select", "foreign_key", "association_primary_key", "eq", "where", "params", "where", "where", "inject"]
CALLS: ["params", "present?", "params", "created_before", "params", "present?", "params", "created_after"]
CALLS: ["", "scoped_table", "gteq", "where"]
CALLS: ["arel_table", "table_name", "alias"]
CALLS: ["arel_table", "table_name", "alias"]
CALLS: ["", "scoped_table", "lteq", "where"]
CALLS: ["params", "recent_events", "joins", "with_associations", "params", "limit_recent"]
CALLS: ["recent", "limit", "offset"]
CALLS: ["sql", "from"]
CALLS: ["project?", "params", "find", "pending_delete?", "current_user", "allowed?"]
CALLS: ["current_user", "todos", "by_action_id", "by_action", "by_author", "by_state", "by_type", "by_project", "sort"]
CALLS: ["type?", "type", "where"]
CALLS: ["type", "present?", "type", "include?"]
CALLS: ["params", "to_s", "done", "pending"]
CALLS: ["", "with_state"]
CALLS: ["project?", "project", "where", "current_user", "public_or_visible_to_user", "joins", "merge"]
CALLS: ["project_authorizations", "select", "where", "levels_for_user", "id", "where", "public_to_user"]
CALLS: ["authorizations_for_projects", "levels_for_user", "where", "public_to_user"]
CALLS: ["author?", "author", "try", "where"]
CALLS: ["action_id?", "action_id", "where"]
CALLS: ["params"]
CALLS: ["action_id", "present?", "action_id", "to_i", "key?"]
CALLS: ["action?", "to_action_id", "where"]
CALLS: ["params", "params", "id", "where"]
CALLS: ["active", "inactive"]
CALLS: ["", "where"]
CALLS: ["", "where"]
CALLS: ["params", "filter_by_state"]
CALLS: ["closed", "active"]
CALLS: ["", "with_state"]
CALLS: ["", "with_state"]
CALLS: ["author", "author", "id", "where", "no_author?", "where", "author_id?", "author_username?", "none"]
CALLS: ["params", "params"]
CALLS: ["project?", "projects", "of_projects", "references_project", "projects", "projects", "reorder", "merge", "join_project", "none"]
CALLS: ["", "references"]
CALLS: ["", "references"]
CALLS: ["params", "to_s", "closed", "respond_to?", "merged", "closed", "opened"]
CALLS: ["params", "params", "where"]
CALLS: ["sort", "tags_sorted_by", "filter_by_name"]
CALLS: ["tags", "name", "sort", "tags", "name", "rsort", "tags_sorted_by_committed_date", "reverse", "tags_sorted_by_committed_date", "tags"]
CALLS: ["tags", "dereferenced_target", "committed_date", "now", "sort_by"]
CALLS: ["search", "name", "search", "include?", "select"]
CALLS: ["search", "name", "upcase", "search", "upcase", "include?", "select"]
CALLS: ["init_collection", "by_author", "by_visibility", "fresh"]
CALLS: ["params", "visibility_from_scope", "where"]
CALLS: ["params", "to_s"]
CALLS: ["project", "present?", "authorized_snippets_from_project", "authorized_snippets"]
CALLS: ["feature_available_projects", "not_project_related", "or", "where", "current_user", "public_or_visible_to_user"]
CALLS: ["table", "eq"]
CALLS: ["arel_table"]
CALLS: ["current_user", "allowed?", "table", "eq", "current_user", "with_feature_available_for_user", "projects_for_user", "select", "to_sql", "new", "table", "in"]
CALLS: ["current_user", "public_to_user", "current_user", "full_private_access?", "all", "current_user", "authorizations_for_projects", "where", "current_user", "levels_for_user", "where", "select", "select", "new", "to_sql", "table_name", "from"]
CALLS: ["current_user", "project", "can?", "project", "team", "current_user", "member?", "project", "snippets", "project", "snippets", "current_user", "public_to_user", "none"]
CALLS: ["current_user", "collection_with_user", "collection_without_user"]
CALLS: ["private_only?", "owned_projects?", "none", "public_to_user"]
CALLS: ["params", "present?"]
CALLS: ["params", "present?"]
CALLS: ["owned_projects?", "current_user", "owned_projects", "private_only?", "current_user", "authorized_projects", "current_user", "public_or_visible_to_user"]
CALLS: ["owned_projects_union", "to_sql", "from"]
CALLS: ["namespace", "where", "joins", "namespace", "id", "where", "id", "where", "new"]
CALLS: ["include_subgroups?", "group", "self_and_descendants", "select", "where", "group", "projects"]
CALLS: ["class", "id", "where", "new", "base_and_descendants"]
CALLS: ["options", "fetch"]
CALLS: ["only_shared?", "shared_projects", "public_only", "only_owned?", "owned_projects", "public_only", "shared_projects", "public_only", "owned_projects", "public_only"]
CALLS: ["options", "fetch"]
CALLS: ["options", "fetch"]
CALLS: ["group", "users", "current_user", "include?", "only_shared?", "shared_projects", "only_owned?", "owned_projects", "shared_projects", "owned_projects", "only_shared?", "shared_projects", "current_user", "public_or_visible_to_user", "only_owned?", "owned_projects", "current_user", "public_or_visible_to_user", "owned_projects", "current_user", "public_or_visible_to_user", "shared_projects", "current_user", "public_or_visible_to_user"]
CALLS: ["target", "notes_on_target", "target_type", "notes_of_target_type", "notes_of_any_type"]
CALLS: ["target", "respond_to?", "target", "related_notes", "target", "notes"]
CALLS: ["commit_shas", "take", "except", "source_project_id", "target_project_id", "where", "for_commit_id", "notes", "new", "to_sql", "table_name", "from", "includes"]
CALLS: ["notes_for_type", "map", "search", "map!", "new", "includes", "find_union"]
CALLS: ["allowed?", "notes", "where", "none", "noteables_for_type", "notes", "base_class", "name", "reorder", "where"]
CALLS: ["target_type", "notes_for_type", "search"]
CALLS: ["public_only?", "public_only", "with_confidentiality_access_check"]
CALLS: ["params", "fetch"]
CALLS: ["user_can_see_all_confidential_issues?", "all", "user_cannot_see_confidential_issues?", "where", "current_user", "id", "current_user", "authorized_projects", "select", "where"]
CALLS: ["user_can_see_all_confidential_issues?", "current_user", "blank?"]
CALLS: ["current_user", "blank?", "current_user", "full_private_access?", "project?", "project", "project", "team", "current_user", "id", "max_member_access"]
CALLS: ["klass", "all"]
CALLS: ["current_user", "collection_with_user", "collection_without_user", "union"]
CALLS: ["builds", "by_status"]
CALLS: ["params", "include?", "params", "where"]
CALLS: ["params", "include?", "params", "where"]
CALLS: ["params", "delete", "new", "current_user", "execute", "init_collection", "by_ids", "by_personal", "by_starred", "by_trending", "by_visibilty_level", "by_tags", "by_search", "by_archived", "by_custom_attributes", "sort"]
CALLS: ["params", "non_archived", "params", "key?", "params", "archived", "params", "to_boolean", "non_archived"]
CALLS: ["params", "present?", "params", "tagged_with"]
CALLS: ["params", "present?", "params", "where"]
CALLS: ["params", "present?", "trending"]
CALLS: ["joins", "reorder"]
CALLS: ["params", "params", "load_projects", "html", "view_to_html_string", "json", "respond_to", "dashboard_projects_path", "current_user", "cookies", "blank?", "current_user", "hide_project_limit", "current_user", "can_create_project?", "current_user", "projects_limit", "profile_path", "icon", "icon", "dashboard_projects_path", "root_path", "dashboard_projects_path", "nav_link", "starred_dashboard_projects_path", "starred_dashboard_projects_path", "nav_link", "explore_root_path", "trending_explore_projects_path", "starred_explore_projects_path", "explore_projects_path", "explore_root_path", "nav_link", "sort_value_latest_activity", "projects_sort_options_hash", "dropdown_toggle", "projects_sort_options_hash", "filter_projects_path", "each", "filter_projects_path", "params", "present?", "filter_projects_path", "params", "to_boolean", "filter_projects_path", "params", "current_user", "filter_projects_path", "params", "present?", "filter_projects_path", "params", "present?", "shared_projects", "present?", "filter_projects_path", "params", "present?", "filter_projects_path", "params", "filter_projects_path", "params", "current_user", "can_create_project?", "new_project_path", "trending_explore_projects_path", "explore_root_path", "trending_explore_projects_path", "nav_link", "starred_explore_projects_path", "starred_explore_projects_path", "nav_link", "explore_projects_path", "explore_projects_path", "nav_link", "current_user", "sort_value_latest_activity", "projects_sort_options_hash", "dropdown_toggle", "projects_sort_options_hash", "filter_projects_path", "each", "filter_projects_path", "params", "present?", "filter_projects_path", "params", "to_boolean", "filter_projects_path", "params", "current_user", "filter_projects_path", "params", "present?", "filter_projects_path", "params", "present?", "shared_projects", "present?", "filter_projects_path", "params", "present?", "filter_projects_path", "params", "filter_projects_path", "params", "projects", "current_user", "current_user", "explore_root_path"]
CALLS: ["params", "present?", "current_user", "current_user", "starred_by"]
CALLS: ["", "joins", "id", "where"]
CALLS: ["params", "present?", "current_user", "current_user", "personal"]
CALLS: ["", "namespace_id", "where"]
CALLS: ["project_ids_relation", "project_ids_relation", "where"]
CALLS: ["params", "present?", "current_user", "personal"]
CALLS: ["params", "archived", "params", "blank?", "non_archived"]
CALLS: ["params", "present?", "params", "where"]
CALLS: ["pipelines", "by_scope", "by_status", "by_ref", "by_name", "by_username", "by_yaml_errors", "sort_items"]
CALLS: ["params", "include?", "params", "params", "params", "order"]
CALLS: ["params", "to_boolean", "where", "where"]
CALLS: ["params", "present?", "joins", "params", "where"]
CALLS: ["params", "present?", "params", "where"]
CALLS: ["params", "running", "pending", "finished", "branches", "ids_for_ref", "from_ids", "tags", "ids_for_ref", "from_ids"]
CALLS: ["pipelines", "unscoped", "where"]
CALLS: ["pipelines", "where", "group", "select"]
CALLS: ["current_user_related?", "current_user", "none", "params", "current_user", "id", "where", "current_user", "assigned_to"]
CALLS: ["", "id", "where"]
CALLS: ["", "id", "where"]
CALLS: ["params", "present?", "params", "search"]
CALLS: ["pipeline_schedules", "active", "pipeline_schedules", "inactive", "pipeline_schedules", "order"]
CALLS: ["all_projects", "find_union", "includes", "order_id_desc"]
CALLS: ["all", "by_user", "by_impersonation", "by_state"]
CALLS: ["with_impersonation", "without_impersonation"]
CALLS: ["", "where"]
CALLS: ["", "where"]
CALLS: ["where"]
CALLS: ["init_collection", "since_fetch_at", "fresh"]
CALLS: ["fetch", "to_i", "at", "updated_after"]
CALLS: ["", "where"]
CALLS: ["", "scoped_table", "gteq", "where"]
CALLS: ["projects_where_can_admin_issues", "present?", "search", "excluding_project", "order_id_desc", "present?", "where", "limit", "includes"]
CALLS: ["authorized_projects", "non_archived", "with_issues_enabled"]
CALLS: ["", "with_feature_enabled"]
CALLS: ["", "where", "not"]
CALLS: ["project_ids", "empty?", "group_ids", "empty?", "none", "all", "by_groups_and_projects", "by_title", "by_state", "order"]
CALLS: ["joins", "where", "select"]
CALLS: ["params", "params", "where"]
CALLS: ["project_ids", "group_ids", "for_projects_and_groups"]
CALLS: ["fork_network", "fork_network", "projects", "current_user", "public_or_visible_to_user", "non_archived", "current_user", "with_feature_available_for_user", "source_project", "where"]
CALLS: ["project", "project_members", "current_user", "project", "can?", "non_invite", "group", "group", "new", "execute", "non_invite", "new", "distinct_on", "includes", "table_name", "from"]
CALLS: ["postgresql?"]
CALLS: ["project?", "params", "find", "authorized_to_read_labels?"]
CALLS: ["skip_authorization", "current_user", "allowed?"]
CALLS: ["project?", "project", "project", "group", "present?", "arel_table", "project", "group", "group_ids_for", "eq", "in", "and", "eq", "project", "id", "eq", "and", "or", "where", "project", "labels", "group?", "params", "find", "group_ids_for", "where", "projects", "group_ids", "where", "only_group_labels?", "projects", "select", "where"]
CALLS: ["params"]
CALLS: ["groups_to_include", "groups_user_can_read_labels", "map", "strong_memoize"]
CALLS: ["authorized_to_read_labels?", "select", "user_scope"]
CALLS: ["include_ancestor_groups?", "ancestors", "include_descendant_groups?", "descendants"]
CALLS: ["params"]
CALLS: ["params"]
CALLS: ["label_ids", "find_union", "none", "with_title", "sort"]
CALLS: ["", "where"]
CALLS: ["title", "nil?", "title", "blank?", "none", "title", "where"]
CALLS: ["all_groups", "find_union", "order_id_desc"]
CALLS: ["params", "find", "current_user", "klass", "to_ability_name", "allowed?"]
CALLS: ["init_collection", "filter_items", "by_project", "sort"]
CALLS: ["by_source_branch", "by_target_branch"]
CALLS: ["target_branch", "target_branch", "where"]
CALLS: ["source_branch", "source_branch", "where"]
CALLS: ["by_due_date"]
CALLS: ["due_date?", "filter_by_no_due_date?", "without_due_date", "filter_by_overdue?", "today", "due_before", "filter_by_due_this_week?", "today", "beginning_of_week", "today", "end_of_week", "due_between", "filter_by_due_this_month?", "today", "beginning_of_month", "today", "end_of_month", "due_between"]
CALLS: ["", "where", "where"]
CALLS: ["", "where"]
CALLS: ["", "where"]
CALLS: ["params", "present?"]
CALLS: ["due_date?", "params", "name"]
CALLS: ["due_date?", "params", "name"]
CALLS: ["due_date?", "params", "name"]
CALLS: ["due_date?", "params", "name"]
CALLS: ["by_scope", "by_created_at", "by_updated_at", "by_state", "by_group", "by_search", "by_assignee", "by_author", "by_non_archived", "by_iids", "by_milestone", "by_label", "by_my_reaction_emoji"]
CALLS: ["", "where"]
CALLS: ["assignee", "assignee", "assigned_to", "no_assignee?", "unassigned", "assignee_id?", "assignee_username?", "none"]
CALLS: ["", "where"]
CALLS: ["", "where"]
CALLS: ["params", "params"]
CALLS: ["params", "present?", "non_archived"]
CALLS: ["params", "present?", "current_user", "current_user", "params", "awarded"]
CALLS: ["id", "name", "where"]
CALLS: ["labels?", "filter_by_no_label?", "without_label", "label_names", "params", "with_label"]
CALLS: ["is_a?", "size", "joins", "where", "grouping_columns", "group", "size", "having", "joins", "where"]
CALLS: ["arel_table", "include?", "arel_table"]
CALLS: ["", "name", "table_name", "joins", "where"]
CALLS: ["milestones?", "filter_by_no_milestone?", "left_joins_milestones", "where", "filter_by_upcoming_milestone?", "projects", "upcoming_ids_by_projects", "left_joins_milestones", "where", "filter_by_started_milestone?", "left_joins_milestones", "where", "params", "with_milestone"]
CALLS: ["unscoped", "of_projects", "active", "now", "where", "postgresql?", "order", "select", "group", "having", "pluck", "map"]
CALLS: ["", "left_joins_milestones", "where"]
CALLS: ["params", "name"]
CALLS: ["params", "name"]
CALLS: ["milestones?", "params", "title"]
CALLS: ["assignee", "assignee", "id", "where", "no_assignee?", "where", "assignee_id?", "assignee_username?", "none"]
CALLS: ["params", "present?", "params", "where"]
CALLS: []
CALLS: ["params", "present?", "params", "updated_after", "params", "present?", "params", "updated_before"]
CALLS: ["", "scoped_table", "lteq", "where"]
CALLS: ["all_groups", "by_parent", "by_custom_attributes", "map", "find_union", "with_route", "order_id_desc"]
CALLS: ["params", "params", "where"]
CALLS: ["members", "parent", "non_request", "ancestors", "select", "where", "where", "users", "select", "not", "select", "to_sql", "select", "to_sql", "join", "where"]
CALLS: ["find_by", "can?"]
CALLS: ["children", "params", "ancestors_of_filtered_subgroups", "ancestors_of_filtered_projects", "size", "paginator", "total_count", "max", "paginate_array"]
CALLS: ["subgroups", "ancestors_of_groups", "params", "with_selects_for_list"]
CALLS: ["except", "select", "where", "new", "parent_group", "id", "base_and_ancestors"]
CALLS: ["projects", "where", "parent_group", "not", "select", "where", "ancestors_of_groups", "params", "with_selects_for_list"]
CALLS: ["source", "events", "by_current_user_access", "by_action", "by_target_type", "by_created_at_before", "by_created_at_after"]
CALLS: ["params", "params", "end_of_day", "where"]
CALLS: ["params", "params", "beginning_of_day", "where"]
CALLS: ["params", "params", "where"]
CALLS: ["current_user", "new", "execute", "merge", "joins"]
CALLS: ["project", "deployments", "ref", "params", "ref", "to_s", "where", "commit", "commit", "sha", "where", "none", "group", "select", "project", "environments", "available", "where", "order_by_last_deployed_at", "to_a", "current_user", "allowed?", "select!", "ref", "commit", "commit", "includes_commit?", "select!", "ref", "params", "ref", "recently_updated_on_branch?", "select!"]
CALLS: ["last_deployment", "last_deployment", "includes_commit?"]
CALLS: ["to_s", "last_deployment", "try"]
CALLS: ["", "arel_table", "maximum", "select", "arel_table", "arel_table", "eq", "where", "to_sql", "nulls_first_order", "order"]
CALLS: ["project", "repository", "id", "sha", "ancestor?"]
CALLS: ["all_projects", "find_union", "includes", "order_id_desc"]
CALLS: ["find_check", "should_skip_cross_project_check", "can_read_cross_project?", "should_run?", "model", "none"]
CALLS: ["current_user", "allowed?"]
CALLS: ["project", "clusters", "filter_by_scope"]
CALLS: ["scope", "to_sym", "disabled", "enabled", "scope"]
CALLS: ["", "where"]
CALLS: ["", "where"]
CALLS: ["sort", "branches_sorted_by", "filter_by_name"]
CALLS: ["raw_repository", "local_branches"]
CALLS: ["raw_repository", "local_branches"]
CALLS: ["find_users", "active", "reorder", "search", "present?", "search", "search", "skip_users", "present?", "where", "skip_users", "not", "limit", "params", "present?", "current_user", "current_user", "id", "params", "todo_authors", "search", "blank?", "params", "present?", "current_user", "current_user", "uniq", "author_id", "present?", "current_user", "author_id", "find_by_id", "uniq"]
CALLS: ["", "where", "select", "where"]
CALLS: ["project", "users_from_project", "group", "group", "users_with_parents", "current_user", "all", "none"]
CALLS: ["members_with_parents", "select", "where", "reorder"]
CALLS: ["author_id", "present?", "project", "authorized_users", "author_id", "where", "new", "to_sql", "table_name", "from", "project", "authorized_users"]
CALLS: ["without_deleted", "with_statistics", "by_namespace_id", "by_visibilty_level", "by_with_push", "by_abandoned", "by_last_repository_check_failed", "by_archived", "by_personal", "by_name", "includes", "sort", "params", "page"]
CALLS: ["params", "present?", "where"]
CALLS: ["params", "present?", "abandoned"]
CALLS: ["", "months", "ago", "where"]
CALLS: ["params", "present?", "with_push"]
CALLS: ["params", "present?", "params", "in_namespace"]
CALLS: ["execute!"]
CALLS: []
CALLS: ["parse_repo_path"]
CALLS: ["params", "params", "params", "params", "params", "join", "pending_delete?", "find_routable!"]
CALLS: ["merge"]
CALLS: ["set_sort_order_from_cookie", "set_default_state", "params", "dup", "except", "default_sort_order", "id", "id", "finder_type", "valid_params", "permit"]
CALLS: ["scalar_params", "array_params"]
CALLS: []
CALLS: []
CALLS: []
CALLS: ["params", "sort_value_created_date", "sort_value_recently_updated", "sort_value_created_date"]
CALLS: ["params", "present?", "cookies", "params", "cookies", "cookies", "update_cookie_value", "params", "cookies"]
CALLS: ["sort_value_oldest_created", "sort_value_recently_created", "sort_value_created_date", "sort_value_created_date", "sort_value_due_date", "sort_value_due_date", "sort_value_milestone", "sort_value_milestone", "sort_value_popularity", "sort_value_popularity"]
CALLS: ["params", "blank?", "params"]
CALLS: ["board", "group_board?", "issue_params", "find", "board_parent"]
CALLS: ["params", "params", "params", "merge", "nil?", "reject"]
CALLS: ["params", "params", "join", "find_by_full_path", "render_404"]
CALLS: ["params", "params", "join", "find_by_full_path", "render_404"]
CALLS: ["runner", "update", "runner", "tick_runner_queue", "tap"]
CALLS: ["project", "current_user", "issue_params", "new", "execute"]
CALLS: ["delete", "last_commit_sha", "update_attributes", "title_changed?", "title", "wiki", "find_page", "present?", "url_path", "url_path", "wiki", "content", "format", "title", "update_page", "save"]
CALLS: ["title", "commit_details", "wiki", "path", "name", "to_sym", "update_page", "update_project_activity"]
CALLS: ["repo_created?", "after_create", "branch_created?", "after_create_branch", "newrev"]
CALLS: ["full_path", "initialize_raw_repository"]
CALLS: ["project", "repository_storage", "disk_path", "project", "is_wiki", "gl_repository", "new"]
CALLS: ["notes", "map", "where", "fresh", "to_a", "class", "memoized_values", "clear_memoization", "each"]
CALLS: ["params", "presence"]
CALLS: ["snippet_params", "spammable_params", "merge", "current_user", "new", "execute", "recaptcha_check_with_fallback", "snippets_path", "current_user"]
CALLS: ["current_user", "project_params", "new", "execute", "repository", "flash", "_", "name", "edit_project_path", "redirect_to", "html", "flash", "html", "js", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["_", "s_", "s_", "current_user", "can?", "render", "params", "find_page", "current_user", "wiki_params", "new", "execute", "valid?", "project_wiki_path", "redirect_to", "fluid_layout", "_", "title", "capitalize", "_", "wiki_page_errors", "icon", "persisted?", "title", "capitalize", "project_wiki_path", "title", "capitalize", "persisted?", "s_", "s_", "current_user", "can?", "s_", "persisted?", "project_wiki_history_path", "s_", "current_user", "can?", "project_wiki_path", "s_", "_", "persisted?", "s_", "s_", "title", "namespace", "becomes", "persisted?", "form_errors", "persisted?", "last_commit_sha", "hidden_field", "label", "title", "text_field", "persisted?", "icon", "s_", "icon", "help_page_path", "label", "format", "options_for_select", "select", "label", "slug", "project_wiki_preview_markdown_path", "s_", "slug", "project_wiki_preview_markdown_path", "s_", "html_safe", "s_", "help_page_path", "s_", "html_safe", "label", "text_field", "persisted?", "_", "submit", "_", "project_wiki_path", "s_", "submit", "_", "project_wiki_path", "fluid_layout", "_", "title", "capitalize", "_", "wiki_page_errors", "icon", "persisted?", "title", "capitalize", "project_wiki_path", "title", "capitalize", "persisted?", "s_", "s_", "current_user", "can?", "s_", "persisted?", "project_wiki_history_path", "s_", "current_user", "can?", "project_wiki_path", "s_", "_", "persisted?", "s_", "s_", "title", "namespace", "becomes", "persisted?", "form_errors", "persisted?", "last_commit_sha", "hidden_field", "label", "title", "text_field", "persisted?", "icon", "s_", "icon", "help_page_path", "label", "format", "options_for_select", "select", "label", "slug", "project_wiki_preview_markdown_path", "s_", "slug", "project_wiki_preview_markdown_path", "s_", "html_safe", "s_", "help_page_path", "s_", "html_safe", "label", "text_field", "persisted?", "_", "submit", "_", "project_wiki_path", "s_", "submit", "_", "project_wiki_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["variables_params", "update", "render_variables", "json", "respond_to", "render_error", "json", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["params", "variable_params_attributes", "permit"]
CALLS: []
CALLS: []
CALLS: ["new", "variables", "represent", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["trigger", "trigger_params", "update", "project_settings_ci_cd_path", "help_page_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["snippet_params", "spammable_params", "merge", "project", "current_user", "new", "execute", "recaptcha_check_with_fallback", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project", "current_user", "update_params", "new", "execute", "flash", "name", "run_autodevops_pipeline", "project_settings_ci_cd_path", "fluid_layout", "env", "test?", "errors", "empty?", "s_", "_", "_", "s_", "s_", "help_page_path", "shared_runners_text", "present?", "current_application_settings", "markdown_field", "shared_runners_enabled?", "toggle_shared_runners_project_runners_path", "toggle_shared_runners_project_runners_path", "zero?", "dom_id", "runner_status_icon", "include?", "short_sha", "runner_path", "locked?", "icon", "edit_project_runner_path", "short_sha", "include?", "active?", "pause_project_runner_path", "resume_project_runner_path", "belongs_to_one_project?", "runner_path", "runner_projects", "find_by", "project_runner_project_path", "specific?", "namespace", "becomes", "runner_projects", "new", "id", "hidden_field", "submit", "description", "present?", "description", "tag_list", "present?", "tag_list", "sort", "each", "each", "_", "icon", "help_page_path", "_", "project_variables_path", "help_page_path", "any?", "each", "tap"]
CALLS: ["shared?"]
CALLS: ["runner_projects", "count"]
CALLS: ["status", "contacted_at", "time_ago_in_words"]
CALLS: ["project_runner_path"]
CALLS: ["run_auto_devops_pipeline?", "empty_repo?", "flash", "project", "id", "current_user", "id", "project", "default_branch", "perform_async", "flash", "project_pipelines_path", "html_safe"]
CALLS: ["project", "repository", "gitlab_ci_yml", "project", "auto_devops", "previous_changes", "include?", "project", "auto_devops", "enabled?", "project", "auto_devops", "enabled", "nil?", "auto_devops_enabled?"]
CALLS: ["file_on_head"]
CALLS: ["params", "require", "permit"]
CALLS: ["params", "require", "permit"]
CALLS: ["params", "require", "permit"]
CALLS: ["cluster", "managed?", "params", "require", "permit", "params", "require", "permit"]
CALLS: ["user?"]
CALLS: ["params", "require", "permit"]
CALLS: ["attributes", "service_params", "save", "project_settings_integrations_path", "success_message", "redirect_to", "title", "edit_project_path", "add_to_breadcrumbs", "deprecation_message", "deprecation_message", "title", "activated?", "description", "respond_to?", "detailed_description", "to_param", "project_service_path", "can_test?", "test_project_service_path", "editable?", "service_save_button", "project_settings_integrations_path", "form_for", "lookup_context", "to_param", "template_exists?", "to_param", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: []
CALLS: []
CALLS: []
CALLS: ["project", "pipelines", "any?"]
CALLS: []
CALLS: []
CALLS: []
CALLS: ["_", "deprecated_message_content", "url_helpers", "project", "project_clusters_path", "html_safe"]
CALLS: ["active?", "_", "_"]
CALLS: []
CALLS: ["deprecated?", "icon", "content_tag", "button_tag"]
CALLS: []
CALLS: ["active"]
CALLS: ["push"]
CALLS: ["active?", "title", "title"]
CALLS: ["event_channel_names", "event_names", "params", "permit", "is_a?", "blank?", "delete", "each"]
CALLS: ["supported_events", "map"]
CALLS: []
CALLS: ["supported_events", "event_channel_name", "map"]
CALLS: ["new", "runner_params", "update", "runner_path", "description", "id", "runner_path", "runner", "runner_form_url", "runner", "form_errors", "check_box", "check_box", "check_box", "check_box", "text_field", "text_field", "text_field", "text_field", "runner", "tag_list", "sort", "join", "text_field", "submit", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["params", "require", "permit"]
CALLS: ["params", "require", "permit"]
CALLS: ["release_params", "present?", "release", "release_params", "update_attributes", "release", "destroy", "name", "project_tag_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["params", "require", "permit"]
CALLS: ["releases", "name", "find_or_initialize_by"]
CALLS: ["update_service_class", "current_user", "protected_ref_params", "new", "execute", "valid?", "errors", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["service_namespace"]
CALLS: ["schedule", "schedule_params", "update", "project_pipeline_schedules_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["update_params", "update", "project_pages_path", "project_pages_path", "domain", "domain", "domain", "namespace", "becomes", "errors", "any?", "errors", "full_messages", "each", "label", "persisted?", "text_field", "config", "pages", "external_https", "label", "text_area", "label", "text_area", "submit", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["current_user", "project_params", "new", "execute", "flash", "flash", "project_pages_path", "html", "respond_to"]
CALLS: ["project", "current_user", "milestone_params", "new", "milestone", "execute", "js", "valid?", "project_milestone_path", "html", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project", "current_user", "merge_request_params", "new", "execute", "valid?", "target_project", "namespace", "becomes", "target_project", "redirect_to", "define_edit_vars", "html", "to_json", "json", "respond_to", "request", "format", "html?", "define_edit_vars", "render_conflict_response", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["source_project", "target_project", "target_project", "repository", "branch_names"]
CALLS: ["label_params", "new", "execute", "valid?", "project_labels_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["hook", "hook_params", "update_attributes", "flash", "project_settings_integrations_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project_group_links", "params", "find", "group_link_params", "update_attributes"]
CALLS: ["params", "require", "permit"]
CALLS: ["environment_params", "update", "project", "project_environment_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["deploy_key", "update_params", "update_attributes", "flash", "redirect_to_repository_settings", "namespace", "becomes", "local_assigns", "fetch", "local_assigns", "fetch", "deploy_keys_project_for", "form_errors", "label", "text_field", "new_record?", "label", "help_page_path", "text_area", "label", "text_field", "present?", "check_box", "label", "fields_for", "submit", "project_settings_repository_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project", "current_user", "update_params", "new", "cluster", "execute", "cluster", "valid?", "json", "flash", "_", "project", "cluster", "project_cluster_path", "html", "respond_to", "json", "html", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["params", "present?", "params", "after_edit_path", "project_blob_path", "create_commit", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["current_user", "id", "new", "params", "find_by", "target_project", "diffs_project_merge_request_path", "hexdigest", "join", "project_blob_path"]
CALLS: ["current_user", "user_params", "merge", "new", "execute", "redirect_back_or_default", "html", "json", "redirect_back_or_default", "html", "json", "respond_to", "header_title", "profile_path"]
CALLS: ["current_user", "preferences_params", "user", "merge", "new", "execute", "flash", "flash", "flash", "message", "profile_preferences_path", "html", "js", "respond_to", "header_title", "profile_path"]
CALLS: ["params", "require", "permit"]
CALLS: ["user_params", "to_s", "include?", "select", "password_automatically_set", "user_params", "valid_password?", "edit_profile_password_path", "current_user", "merge", "new", "execute", "flash", "new_user_session_path", "reload", "fluid_layout", "page_title", "password_automatically_set?", "profile_password_path", "form_errors", "password_automatically_set?", "label", "password_field", "label", "password_field", "label", "password_field", "submit", "password_automatically_set?", "reset_profile_password_path", "header_title", "profile_path"]
CALLS: ["current_user", "user_params", "current_user", "merge", "new", "execute", "flash", "flash", "profile_notifications_path", "redirect_back_or_default", "header_title", "profile_path"]
CALLS: ["valid?", "password_automatically_set?", "update_attribute"]
CALLS: ["current_user", "notification_settings", "params", "find", "notification_setting_params", "update_attributes", "render_response"]
CALLS: ["current_user", "group_params", "new", "execute", "edit_group_path", "name", "restore_path!", "form_errors", "group_icon", "avatar?", "_", "_", "file_field", "_", "avatar?", "_", "to_param", "group_avatar_path", "_", "visibility_level", "can_change_group_visibility_level?", "visibility_level", "local_assigns", "fetch", "icon", "help_page_path", "label", "can_change_visibility_level", "form_model", "values", "form_model", "disallowed_visibility_level?", "restricted_visibility_levels", "include?", "form", "model_method", "form", "model_method", "selected_level", "radio_button", "visibility_level_icon", "visibility_level_label", "form_model", "visibility_level_description", "restricted_visibility_level_description", "form_model", "disallowed_visibility_level_description", "label", "each", "form_model", "render", "visibility_level_icon", "visibility_level_label", "form_model", "visibility_level_description", "form", "form", "check_box", "label", "s_", "can_change_share_with_group_lock?", "check_box", "name", "group_path", "s_", "html_safe", "share_with_group_lock_help_text", "label", "current_user", "admin?", "label", "lfs_enabled?", "check_box", "icon", "help_page_path", "label", "current_user", "label", "check_box", "icon", "help_page_path", "label", "text_field", "submit", "remove_group_message", "form_tag", "supports_nested_groups?", "transfer_group_path", "parent_group_options", "dropdown_tag", "submit", "path", "name", "page_description", "description", "header_title", "group_title", "current_user"]
CALLS: ["current_user", "owned_groups", "sort_by", "id", "human_name", "map", "id", "delete_if", "to_json"]
CALLS: ["parent", "share_with_group_lock?", "default_help", "share_with_group_lock?", "current_user", "parent", "can?", "ancestor_locked_but_you_can_override", "ancestor_locked_so_ask_the_owner", "ancestor_locked_and_has_been_overridden"]
CALLS: ["s_", "html_safe", "ancestor_group"]
CALLS: ["oldest_consecutively_locked_ancestor", "current_user", "can?", "name", "group_path", "name"]
CALLS: ["ancestors", "has_parent?", "parent", "share_with_group_lock?", "find"]
CALLS: ["s_", "html_safe", "ancestor_group", "remove_the_share_with_group_lock_from_ancestor"]
CALLS: ["oldest_consecutively_locked_ancestor", "s_", "name", "current_user", "can?", "edit_group_path"]
CALLS: ["s_", "html_safe", "ancestor_group", "remove_the_share_with_group_lock_from_ancestor"]
CALLS: ["s_"]
CALLS: ["_", "name"]
CALLS: ["current_user", "can?"]
CALLS: ["key?", "key?", "merge", "dropdown_toggle", "key?", "key?", "dropdown_title", "key?", "dropdown_filter", "key?", "key?", "capture", "content_tag", "capture", "content_tag", "dropdown_loading", "html_safe", "content_tag", "html_safe"]
CALLS: ["group_variables_params", "update", "render_group_variables", "json", "respond_to", "render_error", "json", "respond_to"]
CALLS: ["params", "variable_params_attributes", "permit"]
CALLS: ["new", "variables", "represent"]
CALLS: ["legacy_group_milestone?", "milestone_params", "select", "milestones", "milestone_params", "parent", "current_user", "new", "execute", "each", "milestone_path", "name", "page_description", "description", "header_title", "group_title", "current_user"]
CALLS: ["label_params", "new", "execute", "valid?", "redirect_back_or_group_labels_path", "name", "page_description", "description", "header_title", "group_title", "current_user"]
CALLS: ["previous_labels_path"]
CALLS: ["session", "fallback_path", "fetch"]
CALLS: ["group_labels_path"]
CALLS: ["project", "current_user", "note_params", "new", "note", "execute", "is_a?", "current_user", "new", "execute", "note_json", "json", "redirect_back_or_default", "html", "respond_to"]
CALLS: ["params", "root_params_key", "require", "permit", "membershipable", "members_and_requesters", "params", "find", "current_user", "new", "execute", "current_user", "present", "js", "respond_to"]
CALLS: ["membershipable", "membershipable"]
CALLS: ["update_service", "issuable", "execute", "recaptcha_check_if_spammable", "html", "render_entity_json", "recaptcha_check_if_spammable", "json", "respond_to", "render_conflict_response"]
CALLS: ["issue_params", "spammable_params", "merge", "project", "current_user", "new"]
CALLS: []
CALLS: ["valid?", "serializer", "represent", "errors", "full_messages"]
CALLS: ["issuable", "is_a?", "recaptcha_check_with_fallback"]
CALLS: ["board", "lists", "movable", "params", "find", "board_parent", "current_user", "move_params", "new", "execute"]
CALLS: ["params", "require", "permit"]
CALLS: ["params", "permit"]
CALLS: ["board_parent", "current_user", "move_params", "new", "issue", "execute"]
CALLS: ["user_params", "dup", "params", "present?", "params", "params", "changing_own_password?", "now", "merge!", "current_user", "user", "merge", "new", "skip_reconfirmation!", "execute", "user", "html", "json", "user", "username", "params", "name", "form_errors", "label", "text_field", "label", "text_field", "label", "text_field", "new_record?", "label", "label", "object", "force_random_password", "password_field", "label", "object", "force_random_password", "password_field", "label", "number_field", "label", "check_box", "label", "current_user", "radio_button", "radio_button", "label", "check_box", "label", "file_field", "label", "text_field", "label", "text_field", "label", "text_field", "label", "text_field", "new_record?", "submit", "admin_users_path", "submit", "admin_user_path", "html", "json", "respond_to", "admin_root_path"]
CALLS: ["user", "current_user"]
CALLS: ["service", "service_params", "update_attributes", "service", "active?", "service", "id", "perform_async", "admin_application_settings_services_path", "admin_root_path"]
CALLS: ["new", "runner_params", "update", "js", "admin_runner_path", "html", "respond_to", "assign_builds_and_projects", "shared?", "_", "admin_runners_path", "id", "shared?", "admin_runner_path", "runner", "runner_form_url", "runner", "form_errors", "check_box", "check_box", "check_box", "check_box", "text_field", "text_field", "text_field", "text_field", "runner", "tag_list", "sort", "join", "text_field", "submit", "projects", "any?", "runner_projects", "project", "full_name", "namespace", "becomes", "each", "admin_runner_path", "params", "full_name", "namespace", "becomes", "runner_projects", "new", "id", "hidden_field", "submit", "each", "project", "project_job_path", "current_user", "detailed_status", "detailed_status", "full_name", "pipeline", "pipeline_path", "pipeline", "short_sha", "finished_at", "each", "admin_root_path"]
CALLS: ["stage", "request", "current_user", "detailed_status"]
CALLS: ["pipeline", "request", "current_user", "detailed_status"]
CALLS: ["group", "request", "current_user", "detailed_status"]
CALLS: ["build", "request", "current_user", "detailed_status"]
CALLS: ["subject", "user", "detailed_status"]
CALLS: ["new", "fabricate!"]
CALLS: ["new", "fabricate!"]
CALLS: ["new", "fabricate!"]
CALLS: ["new", "fabricate!"]
CALLS: ["jobs", "one?", "jobs", "first", "detailed_status", "new", "fabricate!"]
CALLS: ["new", "fabricate!"]
CALLS: ["runner", "builds", "order", "first", "params", "present?", "params", "search", "all", "runner", "projects", "any?", "where", "runner", "projects", "select", "not", "params", "page", "per"]
CALLS: ["label_params", "new", "execute", "valid?", "admin_labels_path", "admin_root_path"]
CALLS: ["identity_params", "update_attributes", "new", "execute", "admin_user_identities_path", "admin_root_path"]
CALLS: ["hook", "hook_params", "update_attributes", "flash", "admin_hooks_path", "admin_root_path"]
CALLS: ["group_params", "update_attributes", "name", "visibility_level", "form_errors", "label", "_", "_", "file_field", "_", "visibility_level", "can_change_group_visibility_level?", "visibility_level", "local_assigns", "fetch", "icon", "help_page_path", "label", "can_change_visibility_level", "form_model", "values", "form_model", "disallowed_visibility_level?", "restricted_visibility_levels", "include?", "form", "model_method", "form", "model_method", "selected_level", "radio_button", "visibility_level_icon", "visibility_level_label", "form_model", "visibility_level_description", "restricted_visibility_level_description", "form_model", "disallowed_visibility_level_description", "label", "each", "form_model", "render", "visibility_level_icon", "visibility_level_label", "form_model", "visibility_level_description", "form", "form", "check_box", "label", "current_user", "admin?", "label", "lfs_enabled?", "check_box", "icon", "help_page_path", "label", "current_user", "label", "check_box", "icon", "help_page_path", "label", "text_field", "new_record?", "submit", "admin_groups_path", "submit", "admin_group_path", "admin_root_path"]
CALLS: ["deploy_key", "update_params", "update_attributes", "flash", "admin_deploy_keys_path", "local_assigns", "fetch", "local_assigns", "fetch", "deploy_keys_project_for", "form_errors", "label", "text_field", "new_record?", "label", "help_page_path", "text_area", "label", "text_field", "present?", "check_box", "label", "fields_for", "submit", "admin_deploy_keys_path", "admin_root_path"]
CALLS: ["broadcast_message_params", "update", "admin_broadcast_messages_path", "admin_root_path"]
CALLS: ["application_params", "update", "admin_application_path", "admin_root_path"]
CALLS: ["current_user", "application_setting_params", "new", "execute", "admin_application_settings_path", "admin_root_path"]
CALLS: ["params", "params", "key?", "params", "delete", "delete", "params", "button_based_providers", "map", "params", "delete", "params", "delete", "params", "params", "delete", "params", "require", "visible_application_setting_attributes", "permit"]
CALLS: ["auth_providers", "form_based_provider?", "reject"]
CALLS: ["to_s", "any?"]
CALLS: ["providers"]
CALLS: ["visible_attributes"]
CALLS: []
CALLS: ["appearance_params", "update", "admin_appearances_path", "admin_appearances_path", "form_errors", "label", "header_logo?", "header_logo_url", "persisted?", "header_logos_admin_appearances_path", "hidden_field", "file_field", "label", "text_field", "label", "text_area", "label", "logo?", "logo_url", "persisted?", "logo_admin_appearances_path", "hidden_field", "file_field", "label", "text_area", "submit", "persisted?", "preview_sign_in_admin_appearances_path", "new_project_path", "updated_at", "admin_root_path"]
CALLS: ["current_user", "can_be_merged_by?", "access_denied!", "merge!", "merge_error", "merge_error", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["register_failure", "log_error", "allow_failure", "latest?", "description", "drop", "delete_artifact!"]
CALLS: []
CALLS: ["error", "merge"]
CALLS: []
CALLS: []
CALLS: ["akismet_enabled"]
CALLS: ["akismet_api_key", "config", "gitlab", "url", "new"]
CALLS: ["title", "description", "join"]
CALLS: ["client_url", "parse", "username", "password", "join", "to_s", "path", "chomp", "scheme"]
CALLS: ["group", "group", "namespace", "try"]
CALLS: ["default_options", "deep_symbolize_keys"]
CALLS: ["start_date", "current_user"]
CALLS: ["start_date", "first", "start_date", "all?", "first", "start_date"]
CALLS: ["days", "ago", "days", "ago", "days", "ago"]
CALLS: ["page", "version", "to_s"]
CALLS: ["snippet", "file_name"]
CALLS: ["", "where"]
CALLS: ["to_s"]
CALLS: ["first_note", "context_noteable", "discussion_id"]
CALLS: ["id"]
CALLS: ["ghost"]
CALLS: []
CALLS: []
CALLS: ["raw", "id"]
CALLS: ["class", "application_name"]
CALLS: ["to_s", "demodulize", "underscore"]
CALLS: ["path", "hexdigest"]
CALLS: ["errors", "any?", "errors", "count", "pluralize", "content_tag", "errors", "full_messages", "content_tag", "map", "join", "html_safe", "content_tag", "content_tag"]
CALLS: ["params", "find_routable!"]
CALLS: ["new", "snippets_path", "page_specific_javascript_tag", "url", "form_errors", "label", "text_field", "visibility_level", "visibility_level", "local_assigns", "fetch", "icon", "help_page_path", "label", "can_change_visibility_level", "form_model", "values", "form_model", "disallowed_visibility_level?", "restricted_visibility_levels", "include?", "form", "model_method", "form", "model_method", "selected_level", "radio_button", "visibility_level_icon", "visibility_level_label", "form_model", "visibility_level_description", "restricted_visibility_level_description", "form_model", "disallowed_visibility_level_description", "label", "each", "form_model", "render", "visibility_level_icon", "visibility_level_label", "form_model", "visibility_level_description", "label", "text_field", "content", "hidden_field", "params", "params", "each_with_index", "new_record?", "submit", "submit", "project_id", "project_snippets_path", "snippets_path", "snippets_path", "current_user"]
CALLS: ["asset_path"]
CALLS: ["set_minimum_password_length", "available_servers"]
CALLS: ["new_user_session_path", "redirect_to"]
CALLS: ["params", "params", "find_by", "current_user", "can?", "access_denied!", "id", "new", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["snippets", "build", "project_snippets_path", "project_snippets_path", "page_specific_javascript_tag", "url", "form_errors", "label", "text_field", "visibility_level", "visibility_level", "local_assigns", "fetch", "icon", "help_page_path", "label", "can_change_visibility_level", "form_model", "values", "form_model", "disallowed_visibility_level?", "restricted_visibility_levels", "include?", "form", "model_method", "form", "model_method", "selected_level", "radio_button", "visibility_level_icon", "visibility_level_label", "form_model", "visibility_level_description", "restricted_visibility_level_description", "form_model", "disallowed_visibility_level_description", "label", "each", "form_model", "render", "visibility_level_icon", "visibility_level_label", "form_model", "visibility_level_description", "label", "text_field", "content", "hidden_field", "params", "params", "each_with_index", "new_record?", "submit", "submit", "project_id", "project_snippets_path", "snippets_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project", "pipelines", "default_branch", "new", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project", "pipeline_schedules", "new", "namespace", "namespace_project_pipeline_schedules_path", "_", "project_pipelines_path", "add_to_breadcrumbs", "_", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["pages_domains", "new", "project_pages_path", "namespace", "becomes", "errors", "any?", "errors", "full_messages", "each", "label", "persisted?", "text_field", "config", "pages", "external_https", "label", "text_area", "label", "text_area", "submit", "_", "project_pages_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["milestones", "new", "respond_with", "container_class", "namespace", "becomes", "form_errors", "label", "text_field", "label", "preview_markdown_path", "preview_markdown_path", "label", "text_field", "label", "text_field", "new_record?", "submit", "project_milestones_path", "submit", "project_milestone_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["define_new_vars", "allow_n_plus_1_calls", "can_be_created", "params", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["custom_icon", "empty?", "config", "mattermost", "host", "config", "mattermost", "host", "project_mattermost_path", "one?", "one?", "first", "mattermost_teams_options", "options_for_select", "one?", "select", "one?", "hidden_field", "one?", "config", "mattermost", "host", "icon", "path", "text_field", "path", "full_path", "icon", "edit_project_service_path", "submit", "form_for", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["map"]
CALLS: ["labels", "params", "find"]
CALLS: ["labels", "new", "container_class", "project_labels_path", "project_labels_path", "url", "form_errors", "label", "text_field", "label", "text_field", "label", "text_field", "suggested_colors", "each", "persisted?", "submit", "submit", "back_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: []
CALLS: ["params", "new", "issue_params", "params", "params", "merge", "project", "current_user", "new", "execute", "merge_request_to_resolve_discussions_of", "params", "discussions_to_resolve", "first", "respond_with", "namespace", "becomes", "local_assigns", "fetch", "local_assigns", "issuable", "form_errors", "issuable", "class", "model_name", "human", "downcase", "namespace", "becomes", "issuable", "polymorphic_path", "label", "issuable", "issuable", "detect", "issuable", "issuable", "respond_to?", "check_box", "label", "issuable", "local_assigns", "fetch", "is_a?", "closed_without_fork?", "current_user", "can_remove_source_branch?", "current_user", "can_remove_source_branch?", "force_remove_source_branch?", "local_assigns", "fetch", "local_assigns", "fetch", "is_a?", "for_fork?", "current_user", "source_project", "can?", "_", "current_user", "can_allow_maintainer_to_push?", "check_box", "_", "help_page_path", "allow_maintainer_push_unavailable_reason", "label", "icon", "current_user", "discussions_can_be_resolved_by?", "iid", "id", "link_to_discussions_to_resolve", "link_to_discussions_to_resolve", "is_a?", "new_record?", "new_record?", "namespace", "becomes", "class", "polymorphic_path", "current_user", "to_ability_name", "can?", "namespace", "becomes", "polymorphic_path", "human_class_name", "namespace", "becomes", "polymorphic_path", "new_record?", "class", "model_name", "human", "downcase", "submit", "submit", "persisted?", "project", "empty_repo?", "project", "present", "contribution_guide_path", "link_to", "hidden_field", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project", "repository", "contribution_guide", "project", "project", "default_branch", "name", "tree_join", "project_blob_path"]
CALLS: ["file_on_head"]
CALLS: ["join"]
CALLS: ["discussions_to_be_resolved", "can_resolve?", "all?"]
CALLS: ["current_user", "can_allow_maintainer_to_push?", "target_project", "visibility_level", "source_project", "visibility_level", "min", "_", "source_project", "source_branch", "protected?", "_"]
CALLS: ["to_reference", "first_note", "id", "first_note", "build", "project", "project_merge_request_path"]
CALLS: ["import_failed?", "project_import_path", "local_assigns", "fetch", "_", "label", "text_field", "_", "html_safe", "_", "html_safe", "import_will_timeout_message", "import_svn_message", "submit", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["import_status"]
CALLS: ["_", "help_page_path", "_", "html_safe"]
CALLS: ["config", "gitlab_shell", "git_timeout", "time_interval_in_words", "_"]
CALLS: ["to_i", "pluralize", "pluralize", "pluralize"]
CALLS: ["current_user", "manageable_namespaces", "namespace", "delete", "present?", "each", "icon", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["namespace", "manageable_groups"]
CALLS: ["owned_groups", "select", "masters_groups", "select", "new", "to_sql", "where", "new", "base_and_descendants"]
CALLS: ["project", "environments", "new", "container_class", "help_page_path", "namespace", "becomes", "form_errors", "label", "text_field", "label", "url_field", "submit", "project_environments_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["redirect_to_repository_settings", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["_", "s_", "s_", "_", "help_page_path", "link_to", "s_", "html_safe", "s_", "s_", "s_", "namespace", "gcp_new_namespace_project_clusters_path", "s_", "s_", "namespace", "user_new_namespace_project_clusters_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["new", "build_platform_kubernetes", "tap", "_", "s_", "s_", "_", "help_page_path", "link_to", "s_", "html_safe", "s_", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["new", "build_provider_gcp", "tap", "_", "s_", "s_", "_", "help_page_path", "link_to", "s_", "html_safe", "s_", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["empty?", "commit", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["current_user"]
CALLS: ["current_user"]
CALLS: ["profile_password_path", "form_errors", "password_automatically_set?", "label", "password_field", "label", "password_field", "label", "password_field", "submit", "header_title", "profile_path"]
CALLS: ["profile_chat_names_path", "token", "deny_profile_chat_names_path", "token", "header_title", "profile_path"]
CALLS: ["pre_auth", "authorizable?", "skip_authorization?", "matching_token?", "authorization", "authorize", "session", "delete", "redirect_uri", "client", "name", "redirect_uri", "current_user", "admin?", "icon", "client", "name", "client", "name", "redirect_uri", "client", "application", "owner", "name", "user_path", "scopes", "scopes", "each", "oauth_authorization_path", "client", "uid", "redirect_uri", "state", "response_type", "scope", "nonce", "oauth_authorization_path", "client", "uid", "redirect_uri", "state", "response_type", "scope", "nonce", "error_response", "body", "header_title", "profile_path"]
CALLS: []
CALLS: ["project_params", "find", "current_user", "can?", "render_404", "project_params"]
CALLS: ["logged_in_with_provider?", "go_to_provider_for_permissions", "session", "access_token_key", "status_import_url", "has_ci_cd_only_params?", "_", "_", "root_path", "import_github_title", "github_import_configured?", "import_github_authorize_message", "_", "params", "status_import_github_path", "import_github_personal_access_token_message", "personal_access_token_import_github_path", "_", "_", "github_import_configured?", "import_configure_github_admin_message"]
CALLS: ["help_page_path", "current_user", "admin?", "_", "html_safe", "_", "html_safe"]
CALLS: ["_", "github_import_configured?", "_", "html_safe", "_", "html_safe"]
CALLS: ["_"]
CALLS: ["current_user", "identities", "provider", "exists?"]
CALLS: ["provider", "extra_import_params", "public_send"]
CALLS: []
CALLS: ["client", "callback_import_url", "authorize_url"]
CALLS: ["provider", "extra_import_params", "public_send"]
CALLS: []
CALLS: ["enabled?"]
CALLS: ["session", "access_token_key", "present?", "session", "host_key", "present?", "status_import_url", "root_path", "custom_icon", "personal_access_token_import_gitea_path"]
CALLS: ["root_path", "callback_import_fogbugz_path"]
CALLS: ["params", "permit", "new", "dashboard_groups_path", "dashboard_groups_path", "form_errors", "label", "_", "_", "file_field", "_", "default_group_visibility", "default_group_visibility", "local_assigns", "fetch", "icon", "help_page_path", "label", "can_change_visibility_level", "form_model", "values", "form_model", "disallowed_visibility_level?", "restricted_visibility_levels", "include?", "form", "model_method", "form", "model_method", "selected_level", "radio_button", "visibility_level_icon", "visibility_level_label", "form_model", "visibility_level_description", "restricted_visibility_level_description", "form_model", "disallowed_visibility_level_description", "label", "each", "form_model", "render", "visibility_level_icon", "visibility_level_label", "form_model", "visibility_level_description", "config", "mattermost", "enabled", "custom_icon", "label", "check_box", "label", "mattermost", "host", "submit", "dashboard_groups_path", "name", "page_description", "description", "header_title", "group_title", "current_user"]
CALLS: ["new", "form_errors", "label", "text_field", "label", "group_preview_markdown_path", "group_preview_markdown_path", "label", "text_field", "label", "text_field", "new_record?", "submit", "group_milestones_path", "submit", "group_milestone_path", "name", "page_description", "description", "header_title", "group_title", "current_user"]
CALLS: ["labels", "params", "find"]
CALLS: ["labels", "new", "previous_labels_path", "group_labels_path", "url", "form_errors", "label", "text_field", "label", "text_field", "label", "text_field", "suggested_colors", "each", "persisted?", "submit", "submit", "back_path", "name", "page_description", "description", "header_title", "group_title", "current_user"]
CALLS: ["params", "find", "new", "represent"]
CALLS: ["params", "find_by!"]
CALLS: ["new", "form_errors", "label", "text_field", "label", "text_field", "label", "text_field", "new_record?", "label", "label", "object", "force_random_password", "password_field", "label", "object", "force_random_password", "password_field", "label", "number_field", "label", "check_box", "label", "current_user", "radio_button", "radio_button", "label", "check_box", "label", "file_field", "label", "text_field", "label", "text_field", "label", "text_field", "label", "text_field", "new_record?", "submit", "admin_users_path", "submit", "admin_user_path", "admin_root_path"]
CALLS: ["new", "form_errors", "label", "text_field", "label", "text_field", "label", "text_field", "suggested_colors", "each", "submit", "admin_labels_path", "admin_root_path"]
CALLS: ["params", "find_by!"]
CALLS: ["params", "find_by!"]
CALLS: ["params", "find_by!"]
CALLS: ["new", "form_errors", "label", "providers", "label_for", "map", "select", "label", "text_field", "submit", "admin_root_path"]
CALLS: ["new", "default_group_visibility", "form_errors", "label", "_", "_", "file_field", "_", "visibility_level", "can_change_group_visibility_level?", "visibility_level", "local_assigns", "fetch", "icon", "help_page_path", "label", "can_change_visibility_level", "form_model", "values", "form_model", "disallowed_visibility_level?", "restricted_visibility_levels", "include?", "form", "model_method", "form", "model_method", "selected_level", "radio_button", "visibility_level_icon", "visibility_level_label", "form_model", "visibility_level_description", "restricted_visibility_level_description", "form_model", "disallowed_visibility_level_description", "label", "each", "form_model", "render", "visibility_level_icon", "visibility_level_label", "form_model", "visibility_level_description", "form", "form", "check_box", "label", "current_user", "admin?", "label", "lfs_enabled?", "check_box", "icon", "help_page_path", "label", "current_user", "label", "check_box", "icon", "help_page_path", "label", "text_field", "new_record?", "submit", "admin_groups_path", "submit", "admin_group_path", "admin_root_path"]
CALLS: ["deploy_keys", "new", "local_assigns", "fetch", "local_assigns", "fetch", "deploy_keys_project_for", "form_errors", "label", "text_field", "new_record?", "label", "help_page_path", "text_area", "label", "text_field", "present?", "check_box", "label", "fields_for", "submit", "admin_deploy_keys_path", "admin_root_path"]
CALLS: ["new", "admin_applications_path", "application", "form_errors", "label", "text_field", "application", "label", "text_area", "application", "configuration", "native_redirect_uri", "configuration", "native_redirect_uri", "label", "check_box", "label", "application", "submit", "admin_applications_path", "admin_root_path"]
END
THE SIZE OF TOUCHED METHODS: 6856 ["new", "new", "new", "new", "new", "user", "user", "user", "new", "new", "user", "user", "new", "label", "new", "new", "new", "new", "new", "new", "new", "new", "new", "new", "user", "user", "new", "new", "new", "new", "new", "new", "new", "new", "new", "new", "label", "new", "new", "new", "new", "new", "new", "new", "new", "new", "new", "new", "user", "form_errors", "id", "name", "id", "id", "name", "user", "username", "id", "id", "user", "name", "id", "submit", "options", "options", "owner", "options", "text", "akismet_client", "akismet_enabled?", "error", "error", "error", "error", "error", "error", "error", "merge", "merge", "merge", "author_id", "created_at", "version", "persisted?", "persisted?", "persisted?", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "target_branch", "update", "raw_repository", "with_cache_hooks", "update", "update", "update", "update", "project", "project", "filter_params", "project", "filter_params", "filter_params", "project", "project", "project", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "project", "execute", "execute", "label_ids", "project", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "project", "execute", "execute", "execute_hooks", "execute_hooks", "create_new_cross_references!", "project", "to_a", "project", "execute", "execute", "update_project_counter_caches", "project", "assignees", "project", "update_project_counter_caches", "project", "execute_hooks", "update_project_counter_caches", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "invalidate_cache_counts", "save", "project", "project", "current_user", "project", "project", "project", "project", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "filter_params", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "filter_params", "process_label_ids", "before_update", "after_update", "labels_changing?", "has_title_or_description_changed?", "change_state", "change_subscription", "change_todo", "toggle_award", "associations_before_update", "invalidate_cache_counts", "handle_changes", "execute_hooks", "update_project_counter_caches?", "execute_hooks", "update_project_counter_caches?", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "before_update", "handle_changes", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute_hooks", "filter_params", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "handle_changes", "after_update", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "project", "project", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "project", "execute", "execute_hooks", "execute", "execute", "execute", "project", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "assign_attributes", "execute", "execute", "execute", "execute_hooks", "execute", "execute", "execute", "execute", "uploader", "move", "move", "update_markdown", "uploader", "schedule_background_upload", "schedule_background_upload", "record_upload", "model", "file", "file", "model", "exists?", "exists?", "upload_path", "build_upload", "exists?", "build_upload", "build_upload", "exists?", "upload_path", "uploads", "build_upload", "size", "size", "to_s", "size", "to_s", "size", "size", "size", "to_s", "to_s", "to_s", "success?", "success?", "message", "message", "message", "message", "message", "message", "message", "message", "success?", "success?", "message", "title", "action", "title", "title", "title", "title", "title", "title", "title", "title", "title", "user_combined_name", "project_link", "project_link", "project_link", "project_link", "project_link", "project_link", "wiki_page_link", "title", "title", "title", "title", "title", "title", "title", "project_link", "title", "title", "title", "title", "title", "title", "title", "title", "title", "title", "title", "title", "title", "title", "title", "title", "title", "title", "title", "title", "action", "title", "action", "create?", "remove?", "revision_after", "revision_before", "environment_options", "job", "job", "builds", "find", "find", "builds", "pipeline", "pipeline", "pipeline", "actual_head_pipeline", "diff_head_sha", "sha", "sha", "build", "build", "build", "build", "build", "group", "group", "group", "group", "group", "group", "group", "group", "can?", "find_by", "find_by", "can?", "can?", "can?", "can?", "allowed?", "policy_for", "user_scope", "user_scope", "active?", "active?", "active?", "active?", "active?", "active?", "active?", "active?", "active?", "active?", "expired?", "expired?", "expired?", "expired?", "expired?", "domain", "find_by!", "find_by!", "skip_cross_project_check", "x509", "due_date", "current", "current", "current", "expires?", "expires_at", "expires_at", "empty?", "current_and_future_messages", "cache_expires_in", "cache", "empty?", "cache", "delete", "wiki", "wiki", "delete_page", "path", "path", "path", "commit_details", "update_project_activity", "touch", "touch", "touch", "touch_noteable", "noteable", "for_commit?", "noteable", "for_commit?", "noteable", "for_commit?", "scope", "scope", "scope", "scope", "process_scope", "process_registry_access", "process_repository_access", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "ensure_container_repository!", "can_access?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "container_registry_enabled?", "build_can_pull?", "user_can_admin?", "user_can_pull?", "deploy_token_can_pull?", "build_can_push?", "user_can_push?", "has_authentication_ability?", "can_user?", "has_authentication_ability?", "has_access_to?", "has_access_to?", "deploy_keys_project_for", "enabled", "registry", "enabled", "enabled", "config", "registry", "full_access_token", "token_expire_at", "create_from_path!", "build_from_path", "target_type", "project_id", "project_id", "project_id", "project_url", "project_url", "new_issue_url", "project_url", "issues_url", "new_issue_url", "url", "web_url", "web_url", "web_url", "url_helpers", "priority", "priority", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "render_404", "render_404", "render_404", "page_description", "header_title", "project_title", "description", "full_name", "description", "description", "description", "description", "description", "description", "description", "description", "description", "description", "description", "description", "description", "description", "description", "description", "description", "description", "description", "description", "description", "description", "description", "description", "description", "description", "description", "description", "description", "description", "description", "description", "build_full_name", "update_route", "prepare_route", "read_only?", "synced?", "sync_profile_from_provider?", "provider", "provider", "provider", "provider", "build_full_path", "parent", "parent", "parent", "parent", "parent", "full_path", "parent", "full_path", "full_path", "parent", "uncached_full_path", "full_path_key", "commit_by", "commit_by", "find_commit", "repository", "repository", "repository", "repository", "repository", "repository", "repository", "repository", "disk_path", "disk_path", "disk_path", "base_dir", "disk_hash", "base_dir", "base_dir", "base_dir", "disk_hash", "base_dir", "base_dir", "model_path_segment", "model_path_segment", "model_path_segment", "hashed_storage?", "hashed_storage?", "hexdigest", "hexdigest", "hexdigest", "hexdigest", "hexdigest", "object_store", "object_store", "store_serialization_column", "serialization_column", "wiki?", "parse_repo_path", "parse", "group?", "group?", "human_name", "human_name", "full_title", "project_path", "project_icon", "simple_sanitize", "breadcrumb_list_item", "group_title", "avatar_url", "avatar_url", "avatar_url", "content_tag", "avatar_in_git", "avatar", "file_on_head", "tree", "blobs", "head_commit", "head_commit", "head_commit", "head_tree", "commit", "commit", "commit", "commit", "commit", "commit", "commit", "commit", "commit", "commit", "commit", "commit", "root_ref", "commit", "commit", "commit", "merge_request", "merge_request", "merge_request", "merge_request", "merge_request", "merge_commit_message", "log_info", "log_info", "merge_request", "merge_request", "merge_request", "log_info", "source", "merge_request_info", "to_reference", "to_reference", "to_reference", "to_reference", "to_reference", "to_reference", "to_reference", "to_reference", "to_reference", "to_reference", "to_reference", "to_reference", "to_reference", "reference_prefix", "reference_prefix", "reference_prefix", "reference_prefix", "reference_prefix", "reference_prefix", "reference_prefix", "reference_prefix", "reference_prefix", "reference_prefix", "reference_prefix", "cross_namespace_reference?", "cross_project_reference?", "milestone_format_reference", "group_milestone?", "iid", "group_milestone?", "label_format_reference", "reference_link_text", "reference_link_text", "reference_link_text", "reference_link_text", "reference_link_text", "short_id", "commit_reference", "merge_request_params", "merge_request_params", "issue", "ref", "issue", "issue", "ref", "issue", "branch_name", "issue", "issue", "branch_name", "ref", "ref", "ref", "default_branch", "default_branch", "to_branch_name", "confidential?", "get_issue", "issue_iid", "target_project", "source_branch", "external_issue_reference_pattern", "external_issue_tracker", "services", "cache_has_external_issue_tracker", "external_issue_trackers", "active", "active", "active", "active", "active", "active", "active", "issue_trackers", "active", "without_defaults", "active", "non_internal", "internal_attributes", "order", "left_join_users", "reference_pattern", "reference_pattern", "reference_pattern", "reference_pattern", "reference_pattern", "reference_pattern", "reference_pattern", "reference_pattern", "reference_pattern", "reference_pattern", "reference_pattern", "issues_enabled?", "reference_pattern", "reference_pattern", "reference_pattern", "reference_pattern", "union", "union", "find_union", "with_route", "ref_name", "target", "target", "issue?", "target", "target", "target", "note", "note", "note", "note?", "snippet", "snippet", "snippet", "notes", "notes", "notes", "for_commit_id", "snippets", "view_to_html_string", "load_snippets", "commit_id", "noteables_for_type", "issues", "issues", "issues", "issues", "of_milestones", "milestoneish_ids", "milestoneish_ids", "milestones", "milestones", "milestones", "milestones", "milestones", "milestones", "project?", "milestones?", "project?", "project?", "project?", "search_params", "search_params", "group_projects", "sort", "sort", "sort", "sort", "sort", "sort", "sort", "sort", "build_collection", "build_collection", "build_collection", "build_collection", "each", "each", "members", "present", "members", "fetch_members", "attributes", "html_fields", "markdown_fields", "html_field", "keys", "nav_link", "blocked?", "order_id_desc", "blocked?", "internal?", "status", "status", "status", "status", "status", "status", "status", "status", "status", "status", "status", "status", "status", "status", "status_sql", "failed_but_allowed", "exclude_ignored", "created", "running", "pending", "success", "canceled", "skipped", "manual", "pending", "success", "success", "success", "success", "success", "success", "success", "success", "delete_artifact!", "erase_artifacts!", "has_expiring_artifacts?", "remove_artifacts_file!", "remove_artifacts_metadata!", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "access_denied!", "request", "request", "destroy_confirmation_valid?", "destroy_confirmation_failure_message", "delete_async", "block", "redirect_back_or_admin_user", "update_user", "default_route", "redirect_back_or_default", "confirm_deletion_with_password?", "allow_password_authentication?", "allow_password_authentication_for_web?", "allow_password_authentication_for_git?", "ldap_user?", "async_execute", "async_execute", "async_execute", "async_execute", "async_execute", "async_execute", "hook", "hook", "hook", "hook", "data", "data", "data", "data", "content", "binary?", "binary?", "binary?", "supported_events", "supported_events", "supported_events", "supported_events", "supported_events", "supported_events", "supported_events", "supported_events", "supported_events", "supported_events", "supported_events", "supported_events", "supported_events", "supported_events", "supported_events", "supported_events", "supported_events", "supported_events", "supported_events", "supported_events", "supported_events", "supported_events", "supported_events", "icon", "fluid_layout", "wiki_page_errors", "slug", "last_commit_sha", "format", "format", "format", "find_page", "slug", "format", "last_commit_sha", "last_version", "versions", "page_title_and_dir", "commit_shas", "commit_shas", "merge_request_diff", "generate_slug", "random_suffix", "trigger", "trigger", "trigger", "trigger", "merge_params", "merge_params", "merge_async", "mergeable?", "todo_service", "pipeline_merge_requests", "merge_request_became_unmergeable", "create_unmergeable_todo", "create_todos", "attributes_for_todo", "merge!", "attributes_for_target", "merge_when_pipeline_succeeds_active?", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "update_todos_count_cache", "create", "create", "create", "create", "pending_todos", "create", "spammable", "access_levels", "access_levels", "access_levels", "verify_params!", "ce_style_access_level", "type", "type", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "after_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "handle_quick_actions_on_create", "create_issuable", "after_create", "before_create", "before_create", "before_create", "before_create", "after_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "after_create", "handle_quick_actions_on_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "handle_wip_event", "wipless_title", "wip_title", "cache_merge_request_closes_issues!", "update_merge_requests_head_pipeline", "new_merge_request", "new_merge_request", "new_issuable", "create_assignment_todo", "create_mention_todos", "filter_mentioned_users", "filter_directly_addressed_users", "directly_addressed_users", "filter_todo_users", "reject_users_without_access", "to_ability_name", "for_issue?", "for_merge_request?", "to_ability_name", "select_users", "for_personal_snippet?", "all_references", "author", "author", "author", "skip_project_check?", "extractors", "skip_project_check?", "skip_project_check?", "for_project_noteable?", "find_by_any_email", "by_any_email", "author?", "author_id?", "author_username?", "mentioned_users", "users", "represent", "represent", "represent", "represent", "represent", "represent", "represent", "represent", "represent", "paginated?", "paginated?", "paginator", "projects", "projects", "projects", "projects", "projects", "subgroups", "projects", "projects", "projects", "projects", "projects", "projects", "projects", "projects", "projects", "inside_path", "inside_path", "authorized_projects", "for_milestones", "projects?", "in_namespace", "current_user_related?", "klass", "item_project_ids", "klass", "item_project_ids", "with_feature_available_for_user", "with_project_feature", "with_feature_enabled", "with_feature_access_level", "quoted_access_level_column", "authorizations_for_projects", "access_level_attribute", "model_name", "model_name", "model_name", "model_name", "direct_child_projects", "projects_matching_filter", "order_by", "order_by", "order_id_asc", "order_created_desc", "order_created_asc", "order_updated_desc", "order_updated_asc", "order_name_asc", "order_name_desc", "order_name_asc", "order_name_desc", "hierarchy_for_parent", "direct_child_groups", "subgroups_matching_filter", "supports_nested_groups?", "with_selects_for_list", "supports_nested_groups?", "with_counts", "project_count_sql", "subgroup_count_sql", "member_count_sql", "count", "cache_key", "uncached_count", "cache_key", "cache_options", "cache_key", "cache_key", "cache_key_name", "cache_key_name", "cache_key_name", "cache_key_name", "raw?", "raw?", "relation_for_count", "relation_for_count", "relation_for_count", "relation_for_count", "merge_requests", "merge_requests", "merge_requests", "merge_requests", "merge_requests", "opened", "merge_requests", "merge_requests", "merge_requests", "merge_requests", "by_commit_sha", "by_commit_sha", "merge_request_path", "to_json", "tabs_json", "milestone_redirect_path", "sorted_merge_requests", "sort_by_attribute", "sort_by_attribute", "sort_by_attribute", "sort_by_attribute", "sort_by_attribute", "sort_by_attribute", "sort_by_attribute", "sort_by_attribute", "order_recent_sign_in", "order_oldest_sign_in", "order_recent_sign_in", "order_oldest_sign_in", "order_by_labels_priority", "highest_label_priority", "left_join_priorities", "order_due_date_asc", "order_due_date_desc", "order_upvotes_desc", "order_downvotes_desc", "order_milestone_due_desc", "order_milestone_due_asc", "order_due_date_and_labels_priority", "order_labels_priority", "project_foreign_key", "project_foreign_key", "left_joins_milestones", "order_votes_desc", "safe_title", "safe_title", "issuables_collection", "collection_type", "finder", "finder", "finder", "finder", "issuable_finder_for", "finder_type", "finder_type", "finder_type", "finder_type", "finder_type", "action_name", "action_name", "push?", "merged?", "closed?", "joined?", "left?", "destroyed?", "commented?", "created_project?", "push_action_name", "created_project_action_name", "closed?", "push?", "state", "external_import?", "import_url", "credentials", "credentials", "import_data", "gitlab_project_import?", "expire_content_cache", "has_importer?", "importer", "importer_class", "importer_class", "importer_class", "importer_class", "importer_class", "importer_class", "expire_tags_cache", "expire_branches_cache", "expire_statistics_caches", "expire_root_ref_cache", "expire_emptiness_caches", "expire_exists_cache", "new_ref?", "rm_ref?", "created?", "created?", "status_name", "preload_for_collection", "query", "query", "query", "query", "query", "public_only", "can_query?", "with_reactive_cache", "can_query?", "full_reactive_cache_key", "alive_reactive_cache_key", "within_reactive_cache_lifetime", "prometheus_client", "prometheus_client", "prometheus_client", "service_name", "service_port", "kube_client", "cluster", "cluster", "kubeclient", "kubeclient", "kubeclient", "cluster", "kubeclient", "cluster", "cluster", "build_kubeclient!", "build_kubeclient!", "build_kubeclient!", "kubeclient_ssl_options", "join_api_url", "kubeclient_ssl_options", "join_api_url", "join_api_url", "kubeclient_ssl_options", "actual_namespace", "kubeclient_auth_options", "actual_namespace", "kubeclient_auth_options", "default_namespace", "default_namespace", "search", "all_visible_descendant_groups", "search", "search", "search", "search", "search", "search", "search", "search", "search", "search", "search", "search", "search", "exists", "descendants", "find_by_path_or_name", "load_projects", "load_projects", "load_projects", "prepare_projects_for_rendering", "preload_max_member_access_for_collection", "visibility_level_icon", "remove_project_message", "storage_counter", "visibility_level_color", "with_statistics", "archived", "with_statistics", "non_archived", "sorted_by_activity", "non_archived", "join_project", "join_project", "join_project", "create_event", "create_event", "create_event", "create_event", "event_service", "event_service", "reopen_mr", "reopen", "merge_request_metrics_service", "reopen_mr", "reopen_resource_email", "build_recipients", "mailer", "notification_recipients", "notification_recipients", "build!", "filter!", "recipients", "build!", "build!", "filter!", "recipients", "build!", "add_participants", "add_mentions", "add_custom_notifications", "add_project_watchers", "add_subscribed_users", "add_participants", "add_mentions", "add_custom_notifications", "add_project_watchers", "add_subscribed_users", "subscribers", "add_recipients", "add_recipients", "make_recipient", "make_recipient", "acting_user", "custom_action", "acting_user", "custom_action", "acting_user", "custom_action", "subscriptions_available", "project_watchers", "project_watchers", "user_ids_notifiable_on", "select_project_members_ids", "select_group_members_ids", "user_ids_with_global_level_watch", "user_ids_notifiable_on", "select_project_members_ids", "select_group_members_ids", "user_ids_with_global_level_watch", "settings_with_global_level_of", "settings_with_global_level_of", "user_ids_with_global_level_custom", "user_ids_with_global_level_custom", "participants", "participants", "participants", "participants", "all_participants", "raw_participants", "users_that_can_read_project", "users_that_can_read_personal_snippet", "assignee", "add_labels_subscribers", "add_labels_subscribers", "labels", "labels", "labels", "labels", "labels", "labels", "labels", "as_json", "as_json", "as_json", "as_json", "enabled_keys", "available_project_keys", "available_public_keys", "are_public", "are_public", "project_deploy_keys", "in_projects", "in_projects", "in_projects", "in_projects", "recent", "recent", "recent", "recent", "deploy_keys", "board", "board", "board", "board", "board", "boards", "labels?", "filter_by_no_label?", "label_names", "label_names", "assignee_id?", "assignee_username?", "metrics", "metrics", "metrics", "metrics", "metrics", "metrics", "root", "root", "root", "root", "prometheus_adapter", "has_metrics?", "prometheus_adapter", "has_metrics?", "prometheus_adapter", "prometheus_adapter", "service_prometheus_adapter", "cluster_prometheus_adapter", "deployment_platform", "deployment_platform", "find_deployment_platform", "find_cluster_platform_kubernetes", "find_kubernetes_service_integration", "build_cluster_and_deployment_platform", "kubernetes_service_template", "cluster_attributes_from_service_template", "platform_kubernetes_attributes_from_service_template", "find_by_template", "deployment", "deployment", "environment", "environment", "environment", "persisted_environment", "expanded_environment_name", "has_environment?", "simple_variables", "scoped_variables", "runner", "variables", "yaml_variables", "user_variables", "secret_group_variables", "secret_project_variables", "predefined_variables", "predefined_variables", "job_variables", "predefined_variables", "user_variables", "predefined_variables", "predefined_variables", "predefined_variables", "deployment_variables", "predefined_variables", "predefined_variables", "predefined_variables", "variables", "to_h", "markdown_link", "markdown_name", "secure_url", "secure_url", "filename", "secret", "filename", "filename", "filename", "oid", "generate_secret", "image_or_video?", "image_or_video?", "video?", "image?", "video?", "extension_match?", "extension", "dangerous?", "kubeconfig", "kubeconfig", "instance_domain", "has_domain?", "full_path_slug", "container_registry_variables", "auto_devops_variables", "auto_devops_enabled?", "enabled?", "container_registry_url", "tag_list", "tag_path", "ci_yaml_file_path", "stage", "action?", "action?", "ref_slug", "legacy_variables", "licensed_features", "before_sha", "when", "build_attributes_from_config", "config_processor", "ci_yaml_file", "ci_yaml_from_repo", "implied_ci_yaml_file", "gitlab_ci_yml_for", "blob_data_at", "load_all_data!", "load_all_data!", "blob_at", "decorate", "decorate", "decorate", "to_action_id", "not_found", "legacy_stage", "statuses_count", "statuses", "secret_variables_for", "secret_variables_for", "unprotected", "unprotected", "protected_for?", "protected?", "protected?", "branch_exists?", "tag_exists?", "matching", "matching", "matches?", "exact_match?", "wildcard_match?", "wildcard?", "wildcard_regex", "empty_repo?", "default_branch_protected?", "ancestors", "persisted_variables", "persisted_environment_variables", "environment_url", "environment_url", "external_url", "external_link?", "pages_group_url", "pages", "pages_subdomain", "pages", "get_project_wiki_path", "container_class", "group_by_directory", "directory", "blank_container", "external_wiki", "cache_has_external_wiki", "external_wikis", "pages_config", "pages_config", "pages_https_only?", "pages_domains_config", "https?", "enabled_pages_domains", "repo_url", "http_url_to_repo", "http_url_to_repo", "environments", "environments", "default_environment", "find_or_initialize_service", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "find_or_initialize_services", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "reply_key", "reply_key", "find_service", "available_services_names", "build_from_template", "sha_to", "sha_start", "exclude_start?", "sha_from", "available?", "available?", "create_record_event", "create_merge_event", "merge_mr", "merge_mr", "close_resource_email", "close_mr", "close", "close", "close_mr", "commit_status_merge_requests", "merge_request_build_retried", "mark_pending_todos_as_done", "merge_requests_for", "projects_finder", "joined", "namespace_id", "represent_hierarchies", "hierarchy", "build_hierarchy", "represent_hierarchy", "expand_hierarchy_for_child", "ancestors_upto", "ancestors_upto", "itemized?", "itemize", "folder", "available", "stopped", "with_pagination", "with_pagination", "entity_class", "new_resource_email", "head_pipeline_for", "pipelines", "pipelines", "pipelines", "pipelines", "source_project", "source_branch_sha", "source_project", "source_branch_head", "source_branch_ref", "all_pipelines", "all_commit_shas", "all_commits", "closes_issues", "closes_issues", "closes_issues", "commits", "commits", "commits", "commits", "commits", "commits", "commits", "author_name", "commits_between", "load_commits", "from_hash", "to_hash", "to_hash", "diff", "diff", "diff", "apply_diff_view_cookie!", "highlight", "raw", "raw", "raw", "raw", "raw", "send_upload", "trace", "raw_send_params", "raw_redirect_params", "trace_artifact_file", "trace", "complete?", "complete?", "closed_items_count", "total_items_count", "total_issues_count", "memoize_per_user", "memoized_users", "values", "values", "count_issues_by_state", "values", "issues_visible_to_user", "issues_finder_params", "issues_finder_params", "issues_finder_params", "issues_finder_params", "chart_values_file", "content_values", "specification", "ensure_runner", "gitlab_url", "create_and_assign_runner", "closed_and_merged", "inspect", "inspect", "inspect", "inspect", "file_storage?", "proxy_download_enabled?", "file_storage?", "storage", "storage", "storage_for", "object_store_enabled?", "object_store_options", "send_artifacts_entry", "convert_line_endings", "sanitized_file_name", "file_name", "prepare_commits_for_rendering", "with_pipeline_status", "latest_status_per_commit", "set_status_for_ref", "committer", "resolve_discussions_with_issue", "user_agent_detail_service", "new_issue", "new_issue", "merge_request_to_resolve_discussions_of", "discussions_to_resolve", "discussions_to_be_resolved", "find_discussion", "find_discussion", "noteable_without_project?", "fresh", "fresh", "fresh", "resolvable_discussions", "discussions", "discussion_notes", "discussion_notes", "discussions", "resolvable", "discussions", "potentially_resolvable", "inc_relations_for_view", "non_diff_notes", "discussion_serializer", "prepare_notes_for_rendering", "issuable", "cross_reference_not_visible_for?", "issuable", "cross_reference?", "has_referenced_mentionables?", "cross_reference?", "cross_reference_note_prefix", "referenced_mentionables", "local_reference", "matches_cross_reference_regex?", "default_issues_tracker?", "force_cross_reference_regex_check?", "preload_max_access_for_authors", "preload_noteable_for_regular_notes", "preload_first_time_contribution_for_authors", "first_contribution?", "first_contribution?", "specialize_for_first_contribution!", "merged", "team", "max_member_access", "max_member_access_for_user_ids", "max_member_access_for_resource_ids", "max_member_access_for_resource_key", "move_to_end", "spam_check", "when_recaptcha_verified", "check", "check", "check", "create_wiki", "wiki_enabled?", "git_fsck", "has_pushes?", "with_push", "keyed_verification_code", "log_error", "log_error", "txt_records", "log_error", "check_for_spam?", "check_for_spam?", "check_for_spam?", "spam?", "akismet", "akismet", "check_for_spam?", "create_spam_log", "spam_title", "spam_description", "spammable_owner_id", "spammable_text", "spammable_owner", "title_changed?", "unhyphenize", "max_relative_position", "position_between", "parent_ids", "update_attributes", "process_title", "deep_title_squish", "merge_quick_actions_into_params!", "delete_conflicting_redirects", "conflicting_redirects", "matching_path_and_descendants", "repository_event", "reset_project_activity", "set_last_repository_updated_at", "track_user_interacted_projects", "set_last_repository_updated_at", "track", "cached_exists?", "recent_update?", "check_repository_absence!", "set_last_activity_at", "ensure_storage_path_exists", "ensure_storage_path_exists", "repository_storage_path", "repository_storage_path", "repository_storage", "repository_storages", "repository_with_same_path_already_exists?", "update_daemon", "sync_share_with_group_lock_with_parent", "save_git_content", "keep_around_commits", "keep_around_commits", "ensure_commit_shas", "save_diffs", "save_commits", "keep_around_commits", "start_commit_sha", "base_commit_sha", "head_commit_sha", "head_commit_sha", "keep_around", "kept_around?", "keep_around_ref_name", "ref_exists?", "start_commit", "start_commit", "merge_base_commit", "merge_base", "commits_count", "compare", "commits_count", "create_bulk", "safe_start_commit_sha", "target_branch_sha", "target_branch_head", "target_branch_ref", "diffs", "max_diff_options", "diffs", "diffs", "diffs", "diffs", "create_merge_request_diff_files", "diff_refs", "diff_refs", "diff_refs", "diff_refs", "diff_start_sha", "diff_base_sha", "branch_merge_base_commit", "diff_options", "environments_for", "diff_head_commit", "diffs_expanded?", "hide_whitespace?", "find_base_sha", "ensure_merge_request_diff", "create_merge_request_diff", "reload_merge_request_diff", "fetch_ref!", "ref_path", "ref_path", "ref_path", "fetch_source_branch!", "post_create_hook", "post_create_hook", "create_notification_setting", "send_invite", "send_request", "post_create_hook", "send_invite", "post_create_hook", "send_invite", "post_create_hook", "notification_service", "owner?", "notification_service", "notification_service", "notification_service", "new_project_member", "member_access_granted_email", "real_source_type", "notifiable?", "real_source_type", "notifiable?", "notifiable?", "notifiable?", "suitable_notification_level?", "unsubscribed?", "own_activity?", "has_access?", "read_ability", "notification_level", "custom_enabled?", "action_excluded?", "excluded_watcher_action?", "excluded_participating_action?", "notification_setting", "notification_setting", "event_enabled?", "find_notification_setting", "notification_settings_for", "global_notification_setting", "notifiable_options", "notifiable_options", "notifiable_options", "source_type", "membershipable", "humanize", "access_level", "access_level", "access_level", "max_member_access_for_user", "members_with_parents", "active_without_invites_and_requests", "self_and_ancestors", "non_request", "member", "member", "member_source", "subject", "subject", "find_by_invite_token", "invite_project_member", "member_invited_email", "new_group_member", "invite_group_member", "system_hook_service", "system_hook_service", "system_hook_service", "system_hook_service", "execute_hooks_for", "build_event_data", "full_path_was", "full_path_was", "build_event_name", "project_data", "project_member_data", "group_data", "group_member_data", "user_data", "human_access", "access_options", "visibility_levels", "new_access_request", "owners_and_masters", "deliver_access_request_email", "fallback_to_group_owners_masters?", "member_access_requested_email", "find_or_create_for", "update_two_factor_requirement", "update_two_factor_requirement", "two_factor_grace_period", "expanded_groups_requiring_two_factor_authentication", "all_expanded_groups", "groups", "all_groups", "all_groups", "groups", "groups", "authorized_groups", "ordered", "latest", "ordered", "visible_to_user", "visible_to_user", "groups_for_ancestors", "groups_for_descendants", "owned_groups", "include_public_groups?", "full_private_access?", "load_groups", "prepare_groups_for_rendering", "set_diff", "find_diff", "diff_for_line_code", "raw_diffs", "raw_diffs", "diff_file_hash", "raw_diffs", "raw_diffs", "load_diffs", "refresh_user_cache", "refresh_cache", "refresh_cache", "count_stored?", "global_count", "count_service", "global_count", "count_service", "global_count", "count_service", "project_ids", "project_ids", "project_ids", "project_ids", "generate_subkeys", "primary_keyid", "before_create_do_block", "before_create_do_block", "started_at", "finished_at", "failure_reason", "add_root_as_member", "create_ref", "invalidate_cache", "create_ref", "expire_etag_cache", "expire_etag_cache", "expire_etag_cache", "expire_etag_cache", "discussions_rendered_on_frontend?", "discussions_rendered_on_frontend?", "etag_key", "etag_cache_key", "awardable", "refresh_markdown_cache", "latest_cached_markdown_version", "ensure_metadata", "create_page", "todos_pending_count", "todos_done_count", "todos_done_count", "todos_pending_count", "ensure_callout", "feature_name", "recaptcha_check_with_fallback", "spammable_params", "snippet_params", "snippet_params", "move_temporary_files", "ensure_spam_config_loaded!", "spammable_path", "render_recaptcha?", "spammable_path", "spammable_path", "spammable_path", "log_audit_event", "log_user_activity", "log_audit_event", "log_user_activity", "authentication_method", "user_params", "user_params", "user_params", "user_params", "user_params", "user_params_ce", "login_counter", "counter", "counter", "counter", "counter_name", "counter_description", "counter_name", "counter_description", "counter_name", "counter_description", "counter_name", "counter_description", "counter_name", "counter_description", "for_authentication", "security_event", "resource_name", "resource_name", "project_params", "project_params", "project_params", "custom_import_params", "active_new_project_tab", "saved?", "project_params_attributes", "wiki_params", "build_page", "build_page", "build_page", "build_page", "build_page", "build_page", "build_page", "trigger_params", "mark_todo", "preview_markdown_path", "ref_names", "ref_names", "refs", "refs", "refs", "runners_path", "assign_to", "shared?", "create_repository", "create_repository", "forked?", "fork_network", "redirect_to_repository_settings", "protected_ref_params", "create_service_class", "protected_ref_params", "access_level_attributes", "service_namespace", "service_namespace", "create_params", "create_params", "create_params", "create_params", "create_params", "create_params", "create_params", "project_pipeline_path", "project_pipeline_path", "schedule_params", "pipeline_schedules_path", "milestone_params", "milestone_params", "define_new_vars", "set_pipeline_variables", "relevant", "service", "configure_params", "service", "service", "configure", "service", "command", "command", "bitmaps_enabled?", "git", "service_trigger_url", "render_json", "build_payload", "error_payload", "label_params", "label_params", "label_params", "messages", "label_params", "tags", "tags", "tags", "tags", "repo", "tags", "manifest", "client", "client", "client", "client", "client", "client", "client", "client_options", "access_token_key", "client_options", "host_key", "image", "image", "image", "issue_params", "issue_params", "issue_params", "issue_params", "issue_params_with_info_from_discussions", "whitelisted_issue_params", "title_from_merge_request", "description_for_discussions", "items_for_discussions", "item_for_discussion", "first_note", "first_note_to_resolve", "resolvable?", "resolvable?", "potentially_resolvable?", "supports_resolvable_notes?", "base_class_name", "move_between_lists?", "issue_state", "add_label_ids", "remove_label_ids", "move_between_ids", "group_board?", "on_group_boards", "on_project_boards", "movable?", "moving_from_list", "moving_to_list", "with_lists_and_board", "movable", "issue_params_attributes", "import_schedule", "import?", "bare_repository_import?", "fail", "mark_import_as_failed", "hook_params", "hook_params", "group_link_create_params", "continue_params", "import_in_progress?", "import_started?", "import_scheduled?", "environment_params", "token_in_session", "jobs", "jobs", "jobs", "jobs", "jobs", "yaml_processor_options", "validation_message", "validation_message", "blob", "prepare!", "prepare!", "blob", "prepare!", "prepare!", "blob", "diff_file", "diff_file", "diff_file", "project_repository", "project_tree_path", "url_to_autodeploy_setup", "autodeploy_flash_notice", "new_issue_branch", "create_note", "create_note", "create_note", "create_note", "metadata?", "change_status", "gfm_reference", "link_to_autodeploy_doc", "truncate", "truncate_team", "create_commit", "user_access", "update_flash_notice", "final_success_path", "branch_name_or_ref", "next_branch", "fork_of", "find_fork_of", "find_forks_in", "new_merge_request_path", "existing_merge_request_path", "merge_request_exists?", "create_merge_request?", "different_project?", "build_qr_code", "setup_u2f_registration", "execute!", "execute!", "can_see_access_requests?", "u2f_app_id", "push", "cache_last_push_event", "user_cache_key", "project_cache_key", "set_key", "account_string", "issuer_host", "host", "set_index_vars", "set_index_vars", "personal_access_token_params", "set_index_vars", "redis_store!", "redis_shared_state_key", "redis_getdel", "oauth_authorized_tokens", "key_params", "key_params", "gpg_key_params", "email_params", "delete_chat_name_token", "chat_name_params", "chat_names", "chat_name_params", "chat_name_token", "chat_name_token", "create_application_params", "application_params", "resource", "can_read?", "render_response", "notification_setting_params", "resource", "sign_up_params", "file_is_valid?", "find_or_create_namespace", "access_params", "access_params", "extra_project_attrs", "user_map", "user_map", "group_params", "group_params", "custom_icon", "visibility_level_description", "restricted_visibility_level_description", "disallowed_visibility_level_description", "visibility_level_label", "restricted_visibility_levels", "disallowed_visibility_level?", "visibility_level_allowed?", "visibility_level_allowed?", "visibility_level_allowed_as_fork?", "visibility_level_allowed_by_group?", "visibility_level_allowed_by_parent?", "visibility_level_allowed_by_projects?", "visibility_level_allowed_by_sub_groups?", "children", "disallowed_project_visibility_level_description", "disallowed_group_visibility_level_description", "visibility_level_errors_for_group", "project_visibility_level_description", "group_visibility_level_description", "snippet_visibility_level_description", "group_params_attributes", "group_params_ce", "milestone_path", "milestone_path", "project_milestone?", "project_milestone?", "legacy_group_milestone?", "legacy_group_milestone?", "represent_appearance", "uploader_class", "uploader_class", "uploader_class", "uploader_class", "uploader_class", "uploader_class", "uploader_class", "note_json", "note_params", "note_project", "note_params", "note_html", "diff_discussion_html", "discussion_html", "note_serializer", "use_note_serializer?", "diff_discussion?", "discussion_id", "diff_discussion?", "individual_note?", "individual_note?", "discussion_id", "to_discussion", "discussion_class", "override_discussion_id", "discussion_class", "discussion_class", "discussion_class", "override_discussion_id", "build_discussion_id", "build_discussion_id", "base_discussion_id", "on_image?", "on_image?", "on_image?", "members_page_url", "serialize_as_json", "list_params", "serialize_as_json", "serialize_as_json", "serialize_as_json", "serialize_as_json", "board_parent", "impersonation_token_params", "identity_params", "can_change_group_visibility_level?", "lfs_enabled?", "add_owner", "lfs_enabled?", "lfs_enabled?", "add_user", "add_user", "add_user", "retrieve_member", "retrieve_access_level", "can_update_member?", "request?", "can_update_member?", "created_by", "retrieve_user", "broadcast_message_params", "appearance_params", "allowed_appearance_params", "report_params", "notify", "notify", "notify", "notify", "notify", "notify", "verification_enabled?", "activity", "activity", "activity", "project_name", "pretext", "attachments", "activity", "attachments", "activity", "attachments", "activity", "attachments", "activity", "pretext", "attachments", "activity", "attachments", "activity", "attachments", "activity", "project_name", "project_name", "user_avatar", "user_avatar_without_link", "tag", "tag", "user_avatar_url_for", "placeholder_image", "tag", "avatar_icon_for_email", "avatar_icon_for_user", "gravatar_icon", "default_avatar", "find_tag", "markdown", "description_message", "description_message", "description_message", "markdown", "attachment_color", "attachment_color", "attachment_color", "issue_url", "issue_title", "issue_url", "issue_url", "markdown_unsafe", "prepare_for_rendering", "new_branch?", "removed_branch?", "compare_link", "ref_type", "compare_url", "compare_url", "truncate_sha", "truncate_sha", "truncate_sha", "commit_messages", "commit_message_attachments", "compose_commit_message", "duration", "pretty_duration", "humanized_status", "branch_link", "pipeline_link", "branch_link", "humanized_status", "branch_url", "branch_url", "pipeline_url", "pipeline_url", "calculate_duration", "note_url", "link", "formatted_title", "format_title", "format_title", "format_title", "render_line", "merge_request_link", "merge_request_url", "merge_request_title", "merge_request_url", "issue_link", "opened_issue?", "pager_json", "load_events", "load_events", "load_events", "load_events", "load_events", "event_filter", "event_filter_visible", "comments_visible?", "spinner", "rss_url_options", "feature_available?", "feature_available?", "guest?", "get_permission", "member?", "member?", "active_when", "fallback", "fallback", "admins", "deliverable?", "check_if_can_be_merged", "check_if_can_be_merged", "mergeable_state?", "should_be_rebased?", "ff_merge_possible?", "ff_merge_must_be_possible?", "ancestor?", "work_in_progress?", "open?", "work_in_progress?", "mergeable_discussions_state?", "broken?", "mergeable_ci_state?", "branch_missing?", "has_no_commits?", "has_commits?", "source_branch_exists?", "target_branch_exists?", "source_branch_exists?", "target_branch_exists?", "discussions_to_be_resolved?", "discussions_resolvable?", "discussions_resolved?", "merge_params_ee", "merge_params_attributes", "valid_token?", "valid_token?", "valid_token?", "valid_token?", "find_chat_user", "authorize_chat_name_url", "health_check_access_token", "only_for?", "destroy_service_class", "schedule", "destroy_all", "destroy_all", "remove_pages", "rename_project", "todos_counts", "mark_todos_as_done", "update_todos_state", "milestone", "milestone", "milestone", "milestone", "milestone?", "find_labels", "find_labels", "extract_references", "references", "discussion", "discussion", "part_of_discussion?", "disable_two_factor!", "revoke", "revoke", "revoke", "revoke", "revoke", "with_key_and_subkeys", "revoke!", "revoke!", "mark_todos_as_done_by_ids", "todos_by_ids", "editable?", "editable?", "editable?", "prometheus_installed?", "template?", "template?", "human_class_name", "destroyable", "remove_user", "remove_user", "templates", "set_user", "impersonator", "set_user", "set_user", "deploy_key", "deploy_key", "all_state_names", "online?", "contact_time_deadline", "commit_statuses", "represent_status", "represent_status", "represent_status", "has_ci_cd_only_params?", "import_github_title", "active_nav_link?", "current_controller?", "current_action?", "current_path?", "render_events", "cycle_analytics", "events_params", "issues_finder", "merge_request_params_attributes", "merge_request?", "ff_merge", "lazy", "lazy", "batch", "commits_by", "for", "render_lfs_not_found", "objects", "download_request?", "upload_request?", "download_request?", "download_request?", "upload_request?", "download_objects!", "upload_objects!", "download_request?", "upload_request?", "download_request?", "upload_request?", "existing_oids", "upload_actions", "all_lfs_objects", "lfs_storage_project", "fork_source", "download_actions", "upload_pack?", "git_command", "blobs_at", "avatar_path", "gitlab_config", "gitlab_config", "local_url", "dynamic_segment", "dynamic_segment", "dynamic_segment", "dynamic_segment", "dynamic_segment", "dynamic_segment", "dynamic_segment", "add_to_breadcrumb_dropdown", "group_title_link", "group_icon", "group_icon_url", "find_by_full_path", "find_by_full_path", "for_user", "where_full_path_in", "sprite_icon", "sprite_icon_path", "project_identicon", "newest_first", "sort_value_recently_updated", "latest_successful_for_refs", "subject_snippets_path", "are_internal", "are_private", "public_and_internal", "present_members", "sort_value_name", "personal?", "milestones_filter_path", "milestone_counts", "milestone_class_for_state", "for_projects", "for_projects", "new_issuable_address", "merge_request_source_project_for_project", "new_issuable_address", "prioritized", "unprioritized", "finished", "project_issues", "safe_params", "within_folders", "represent_concise", "create_mr_button?", "create_mr_path", "dropdown_content", "dropdown_loading", "fetch_branches_by_mode", "diverging_commit_counts", "respond_with_boards", "respond_with", "incoming_email_token_enabled?", "clipboard_button", "page_title", "scopes", "rss_token", "with_subkeys", "fingerprint", "emails_with_verified_status", "fingerprint", "user_infos", "verified_email?", "confirmed", "primary_email_verified?", "temp_oauth_email?", "metrics_service", "metrics_text", "prometheus_metrics_text", "health_metrics_text", "formatter", "multiprocess_metrics_path", "koding_project_url", "support_url", "markdown_field", "version_status_badge", "banzai_render_context", "banzai_render_context", "for_display", "for_display", "for_display", "banzai_render_context", "markdown_engine", "promo_url", "promo_host", "states_count", "group_milestones_states_count", "legacy_group_milestone_states_count", "count_by_state", "count_by_state", "dropdown_toggle", "filter_group_project_member_path", "users_select_tag", "member_sort_options_hash", "non_invite", "access_level_roles", "access_level_roles", "access_level_roles", "sort_title_access_level_asc", "sort_title_access_level_desc", "sort_title_last_joined", "sort_title_name_asc", "sort_title_name_desc", "sort_title_oldest_joined", "sort_title_oldest_signin", "sort_title_recently_signin", "sort_value_access_level_asc", "sort_value_access_level_desc", "sort_value_last_joined", "sort_value_name_desc", "sort_value_oldest_signin", "sort_value_oldest_joined", "sort_value_recently_signin", "users_select_data_attributes", "setup_children", "expand_hierarchy", "shared_projects", "filter_projects_path", "projects_sort_options_hash", "sort_value_latest_activity", "can_create_project?", "projects_limit_left", "personal_projects_count", "sort_title_largest_repo", "sort_title_latest_activity", "sort_title_name", "sort_title_oldest_activity", "sort_title_oldest_created", "sort_title_recently_created", "sort_value_largest_repo", "sort_value_oldest_activity", "sort_value_oldest_created", "sort_value_recently_created", "request_path_with_options", "filter_groups_path", "groups_sort_options_hash", "can_create_group?", "can_create_group?", "subgroup?", "has_parent?", "sort_title_oldest_updated", "sort_title_recently_updated", "sort_value_oldest_updated", "redirect_out_of_range", "redirect_out_of_range", "todo_params", "current_page", "show_projects?", "any_projects?", "render_group_tree", "notes_finder", "finder_params", "finder_params", "last_fetched_at", "make_sure_position_is_set", "sort_options_hash", "blocked", "external", "without_projects", "with_two_factor", "without_two_factor", "filter", "search_with_secondary_emails", "sort_title_created_date", "sort_title_downvotes", "sort_title_due_date", "sort_title_due_date_later", "sort_title_due_date_soon", "sort_title_label_priority", "sort_title_largest_group", "sort_title_milestone", "sort_title_milestone_later", "sort_title_milestone_soon", "sort_title_popularity", "sort_title_priority", "sort_title_upvotes", "sort_value_created_date", "sort_value_downvotes", "sort_value_due_date", "sort_value_due_date_later", "sort_value_due_date_soon", "sort_value_label_priority", "sort_value_largest_group", "sort_value_milestone", "sort_value_milestone_later", "sort_value_milestone_soon", "sort_value_popularity", "sort_value_priority", "sort_value_upvotes", "services_templates", "activated?", "online", "dropdown_title", "dropdown_filter", "kind", "admin_groups_sort_options_hash", "boolean_to_icon", "projects_with_write_access", "with_write_access", "without_deleted", "usage_ping_enabled", "usage_ping_can_be_configured?", "broadcast_message", "broadcast_message_status", "ended?", "broadcast_message_style", "render_broadcast_message", "color", "enforce_namespace_to_lower_case", "enforce_namespace_to_lower_case", "get_channels", "map_recipients", "format_channel", "consider_uri", "set_default_values", "set_default_values", "set_default_values", "default_message", "gl_repository", "create_repo!", "raw_size", "stored_externally?", "external_size", "external_storage_error?", "external_storage", "external_storage", "ensure_cache_setup", "diff_line", "diff_line", "diff_line", "find_noteable_diff", "supported?", "supported?", "has_complete_diff_refs?", "started?", "started?", "raise_error", "raise_error", "raise_error", "find_routable!", "handle_not_found_or_authorized", "routable_authorized?", "ensure_canonical_path", "build_canonical_path", "build_canonical_path", "build_canonical_path", "build_canonical_path", "build_canonical_path", "route_not_found", "authenticate_user!", "authenticate_user!", "allow_signup?", "of_projects", "of_projects", "of_projects", "build_from_id", "build_from_ref", "latest_successful_builds_for", "with_artifacts_archive", "latest_successful_for", "archive", "archive", "archive!", "git_not_found!", "render_show", "render_show", "define_protected_refs", "define_deploy_token", "expand_deploy_tokens_section?", "expires_soon?", "branches", "load_gon_index", "branches", "access_levels_options", "protectable_tags_for_dropdown", "protectable_branches_for_dropdown", "hash", "hash", "protectable_ref_names", "non_wildcard_protected_ref_names", "protections", "levels_for_dropdown", "branch_names_contains", "tag_names_contains", "job_from_id", "job_from_ref", "new_branch_message", "removed_branch_message", "push_message", "merge_request_message", "entry", "artifacts_metadata_entry", "artifacts_metadata", "use_file", "with_exclusive_lease", "unsafe_use_file", "cancel", "cancel", "cancel", "exclusive_lease_key", "cancel_merge_when_pipeline_succeeds", "reset_merge_when_pipeline_succeeds", "reset_merge_when_pipeline_succeeds", "cancel_merge_when_pipeline_succeeds", "merge_requests_for_source_branch", "merge_when_pipeline_succeeds", "serialize_widget", "can_cancel_merge_when_pipeline_succeeds?", "can_be_merged_by?", "serializer", "serializer", "serializer", "cancel_running", "project_pipelines_path", "respond_422", "build_path", "cancelable?", "cancelable?", "cancelable?", "cancelable?", "project_job_path", "store_dir", "store_dir", "store_dir", "store_dir", "store_dir", "store_dir", "store_dirs", "store_dirs", "store_dirs", "store_dirs", "identifier", "identifier", "identifier", "identifier", "render_blob_json", "conditionally_expand_blob", "copy_file_path_button", "copy_blob_source_button", "open_raw_blob_button", "path_breadcrumbs", "simple_viewer", "rich_viewer", "mode", "mode", "rich_viewer_class", "viewer_class_from", "can_render?", "can_render?", "can_render_blob?", "file_type", "simple_viewer_class", "raw_binary?", "blob_raw_path", "blob_raw_url", "rendered_as_text?", "render_error", "render_error", "render_error", "render_error", "render_error", "render_error", "render_error", "render_error", "render_error", "render_error", "render_error", "too_large?", "too_large?", "has_home_page?", "license", "license", "license_key", "license_short_name", "collapsed?", "collapsed?", "collapsed?", "collapsed?", "resolved?", "resolved?", "expanded?", "expanded?", "expand!", "blob_json", "auxiliary_viewer", "auxiliary_viewer_class", "find_model", "find_model", "find_model", "find_model", "upload_model_class", "upload_model_class", "upload_model_class", "schedule_background_upload?", "background_upload_enabled?", "background_upload", "background_upload", "revert", "revert", "temp_file_uploader", "revert", "temp_file_path", "file_path", "retrieve_from_store!", "retrieve_from_store!", "current_upload_satisfies?", "current_upload_satisfies?", "sti_name", "create_new_branch?", "successful_change_path", "failed_change_path", "assign_change_commit_vars", "revert_branch_name", "change_type_title", "merged_merge_request?", "merged_merge_request", "merged_merge_request_no_cache", "merge_commit?", "parents", "parents", "referenced_merge_request_url", "render_conflict_response", "render_issue_json", "can_move?", "can_move?", "moved?", "upload_mount", "uploader_mounted?", "build_uploader_from_upload", "build_uploader_from_params", "build_uploader", "build_uploader", "build_uploader", "build_uploader", "build_uploader", "mount_point", "model_valid?", "model_valid?", "upload_paths", "execute_services", "code", "code", "parsed_url", "make_request", "make_request_with_auth", "log_execution", "build_headers", "format_response_headers", "safe_response_body", "body", "verify_domain!", "unverify_domain!", "disable_domain!", "dns_record_present?", "verification_domain", "open", "cached_size", "verified?", "verified?", "unverified?", "validate", "include_any_scope?", "read_only_attributes", "notify_success", "notify_success", "notify_new_user", "new_user", "new_user_email", "execute_without_lease", "update_authorizations", "fresh_access_levels_per_project", "current_authorizations_per_project", "current_authorizations", "fresh_authorizations", "insert_authorizations", "remove_project_authorizations", "migrate_records_in_transaction", "ghost", "migrate_records", "migrate_issues", "migrate_merge_requests", "migrate_notes", "migrate_abuse_reports", "migrate_award_emojis", "unique_internal", "create_unique_internal", "string", "find_by_username", "iwhere", "base_string", "increment_counter!", "prepare_for_destroy", "legacy_storage?", "solo_owned_groups", "run_callbacks", "active_external_issue_tracker?", "active_external_wiki?", "issue_tracker?", "category", "owners", "owners", "old_repository_storage_paths", "repository_storage_paths", "all_projects", "all_projects", "all_projects", "contributed_projects", "contributed_projects", "contributions", "generate_reset_token", "recently_sent_password_reset?", "generate", "generate", "generate", "increment_and_save!", "lookup", "create_record", "maximum_iid", "usage_value", "can_create_user?", "build_user_params", "admin_create_params", "signup_params", "skip_user_confirmation_email_from_setting", "record_activity", "record", "bulk_perform_and_wait", "bulk_perform_async", "bulk_perform_and_wait", "bulk_perform_inline", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "calculate_checksum!", "calculate_checksum!", "calculate_checksum!", "absolute_path", "checksummable?", "absolute_path", "absolute_path", "absolute_path", "checksummable?", "absolute_path", "checksummable?", "exist?", "local?", "exist?", "local?", "exist?", "local?", "relative_path?", "relative_path?", "relative_path?", "cast_data", "latest?", "latest?", "latest?", "latest?", "latest?", "log_error_message_for", "latest_sha", "cleanup", "cleanup", "historical?", "refresh!", "refresh!", "apply_current_state!", "stuck_merge_requests", "mark_projects_without_jid_as_failed!", "mark_projects_with_jid_as_failed!", "enqueued_projects_with_jid", "error_message", "enqueued_projects", "enqueued_projects_without_jid", "try_obtain_lease", "try_obtain_lease", "try_obtain_lease", "try_obtain_lease", "try_obtain_lease", "try_obtain_lease", "remove_lease", "lease_key", "lease_key", "migrate_to_hashed_storage!", "build_relation", "repo_reference_count", "wiki_reference_count", "reference_counter", "update_status", "update_status", "skip", "run", "drop", "two_factor_grace_period_expired?", "latest_builds_status", "run_pipeline_schedule", "after_import", "after_import", "async?", "start_import", "fail_import", "start", "refresh_markdown_cache!", "after_create_default_branch", "remove_import_jid", "change_head", "reload_default_branch", "before_change_head", "after_change_head", "copy_gitattributes", "expire_branch_cache", "expire", "fork_repository", "start_fork", "current_settings", "destroy_unreferenced", "expired", "propagate", "try_obtain_lease_for", "try_obtain_lease_for", "try_obtain_lease_for", "propagate_projects_with_template", "bulk_create_from_template", "project_ids_batch", "bulk_insert_services", "service_hash", "lease_for", "lease_for", "cancel_lease_for", "refresh_method_caches", "update_statistics", "process_commit_message", "update_issue_metrics", "build_commit", "commit_exists_in_upstream?", "create_cross_references!", "close_issues", "close_issues", "updatable_by_user", "close_issue", "close_issue", "close_issue", "close_issue", "close_issue", "close_issue", "jira_tracker?", "issues_tracker", "issues_tracker", "default_issue_tracker", "transition_issue", "add_issue_solved_comment", "has_resolution?", "build_entity_url", "jira_request", "client_url", "send_message", "build_remote_link_props", "find_remote_link", "assignee_or_author?", "assignee_or_author?", "projects_with_reporter_access_limited_to", "cross_reference_exists?", "cross_reference", "cross_reference_exists?", "system", "notes_for_mentioner", "cross_reference_note_content", "create_cross_reference_note", "cross_reference_disallowed?", "jira_tracker_active?", "can_cross_reference?", "add_comment", "resource_url", "noteable_name", "comment_exists?", "process_project_changes", "process_wiki_changes", "log", "after_project_changes_hooks", "deactivate!", "schedule_next_run!", "pipeline_finished", "notifiable_users", "notifiable_users", "update_metrics_for_active_pipeline", "update_metrics_for_succeeded_pipeline", "needs_verification", "migrate!", "unsafe_migrate!", "persist_object_store!", "store!", "direct_upload_enabled?", "persist_object_store?", "report!", "sanity_check!", "args_check!", "migrate", "build_uploaders", "failures", "header", "failures", "pipeline_path", "failed", "can_create_notification?", "new_note", "new_note", "handle_note", "can_create_todo?", "for_snippet?", "for_snippet?", "build_new_note_recipients", "open_mr", "objects_found?", "set_issuable", "issuable_class", "issuable_class", "open_issue", "unlink_fork", "from_project", "due_tomorrow", "issue_due", "close_connection", "refresh_import_jid_expiration", "find_project", "find_project", "perform_in_the_future", "find_project", "import_started", "wait_for_jobs", "path_to_repo", "renew_lease", "cancel_lease", "get_lease_uuid", "gitaly_call", "flush_ref_caches", "gitaly_migrate", "after_create_branch", "commit_pipelines_path", "new_merge_request_pipelines_path", "each_pipelines_merge_request_path", "all_merge_requests", "with_expired_artifacts", "pending_delete", "send_email", "repository_push_email", "sender", "add_project_headers", "send_from_committer_email?", "default_sender_address", "can_send_from_user_email?", "display_name", "short_sha", "short_sha", "short_sha", "short_sha", "allowed_email_domains", "handle_failure", "rejection", "message_id", "signature", "gpg_commit", "try_import", "try_import", "import", "import", "import", "import", "import", "import", "import", "import", "import", "report_import_time", "histogram", "representation_class", "representation_class", "representation_class", "representation_class", "representation_class", "invite?", "notify_waiter", "find_application", "get_session_token", "get_billing_state", "set_billing_state", "update_billing_change_counter", "billing_changed_counter", "state_transition", "redis_shared_state_key_for", "get_redis_session_key", "parse_trace_sections!", "create_deployment", "update_coverage", "coverage_regex", "perform_and_ttl", "always_perform?", "refresh_authorized_projects", "max_attachment_size", "max_attachment_size", "deny_visibility_level", "filter_spam_check_params", "rm_tag", "build_push_data", "build_push_data", "build_push_data", "build_push_data", "before_remove_tag", "after_remove_tag", "add_tag", "hooks_for", "store_metrics", "increment!", "increment_pushes_since_gc", "pushes_since_gc_redis_shared_state_key", "clean_up_old_archives", "clean_up_empty_directories", "ldap_hard_blocked?", "extract_commands", "extractor", "extract_updates", "commit_title", "commit_count", "commit_title", "commit_from_id", "commit_to_id", "commit_count", "trimmed_ref", "commit_from_id", "delete_redundant_access_levels", "authorized?", "protected_branch", "rename_repo", "rename_repo", "rename_repo", "valid_visibility_level_change?", "renaming_project_with_container_registry_tags?", "changing_default_branch?", "enabling_wiki?", "ensure_wiki_exists", "update_pages_config", "changing_pages_https_only?", "has_container_registry_tags?", "has_root_container_repository_tags?", "has_tags?", "has_tags?", "has_tags?", "build_root_repository", "mv_repository", "expire_caches_before_rename", "after_rename_repo", "rename_repo_notify!", "expires_full_path_cache", "send_move_instructions", "project_was_moved", "project_was_moved_email", "write_repository_config", "write_repository_config", "before_delete", "expire_all_method_caches", "artifacts?", "create_status", "extract_archive!", "deploy_page!", "tmp_path", "register_attempt", "enqueue!", "pages_deployments_total_counter", "pages_path", "pages_path", "pages_path", "public_path", "previous_public_path", "artifacts", "extract_zip_archive!", "artifacts", "artifacts_file", "artifacts_file", "total_size", "artifacts_metadata?", "max_size", "artifacts_expired?", "update_file", "reload_daemon", "pages_config_file", "update_file", "remove", "pages_update_file", "multi_action", "refresh_forks_count", "refresh_forks_count", "refresh_forks_count", "transfer", "transfer", "transfer", "invalidate_personal_projects_count", "transfer", "allowed_transfer?", "attempt_transfer_transaction", "update_namespace_and_visibility", "refresh_permissions", "rollback_side_effects", "execute_system_hooks", "move_project_folders", "move_project_uploads", "move_repo_folder", "rollback_folder_move", "rollback_folder_move", "move_repository", "user_ids_for_project_authorizations", "user_ids_for_project_authorizations", "noteable_owner", "participants_in_noteable", "sorted", "all_members", "move_before_destroy_relationships", "destroy_old_project", "attempt_restore_repositories", "attempt_repositories_rollback", "repo_path", "wiki_path", "removal_path", "flush_caches", "delete_cache", "add_source_project_to_fork_network", "move_project_members", "remove_remaining_members", "prepare_relation", "non_existent_members", "move_group_links", "remove_remaining_project_group_links", "non_existent_group_links", "group_links_in_target_project", "move_project_authorizations", "remove_remaining_authorizations", "non_existent_authorization", "move_notification_settings", "remove_remaining_notification_settings", "non_existent_notifications", "users_in_target_project", "move_lfs_objects_projects", "remove_remaining_lfs_objects_project", "non_existent_lfs_objects_projects", "move_forked_project_links", "move_fork_network_members", "update_root_project", "move_deploy_keys_projects", "remove_remaining_deploy_keys_projects", "non_existent_deploy_keys_projects", "refresh_project_authorizations", "refresh_project_authorizations", "refresh_members_authorized_projects", "add_repository_to_project", "repository_exists?", "repository_exists?", "validate!", "validate!", "validate!", "validate!", "import_repository", "unknown_url?", "ensure_repository", "ensure_repository", "fetch_as_mirror", "fetch_remote", "file_has_changed?", "validate_file_status!", "different_branch?", "validate_permissions!", "validate_on_branch!", "validate_branch_existance!", "validate_new_branch_name!", "import_export_shared", "execute_after_export_action", "save_all!", "save_services", "cleanup_and_notify_error!", "cleanup_and_notify_error", "export_path", "notify_error", "project_not_exported", "project_was_not_exported_email", "version_saver", "avatar_saver", "project_tree_saver", "uploads_saver", "repo_saver", "wiki_repo_saver", "lfs_saver", "execute_gitlab_shell_gc", "pushes_since_gc", "reset_pushes_since_gc", "pushes_since_gc", "task", "gc_period", "full_repack_period", "move_folder!", "absolute_base_dir", "import_upload_path", "tmp_filename", "overwrite_project?", "project_with_same_full_path?", "current_namespace", "link_existing_project", "fork_new_project", "link_fork_network", "target_namespace", "allowed_visibility_level", "accessible_keys", "accessible_deploy_keys", "valid_url?", "valid_url?", "valid_url?", "default_options", "valid_uri?", "valid_protocol?", "http?", "valid_domain?", "attempt_rollback", "attempt_destroy_transaction", "trash_repositories!", "remove_legacy_registry_tags", "delete_tags!", "remove_repository", "deny_namespace", "allowed_fork?", "allowed_namespace?", "after_create_actions", "save_project_and_import_data", "set_project_name_from_path", "create_or_update_import_data", "create_labels", "create_services_from_active_templates", "create_project", "setup_authorizations", "skip_wiki?", "add_master", "add_master", "explain_quick_actions", "find_user_references", "find_commands_target", "commands_target_type", "explain", "explain_commands", "commands_target_id", "update_note", "noteable_update_service", "leave_note", "execute_note_hooks", "hook_data", "hook_data", "hook_data", "to_hook_data", "hook_attrs", "total_time_spent", "hook_attrs", "hook_attrs", "hook_attrs", "hook_attrs", "hook_attrs", "hook_attrs", "hook_attrs", "hook_attrs", "hook_attrs", "ssh_url_to_repo", "ssh_url_to_repo", "url_to_repo", "url_to_repo", "repo_changes", "raw_deltas", "new_file", "lfs_file?", "create_lfs_object!", "link_lfs_object!", "cached_attributes", "cached_attributes", "cache_attribute_key", "destroy_target", "reply_attributes", "reply_attributes", "reply_attributes", "reply_attributes", "reply_attributes", "reopen_milestone", "move_children_to_group_milestone", "check_project_milestone!", "clone_project_milestone", "destroy_old_milestones", "milestone_ids_for_merge", "group_project_ids", "update_children", "for_milestone_id", "destroy_milestone", "open_milestone", "close_milestone", "has_changes?", "create_assignee_note", "create_assignee_note", "create_branch_change_note", "new_mentions_in_merge_request", "reassigned_merge_request", "relabeled_merge_request", "update_merge_request", "reassigned_merge_request", "update_issuable", "toggling_tasks?", "updated_tasks", "tasks?", "tasks", "summary", "get_updated_tasks", "get_tasks", "relabeled_resource_email", "reassign_resource_email", "previous_record", "new_mentions_in_resource_email", "change_branch", "change_assignee", "change_issue_assignees", "closed_without_fork?", "merge_from_quick_action", "mergeable_with_quick_action?", "source_project_missing?", "for_fork?", "in_fork_network_of?", "forked_from?", "resolve_all_discussions", "resolve_all_discussions", "resolved_all_discussions_email", "setup_merge_request_mail", "merge_request_thread_options", "mail_answer_thread", "mail_thread", "add_unsubscription_headers_and_links", "unsubscribable?", "recipient", "reload_diff", "update_diff_discussion_positions", "new_diff_notes", "close_upon_missing_source_branch_ref", "post_merge_manually_merged", "reload_merge_requests", "mark_pending_todos_done", "comment_mr_branch_presence_changed", "notify_about_push", "mark_mr_as_wip_from_commits", "execute_mr_web_hooks", "cache_merge_requests_closing_issues", "branch_added?", "branch_removed?", "add_merge_request_wip_from_commit", "push_to_merge_request", "add_commits", "commits_list", "diff_comparison_url", "new_commit_summary", "existing_commit_summary", "target_project_namespace", "change_branch_presence", "merge_request_push", "by_source_or_target_branch", "force_push?", "filter_merge_requests", "rebase", "rebase", "rebase", "rebase_in_progress?", "merge_merge_request", "in_locked_state", "error_check!", "after_merge", "clean_merge_jid", "handle_merge_error", "branch_deletion_user", "delete_source_branch?", "can_remove_source_branch?", "force_remove_source_branch?", "root_ref?", "opened_merge_requests_from_source_branches", "get_branches", "url_for_new_merge_request", "url_for_existing_merge_request", "merge_requests_enabled?", "from_source_branches", "set_projects!", "resolve", "resolve", "render_json_with_notes_serializer", "serialize_notes?", "resolve!", "resolve!", "resolve_without_save", "has_vue_discussions_cookie?", "render_discussion", "render_json_with_discussions_serializer", "render_json_with_html", "close_merge_request", "find_source_project", "find_target_project", "find_target_branch", "branches_valid?", "compare_branches", "assign_title_and_description", "append_closes_description", "assign_title_and_description_from_single_commit", "assign_title_from_issue", "validate_branches", "source_branch_specified?", "target_branch_specified?", "validate_branches", "add_error", "branches_present?", "same_source_and_target?", "default_merge_request_target", "can_allow_maintainer_to_push?", "maintainer_push_possible?", "assignable_issues", "merge_request_build_failed", "create_build_failed_todo", "after_execute", "action_member_permission", "update_member_permission", "update_member_permission", "update_member_permission", "update_member_permission", "override_member_permission", "can_request_access?", "last_owner?", "can_destroy_member?", "decline_access_request", "member_access_denied_email", "member_source_class", "destroy_member_permission", "destroy_member_permission", "destroy_member_permission", "destroy_member_permission", "add_users", "add_users", "add_users", "user_limit", "parse_users_list", "accept_request", "can_update_access_requester?", "after_accept_request", "mattermost_team_params", "unlock_file", "can_be_unlocked_by?", "lock", "find_locks", "current_lock", "create_lock!", "convert_color_name_to_hex", "labels_to_transfer", "group_labels_applied_to_issues", "group_labels_applied_to_merge_requests", "find_or_create_label!", "update_label_links", "update_label_priorities", "subscribe_users", "label_ids_for_merge", "update_issuables", "update_issue_board_lists", "update_priorities", "update_project_labels", "clone_label_to_group_label", "find_or_create_label", "find_or_create_label", "available_labels", "available_labels", "parent_type", "parent_is_group?", "update?", "update?", "update?", "redis_lease", "new_key", "new_key", "new_ssh_key_email", "create_confidentiality_note", "new_mentions_in_issue", "reassigned_issue", "relabeled_issue", "update_issue", "reassigned_issue", "change_issue_confidentiality", "handle_move_between_ids", "change_issue_duplicate", "move_issue_to_new_project", "move_between", "get_issue_if_allowed", "move_after", "move_before", "prev_relative_position", "shift_before?", "next_relative_position", "shift_after?", "reopen_issue", "reopen_issue", "update_new_issue", "update_old_issue", "create_new_issue", "notify_participants", "issue_moved", "issue_moved_email", "setup_issue_mail", "issue_thread_options", "serializable_hash", "assignee_ids", "cloneable_label_ids", "cloneable_milestone_id", "rewrite_content", "add_note_moved_to", "mark_as_moved", "noteable_moved", "rewrite_notes", "rewrite_issue_award_emoji", "add_note_moved_from", "rewrite_award_emoji", "notes_with_associations", "notes_with_associations", "notes_with_associations", "authors_loaded?", "award_emojis_loaded?", "referenced_merge_requests", "referenced_merge_requests", "closed_by_merge_requests", "merge_requests_readable_by_user", "apply_filters_if_needed", "close_service", "create_issue_duplicate_note", "create_issue_canonical_note", "close_service", "mark_canonical_issue_of_duplicate", "mark_duplicate_issue", "filter_resolve_discussion_params", "toggle_award_emoji", "toggle_award_emoji", "new_award_emoji", "awarded_emoji?", "create_award_emoji", "remove_award_emoji", "emoji_awardable?", "normalize_name", "emoji_awardable?", "to_todoable", "user_can_award?", "awardable_by_user?", "awardable_votes?", "user_authored?", "unsubscribe", "subscribe", "unsubscribe", "unsubscribe_from_other_levels", "find_or_initialize_subscription", "unsubscribe_and_redirect", "issue_path", "issue_path", "issue_path", "reopen_service", "reopen_service", "filter_assignee", "filter_milestone", "filter_labels", "filter_assignee", "assignee_can_read?", "filter_labels_in_param", "find_or_create_label_ids", "for_projects_and_groups", "handle_time_tracking_note", "handle_description_change_note", "create_labels_note", "create_title_change_note", "create_milestone_note", "create_discussion_lock_note", "discussion_lock", "change_milestone", "wipless_title_changed", "wipless_title_changed", "create_wip_note", "change_title", "handle_merge_request_wip", "change_label", "create_description_change_note", "create_task_status_note", "change_task_status", "change_description", "create_time_estimate_note", "create_time_spent_note", "change_time_spent", "change_time_estimate", "permitted_attrs", "clean_up_export_files", "reject_parent_id!", "valid_share_with_group_lock_change?", "changing_share_with_group_lock?", "proceed_to_transfer", "ensure_allowed_transfer", "group_is_already_root?", "same_parent?", "valid_policies?", "namespace_with_same_path?", "raise_transfer_error", "update_group_attributes", "update_children_and_projects_visibility", "create_group_path", "namespace_or_group", "remove_mattermost_team", "create_chat_team?", "can_use_visibility_level?", "gravatar_url", "gravatar_config", "new_gpg_key", "new_gpg_key_email", "before_push_tag", "build_system_push_data", "after_push_commit", "after_remove_branch", "update_gitattributes", "update_caches", "update_signatures", "process_commit_messages", "execute_related_hooks", "perform_housekeeping", "process_default_branch", "push_to_existing_branch?", "push_to_new_branch?", "push_remove_branch?", "default_branch?", "commit_count_for_ref", "needed?", "period_match?", "housekeeping_enabled?", "repack_period", "render_notes", "render_options", "update_secondary_emails!", "update_secondary_emails!", "set_notification_email", "set_public_email", "all_emails", "resend_confirmation_instructions", "tracer", "diff_discussion_outdated", "version_params_for", "viewable", "merge_request_diff_for", "viewable_diffs", "resolve_discussion", "can_resolve?", "follow_up_issue", "discussion_continued_in_issue", "merge_request_branch_names", "origin_merge_requests", "find_branch", "rm_branch", "before_remove_branch", "executable?", "deploy", "expanded_environment_url", "deploy", "on_stop", "add_branch", "create_master_branch", "create_file", "compare_source_branch", "create_commit!", "create_commit!", "create_commit!", "create_commit!", "create_commit!", "create_commit!", "create_commit!", "create_commit!", "actions_after_lfs_transformation", "commit_actions!", "delete_file", "create_transformed_commit", "create_dir", "create_dir", "commit_change", "cohorts", "running_totals", "counts_by_month", "column_to_date", "continue_creation", "finalize_creation", "request_operation", "elapsed_time_from_creation", "get_operation_id", "api_client", "configure_provider", "configure_kubernetes", "request_kubernetes_token", "gke_cluster", "create_cluster", "can_create_cluster?", "cluster_params", "application_class", "application_class", "install_command", "install_command", "install_command", "install_command", "helm_api", "install_command", "chart", "chart", "chart", "on_success", "on_failed", "check_timeout", "installation_phase", "timeouted?", "remove_installation_pod", "installation_errors", "ingress_ip", "shared", "can_pick?", "tick_runner_queue", "shared_runners_enabled?", "with_shared_runners", "runner_queue_key", "assignable_for?", "accepting_tags?", "ref_protected?", "stop_action?", "stop_action?", "stop_with_action!", "play", "play", "play", "stop_action", "manual_actions", "manual_actions", "playable?", "playable?", "playable?", "playable?", "process!", "reprocess!", "close_all", "retried", "retried", "mark_as_processable_after_stage", "after_stage", "matches_tag_ids", "with_any_tags", "builds_for_shared_runner", "builds_for_specific_runner", "register_failure", "register_success", "register_failure", "pages_deployments_failed_total_counter", "jobs_running_for_project", "attempt_counter", "job_queue_duration_seconds", "failed_attempt_counter", "with_builds_enabled", "new_builds", "unstarted", "ref_protected", "running_builds_for_shared_runners", "process_stage", "stage_indexes_of_created_builds", "update_retried", "created_builds", "process_build", "status_for_prior_stages", "created_builds_in_stage", "valid_statuses_for_when", "retry", "retry", "retry", "retry", "retry", "retry_failed", "retryable?", "retryable?", "retryable?", "retryable?", "failed?", "hook_log", "set_hook_execution_notice", "hook_log", "create_pipeline_from_trigger", "trigger_from_token", "read_secrets", "extract_sections", "find_or_create_name", "ensure_stage", "find_stage", "create_stage", "cancel_pending_pipelines", "pipeline_created_counter", "schedule_head_pipeline_update", "related_merge_requests", "auto_cancel_running", "auto_cancelable_pipelines", "created_or_pending", "pipeline_schedule_params", "update_last_used_at", "update_last_used_at", "find_chat_name", "update_last_used_at?", "request_token", "valid_move?", "reorder_intermediate_lists", "update_list_position", "decrement_intermediate_lists", "increment_intermediate_lists", "create_list", "create_list", "destroyable?", "decrement_higher_lists", "remove_list", "available_labels_for", "next_position", "create_board!", "create_board!", "set_parent", "set_state", "set_scope", "list", "list", "list", "ls_files", "order_by_position_and_priority", "movable_list?", "closed_list?", "without_board_labels", "with_list_label", "board_label_ids", "issues_label_links", "create_issue", "can_create_board?", "authorized_token", "stop_environments", "set_attributes", "invalidate_issue_cache_counts", "invalidate_merge_request_cache_counts", "invalidate_todos_done_count", "invalidate_todos_pending_count", "build_url", "build_url", "allowed_branch?", "should_pipeline_be_notified?", "should_pipeline_be_notified?", "should_pipeline_be_notified?", "retrieve_recipients", "notify_for_ref?", "notify_for_pipeline?", "settings", "settings", "ssh_algorithms_hashes", "gitlab_pages", "gitlab_ci", "resolv_dns", "ssh_algorithm_hashes", "ssh_algorithm_file_content", "ssh_algorithm_md5", "ssh_algorithm_sha256", "ssh_algorithm_file", "gate", "message_options", "create_message", "create_push_message", "create_issue_message", "create_merge_request_message", "create_note_message", "create_pipeline_message", "message_color", "pipeline_status_color", "disable_diffs?", "tag_push_valid?", "push_valid?", "merge_request_valid?", "custom_data", "get_message", "get_channel_field", "custom_data", "event_channel_name", "auth", "auth", "speak", "build_message", "base_uri", "rooms", "auth_params", "get_path", "get_path", "check_commit", "with_associations", "relation_without_join_lateral", "relation_with_join_lateral", "with_associations", "filtered_events", "paginate_events", "base_relation", "limit_for_join_lateral", "detect_mentionable_changes", "pipeline_data", "running_or_pending_build_count", "running_or_pending", "by_created_at", "by_custom_attributes", "by_search", "by_username", "by_search", "by_username", "by_search", "by_blocked", "by_active", "by_external_identity", "by_external", "by_2fa", "with_extern_uid", "with_provider", "normalize_uid", "full_search", "created_before", "created_after", "scoped_table", "scoped_table", "recent_events", "limit_recent", "by_action", "by_state", "by_project", "by_author", "by_state", "by_state", "by_author", "by_action", "by_action_id", "by_author", "by_project", "by_state", "by_type", "type?", "done", "public_or_visible_to_user", "public_or_visible_to_user", "action_id?", "action_id", "inactive", "inactive", "filter_by_state", "closed", "closed", "no_author?", "references_project", "references_project", "filter_by_name", "filter_by_name", "tags_sorted_by", "tags_sorted_by_committed_date", "init_collection", "init_collection", "init_collection", "init_collection", "init_collection", "init_collection", "by_visibility", "visibility_from_scope", "authorized_snippets_from_project", "authorized_snippets", "feature_available_projects", "not_project_related", "table", "projects_for_user", "collection_with_user", "collection_without_user", "collection_with_user", "collection_without_user", "owned_projects?", "private_only?", "owned_projects", "owned_projects", "owned_projects_union", "include_subgroups?", "self_and_descendants", "only_owned?", "only_shared?", "notes_of_target_type", "notes_of_any_type", "notes_on_target", "related_notes", "notes_for_type", "with_confidentiality_access_check", "public_only?", "user_can_see_all_confidential_issues?", "user_cannot_see_confidential_issues?", "by_status", "by_status", "by_visibilty_level", "by_archived", "by_personal", "by_ids", "by_personal", "by_starred", "by_trending", "by_visibilty_level", "by_tags", "by_archived", "trending", "trending", "starred_by", "personal", "by_name", "by_scope", "by_scope", "by_ref", "by_name", "by_yaml_errors", "sort_items", "ids_for_ref", "from_ids", "assigned_to", "assigned_to", "by_user", "by_impersonation", "with_impersonation", "without_impersonation", "since_fetch_at", "updated_after", "updated_after", "excluding_project", "projects_where_can_admin_issues", "with_issues_enabled", "by_groups_and_projects", "by_title", "group_ids", "distinct_on", "authorized_to_read_labels?", "group_ids_for", "only_group_labels?", "groups_to_include", "groups_user_can_read_labels", "include_ancestor_groups?", "include_descendant_groups?", "with_title", "with_title", "filter_items", "filter_items", "filter_items", "by_source_branch", "by_target_branch", "by_due_date", "filter_by_no_due_date?", "filter_by_overdue?", "filter_by_due_this_week?", "filter_by_due_this_month?", "due_date?", "without_due_date", "due_before", "due_between", "by_updated_at", "by_group", "by_iids", "by_assignee", "by_milestone", "by_label", "by_my_reaction_emoji", "by_non_archived", "by_assignee", "by_milestone", "no_assignee?", "unassigned", "unassigned", "awarded", "without_label", "with_label", "grouping_columns", "filter_by_no_milestone?", "filter_by_upcoming_milestone?", "filter_by_started_milestone?", "with_milestone", "upcoming_ids_by_projects", "updated_before", "by_parent", "ancestors_of_filtered_projects", "ancestors_of_filtered_subgroups", "ancestors_of_groups", "by_current_user_access", "by_target_type", "by_created_at_before", "by_created_at_after", "includes_commit?", "order_by_last_deployed_at", "recently_updated_on_branch?", "includes_commit?", "can_read_cross_project?", "filter_by_scope", "disabled", "disabled", "branches_sorted_by", "local_branches", "find_users", "todo_authors", "users_from_project", "users_with_parents", "by_namespace_id", "by_with_push", "by_abandoned", "by_last_repository_check_failed", "abandoned", "set_default_state", "set_sort_order_from_cookie", "default_sort_order", "valid_params", "scalar_params", "array_params", "scalar_params", "update_cookie_value", "update_page", "initialize_raw_repository", "render_variables", "variables_params", "variable_params_attributes", "variable_params_attributes", "update_params", "update_params", "update_params", "update_params", "update_params", "run_autodevops_pipeline", "runner_path", "runner_status_icon", "belongs_to_one_project?", "specific?", "run_auto_devops_pipeline?", "gitlab_ci_yml", "managed?", "service_params", "success_message", "add_to_breadcrumbs", "service_save_button", "can_test?", "deprecation_message", "can_test?", "can_test?", "can_test?", "can_test?", "can_test?", "can_test?", "deprecation_message", "deprecated_message_content", "deprecated?", "deprecated?", "event_channel_names", "event_channel_names", "event_names", "runner_params", "runner_params", "release", "release_params", "update_service_class", "define_edit_vars", "group_link_params", "after_edit_path", "preferences_params", "dropdown_tag", "can_change_share_with_group_lock?", "remove_group_message", "share_with_group_lock_help_text", "parent_group_options", "default_help", "ancestor_locked_but_you_can_override", "ancestor_locked_so_ask_the_owner", "ancestor_locked_and_has_been_overridden", "ancestor_group", "oldest_consecutively_locked_ancestor", "remove_the_share_with_group_lock_from_ancestor", "render_group_variables", "group_variables_params", "redirect_back_or_group_labels_path", "previous_labels_path", "fallback_path", "root_params_key", "recaptcha_check_if_spammable", "render_entity_json", "update_service", "update_service", "move_params", "move_params", "changing_own_password?", "assign_builds_and_projects", "detailed_status", "detailed_status", "detailed_status", "detailed_status", "detailed_status", "detailed_status", "detailed_status", "detailed_status", "detailed_status", "detailed_status", "detailed_status", "application_setting_params", "visible_application_setting_attributes", "button_based_providers", "auth_providers", "form_based_provider?", "visible_attributes", "start_date", "start_date", "application_name", "page_specific_javascript_tag", "mattermost_teams_options", "suggested_colors", "link_to_discussions_to_resolve", "allow_maintainer_push_unavailable_reason", "discussions_can_be_resolved_by?", "contribution_guide_path", "tree_join", "contribution_guide", "import_will_timeout_message", "import_svn_message", "import_failed?", "time_interval_in_words", "manageable_namespaces", "manageable_groups", "github_import_configured?", "logged_in_with_provider?", "go_to_provider_for_permissions", "status_import_url", "logged_in_with_provider?", "import_github_authorize_message", "import_github_personal_access_token_message", "import_configure_github_admin_message", "extra_import_params", "callback_import_url"]
CLASSES: ["FormHelper", "Ci::ArtifactBlob", "Clusters::Concerns::ApplicationCore", "Commit", "BlobLike", "DeployKey", "DeployToken", "Discussion", "ExternalIssue", "Note::SpecialRole", "SnippetBlob", "WikiPage", "AkismetService", "CycleAnalyticsParams", "Project", "JiraService", "SpamLog", "Auth::ContainerRegistryAuthenticationService", "BaseService", "DeleteBranchService", "Lfs::LockFileService", "Projects::UpdatePagesService", "Tags::DestroyService", "TestHooks::BaseService", "Repository", "MergeRequestMetricsService", "Milestone", "CommitRange", "IssuableActions", "MembershipActions", "NotesActions", "MergeRequestsFinder", "ResolvableDiscussion", "Boards::Issues::MoveService", "Ci::UpdateRunnerService", "IssuableBaseService", "IssuableCollections", "MergeRequestsAction", "AccessRequestsFinder", "Admin::ProjectsFinder", "AutocompleteUsersFinder", "BranchesFinder", "ClustersFinder", "FinderWithCrossProjectAccess", "ContributedProjectsFinder", "EnvironmentsFinder", "EventsFinder", "GroupDescendantsFinder", "GroupFinder", "GroupMembersFinder", "GroupsFinder", "IssuableFinder", "JoinedGroupsFinder", "LabelsFinder", "MembersFinder", "MergeRequestTargetProjectFinder", "MilestonesFinder", "MoveToProjectFinder", "NotesFinder", "PersonalAccessTokensFinder", "PersonalProjectsFinder", "PipelineSchedulesFinder", "PipelinesFinder", "ProjectsFinder", "RunnerJobsFinder", "SnippetsFinder", "TagsFinder", "TodosFinder", "UserRecentEventsFinder", "UsersFinder", "Ci::Build", "Ci::Pipeline", "Mentionable::ClassMethods", "EventCollection", "ServiceHook", "WebHook", "Issue", "ProjectMember", "MergeRequest", "MergeRequestDiff", "AsanaService", "AssemblaService", "BambooService", "BuildkiteService", "CampfireService", "ChatNotificationService", "DroneCiService", "EmailsOnPushService", "ExternalWikiService", "FlowdockService", "GemnasiumService", "HipchatService", "IrkerService", "IssueTrackerService", "PackagistService", "PipelinesEmailService", "PivotaltrackerService", "PushoverService", "TeamcityService", "Service", "User", "ProjectPolicy", "BuildArtifactEntity", "BuildDetailsEntity", "ContainerRepositoryEntity", "ContainerTagEntity", "RunnerEntity", "AfterBranchDeleteService", "ApplicationSettings::UpdateService", "Applications::CreateService", "Badges::BuildService", "Badges::CreateService", "Badges::UpdateService", "Boards::CreateService", "Boards::Issues::CreateService", "Boards::Issues::ListService", "Boards::ListService", "Boards::Lists::CreateService", "Boards::Lists::DestroyService", "Boards::Lists::GenerateService", "Boards::Lists::ListService", "Boards::Lists::MoveService", "ChatNames::AuthorizeUserService", "ChatNames::FindUserService", "CheckGcpProjectBillingService", "Ci::CreatePipelineScheduleService", "Ci::CreatePipelineService", "Ci::EnsureStageService", "Ci::ExtractSectionsFromBuildTraceService", "Ci::FetchKubernetesTokenService", "Ci::PipelineTriggerService", "Ci::PlayBuildService", "Ci::ProcessPipelineService", "Ci::RegisterJobService", "Ci::RetryBuildService", "Ci::RetryPipelineService", "Ci::StopEnvironmentsService", "Ci::UpdateBuildQueueService", "Clusters::Applications::CheckIngressIpAddressService", "Clusters::Applications::CheckInstallationProgressService", "Clusters::Applications::InstallService", "Clusters::Applications::ScheduleInstallationService", "Clusters::CreateService", "Clusters::Gcp::FetchOperationService", "Clusters::Gcp::FinalizeCreationService", "Clusters::Gcp::ProvisionService", "Clusters::Gcp::VerifyProvisionStatusService", "Clusters::UpdateService", "CohortsService", "Commits::CreateService", "CompareService", "CreateBranchService", "CreateDeploymentService", "CreateReleaseService", "CreateSnippetService", "DeleteMergedBranchesService", "DeployKeys::CreateService", "DeployTokens::CreateService", "Discussions::ResolveService", "Discussions::UpdateDiffPositionService", "Emails::ConfirmService", "Emails::CreateService", "Emails::DestroyService", "Events::RenderService", "GitPushService", "GitTagPushService", "GpgKeys::CreateService", "GravatarService", "Groups::CreateService", "Groups::DestroyService", "Groups::NestedCreateService", "Groups::TransferService", "Groups::UpdateService", "ImportExportCleanUpService", "Issuable::BulkUpdateService", "Issuable::CommonSystemNotesService", "Issuable::DestroyService", "Issues::BaseService", "Issues::BuildService", "Issues::CloseService", "Issues::CreateService", "Issues::DuplicateService", "Issues::FetchReferencedMergeRequestsService", "Issues::MoveService", "Issues::ReopenService", "Issues::UpdateService", "Keys::CreateService", "Keys::LastUsedService", "Labels::CreateService", "Labels::FindOrCreateService", "Labels::PromoteService", "Labels::TransferService", "Labels::UpdateService", "Lfs::LocksFinderService", "Lfs::UnlockFileService", "Mattermost::CreateTeamService", "Members::ApproveAccessRequestService", "Members::CreateService", "Members::DestroyService", "Members::RequestAccessService", "Members::UpdateService", "MergeRequests::AddTodoWhenBuildFailsService", "MergeRequests::AssignIssuesService", "MergeRequests::BaseService", "MergeRequests::BuildService", "MergeRequests::CloseService", "MergeRequests::Conflicts::ResolveService", "MergeRequests::CreateFromIssueService", "MergeRequests::CreateService", "MergeRequests::GetUrlsService", "MergeRequests::MergeRequestDiffCacheService", "MergeRequests::MergeService", "MergeRequests::MergeWhenPipelineSucceedsService", "MergeRequests::PostMergeService", "MergeRequests::RebaseService", "MergeRequests::RefreshService", "MergeRequests::ReopenService", "MergeRequests::ResolvedDiscussionNotificationService", "MergeRequests::UpdateService", "Milestones::CloseService", "Milestones::CreateService", "Milestones::DestroyService", "Milestones::PromoteService", "Milestones::ReopenService", "Milestones::UpdateService", "Notes::BuildService", "Notes::CreateService", "Notes::DestroyService", "Notes::PostProcessService", "Notes::QuickActionsService", "Notes::RenderService", "Notes::UpdateService", "NotificationRecipientService::Builder::Base", "NotificationRecipientService::Builder::NewNote", "PagesService", "PreviewMarkdownService", "Projects::AfterImportService", "Projects::BaseMoveRelationsService", "Projects::CreateFromTemplateService", "Projects::CreateService", "Projects::DestroyService", "Projects::DownloadService", "Projects::EnableDeployKeyService", "Projects::ForkService", "Projects::GitlabProjectsImportService", "Projects::GroupLinks::CreateService", "Projects::GroupLinks::DestroyService", "Projects::HashedStorage::MigrateAttachmentsService", "Projects::HashedStorage::MigrateRepositoryService", "Projects::HashedStorageMigrationService", "Projects::HousekeepingService::LeaseTaken", "Projects::ImportExport::ExportService", "Projects::ImportService", "Projects::MoveAccessService", "Projects::MoveDeployKeysProjectsService", "Projects::MoveForksService", "Projects::MoveLfsObjectsProjectsService", "Projects::MoveNotificationSettingsService", "Projects::MoveProjectAuthorizationsService", "Projects::MoveProjectGroupLinksService", "Projects::MoveProjectMembersService", "Projects::MoveUsersStarProjectsService", "Projects::OverwriteProjectService", "Projects::ParticipantsService", "Projects::TransferService", "Projects::UnlinkForkService", "Projects::UpdatePagesConfigurationService", "Projects::UpdateService", "ProtectedBranches::CreateService", "ProtectedBranches::DestroyService", "ProtectedBranches::LegacyApiCreateService", "ProtectedBranches::LegacyApiUpdateService", "ProtectedBranches::UpdateService", "ProtectedTags::CreateService", "ProtectedTags::DestroyService", "ProtectedTags::UpdateService", "PushEventPayloadService", "QuickActions::InterpretService", "RepairLdapBlockedUserService", "RepositoryArchiveCleanUpService", "ResetProjectCacheService", "Search::GlobalService", "Search::ProjectService", "Search::SnippetService", "SearchService", "SubmitUsagePingService", "SystemHooksService", "Tags::CreateService", "TestHooks::ProjectService", "UpdateReleaseService", "UpdateSnippetService", "UploadService", "UserProjectAccessChangedService", "Users::ActivityService", "Users::BuildService", "Users::CreateService", "Users::DestroyService", "Users::MigrateToGhostUserService", "Users::RefreshAuthorizedProjectsService", "Users::UpdateService", "ValidateNewBranchService", "VerifyPagesDomainService", "WebHookService::InternalErrorResponse", "WikiPages::BaseService", "WikiPages::CreateService", "WikiPages::DestroyService", "WikiPages::UpdateService", "FileMover", "UploadsActions", "ObjectStorage::Extension::RecordsUploads", "ObjectStorage::Concern", "RecordsUploads::Concern", "FinderMethods", "AvatarUploader", "FileUploader", "GitlabUploader", "ObjectStorage::MigrateUploadsWorker::MigrationResult", "ObjectStorage::MigrateUploadsWorker::Report::MigrationFailures", "Ci::LegacyStage", "WebHookLog", "ChatMessage::BaseMessage", "ChatMessage::IssueMessage", "ChatMessage::MergeMessage", "ChatMessage::NoteMessage", "ChatMessage::PipelineMessage", "ChatMessage::PushMessage", "ChatMessage::WikiPageMessage", "List", "BugzillaService", "CustomIssueTrackerService", "KubernetesService", "MattermostService", "MattermostSlashCommandsService", "MicrosoftTeamsService", "MockCiService", "MockDeploymentService", "MockMonitoringService", "PrometheusService", "RedmineService", "SlackService", "SlackSlashCommandsService", "MergeRequestPresenter", "GlobalMilestone", "GroupMilestone", "GroupMember", "ProjectTeam", "BaseMailer", "Guest", "Ability", "BroadcastMessage", "HasStatus", "NoteOnDiff", "DiffNote", "LegacyDiffDiscussion", "LegacyDiffNote", "PersonalAccessToken", "Expirable", "Milestoneish", "Event", "PagesDomain", "Appearance", "ApplicationSetting", "Blob", "ProjectWiki", "ContainerRepository", "ThrottledTouch", "SentNotification", "Todo", "ForkProjectsFinder", "GroupProjectsFinder", "IssuesFinder", "AbuseReportMailer", "EmailRejectionMailer", "Notify", "RepositoryCheckMailer", "GroupBadge", "ProjectBadge", "BlobViewer::GitlabCiYml", "BlobViewer::RouteMap", "DashboardMilestone", "DiffDiscussion", "GenericCommitStatus", "Group", "GroupLabel", "ProjectHook", "SystemHook", "IndividualNoteDiscussion", "OutOfContextDiscussion", "PersonalSnippet", "ProjectLabel", "BuildsEmailService", "CiService", "DeploymentService", "GitlabIssueTrackerService", "MonitoringService", "SlashCommandsService", "ProjectSnippet", "PushEvent", "SecurityEvent", "CommitStatusPolicy", "DeployKeyPolicy", "DeployTokenPolicy", "DeploymentPolicy", "EnvironmentPolicy", "ExternalIssuePolicy", "GlobalPolicy", "GroupLabelPolicy", "GroupMemberPolicy", "GroupPolicy", "IssuablePolicy", "IssuePolicy", "MergeRequestPolicy", "NamespacePolicy", "NilPolicy", "NotePolicy", "PersonalSnippetPolicy", "ProjectLabelPolicy", "ProjectMemberPolicy", "ProjectSnippetPolicy", "ProtectedBranchPolicy", "UserPolicy", "GroupMemberPresenter", "ProjectMemberPresenter", "AnalyticsBuildSerializer", "AnalyticsCommitEntity", "AnalyticsCommitSerializer", "AnalyticsGenericSerializer", "AnalyticsIssueSerializer", "AnalyticsMergeRequestEntity", "AnalyticsMergeRequestSerializer", "AnalyticsStageSerializer", "AnalyticsSummarySerializer", "BuildSerializer", "ClusterSerializer", "CohortsSerializer", "ContainerRepositoriesSerializer", "ContainerTagsSerializer", "DeployKeySerializer", "DeploymentSerializer", "DiscussionSerializer", "EnvironmentSerializer", "GroupChildSerializer", "GroupSerializer", "GroupVariableSerializer", "IssueEntity", "IssueSerializer", "IssueSidebarEntity", "LabelSerializer", "LfsFileLockSerializer", "MergeRequestBasicEntity", "MergeRequestBasicSerializer", "MergeRequestCreateSerializer", "MergeRequestSerializer", "MergeRequestWidgetEntity", "NoteUserEntity", "PipelineDetailsEntity", "PipelineSerializer", "ProjectNoteEntity", "ProjectNoteSerializer", "ProjectSerializer", "TreeSerializer", "UserSerializer", "VariableSerializer", "AttachmentUploader", "JobArtifactUploader", "LegacyArtifactUploader", "LfsObjectUploader", "NamespaceFileUploader", "PersonalFileUploader", "NamespacePathValidator", "ProjectPathValidator", "UrlPlaceholderValidator", "DeployTokensHelper", "LfsRequest", "Clusters::Cluster", "ProjectAutoDevops", "Flowdock::Git::Builder", "SystemNoteService", "Label", "NotificationReason", "RequiresWhitelistedMonitoringClient", "PageLayoutHelper", "ProjectsHelper", "Routable", "UserSyncedAttributesMetadata", "BoardsResponses", "IssuablesHelper", "Board", "Clusters::Applications::Runner", "Clusters::Concerns::ApplicationData", "Storage::LegacyProjectWiki", "Storage::HashedProject", "Storage::LegacyProject", "ApplicationHelper", "Upload", "ObjectStorage::MigrateUploadsWorker::Upload", "Namespace", "BreadcrumbsHelper", "GroupsHelper", "Avatarable::ShadowMethods", "Tree", "Compare", "ProtectedRef", "Deployment", "GpgSignature", "MergeRequests::FfMergeService", "Referable::ClassMethods", "Snippet", "Epic", "MergeRequests::WorkingCopyBaseService", "Ci::PipelineSchedule", "Ci::Runner", "Member", "Mentionable::ReferenceRegexes", "DirectlyAddressedUser", "ProjectFeature", "UnionFinder", "IssuesAction", "Projects::AutocompleteService", "Issuable::ClassMethods", "GroupChildEntity", "GlobalLabel", "CommitCollection", "MembersPresenter", "Presentable", "CacheMarkdownField::FieldData", "TabHelper", "Sortable::ClassMethods", "Ci::Group", "CommitStatus", "ArtifactMigratable", "RequestAwareEntity", "BlobViewer::Base", "DiffViewer::Base", "IconsHelper", "WikiHelper", "Environment", "MergeRequestsHelper", "TodoService", "ProtectedBranches::ApiService", "UserAgentDetailService", "SpammableActions", "ProtectedBranches::AccessLevelParams", "AuthenticatesWithTwoFactor", "ChecksCollaboration", "ContinueParams", "CreatesCommit", "DiffForPath", "EnforcesTwoFactorAuthentication", "GroupTree", "HooksExecution", "MembersPresentation", "MilestoneActions", "OauthApplications", "ParamsBackwardCompatibility", "PreviewMarkdown", "RendersBlob", "RendersCommits", "RendersMemberAccess", "RendersNotes", "RepositorySettingsRedirect", "RoutableActions", "SendFileUpload", "ServiceParams", "SnippetsActions", "ToggleAwardEmoji", "ToggleSubscriptionAction", "WithPerformanceBar", "WorkhorseRequest", "CreatedAtFilter", "CustomAttributesFilter", "AccountsHelper", "AppearancesHelper", "ApplicationSettingsHelper", "AuthHelper", "AutoDevopsHelper", "AvatarsHelper", "AwardEmojiHelper", "BlameHelper", "BlobHelper", "BoardsHelper", "BranchesHelper", "BroadcastMessagesHelper", "BuildsHelper", "ButtonHelper", "CiStatusHelper", "ClustersHelper", "CommitsHelper", "CompareHelper", "ComponentsHelper", "ConversationalDevelopmentIndexHelper", "DashboardHelper", "DeferScriptTagHelper", "DiffHelper", "DropdownsHelper", "EmailsHelper", "EmojiHelper", "EnvironmentHelper", "EnvironmentsHelper", "EventsHelper", "ExploreHelper", "ExternalWikiHelper", "GitHelper", "GitlabRoutingHelper", "GraphHelper", "HooksHelper", "ImportHelper", "InstanceConfigurationHelper", "IssuesHelper", "JavascriptHelper", "KerberosSpnegoHelper", "LabelsHelper", "LazyImageTagHelper", "MarkupHelper", "MattermostHelper", "MembersHelper", "MilestonesHelper", "MilestonesRoutingHelper", "NamespacesHelper", "NavHelper", "NotesHelper", "NotificationsHelper", "NumbersHelper", "PaginationHelper", "PerformanceBarHelper", "PipelineSchedulesHelper", "PreferencesHelper", "ProfilesHelper", "RssHelper", "RunnersHelper", "SafeParamsHelper", "SearchHelper", "SelectsHelper", "SentryHelper", "ServicesHelper", "SidekiqHelper", "SnippetsHelper", "SortingHelper", "StorageHealthHelper", "StorageHelper", "SubmoduleHelper", "SystemNoteHelper", "TagsHelper", "TimeHelper", "TodosHelper", "TreeHelper", "TriggersHelper", "UserCalloutsHelper", "UsersHelper", "VersionCheckHelper", "VisibilityLevelHelper", "WebpackHelper", "WorkhorseHelper", "DeviseMailer", "Emails::Issues", "Emails::Members", "Emails::MergeRequests", "Emails::Notes", "Emails::PagesDomains", "Emails::Pipelines", "Emails::Profile", "Emails::Projects", "AbuseReport", "AuditEvent", "AwardEmoji", "Badge", "BlobViewer::Auxiliary", "BlobViewer::Balsamiq", "BlobViewer::BinarySTL", "BlobViewer::Cartfile", "BlobViewer::Changelog", "BlobViewer::ClientSide", "BlobViewer::ComposerJson", "BlobViewer::Contributing", "BlobViewer::DependencyManager", "BlobViewer::Download", "BlobViewer::Empty", "BlobViewer::Gemfile", "BlobViewer::Gemspec", "BlobViewer::GodepsJson", "BlobViewer::Image", "BlobViewer::License", "BlobViewer::Markup", "BlobViewer::Notebook", "BlobViewer::PackageJson", "BlobViewer::PDF", "BlobViewer::Podfile", "BlobViewer::Podspec", "BlobViewer::PodspecJson", "BlobViewer::Readme", "BlobViewer::RequirementsTxt", "BlobViewer::Rich", "BlobViewer::ServerSide", "BlobViewer::Simple", "BlobViewer::Sketch", "BlobViewer::Static", "BlobViewer::SVG", "BlobViewer::Text", "BlobViewer::TextSTL", "BlobViewer::Video", "BlobViewer::YarnLock", "ChatName", "ChatTeam", "Ci::BuildMetadata", "Ci::BuildTraceSection", "Ci::BuildTraceSectionName", "Ci::GroupVariable", "Ci::JobArtifact", "Ci::PipelineScheduleVariable", "Ci::PipelineVariable", "Ci::RunnerProject", "Ci::Stage", "Ci::Trigger", "Ci::TriggerRequest", "Ci::Variable", "Clusters::Applications::Helm", "Clusters::Applications::Ingress", "Clusters::Applications::Prometheus", "Clusters::Concerns::ApplicationStatus", "Clusters::Platforms::Kubernetes", "Clusters::Project", "Clusters::Providers::Gcp", "AccessRequestable", "AtomicInternalId::ClassMethods", "Awardable::ClassMethods", "BlocksJsonSerialization", "BulkMemberAccessLoad", "CaseSensitivity::ClassMethods", "ChronicDurationAttribute", "CreatedAtFilterable", "DeploymentPlatform", "DiscussionOnDiff", "EachBatch::ClassMethods", "Editable", "FasterCacheKeys", "FeatureGate", "GhostUser", "GroupDescendant", "HasVariable", "IgnorableColumn::ClassMethods", "Importable", "LoadedInGroupList::ClassMethods", "ManualInverseAssociation::ClassMethods", "Noteable", "Participable::ClassMethods", "ProjectFeaturesCompatibility", "PrometheusAdapter", "ProtectedBranchAccess", "ProtectedRefAccess", "ProtectedTagAccess", "ReactiveCaching", "ReactiveService", "RedisCacheable", "RelativePositioning", "ResolvableNote::ClassMethods", "SelectForProjectAuthorization::ClassMethods", "ShaAttribute::ClassMethods", "Spammable::ClassMethods", "Storage::LegacyNamespace", "Storage::LegacyRepository", "StripAttribute::ClassMethods", "Subscribable", "Taskable", "TimeTrackable", "TokenAuthenticatable", "TriggerableHooks", "Uniquify", "UpdatedAtFilterable", "ValidAttribute", "ConversationalDevelopmentIndex::Card", "ConversationalDevelopmentIndex::IdeaToProductionStep", "ConversationalDevelopmentIndex::Metric", "CycleAnalytics", "DeployKeysProject", "DiffViewer::Added", "DiffViewer::ClientSide", "DiffViewer::Deleted", "DiffViewer::Image", "DiffViewer::ModeChanged", "DiffViewer::NoPreview", "DiffViewer::NotDiffable", "DiffViewer::Renamed", "DiffViewer::Rich", "DiffViewer::ServerSide", "DiffViewer::Simple", "DiffViewer::Static", "DiffViewer::Text", "DiscussionNote", "Email", "ForkNetwork", "ForkNetworkMember", "ForkedProjectLink", "GpgKey", "GpgKeySubkey", "GroupCustomAttribute", "Identity", "InstanceConfiguration", "InternalId::InternalIdGenerator", "Issue::Metrics", "IssueAssignee", "IssueCollection", "Key", "LabelLink", "LabelPriority", "LfsFileLock", "LfsObject", "LfsObjectsProject", "MergeRequest::Metrics", "MergeRequestDiffCommit", "MergeRequestDiffFile", "MergeRequestsClosingIssues", "Network::Commit", "Network::Graph", "NotificationRecipient", "NotificationSetting", "OauthAccessGrant", "OauthAccessToken", "ProjectAuthorization", "ProjectCustomAttribute", "ProjectDeployToken", "ProjectGroupLink", "ProjectImportData", "ProjectStatistics", "ProtectableDropdown", "ProtectedBranch::MergeAccessLevel", "ProtectedBranch::PushAccessLevel", "ProtectedBranch", "ProtectedRefMatcher", "ProtectedTag::CreateAccessLevel", "ProtectedTag", "PushEventPayload", "ReadmeBlob", "RedirectRoute", "Release", "Route", "Subscription", "SystemNoteMetadata", "Timelog", "TrendingProject", "U2fRegistration", "UserAgentDetail", "UserCallout", "UserCustomAttribute", "UserInteractedProject", "UsersStarProject", "WikiDirectory", "BasePolicy", "Ci::BuildPolicy", "Ci::PipelinePolicy", "Ci::PipelineSchedulePolicy", "Ci::RunnerPolicy", "Ci::TriggerPolicy", "Clusters::ClusterPolicy", "ProjectPolicy::ClassMethods", "Ci::BuildMetadataPresenter", "Ci::BuildPresenter", "Ci::GroupVariablePresenter", "Ci::PipelinePresenter", "Ci::VariablePresenter", "Clusters::ClusterPresenter", "ConversationalDevelopmentIndex::MetricPresenter", "MemberPresenter", "ProjectPresenter", "Projects::Settings::DeployKeysPresenter", "AnalyticsBuildEntity", "AnalyticsIssueEntity", "AnalyticsStageEntity", "AnalyticsSummaryEntity", "AwardEmojiEntity", "BaseSerializer", "BlobEntity", "BuildActionEntity", "BuildMetadataEntity", "ClusterApplicationEntity", "ClusterEntity", "CohortActivityMonthEntity", "CohortEntity", "CohortsEntity", "CommitEntity", "WithPagination", "DeployKeyEntity", "DeployKeysProjectEntity", "DeploymentEntity", "DiffFileEntity", "DiscussionEntity", "EntityDateHelper", "EntityRequest", "EnvironmentEntity", "GroupEntity", "GroupVariableEntity", "IssuableEntity", "IssuableSidebarEntity", "JobEntity", "JobGroupEntity", "LabelEntity", "LfsFileLockEntity", "MergeRequestCreateEntity", "MergeRequestMetricsEntity", "NoteAttachmentEntity", "NoteEntity", "PipelineEntity", "ProjectEntity", "StageEntity", "StatusEntity", "SubmoduleEntity", "TimeTrackableEntity", "TreeEntity", "TreeRootEntity", "UserEntity", "VariableEntity", "AccessTokenValidationService", "ApplicationSettings::BaseService", "AuditEventService", "Badges::BaseService", "BaseCountService", "BaseRenderer", "Boards::BaseService", "Clusters::Applications::BaseHelmService", "Commits::ChangeService", "Commits::CherryPickService", "Commits::RevertService", "Issues::ResolveDiscussions", "UpdateVisibilityLevel", "Users::NewUserNotifier", "Discussions::BaseService", "Emails::BaseService", "EventCreateService", "Files::BaseService", "Files::CreateDirService", "Files::CreateService", "Files::DeleteService", "Files::MultiService", "Files::UpdateService", "Groups::BaseService", "HamService", "Keys::BaseService", "Labels::BaseService", "Lfs::FileTransformer::Result", "Members::BaseService", "MergeRequests::Conflicts::BaseService", "MergeRequests::Conflicts::ListService", "MetricsService", "Milestones::BaseService", "NoteSummary", "NotificationRecipientService::Builder::Default", "NotificationService", "Projects::BatchCountService", "Projects::BatchForksCountService", "Projects::BatchOpenIssuesCountService", "Projects::CountService", "Projects::ForksCountService", "Projects::OpenIssuesCountService", "Projects::OpenMergeRequestsCountService", "Projects::PropagateServiceTemplate", "Prometheus::AdapterService", "Search::GroupService", "SpamCheckService", "SpamService", "TestHooks::SystemService", "Users::KeysCountService", "Users::LastPushEventService", "ObjectStorage::Store", "ObjectStorage::BackgroundMove", "UploaderHelper", "Workhorse::UploadPath", "AbstractPathValidator", "AddressableUrlValidator", "CertificateFingerprintValidator", "CertificateKeyValidator", "CertificateValidator", "ClusterNameValidator", "ColorValidator", "CronTimezoneValidator", "CronValidator", "DurationValidator", "EmailValidator", "ImportableUrlValidator", "KeyRestrictionValidator", "LineCodeValidator", "NamespaceNameValidator", "TopLevelGroupValidator", "UrlValidator", "VariableDuplicatesValidator", "AdminEmailWorker", "ArchiveTraceWorker", "AuthorizedProjectsWorker", "BackgroundMigrationWorker", "BuildCoverageWorker", "BuildFinishedWorker", "BuildHooksWorker", "BuildQueueWorker", "BuildSuccessWorker", "BuildTraceSectionsWorker", "CheckGcpProjectBillingWorker", "ClusterInstallAppWorker", "ClusterProvisionWorker", "ClusterWaitForAppInstallationWorker", "ClusterWaitForIngressIpAddressWorker", "ApplicationWorker::ClassMethods", "ClusterApplications", "ClusterQueue", "CronjobQueue", "ExceptionBacktrace", "Gitlab::GithubImport::NotifyUponDeath", "Gitlab::GithubImport::ObjectImporter", "Gitlab::GithubImport::Queue", "Gitlab::GithubImport::ReschedulingMethods", "Gitlab::GithubImport::StageMethods", "MailSchedulerQueue", "NewIssuable", "ObjectStorageQueue", "PipelineBackgroundQueue", "PipelineQueue", "ProjectImportOptions", "ProjectStartImport", "RepositoryCheckQueue", "WaitableWorker::ClassMethods", "CreateGpgSignatureWorker", "CreatePipelineWorker", "DeleteMergedBranchesWorker", "DeleteUserWorker", "EmailReceiverWorker", "EmailsOnPushWorker", "ExpireBuildArtifactsWorker", "ExpireBuildInstanceArtifactsWorker", "ExpireJobCacheWorker", "ExpirePipelineCacheWorker", "GitGarbageCollectWorker", "Gitlab::GithubImport::AdvanceStageWorker", "Gitlab::GithubImport::ImportDiffNoteWorker", "Gitlab::GithubImport::ImportIssueWorker", "Gitlab::GithubImport::ImportNoteWorker", "Gitlab::GithubImport::ImportPullRequestWorker", "Gitlab::GithubImport::RefreshImportJidWorker", "Gitlab::GithubImport::Stage::FinishImportWorker", "Gitlab::GithubImport::Stage::ImportBaseDataWorker", "Gitlab::GithubImport::Stage::ImportIssuesAndDiffNotesWorker", "Gitlab::GithubImport::Stage::ImportNotesWorker", "Gitlab::GithubImport::Stage::ImportPullRequestsWorker", "Gitlab::GithubImport::Stage::ImportRepositoryWorker", "GitlabShellWorker", "GitlabUsagePingWorker", "GroupDestroyWorker", "ImportExportProjectCleanupWorker", "InvalidGpgSignatureUpdateWorker", "IrkerWorker", "IssueDueSchedulerWorker", "MailScheduler::IssueDueWorker", "MergeWorker", "NamespacelessProjectDestroyWorker", "NewIssueWorker", "NewMergeRequestWorker", "NewNoteWorker", "ObjectStorage::BackgroundMoveWorker", "ObjectStorageUploadWorker", "PagesDomainVerificationCronWorker", "PagesDomainVerificationWorker", "PagesWorker", "PipelineHooksWorker", "PipelineMetricsWorker", "PipelineNotificationWorker", "PipelineProcessWorker", "PipelineScheduleWorker", "PipelineSuccessWorker", "PipelineUpdateWorker", "PluginWorker", "PostReceive", "ProcessCommitWorker", "ProjectCacheWorker", "ProjectDestroyWorker", "ProjectExportWorker", "ProjectMigrateHashedStorageWorker", "ProjectServiceWorker", "PropagateServiceTemplateWorker", "PruneOldEventsWorker", "ReactiveCachingWorker", "RebaseWorker", "RemoveExpiredGroupLinksWorker", "RemoveExpiredMembersWorker", "RemoveOldWebHookLogsWorker", "RemoveUnreferencedLfsObjectsWorker", "RepositoryArchiveCacheWorker", "RepositoryCheck::BatchWorker", "RepositoryCheck::ClearWorker", "RepositoryCheck::SingleRepositoryWorker", "RepositoryForkWorker", "RepositoryImportWorker", "RequestsProfilesWorker", "RunPipelineScheduleWorker", "ScheduleUpdateUserActivityWorker", "StageUpdateWorker", "StorageMigratorWorker", "StuckCiJobsWorker", "StuckImportJobsWorker", "StuckMergeJobsWorker", "SystemHookPushWorker", "TrendingProjectsWorker", "UpdateHeadPipelineForMergeRequestWorker", "UpdateMergeRequestsWorker", "UpdateUserActivityWorker", "UploadChecksumWorker", "WaitForClusterCreationWorker", "WebHookWorker", "CiCommit", "CiJob", "CiProject", "CiSession", "CiTagging", "CiTag", "CiWebHook", "Note", "OauthApplication", "Tagging", "Tag", "AbuseReportsController"]
AAA: read_ruby_files: 1781.333607
Dataflow file: ../applications/pw-gitlab//dataflow/finders/access_requests_finder.log matches class name AccessRequestsFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/admin/projects_finder.log matches class name Admin::ProjectsFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/autocomplete_users_finder.log matches class name AutocompleteUsersFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/branches_finder.log matches class name BranchesFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/clusters_finder.log matches class name ClustersFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/concerns/created_at_filter.log matches class name CreatedAtFilter
Dataflow file: ../applications/pw-gitlab//dataflow/finders/concerns/custom_attributes_filter.log matches class name CustomAttributesFilter
Dataflow file: ../applications/pw-gitlab//dataflow/finders/concerns/finder_methods.log matches class name FinderMethods
Dataflow file: ../applications/pw-gitlab//dataflow/finders/concerns/finder_with_cross_project_access.log matches class name FinderWithCrossProjectAccess
Dataflow file: ../applications/pw-gitlab//dataflow/finders/contributed_projects_finder.log matches class name ContributedProjectsFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/environments_finder.log matches class name EnvironmentsFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/events_finder.log matches class name EventsFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/fork_projects_finder.log matches class name ForkProjectsFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/group_descendants_finder.log matches class name GroupDescendantsFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/group_finder.log matches class name GroupFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/group_members_finder.log matches class name GroupMembersFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/group_projects_finder.log matches class name GroupProjectsFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/groups_finder.log matches class name GroupsFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/issuable_finder.log matches class name IssuableFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/issues_finder.log matches class name IssuesFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/joined_groups_finder.log matches class name JoinedGroupsFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/labels_finder.log matches class name LabelsFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/members_finder.log matches class name MembersFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/merge_request_target_project_finder.log matches class name MergeRequestTargetProjectFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/merge_requests_finder.log matches class name MergeRequestsFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/milestones_finder.log matches class name MilestonesFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/move_to_project_finder.log matches class name MoveToProjectFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/notes_finder.log matches class name NotesFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/personal_access_tokens_finder.log matches class name PersonalAccessTokensFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/personal_projects_finder.log matches class name PersonalProjectsFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/pipeline_schedules_finder.log matches class name PipelineSchedulesFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/pipelines_finder.log matches class name PipelinesFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/projects_finder.log matches class name ProjectsFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/runner_jobs_finder.log matches class name RunnerJobsFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/snippets_finder.log matches class name SnippetsFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/tags_finder.log matches class name TagsFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/todos_finder.log matches class name TodosFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/union_finder.log matches class name UnionFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/user_recent_events_finder.log matches class name UserRecentEventsFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/users_finder.log matches class name UsersFinder
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/accounts_helper.log matches class name AccountsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/appearances_helper.log matches class name AppearancesHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/application_helper.log matches class name ApplicationHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/application_settings_helper.log matches class name ApplicationSettingsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/auth_helper.log matches class name AuthHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/auto_devops_helper.log matches class name AutoDevopsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/avatars_helper.log matches class name AvatarsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/award_emoji_helper.log matches class name AwardEmojiHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/blame_helper.log matches class name BlameHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/blob_helper.log matches class name BlobHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/boards_helper.log matches class name BoardsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/branches_helper.log matches class name BranchesHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/breadcrumbs_helper.log matches class name BreadcrumbsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/broadcast_messages_helper.log matches class name BroadcastMessagesHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/builds_helper.log matches class name BuildsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/button_helper.log matches class name ButtonHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/ci_status_helper.log matches class name CiStatusHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/clusters_helper.log matches class name ClustersHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/commits_helper.log matches class name CommitsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/compare_helper.log matches class name CompareHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/components_helper.log matches class name ComponentsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/conversational_development_index_helper.log matches class name ConversationalDevelopmentIndexHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/dashboard_helper.log matches class name DashboardHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/defer_script_tag_helper.log matches class name DeferScriptTagHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/deploy_tokens_helper.log matches class name DeployTokensHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/diff_helper.log matches class name DiffHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/dropdowns_helper.log matches class name DropdownsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/emails_helper.log matches class name EmailsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/emoji_helper.log matches class name EmojiHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/environment_helper.log matches class name EnvironmentHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/environments_helper.log matches class name EnvironmentsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/events_helper.log matches class name EventsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/explore_helper.log matches class name ExploreHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/external_wiki_helper.log matches class name ExternalWikiHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/form_helper.log matches class name FormHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/git_helper.log matches class name GitHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/gitlab_routing_helper.log matches class name GitlabRoutingHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/graph_helper.log matches class name GraphHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/groups_helper.log matches class name GroupsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/hooks_helper.log matches class name HooksHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/icons_helper.log matches class name IconsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/import_helper.log matches class name ImportHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/instance_configuration_helper.log matches class name InstanceConfigurationHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/issuables_helper.log matches class name IssuablesHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/issues_helper.log matches class name IssuesHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/javascript_helper.log matches class name JavascriptHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/kerberos_spnego_helper.log matches class name KerberosSpnegoHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/labels_helper.log matches class name LabelsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/lazy_image_tag_helper.log matches class name LazyImageTagHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/markup_helper.log matches class name MarkupHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/mattermost_helper.log matches class name MattermostHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/members_helper.log matches class name MembersHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/merge_requests_helper.log matches class name MergeRequestsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/milestones_helper.log matches class name MilestonesHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/milestones_routing_helper.log matches class name MilestonesRoutingHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/namespaces_helper.log matches class name NamespacesHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/nav_helper.log matches class name NavHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/notes_helper.log matches class name NotesHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/notifications_helper.log matches class name NotificationsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/numbers_helper.log matches class name NumbersHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/page_layout_helper.log matches class name PageLayoutHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/pagination_helper.log matches class name PaginationHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/performance_bar_helper.log matches class name PerformanceBarHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/pipeline_schedules_helper.log matches class name PipelineSchedulesHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/preferences_helper.log matches class name PreferencesHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/profiles_helper.log matches class name ProfilesHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/projects_helper.log matches class name ProjectsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/rss_helper.log matches class name RssHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/runners_helper.log matches class name RunnersHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/safe_params_helper.log matches class name SafeParamsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/search_helper.log matches class name SearchHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/selects_helper.log matches class name SelectsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/sentry_helper.log matches class name SentryHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/services_helper.log matches class name ServicesHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/sidekiq_helper.log matches class name SidekiqHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/snippets_helper.log matches class name SnippetsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/sorting_helper.log matches class name SortingHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/storage_health_helper.log matches class name StorageHealthHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/storage_helper.log matches class name StorageHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/submodule_helper.log matches class name SubmoduleHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/system_note_helper.log matches class name SystemNoteHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/tab_helper.log matches class name TabHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/tags_helper.log matches class name TagsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/time_helper.log matches class name TimeHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/todos_helper.log matches class name TodosHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/tree_helper.log matches class name TreeHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/triggers_helper.log matches class name TriggersHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/user_callouts_helper.log matches class name UserCalloutsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/users_helper.log matches class name UsersHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/version_check_helper.log matches class name VersionCheckHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/visibility_level_helper.log matches class name VisibilityLevelHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/webpack_helper.log matches class name WebpackHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/wiki_helper.log matches class name WikiHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/workhorse_helper.log matches class name WorkhorseHelper
Dataflow file: ../applications/pw-gitlab//dataflow/mailers/abuse_report_mailer.log matches class name AbuseReportMailer
Dataflow file: ../applications/pw-gitlab//dataflow/mailers/base_mailer.log matches class name BaseMailer
Dataflow file: ../applications/pw-gitlab//dataflow/mailers/devise_mailer.log matches class name DeviseMailer
Dataflow file: ../applications/pw-gitlab//dataflow/mailers/email_rejection_mailer.log matches class name EmailRejectionMailer
Dataflow file: ../applications/pw-gitlab//dataflow/mailers/emails/issues.log matches class name Emails::Issues
Dataflow file: ../applications/pw-gitlab//dataflow/mailers/emails/members.log matches class name Emails::Members
Dataflow file: ../applications/pw-gitlab//dataflow/mailers/emails/merge_requests.log matches class name Emails::MergeRequests
Dataflow file: ../applications/pw-gitlab//dataflow/mailers/emails/notes.log matches class name Emails::Notes
Dataflow file: ../applications/pw-gitlab//dataflow/mailers/emails/pages_domains.log matches class name Emails::PagesDomains
Dataflow file: ../applications/pw-gitlab//dataflow/mailers/emails/pipelines.log matches class name Emails::Pipelines
Dataflow file: ../applications/pw-gitlab//dataflow/mailers/emails/profile.log matches class name Emails::Profile
Dataflow file: ../applications/pw-gitlab//dataflow/mailers/emails/projects.log matches class name Emails::Projects
Dataflow file: ../applications/pw-gitlab//dataflow/mailers/notify.log matches class name Notify
Dataflow file: ../applications/pw-gitlab//dataflow/mailers/repository_check_mailer.log matches class name RepositoryCheckMailer
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/abuse_reports_controller.log matches class name AbuseReportsController
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/authenticates_with_two_factor.log matches class name AuthenticatesWithTwoFactor
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/boards_responses.log matches class name BoardsResponses
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/checks_collaboration.log matches class name ChecksCollaboration
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/continue_params.log matches class name ContinueParams
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/creates_commit.log matches class name CreatesCommit
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/cycle_analytics_params.log matches class name CycleAnalyticsParams
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/diff_for_path.log matches class name DiffForPath
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/enforces_two_factor_authentication.log matches class name EnforcesTwoFactorAuthentication
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/group_tree.log matches class name GroupTree
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/hooks_execution.log matches class name HooksExecution
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/issuable_actions.log matches class name IssuableActions
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/issuable_collections.log matches class name IssuableCollections
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/issues_action.log matches class name IssuesAction
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/lfs_request.log matches class name LfsRequest
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/members_presentation.log matches class name MembersPresentation
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/membership_actions.log matches class name MembershipActions
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/merge_requests_action.log matches class name MergeRequestsAction
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/milestone_actions.log matches class name MilestoneActions
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/notes_actions.log matches class name NotesActions
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/oauth_applications.log matches class name OauthApplications
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/params_backward_compatibility.log matches class name ParamsBackwardCompatibility
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/preview_markdown.log matches class name PreviewMarkdown
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/renders_blob.log matches class name RendersBlob
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/renders_commits.log matches class name RendersCommits
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/renders_member_access.log matches class name RendersMemberAccess
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/renders_notes.log matches class name RendersNotes
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/repository_settings_redirect.log matches class name RepositorySettingsRedirect
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/requires_whitelisted_monitoring_client.log matches class name RequiresWhitelistedMonitoringClient
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/routable_actions.log matches class name RoutableActions
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/send_file_upload.log matches class name SendFileUpload
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/service_params.log matches class name ServiceParams
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/snippets_actions.log matches class name SnippetsActions
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/spammable_actions.log matches class name SpammableActions
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/toggle_award_emoji.log matches class name ToggleAwardEmoji
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/toggle_subscription_action.log matches class name ToggleSubscriptionAction
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/uploads_actions.log matches class name UploadsActions
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/with_performance_bar.log matches class name WithPerformanceBar
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/workhorse_request.log matches class name WorkhorseRequest
Dataflow file: ../applications/pw-gitlab//dataflow/models/ability.log matches class name Ability
Dataflow file: ../applications/pw-gitlab//dataflow/models/abuse_report.log matches class name AbuseReport
Dataflow file: ../applications/pw-gitlab//dataflow/models/appearance.log matches class name Appearance
Dataflow file: ../applications/pw-gitlab//dataflow/models/application_setting.log matches class name ApplicationSetting
Dataflow file: ../applications/pw-gitlab//dataflow/models/audit_event.log matches class name AuditEvent
Dataflow file: ../applications/pw-gitlab//dataflow/models/award_emoji.log matches class name AwardEmoji
Dataflow file: ../applications/pw-gitlab//dataflow/models/badge.log matches class name Badge
Dataflow file: ../applications/pw-gitlab//dataflow/models/badges/group_badge.log matches class name GroupBadge
Dataflow file: ../applications/pw-gitlab//dataflow/models/badges/project_badge.log matches class name ProjectBadge
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob.log matches class name Blob
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/auxiliary.log matches class name BlobViewer::Auxiliary
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/balsamiq.log matches class name BlobViewer::Balsamiq
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/base.log matches class name BlobViewer::Base
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/binary_stl.log matches class name BlobViewer::BinarySTL
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/cartfile.log matches class name BlobViewer::Cartfile
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/changelog.log matches class name BlobViewer::Changelog
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/client_side.log matches class name BlobViewer::ClientSide
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/composer_json.log matches class name BlobViewer::ComposerJson
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/contributing.log matches class name BlobViewer::Contributing
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/dependency_manager.log matches class name BlobViewer::DependencyManager
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/download.log matches class name BlobViewer::Download
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/empty.log matches class name BlobViewer::Empty
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/gemfile.log matches class name BlobViewer::Gemfile
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/gemspec.log matches class name BlobViewer::Gemspec
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/gitlab_ci_yml.log matches class name BlobViewer::GitlabCiYml
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/godeps_json.log matches class name BlobViewer::GodepsJson
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/image.log matches class name BlobViewer::Image
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/license.log matches class name BlobViewer::License
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/markup.log matches class name BlobViewer::Markup
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/notebook.log matches class name BlobViewer::Notebook
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/package_json.log matches class name BlobViewer::PackageJson
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/pdf.log matches class name BlobViewer::PDF
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/podfile.log matches class name BlobViewer::Podfile
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/podspec.log matches class name BlobViewer::Podspec
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/podspec_json.log matches class name BlobViewer::PodspecJson
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/readme.log matches class name BlobViewer::Readme
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/requirements_txt.log matches class name BlobViewer::RequirementsTxt
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/rich.log matches class name BlobViewer::Rich
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/route_map.log matches class name BlobViewer::RouteMap
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/server_side.log matches class name BlobViewer::ServerSide
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/simple.log matches class name BlobViewer::Simple
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/sketch.log matches class name BlobViewer::Sketch
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/static.log matches class name BlobViewer::Static
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/svg.log matches class name BlobViewer::SVG
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/text.log matches class name BlobViewer::Text
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/text_stl.log matches class name BlobViewer::TextSTL
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/video.log matches class name BlobViewer::Video
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/yarn_lock.log matches class name BlobViewer::YarnLock
Dataflow file: ../applications/pw-gitlab//dataflow/models/board.log matches class name Board
Dataflow file: ../applications/pw-gitlab//dataflow/models/broadcast_message.log matches class name BroadcastMessage
Dataflow file: ../applications/pw-gitlab//dataflow/models/chat_name.log matches class name ChatName
Dataflow file: ../applications/pw-gitlab//dataflow/models/chat_team.log matches class name ChatTeam
Dataflow file: ../applications/pw-gitlab//dataflow/models/ci/artifact_blob.log matches class name Ci::ArtifactBlob
Dataflow file: ../applications/pw-gitlab//dataflow/models/ci/build.log matches class name Ci::Build
Dataflow file: ../applications/pw-gitlab//dataflow/models/ci/build_metadata.log matches class name Ci::BuildMetadata
Dataflow file: ../applications/pw-gitlab//dataflow/models/ci/build_trace_section.log matches class name Ci::BuildTraceSection
Dataflow file: ../applications/pw-gitlab//dataflow/models/ci/build_trace_section_name.log matches class name Ci::BuildTraceSectionName
Dataflow file: ../applications/pw-gitlab//dataflow/models/ci/group.log matches class name Ci::Group
Dataflow file: ../applications/pw-gitlab//dataflow/models/ci/group_variable.log matches class name Ci::GroupVariable
Dataflow file: ../applications/pw-gitlab//dataflow/models/ci/job_artifact.log matches class name Ci::JobArtifact
Dataflow file: ../applications/pw-gitlab//dataflow/models/ci/legacy_stage.log matches class name Ci::LegacyStage
Dataflow file: ../applications/pw-gitlab//dataflow/models/ci/pipeline.log matches class name Ci::Pipeline
Dataflow file: ../applications/pw-gitlab//dataflow/models/ci/pipeline_schedule.log matches class name Ci::PipelineSchedule
Dataflow file: ../applications/pw-gitlab//dataflow/models/ci/pipeline_schedule_variable.log matches class name Ci::PipelineScheduleVariable
Dataflow file: ../applications/pw-gitlab//dataflow/models/ci/pipeline_variable.log matches class name Ci::PipelineVariable
Dataflow file: ../applications/pw-gitlab//dataflow/models/ci/runner.log matches class name Ci::Runner
Dataflow file: ../applications/pw-gitlab//dataflow/models/ci/runner_project.log matches class name Ci::RunnerProject
Dataflow file: ../applications/pw-gitlab//dataflow/models/ci/stage.log matches class name Ci::Stage
Dataflow file: ../applications/pw-gitlab//dataflow/models/ci/trigger.log matches class name Ci::Trigger
Dataflow file: ../applications/pw-gitlab//dataflow/models/ci/trigger_request.log matches class name Ci::TriggerRequest
Dataflow file: ../applications/pw-gitlab//dataflow/models/ci/variable.log matches class name Ci::Variable
Dataflow file: ../applications/pw-gitlab//dataflow/models/clusters/applications/helm.log matches class name Clusters::Applications::Helm
Dataflow file: ../applications/pw-gitlab//dataflow/models/clusters/applications/ingress.log matches class name Clusters::Applications::Ingress
Dataflow file: ../applications/pw-gitlab//dataflow/models/clusters/applications/prometheus.log matches class name Clusters::Applications::Prometheus
Dataflow file: ../applications/pw-gitlab//dataflow/models/clusters/applications/runner.log matches class name Clusters::Applications::Runner
Dataflow file: ../applications/pw-gitlab//dataflow/models/clusters/cluster.log matches class name Clusters::Cluster
Dataflow file: ../applications/pw-gitlab//dataflow/models/clusters/concerns/application_core.log matches class name Clusters::Concerns::ApplicationCore
Dataflow file: ../applications/pw-gitlab//dataflow/models/clusters/concerns/application_data.log matches class name Clusters::Concerns::ApplicationData
Dataflow file: ../applications/pw-gitlab//dataflow/models/clusters/concerns/application_status.log matches class name Clusters::Concerns::ApplicationStatus
Dataflow file: ../applications/pw-gitlab//dataflow/models/clusters/platforms/kubernetes.log matches class name Clusters::Platforms::Kubernetes
Dataflow file: ../applications/pw-gitlab//dataflow/models/clusters/project.log matches class name Clusters::Project
Dataflow file: ../applications/pw-gitlab//dataflow/models/clusters/providers/gcp.log matches class name Clusters::Providers::Gcp
Dataflow file: ../applications/pw-gitlab//dataflow/models/commit.log matches class name Commit
Dataflow file: ../applications/pw-gitlab//dataflow/models/commit_collection.log matches class name CommitCollection
Dataflow file: ../applications/pw-gitlab//dataflow/models/commit_range.log matches class name CommitRange
Dataflow file: ../applications/pw-gitlab//dataflow/models/commit_status.log matches class name CommitStatus
Dataflow file: ../applications/pw-gitlab//dataflow/models/compare.log matches class name Compare
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/access_requestable.log matches class name AccessRequestable
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/artifact_migratable.log matches class name ArtifactMigratable
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/atomic_internal_id.log matches class name AtomicInternalId::ClassMethods
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/avatarable.log matches class name Avatarable::ShadowMethods
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/awardable.log matches class name Awardable::ClassMethods
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/blob_like.log matches class name BlobLike
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/blocks_json_serialization.log matches class name BlocksJsonSerialization
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/bulk_member_access_load.log matches class name BulkMemberAccessLoad
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/cache_markdown_field.log matches class name CacheMarkdownField::FieldData
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/case_sensitivity.log matches class name CaseSensitivity::ClassMethods
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/chronic_duration_attribute.log matches class name ChronicDurationAttribute
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/created_at_filterable.log matches class name CreatedAtFilterable
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/deployment_platform.log matches class name DeploymentPlatform
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/discussion_on_diff.log matches class name DiscussionOnDiff
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/each_batch.log matches class name EachBatch::ClassMethods
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/editable.log matches class name Editable
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/expirable.log matches class name Expirable
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/faster_cache_keys.log matches class name FasterCacheKeys
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/feature_gate.log matches class name FeatureGate
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/ghost_user.log matches class name GhostUser
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/group_descendant.log matches class name GroupDescendant
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/has_status.log matches class name HasStatus
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/has_variable.log matches class name HasVariable
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/ignorable_column.log matches class name IgnorableColumn::ClassMethods
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/importable.log matches class name Importable
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/issuable.log matches class name Issuable::ClassMethods
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/loaded_in_group_list.log matches class name LoadedInGroupList::ClassMethods
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/manual_inverse_association.log matches class name ManualInverseAssociation::ClassMethods
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/mentionable/reference_regexes.log matches class name Mentionable::ReferenceRegexes
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/mentionable.log matches class name Mentionable::ClassMethods
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/milestoneish.log matches class name Milestoneish
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/note_on_diff.log matches class name NoteOnDiff
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/noteable.log matches class name Noteable
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/participable.log matches class name Participable::ClassMethods
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/presentable.log matches class name Presentable
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/project_features_compatibility.log matches class name ProjectFeaturesCompatibility
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/prometheus_adapter.log matches class name PrometheusAdapter
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/protected_branch_access.log matches class name ProtectedBranchAccess
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/protected_ref.log matches class name ProtectedRef
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/protected_ref_access.log matches class name ProtectedRefAccess
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/protected_tag_access.log matches class name ProtectedTagAccess
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/reactive_caching.log matches class name ReactiveCaching
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/reactive_service.log matches class name ReactiveService
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/redis_cacheable.log matches class name RedisCacheable
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/referable.log matches class name Referable::ClassMethods
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/relative_positioning.log matches class name RelativePositioning
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/resolvable_discussion.log matches class name ResolvableDiscussion
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/resolvable_note.log matches class name ResolvableNote::ClassMethods
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/routable.log matches class name Routable
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/select_for_project_authorization.log matches class name SelectForProjectAuthorization::ClassMethods
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/sha_attribute.log matches class name ShaAttribute::ClassMethods
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/sortable.log matches class name Sortable::ClassMethods
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/spammable.log matches class name Spammable::ClassMethods
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/storage/legacy_namespace.log matches class name Storage::LegacyNamespace
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/storage/legacy_project_wiki.log matches class name Storage::LegacyProjectWiki
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/storage/legacy_repository.log matches class name Storage::LegacyRepository
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/strip_attribute.log matches class name StripAttribute::ClassMethods
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/subscribable.log matches class name Subscribable
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/taskable.log matches class name Taskable
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/throttled_touch.log matches class name ThrottledTouch
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/time_trackable.log matches class name TimeTrackable
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/token_authenticatable.log matches class name TokenAuthenticatable
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/triggerable_hooks.log matches class name TriggerableHooks
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/uniquify.log matches class name Uniquify
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/updated_at_filterable.log matches class name UpdatedAtFilterable
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/valid_attribute.log matches class name ValidAttribute
Dataflow file: ../applications/pw-gitlab//dataflow/models/container_repository.log matches class name ContainerRepository
Dataflow file: ../applications/pw-gitlab//dataflow/models/conversational_development_index/card.log matches class name ConversationalDevelopmentIndex::Card
Dataflow file: ../applications/pw-gitlab//dataflow/models/conversational_development_index/idea_to_production_step.log matches class name ConversationalDevelopmentIndex::IdeaToProductionStep
Dataflow file: ../applications/pw-gitlab//dataflow/models/conversational_development_index/metric.log matches class name ConversationalDevelopmentIndex::Metric
Dataflow file: ../applications/pw-gitlab//dataflow/models/cycle_analytics.log matches class name CycleAnalytics
Dataflow file: ../applications/pw-gitlab//dataflow/models/dashboard_milestone.log matches class name DashboardMilestone
Dataflow file: ../applications/pw-gitlab//dataflow/models/deploy_key.log matches class name DeployKey
Dataflow file: ../applications/pw-gitlab//dataflow/models/deploy_keys_project.log matches class name DeployKeysProject
Dataflow file: ../applications/pw-gitlab//dataflow/models/deploy_token.log matches class name DeployToken
Dataflow file: ../applications/pw-gitlab//dataflow/models/deployment.log matches class name Deployment
Dataflow file: ../applications/pw-gitlab//dataflow/models/diff_discussion.log matches class name DiffDiscussion
Dataflow file: ../applications/pw-gitlab//dataflow/models/diff_note.log matches class name DiffNote
Dataflow file: ../applications/pw-gitlab//dataflow/models/diff_viewer/added.log matches class name DiffViewer::Added
Dataflow file: ../applications/pw-gitlab//dataflow/models/diff_viewer/base.log matches class name DiffViewer::Base
Dataflow file: ../applications/pw-gitlab//dataflow/models/diff_viewer/client_side.log matches class name DiffViewer::ClientSide
Dataflow file: ../applications/pw-gitlab//dataflow/models/diff_viewer/deleted.log matches class name DiffViewer::Deleted
Dataflow file: ../applications/pw-gitlab//dataflow/models/diff_viewer/image.log matches class name DiffViewer::Image
Dataflow file: ../applications/pw-gitlab//dataflow/models/diff_viewer/mode_changed.log matches class name DiffViewer::ModeChanged
Dataflow file: ../applications/pw-gitlab//dataflow/models/diff_viewer/no_preview.log matches class name DiffViewer::NoPreview
Dataflow file: ../applications/pw-gitlab//dataflow/models/diff_viewer/not_diffable.log matches class name DiffViewer::NotDiffable
Dataflow file: ../applications/pw-gitlab//dataflow/models/diff_viewer/renamed.log matches class name DiffViewer::Renamed
Dataflow file: ../applications/pw-gitlab//dataflow/models/diff_viewer/rich.log matches class name DiffViewer::Rich
Dataflow file: ../applications/pw-gitlab//dataflow/models/diff_viewer/server_side.log matches class name DiffViewer::ServerSide
Dataflow file: ../applications/pw-gitlab//dataflow/models/diff_viewer/simple.log matches class name DiffViewer::Simple
Dataflow file: ../applications/pw-gitlab//dataflow/models/diff_viewer/static.log matches class name DiffViewer::Static
Dataflow file: ../applications/pw-gitlab//dataflow/models/diff_viewer/text.log matches class name DiffViewer::Text
Dataflow file: ../applications/pw-gitlab//dataflow/models/directly_addressed_user.log matches class name DirectlyAddressedUser
Dataflow file: ../applications/pw-gitlab//dataflow/models/discussion.log matches class name Discussion
Dataflow file: ../applications/pw-gitlab//dataflow/models/discussion_note.log matches class name DiscussionNote
Dataflow file: ../applications/pw-gitlab//dataflow/models/email.log matches class name Email
Dataflow file: ../applications/pw-gitlab//dataflow/models/environment.log matches class name Environment
Dataflow file: ../applications/pw-gitlab//dataflow/models/epic.log matches class name Epic
Dataflow file: ../applications/pw-gitlab//dataflow/models/event.log matches class name Event
Dataflow file: ../applications/pw-gitlab//dataflow/models/event_collection.log matches class name EventCollection
Dataflow file: ../applications/pw-gitlab//dataflow/models/external_issue.log matches class name ExternalIssue
Dataflow file: ../applications/pw-gitlab//dataflow/models/fork_network.log matches class name ForkNetwork
Dataflow file: ../applications/pw-gitlab//dataflow/models/fork_network_member.log matches class name ForkNetworkMember
Dataflow file: ../applications/pw-gitlab//dataflow/models/forked_project_link.log matches class name ForkedProjectLink
Dataflow file: ../applications/pw-gitlab//dataflow/models/generic_commit_status.log matches class name GenericCommitStatus
Dataflow file: ../applications/pw-gitlab//dataflow/models/global_label.log matches class name GlobalLabel
Dataflow file: ../applications/pw-gitlab//dataflow/models/global_milestone.log matches class name GlobalMilestone
Dataflow file: ../applications/pw-gitlab//dataflow/models/gpg_key.log matches class name GpgKey
Dataflow file: ../applications/pw-gitlab//dataflow/models/gpg_key_subkey.log matches class name GpgKeySubkey
Dataflow file: ../applications/pw-gitlab//dataflow/models/gpg_signature.log matches class name GpgSignature
Dataflow file: ../applications/pw-gitlab//dataflow/models/group.log matches class name Group
Dataflow file: ../applications/pw-gitlab//dataflow/models/group_custom_attribute.log matches class name GroupCustomAttribute
Dataflow file: ../applications/pw-gitlab//dataflow/models/group_label.log matches class name GroupLabel
Dataflow file: ../applications/pw-gitlab//dataflow/models/group_milestone.log matches class name GroupMilestone
Dataflow file: ../applications/pw-gitlab//dataflow/models/guest.log matches class name Guest
Dataflow file: ../applications/pw-gitlab//dataflow/models/hooks/project_hook.log matches class name ProjectHook
Dataflow file: ../applications/pw-gitlab//dataflow/models/hooks/service_hook.log matches class name ServiceHook
Dataflow file: ../applications/pw-gitlab//dataflow/models/hooks/system_hook.log matches class name SystemHook
Dataflow file: ../applications/pw-gitlab//dataflow/models/hooks/web_hook.log matches class name WebHook
Dataflow file: ../applications/pw-gitlab//dataflow/models/hooks/web_hook_log.log matches class name WebHookLog
Dataflow file: ../applications/pw-gitlab//dataflow/models/identity.log matches class name Identity
Dataflow file: ../applications/pw-gitlab//dataflow/models/individual_note_discussion.log matches class name IndividualNoteDiscussion
Dataflow file: ../applications/pw-gitlab//dataflow/models/instance_configuration.log matches class name InstanceConfiguration
Dataflow file: ../applications/pw-gitlab//dataflow/models/internal_id.log matches class name InternalId::InternalIdGenerator
Dataflow file: ../applications/pw-gitlab//dataflow/models/issue/metrics.log matches class name Issue::Metrics
Dataflow file: ../applications/pw-gitlab//dataflow/models/issue.log matches class name Issue
Dataflow file: ../applications/pw-gitlab//dataflow/models/issue_assignee.log matches class name IssueAssignee
Dataflow file: ../applications/pw-gitlab//dataflow/models/issue_collection.log matches class name IssueCollection
Dataflow file: ../applications/pw-gitlab//dataflow/models/key.log matches class name Key
Dataflow file: ../applications/pw-gitlab//dataflow/models/label.log matches class name Label
Dataflow file: ../applications/pw-gitlab//dataflow/models/label_link.log matches class name LabelLink
Dataflow file: ../applications/pw-gitlab//dataflow/models/label_priority.log matches class name LabelPriority
Dataflow file: ../applications/pw-gitlab//dataflow/models/legacy_diff_discussion.log matches class name LegacyDiffDiscussion
Dataflow file: ../applications/pw-gitlab//dataflow/models/legacy_diff_note.log matches class name LegacyDiffNote
Dataflow file: ../applications/pw-gitlab//dataflow/models/lfs_file_lock.log matches class name LfsFileLock
Dataflow file: ../applications/pw-gitlab//dataflow/models/lfs_object.log matches class name LfsObject
Dataflow file: ../applications/pw-gitlab//dataflow/models/lfs_objects_project.log matches class name LfsObjectsProject
Dataflow file: ../applications/pw-gitlab//dataflow/models/list.log matches class name List
Dataflow file: ../applications/pw-gitlab//dataflow/models/member.log matches class name Member
Dataflow file: ../applications/pw-gitlab//dataflow/models/members/group_member.log matches class name GroupMember
Dataflow file: ../applications/pw-gitlab//dataflow/models/members/project_member.log matches class name ProjectMember
Dataflow file: ../applications/pw-gitlab//dataflow/models/merge_request/metrics.log matches class name MergeRequest::Metrics
Dataflow file: ../applications/pw-gitlab//dataflow/models/merge_request.log matches class name MergeRequest
Dataflow file: ../applications/pw-gitlab//dataflow/models/merge_request_diff.log matches class name MergeRequestDiff
Dataflow file: ../applications/pw-gitlab//dataflow/models/merge_request_diff_commit.log matches class name MergeRequestDiffCommit
Dataflow file: ../applications/pw-gitlab//dataflow/models/merge_request_diff_file.log matches class name MergeRequestDiffFile
Dataflow file: ../applications/pw-gitlab//dataflow/models/merge_requests_closing_issues.log matches class name MergeRequestsClosingIssues
Dataflow file: ../applications/pw-gitlab//dataflow/models/milestone.log matches class name Milestone
Dataflow file: ../applications/pw-gitlab//dataflow/models/namespace.log matches class name Namespace
Dataflow file: ../applications/pw-gitlab//dataflow/models/network/commit.log matches class name Network::Commit
Dataflow file: ../applications/pw-gitlab//dataflow/models/network/graph.log matches class name Network::Graph
Dataflow file: ../applications/pw-gitlab//dataflow/models/note.log matches class name Note::SpecialRole
Dataflow file: ../applications/pw-gitlab//dataflow/models/notification_reason.log matches class name NotificationReason
Dataflow file: ../applications/pw-gitlab//dataflow/models/notification_recipient.log matches class name NotificationRecipient
Dataflow file: ../applications/pw-gitlab//dataflow/models/notification_setting.log matches class name NotificationSetting
Dataflow file: ../applications/pw-gitlab//dataflow/models/oauth_access_grant.log matches class name OauthAccessGrant
Dataflow file: ../applications/pw-gitlab//dataflow/models/oauth_access_token.log matches class name OauthAccessToken
Dataflow file: ../applications/pw-gitlab//dataflow/models/out_of_context_discussion.log matches class name OutOfContextDiscussion
Dataflow file: ../applications/pw-gitlab//dataflow/models/pages_domain.log matches class name PagesDomain
Dataflow file: ../applications/pw-gitlab//dataflow/models/personal_access_token.log matches class name PersonalAccessToken
Dataflow file: ../applications/pw-gitlab//dataflow/models/personal_snippet.log matches class name PersonalSnippet
Dataflow file: ../applications/pw-gitlab//dataflow/models/project.log matches class name Project
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_authorization.log matches class name ProjectAuthorization
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_auto_devops.log matches class name ProjectAutoDevops
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_custom_attribute.log matches class name ProjectCustomAttribute
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_deploy_token.log matches class name ProjectDeployToken
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_feature.log matches class name ProjectFeature
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_group_link.log matches class name ProjectGroupLink
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_import_data.log matches class name ProjectImportData
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_label.log matches class name ProjectLabel
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/asana_service.log matches class name AsanaService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/assembla_service.log matches class name AssemblaService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/bamboo_service.log matches class name BambooService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/bugzilla_service.log matches class name BugzillaService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/buildkite_service.log matches class name BuildkiteService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/builds_email_service.log matches class name BuildsEmailService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/campfire_service.log matches class name CampfireService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/chat_message/base_message.log matches class name ChatMessage::BaseMessage
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/chat_message/issue_message.log matches class name ChatMessage::IssueMessage
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/chat_message/merge_message.log matches class name ChatMessage::MergeMessage
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/chat_message/note_message.log matches class name ChatMessage::NoteMessage
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/chat_message/pipeline_message.log matches class name ChatMessage::PipelineMessage
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/chat_message/push_message.log matches class name ChatMessage::PushMessage
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/chat_message/wiki_page_message.log matches class name ChatMessage::WikiPageMessage
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/chat_notification_service.log matches class name ChatNotificationService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/ci_service.log matches class name CiService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/custom_issue_tracker_service.log matches class name CustomIssueTrackerService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/deployment_service.log matches class name DeploymentService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/drone_ci_service.log matches class name DroneCiService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/emails_on_push_service.log matches class name EmailsOnPushService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/external_wiki_service.log matches class name ExternalWikiService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/flowdock_service.log matches class name Flowdock::Git::Builder
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/gemnasium_service.log matches class name GemnasiumService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/gitlab_issue_tracker_service.log matches class name GitlabIssueTrackerService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/hipchat_service.log matches class name HipchatService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/irker_service.log matches class name IrkerService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/issue_tracker_service.log matches class name IssueTrackerService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/jira_service.log matches class name JiraService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/kubernetes_service.log matches class name KubernetesService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/mattermost_service.log matches class name MattermostService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/mattermost_slash_commands_service.log matches class name MattermostSlashCommandsService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/microsoft_teams_service.log matches class name MicrosoftTeamsService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/mock_ci_service.log matches class name MockCiService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/mock_deployment_service.log matches class name MockDeploymentService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/mock_monitoring_service.log matches class name MockMonitoringService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/monitoring_service.log matches class name MonitoringService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/packagist_service.log matches class name PackagistService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/pipelines_email_service.log matches class name PipelinesEmailService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/pivotaltracker_service.log matches class name PivotaltrackerService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/prometheus_service.log matches class name PrometheusService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/pushover_service.log matches class name PushoverService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/redmine_service.log matches class name RedmineService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/slack_service.log matches class name SlackService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/slack_slash_commands_service.log matches class name SlackSlashCommandsService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/slash_commands_service.log matches class name SlashCommandsService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/teamcity_service.log matches class name TeamcityService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_snippet.log matches class name ProjectSnippet
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_statistics.log matches class name ProjectStatistics
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_team.log matches class name ProjectTeam
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_wiki.log matches class name ProjectWiki
Dataflow file: ../applications/pw-gitlab//dataflow/models/protectable_dropdown.log matches class name ProtectableDropdown
Dataflow file: ../applications/pw-gitlab//dataflow/models/protected_branch/merge_access_level.log matches class name ProtectedBranch::MergeAccessLevel
Dataflow file: ../applications/pw-gitlab//dataflow/models/protected_branch/push_access_level.log matches class name ProtectedBranch::PushAccessLevel
Dataflow file: ../applications/pw-gitlab//dataflow/models/protected_branch.log matches class name ProtectedBranch
Dataflow file: ../applications/pw-gitlab//dataflow/models/protected_ref_matcher.log matches class name ProtectedRefMatcher
Dataflow file: ../applications/pw-gitlab//dataflow/models/protected_tag/create_access_level.log matches class name ProtectedTag::CreateAccessLevel
Dataflow file: ../applications/pw-gitlab//dataflow/models/protected_tag.log matches class name ProtectedTag
Dataflow file: ../applications/pw-gitlab//dataflow/models/push_event.log matches class name PushEvent
Dataflow file: ../applications/pw-gitlab//dataflow/models/push_event_payload.log matches class name PushEventPayload
Dataflow file: ../applications/pw-gitlab//dataflow/models/readme_blob.log matches class name ReadmeBlob
Dataflow file: ../applications/pw-gitlab//dataflow/models/redirect_route.log matches class name RedirectRoute
Dataflow file: ../applications/pw-gitlab//dataflow/models/release.log matches class name Release
Dataflow file: ../applications/pw-gitlab//dataflow/models/repository.log matches class name Repository
Dataflow file: ../applications/pw-gitlab//dataflow/models/route.log matches class name Route
Dataflow file: ../applications/pw-gitlab//dataflow/models/security_event.log matches class name SecurityEvent
Dataflow file: ../applications/pw-gitlab//dataflow/models/sent_notification.log matches class name SentNotification
Dataflow file: ../applications/pw-gitlab//dataflow/models/service.log matches class name Service
Dataflow file: ../applications/pw-gitlab//dataflow/models/snippet.log matches class name Snippet
Dataflow file: ../applications/pw-gitlab//dataflow/models/snippet_blob.log matches class name SnippetBlob
Dataflow file: ../applications/pw-gitlab//dataflow/models/spam_log.log matches class name SpamLog
Dataflow file: ../applications/pw-gitlab//dataflow/models/storage/hashed_project.log matches class name Storage::HashedProject
Dataflow file: ../applications/pw-gitlab//dataflow/models/storage/legacy_project.log matches class name Storage::LegacyProject
Dataflow file: ../applications/pw-gitlab//dataflow/models/subscription.log matches class name Subscription
Dataflow file: ../applications/pw-gitlab//dataflow/models/system_note_metadata.log matches class name SystemNoteMetadata
Dataflow file: ../applications/pw-gitlab//dataflow/models/timelog.log matches class name Timelog
Dataflow file: ../applications/pw-gitlab//dataflow/models/todo.log matches class name Todo
Dataflow file: ../applications/pw-gitlab//dataflow/models/tree.log matches class name Tree
Dataflow file: ../applications/pw-gitlab//dataflow/models/trending_project.log matches class name TrendingProject
Dataflow file: ../applications/pw-gitlab//dataflow/models/u2f_registration.log matches class name U2fRegistration
Dataflow file: ../applications/pw-gitlab//dataflow/models/upload.log matches class name Upload
Dataflow file: ../applications/pw-gitlab//dataflow/models/user.log matches class name User
Dataflow file: ../applications/pw-gitlab//dataflow/models/user_agent_detail.log matches class name UserAgentDetail
Dataflow file: ../applications/pw-gitlab//dataflow/models/user_callout.log matches class name UserCallout
Dataflow file: ../applications/pw-gitlab//dataflow/models/user_custom_attribute.log matches class name UserCustomAttribute
Dataflow file: ../applications/pw-gitlab//dataflow/models/user_interacted_project.log matches class name UserInteractedProject
Dataflow file: ../applications/pw-gitlab//dataflow/models/user_synced_attributes_metadata.log matches class name UserSyncedAttributesMetadata
Dataflow file: ../applications/pw-gitlab//dataflow/models/users_star_project.log matches class name UsersStarProject
Dataflow file: ../applications/pw-gitlab//dataflow/models/wiki_directory.log matches class name WikiDirectory
Dataflow file: ../applications/pw-gitlab//dataflow/models/wiki_page.log matches class name WikiPage
Dataflow file: ../applications/pw-gitlab//dataflow/policies/base_policy.log matches class name BasePolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/ci/build_policy.log matches class name Ci::BuildPolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/ci/pipeline_policy.log matches class name Ci::PipelinePolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/ci/pipeline_schedule_policy.log matches class name Ci::PipelineSchedulePolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/ci/runner_policy.log matches class name Ci::RunnerPolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/ci/trigger_policy.log matches class name Ci::TriggerPolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/clusters/cluster_policy.log matches class name Clusters::ClusterPolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/commit_status_policy.log matches class name CommitStatusPolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/deploy_key_policy.log matches class name DeployKeyPolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/deploy_token_policy.log matches class name DeployTokenPolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/deployment_policy.log matches class name DeploymentPolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/environment_policy.log matches class name EnvironmentPolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/external_issue_policy.log matches class name ExternalIssuePolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/global_policy.log matches class name GlobalPolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/group_label_policy.log matches class name GroupLabelPolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/group_member_policy.log matches class name GroupMemberPolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/group_policy.log matches class name GroupPolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/issuable_policy.log matches class name IssuablePolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/issue_policy.log matches class name IssuePolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/merge_request_policy.log matches class name MergeRequestPolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/namespace_policy.log matches class name NamespacePolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/nil_policy.log matches class name NilPolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/note_policy.log matches class name NotePolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/personal_snippet_policy.log matches class name PersonalSnippetPolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/project_label_policy.log matches class name ProjectLabelPolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/project_member_policy.log matches class name ProjectMemberPolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/project_policy/class_methods.log matches class name ProjectPolicy::ClassMethods
Dataflow file: ../applications/pw-gitlab//dataflow/policies/project_policy.log matches class name ProjectPolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/project_snippet_policy.log matches class name ProjectSnippetPolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/protected_branch_policy.log matches class name ProtectedBranchPolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/user_policy.log matches class name UserPolicy
Dataflow file: ../applications/pw-gitlab//dataflow/presenters/ci/build_metadata_presenter.log matches class name Ci::BuildMetadataPresenter
Dataflow file: ../applications/pw-gitlab//dataflow/presenters/ci/build_presenter.log matches class name Ci::BuildPresenter
Dataflow file: ../applications/pw-gitlab//dataflow/presenters/ci/group_variable_presenter.log matches class name Ci::GroupVariablePresenter
Dataflow file: ../applications/pw-gitlab//dataflow/presenters/ci/pipeline_presenter.log matches class name Ci::PipelinePresenter
Dataflow file: ../applications/pw-gitlab//dataflow/presenters/ci/variable_presenter.log matches class name Ci::VariablePresenter
Dataflow file: ../applications/pw-gitlab//dataflow/presenters/clusters/cluster_presenter.log matches class name Clusters::ClusterPresenter
Dataflow file: ../applications/pw-gitlab//dataflow/presenters/conversational_development_index/metric_presenter.log matches class name ConversationalDevelopmentIndex::MetricPresenter
Dataflow file: ../applications/pw-gitlab//dataflow/presenters/group_member_presenter.log matches class name GroupMemberPresenter
Dataflow file: ../applications/pw-gitlab//dataflow/presenters/member_presenter.log matches class name MemberPresenter
Dataflow file: ../applications/pw-gitlab//dataflow/presenters/members_presenter.log matches class name MembersPresenter
Dataflow file: ../applications/pw-gitlab//dataflow/presenters/merge_request_presenter.log matches class name MergeRequestPresenter
Dataflow file: ../applications/pw-gitlab//dataflow/presenters/project_member_presenter.log matches class name ProjectMemberPresenter
Dataflow file: ../applications/pw-gitlab//dataflow/presenters/project_presenter.log matches class name ProjectPresenter
Dataflow file: ../applications/pw-gitlab//dataflow/presenters/projects/settings/deploy_keys_presenter.log matches class name Projects::Settings::DeployKeysPresenter
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/analytics_build_entity.log matches class name AnalyticsBuildEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/analytics_build_serializer.log matches class name AnalyticsBuildSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/analytics_commit_entity.log matches class name AnalyticsCommitEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/analytics_commit_serializer.log matches class name AnalyticsCommitSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/analytics_generic_serializer.log matches class name AnalyticsGenericSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/analytics_issue_entity.log matches class name AnalyticsIssueEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/analytics_issue_serializer.log matches class name AnalyticsIssueSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/analytics_merge_request_entity.log matches class name AnalyticsMergeRequestEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/analytics_merge_request_serializer.log matches class name AnalyticsMergeRequestSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/analytics_stage_entity.log matches class name AnalyticsStageEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/analytics_stage_serializer.log matches class name AnalyticsStageSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/analytics_summary_entity.log matches class name AnalyticsSummaryEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/analytics_summary_serializer.log matches class name AnalyticsSummarySerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/award_emoji_entity.log matches class name AwardEmojiEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/base_serializer.log matches class name BaseSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/blob_entity.log matches class name BlobEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/build_action_entity.log matches class name BuildActionEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/build_artifact_entity.log matches class name BuildArtifactEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/build_details_entity.log matches class name BuildDetailsEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/build_metadata_entity.log matches class name BuildMetadataEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/build_serializer.log matches class name BuildSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/cluster_application_entity.log matches class name ClusterApplicationEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/cluster_entity.log matches class name ClusterEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/cluster_serializer.log matches class name ClusterSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/cohort_activity_month_entity.log matches class name CohortActivityMonthEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/cohort_entity.log matches class name CohortEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/cohorts_entity.log matches class name CohortsEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/cohorts_serializer.log matches class name CohortsSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/commit_entity.log matches class name CommitEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/concerns/with_pagination.log matches class name WithPagination
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/container_repositories_serializer.log matches class name ContainerRepositoriesSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/container_repository_entity.log matches class name ContainerRepositoryEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/container_tag_entity.log matches class name ContainerTagEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/container_tags_serializer.log matches class name ContainerTagsSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/deploy_key_entity.log matches class name DeployKeyEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/deploy_key_serializer.log matches class name DeployKeySerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/deploy_keys_project_entity.log matches class name DeployKeysProjectEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/deployment_entity.log matches class name DeploymentEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/deployment_serializer.log matches class name DeploymentSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/diff_file_entity.log matches class name DiffFileEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/discussion_entity.log matches class name DiscussionEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/discussion_serializer.log matches class name DiscussionSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/entity_date_helper.log matches class name EntityDateHelper
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/entity_request.log matches class name EntityRequest
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/environment_entity.log matches class name EnvironmentEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/environment_serializer.log matches class name EnvironmentSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/group_child_entity.log matches class name GroupChildEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/group_child_serializer.log matches class name GroupChildSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/group_entity.log matches class name GroupEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/group_serializer.log matches class name GroupSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/group_variable_entity.log matches class name GroupVariableEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/group_variable_serializer.log matches class name GroupVariableSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/issuable_entity.log matches class name IssuableEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/issuable_sidebar_entity.log matches class name IssuableSidebarEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/issue_entity.log matches class name IssueEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/issue_serializer.log matches class name IssueSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/issue_sidebar_entity.log matches class name IssueSidebarEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/job_entity.log matches class name JobEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/job_group_entity.log matches class name JobGroupEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/label_entity.log matches class name LabelEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/label_serializer.log matches class name LabelSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/lfs_file_lock_entity.log matches class name LfsFileLockEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/lfs_file_lock_serializer.log matches class name LfsFileLockSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/merge_request_basic_entity.log matches class name MergeRequestBasicEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/merge_request_basic_serializer.log matches class name MergeRequestBasicSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/merge_request_create_entity.log matches class name MergeRequestCreateEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/merge_request_create_serializer.log matches class name MergeRequestCreateSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/merge_request_metrics_entity.log matches class name MergeRequestMetricsEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/merge_request_serializer.log matches class name MergeRequestSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/merge_request_widget_entity.log matches class name MergeRequestWidgetEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/note_attachment_entity.log matches class name NoteAttachmentEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/note_entity.log matches class name NoteEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/note_user_entity.log matches class name NoteUserEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/pipeline_details_entity.log matches class name PipelineDetailsEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/pipeline_entity.log matches class name PipelineEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/pipeline_serializer.log matches class name PipelineSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/project_entity.log matches class name ProjectEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/project_note_entity.log matches class name ProjectNoteEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/project_note_serializer.log matches class name ProjectNoteSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/project_serializer.log matches class name ProjectSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/request_aware_entity.log matches class name RequestAwareEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/runner_entity.log matches class name RunnerEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/stage_entity.log matches class name StageEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/status_entity.log matches class name StatusEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/submodule_entity.log matches class name SubmoduleEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/time_trackable_entity.log matches class name TimeTrackableEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/tree_entity.log matches class name TreeEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/tree_root_entity.log matches class name TreeRootEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/tree_serializer.log matches class name TreeSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/user_entity.log matches class name UserEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/user_serializer.log matches class name UserSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/variable_entity.log matches class name VariableEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/variable_serializer.log matches class name VariableSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/services/access_token_validation_service.log matches class name AccessTokenValidationService
Dataflow file: ../applications/pw-gitlab//dataflow/services/after_branch_delete_service.log matches class name AfterBranchDeleteService
Dataflow file: ../applications/pw-gitlab//dataflow/services/akismet_service.log matches class name AkismetService
Dataflow file: ../applications/pw-gitlab//dataflow/services/application_settings/base_service.log matches class name ApplicationSettings::BaseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/application_settings/update_service.log matches class name ApplicationSettings::UpdateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/applications/create_service.log matches class name Applications::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/audit_event_service.log matches class name AuditEventService
Dataflow file: ../applications/pw-gitlab//dataflow/services/auth/container_registry_authentication_service.log matches class name Auth::ContainerRegistryAuthenticationService
Dataflow file: ../applications/pw-gitlab//dataflow/services/badges/base_service.log matches class name Badges::BaseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/badges/build_service.log matches class name Badges::BuildService
Dataflow file: ../applications/pw-gitlab//dataflow/services/badges/create_service.log matches class name Badges::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/badges/update_service.log matches class name Badges::UpdateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/base_count_service.log matches class name BaseCountService
Dataflow file: ../applications/pw-gitlab//dataflow/services/base_renderer.log matches class name BaseRenderer
Dataflow file: ../applications/pw-gitlab//dataflow/services/base_service.log matches class name BaseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/boards/base_service.log matches class name Boards::BaseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/boards/create_service.log matches class name Boards::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/boards/issues/create_service.log matches class name Boards::Issues::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/boards/issues/list_service.log matches class name Boards::Issues::ListService
Dataflow file: ../applications/pw-gitlab//dataflow/services/boards/issues/move_service.log matches class name Boards::Issues::MoveService
Dataflow file: ../applications/pw-gitlab//dataflow/services/boards/list_service.log matches class name Boards::ListService
Dataflow file: ../applications/pw-gitlab//dataflow/services/boards/lists/create_service.log matches class name Boards::Lists::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/boards/lists/destroy_service.log matches class name Boards::Lists::DestroyService
Dataflow file: ../applications/pw-gitlab//dataflow/services/boards/lists/generate_service.log matches class name Boards::Lists::GenerateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/boards/lists/list_service.log matches class name Boards::Lists::ListService
Dataflow file: ../applications/pw-gitlab//dataflow/services/boards/lists/move_service.log matches class name Boards::Lists::MoveService
Dataflow file: ../applications/pw-gitlab//dataflow/services/chat_names/authorize_user_service.log matches class name ChatNames::AuthorizeUserService
Dataflow file: ../applications/pw-gitlab//dataflow/services/chat_names/find_user_service.log matches class name ChatNames::FindUserService
Dataflow file: ../applications/pw-gitlab//dataflow/services/check_gcp_project_billing_service.log matches class name CheckGcpProjectBillingService
Dataflow file: ../applications/pw-gitlab//dataflow/services/ci/create_pipeline_schedule_service.log matches class name Ci::CreatePipelineScheduleService
Dataflow file: ../applications/pw-gitlab//dataflow/services/ci/create_pipeline_service.log matches class name Ci::CreatePipelineService
Dataflow file: ../applications/pw-gitlab//dataflow/services/ci/ensure_stage_service.log matches class name Ci::EnsureStageService
Dataflow file: ../applications/pw-gitlab//dataflow/services/ci/extract_sections_from_build_trace_service.log matches class name Ci::ExtractSectionsFromBuildTraceService
Dataflow file: ../applications/pw-gitlab//dataflow/services/ci/fetch_kubernetes_token_service.log matches class name Ci::FetchKubernetesTokenService
Dataflow file: ../applications/pw-gitlab//dataflow/services/ci/pipeline_trigger_service.log matches class name Ci::PipelineTriggerService
Dataflow file: ../applications/pw-gitlab//dataflow/services/ci/play_build_service.log matches class name Ci::PlayBuildService
Dataflow file: ../applications/pw-gitlab//dataflow/services/ci/process_pipeline_service.log matches class name Ci::ProcessPipelineService
Dataflow file: ../applications/pw-gitlab//dataflow/services/ci/register_job_service.log matches class name Ci::RegisterJobService
Dataflow file: ../applications/pw-gitlab//dataflow/services/ci/retry_build_service.log matches class name Ci::RetryBuildService
Dataflow file: ../applications/pw-gitlab//dataflow/services/ci/retry_pipeline_service.log matches class name Ci::RetryPipelineService
Dataflow file: ../applications/pw-gitlab//dataflow/services/ci/stop_environments_service.log matches class name Ci::StopEnvironmentsService
Dataflow file: ../applications/pw-gitlab//dataflow/services/ci/update_build_queue_service.log matches class name Ci::UpdateBuildQueueService
Dataflow file: ../applications/pw-gitlab//dataflow/services/ci/update_runner_service.log matches class name Ci::UpdateRunnerService
Dataflow file: ../applications/pw-gitlab//dataflow/services/clusters/applications/base_helm_service.log matches class name Clusters::Applications::BaseHelmService
Dataflow file: ../applications/pw-gitlab//dataflow/services/clusters/applications/check_ingress_ip_address_service.log matches class name Clusters::Applications::CheckIngressIpAddressService
Dataflow file: ../applications/pw-gitlab//dataflow/services/clusters/applications/check_installation_progress_service.log matches class name Clusters::Applications::CheckInstallationProgressService
Dataflow file: ../applications/pw-gitlab//dataflow/services/clusters/applications/install_service.log matches class name Clusters::Applications::InstallService
Dataflow file: ../applications/pw-gitlab//dataflow/services/clusters/applications/schedule_installation_service.log matches class name Clusters::Applications::ScheduleInstallationService
Dataflow file: ../applications/pw-gitlab//dataflow/services/clusters/create_service.log matches class name Clusters::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/clusters/gcp/fetch_operation_service.log matches class name Clusters::Gcp::FetchOperationService
Dataflow file: ../applications/pw-gitlab//dataflow/services/clusters/gcp/finalize_creation_service.log matches class name Clusters::Gcp::FinalizeCreationService
Dataflow file: ../applications/pw-gitlab//dataflow/services/clusters/gcp/provision_service.log matches class name Clusters::Gcp::ProvisionService
Dataflow file: ../applications/pw-gitlab//dataflow/services/clusters/gcp/verify_provision_status_service.log matches class name Clusters::Gcp::VerifyProvisionStatusService
Dataflow file: ../applications/pw-gitlab//dataflow/services/clusters/update_service.log matches class name Clusters::UpdateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/cohorts_service.log matches class name CohortsService
Dataflow file: ../applications/pw-gitlab//dataflow/services/commits/change_service.log matches class name Commits::ChangeService
Dataflow file: ../applications/pw-gitlab//dataflow/services/commits/cherry_pick_service.log matches class name Commits::CherryPickService
Dataflow file: ../applications/pw-gitlab//dataflow/services/commits/create_service.log matches class name Commits::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/commits/revert_service.log matches class name Commits::RevertService
Dataflow file: ../applications/pw-gitlab//dataflow/services/compare_service.log matches class name CompareService
Dataflow file: ../applications/pw-gitlab//dataflow/services/concerns/issues/resolve_discussions.log matches class name Issues::ResolveDiscussions
Dataflow file: ../applications/pw-gitlab//dataflow/services/concerns/update_visibility_level.log matches class name UpdateVisibilityLevel
Dataflow file: ../applications/pw-gitlab//dataflow/services/concerns/users/new_user_notifier.log matches class name Users::NewUserNotifier
Dataflow file: ../applications/pw-gitlab//dataflow/services/create_branch_service.log matches class name CreateBranchService
Dataflow file: ../applications/pw-gitlab//dataflow/services/create_deployment_service.log matches class name CreateDeploymentService
Dataflow file: ../applications/pw-gitlab//dataflow/services/create_release_service.log matches class name CreateReleaseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/create_snippet_service.log matches class name CreateSnippetService
Dataflow file: ../applications/pw-gitlab//dataflow/services/delete_branch_service.log matches class name DeleteBranchService
Dataflow file: ../applications/pw-gitlab//dataflow/services/delete_merged_branches_service.log matches class name DeleteMergedBranchesService
Dataflow file: ../applications/pw-gitlab//dataflow/services/deploy_keys/create_service.log matches class name DeployKeys::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/deploy_tokens/create_service.log matches class name DeployTokens::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/discussions/base_service.log matches class name Discussions::BaseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/discussions/resolve_service.log matches class name Discussions::ResolveService
Dataflow file: ../applications/pw-gitlab//dataflow/services/discussions/update_diff_position_service.log matches class name Discussions::UpdateDiffPositionService
Dataflow file: ../applications/pw-gitlab//dataflow/services/emails/base_service.log matches class name Emails::BaseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/emails/confirm_service.log matches class name Emails::ConfirmService
Dataflow file: ../applications/pw-gitlab//dataflow/services/emails/create_service.log matches class name Emails::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/emails/destroy_service.log matches class name Emails::DestroyService
Dataflow file: ../applications/pw-gitlab//dataflow/services/event_create_service.log matches class name EventCreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/events/render_service.log matches class name Events::RenderService
Dataflow file: ../applications/pw-gitlab//dataflow/services/files/base_service.log matches class name Files::BaseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/files/create_dir_service.log matches class name Files::CreateDirService
Dataflow file: ../applications/pw-gitlab//dataflow/services/files/create_service.log matches class name Files::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/files/delete_service.log matches class name Files::DeleteService
Dataflow file: ../applications/pw-gitlab//dataflow/services/files/multi_service.log matches class name Files::MultiService
Dataflow file: ../applications/pw-gitlab//dataflow/services/files/update_service.log matches class name Files::UpdateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/git_push_service.log matches class name GitPushService
Dataflow file: ../applications/pw-gitlab//dataflow/services/git_tag_push_service.log matches class name GitTagPushService
Dataflow file: ../applications/pw-gitlab//dataflow/services/gpg_keys/create_service.log matches class name GpgKeys::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/gravatar_service.log matches class name GravatarService
Dataflow file: ../applications/pw-gitlab//dataflow/services/groups/base_service.log matches class name Groups::BaseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/groups/create_service.log matches class name Groups::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/groups/destroy_service.log matches class name Groups::DestroyService
Dataflow file: ../applications/pw-gitlab//dataflow/services/groups/nested_create_service.log matches class name Groups::NestedCreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/groups/transfer_service.log matches class name Groups::TransferService
Dataflow file: ../applications/pw-gitlab//dataflow/services/groups/update_service.log matches class name Groups::UpdateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/ham_service.log matches class name HamService
Dataflow file: ../applications/pw-gitlab//dataflow/services/import_export_clean_up_service.log matches class name ImportExportCleanUpService
Dataflow file: ../applications/pw-gitlab//dataflow/services/issuable/bulk_update_service.log matches class name Issuable::BulkUpdateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/issuable/common_system_notes_service.log matches class name Issuable::CommonSystemNotesService
Dataflow file: ../applications/pw-gitlab//dataflow/services/issuable/destroy_service.log matches class name Issuable::DestroyService
Dataflow file: ../applications/pw-gitlab//dataflow/services/issuable_base_service.log matches class name IssuableBaseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/issues/base_service.log matches class name Issues::BaseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/issues/build_service.log matches class name Issues::BuildService
Dataflow file: ../applications/pw-gitlab//dataflow/services/issues/close_service.log matches class name Issues::CloseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/issues/create_service.log matches class name Issues::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/issues/duplicate_service.log matches class name Issues::DuplicateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/issues/fetch_referenced_merge_requests_service.log matches class name Issues::FetchReferencedMergeRequestsService
Dataflow file: ../applications/pw-gitlab//dataflow/services/issues/move_service.log matches class name Issues::MoveService
Dataflow file: ../applications/pw-gitlab//dataflow/services/issues/reopen_service.log matches class name Issues::ReopenService
Dataflow file: ../applications/pw-gitlab//dataflow/services/issues/update_service.log matches class name Issues::UpdateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/keys/base_service.log matches class name Keys::BaseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/keys/create_service.log matches class name Keys::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/keys/last_used_service.log matches class name Keys::LastUsedService
Dataflow file: ../applications/pw-gitlab//dataflow/services/labels/base_service.log matches class name Labels::BaseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/labels/create_service.log matches class name Labels::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/labels/find_or_create_service.log matches class name Labels::FindOrCreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/labels/promote_service.log matches class name Labels::PromoteService
Dataflow file: ../applications/pw-gitlab//dataflow/services/labels/transfer_service.log matches class name Labels::TransferService
Dataflow file: ../applications/pw-gitlab//dataflow/services/labels/update_service.log matches class name Labels::UpdateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/lfs/file_transformer.log matches class name Lfs::FileTransformer::Result
Dataflow file: ../applications/pw-gitlab//dataflow/services/lfs/lock_file_service.log matches class name Lfs::LockFileService
Dataflow file: ../applications/pw-gitlab//dataflow/services/lfs/locks_finder_service.log matches class name Lfs::LocksFinderService
Dataflow file: ../applications/pw-gitlab//dataflow/services/lfs/unlock_file_service.log matches class name Lfs::UnlockFileService
Dataflow file: ../applications/pw-gitlab//dataflow/services/mattermost/create_team_service.log matches class name Mattermost::CreateTeamService
Dataflow file: ../applications/pw-gitlab//dataflow/services/members/approve_access_request_service.log matches class name Members::ApproveAccessRequestService
Dataflow file: ../applications/pw-gitlab//dataflow/services/members/base_service.log matches class name Members::BaseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/members/create_service.log matches class name Members::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/members/destroy_service.log matches class name Members::DestroyService
Dataflow file: ../applications/pw-gitlab//dataflow/services/members/request_access_service.log matches class name Members::RequestAccessService
Dataflow file: ../applications/pw-gitlab//dataflow/services/members/update_service.log matches class name Members::UpdateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/merge_request_metrics_service.log matches class name MergeRequestMetricsService
Dataflow file: ../applications/pw-gitlab//dataflow/services/merge_requests/add_todo_when_build_fails_service.log matches class name MergeRequests::AddTodoWhenBuildFailsService
Dataflow file: ../applications/pw-gitlab//dataflow/services/merge_requests/assign_issues_service.log matches class name MergeRequests::AssignIssuesService
Dataflow file: ../applications/pw-gitlab//dataflow/services/merge_requests/base_service.log matches class name MergeRequests::BaseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/merge_requests/build_service.log matches class name MergeRequests::BuildService
Dataflow file: ../applications/pw-gitlab//dataflow/services/merge_requests/close_service.log matches class name MergeRequests::CloseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/merge_requests/conflicts/base_service.log matches class name MergeRequests::Conflicts::BaseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/merge_requests/conflicts/list_service.log matches class name MergeRequests::Conflicts::ListService
Dataflow file: ../applications/pw-gitlab//dataflow/services/merge_requests/conflicts/resolve_service.log matches class name MergeRequests::Conflicts::ResolveService
Dataflow file: ../applications/pw-gitlab//dataflow/services/merge_requests/create_from_issue_service.log matches class name MergeRequests::CreateFromIssueService
Dataflow file: ../applications/pw-gitlab//dataflow/services/merge_requests/create_service.log matches class name MergeRequests::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/merge_requests/ff_merge_service.log matches class name MergeRequests::FfMergeService
Dataflow file: ../applications/pw-gitlab//dataflow/services/merge_requests/get_urls_service.log matches class name MergeRequests::GetUrlsService
Dataflow file: ../applications/pw-gitlab//dataflow/services/merge_requests/merge_request_diff_cache_service.log matches class name MergeRequests::MergeRequestDiffCacheService
Dataflow file: ../applications/pw-gitlab//dataflow/services/merge_requests/merge_service.log matches class name MergeRequests::MergeService
Dataflow file: ../applications/pw-gitlab//dataflow/services/merge_requests/merge_when_pipeline_succeeds_service.log matches class name MergeRequests::MergeWhenPipelineSucceedsService
Dataflow file: ../applications/pw-gitlab//dataflow/services/merge_requests/post_merge_service.log matches class name MergeRequests::PostMergeService
Dataflow file: ../applications/pw-gitlab//dataflow/services/merge_requests/rebase_service.log matches class name MergeRequests::RebaseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/merge_requests/refresh_service.log matches class name MergeRequests::RefreshService
Dataflow file: ../applications/pw-gitlab//dataflow/services/merge_requests/reopen_service.log matches class name MergeRequests::ReopenService
Dataflow file: ../applications/pw-gitlab//dataflow/services/merge_requests/resolved_discussion_notification_service.log matches class name MergeRequests::ResolvedDiscussionNotificationService
Dataflow file: ../applications/pw-gitlab//dataflow/services/merge_requests/update_service.log matches class name MergeRequests::UpdateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/merge_requests/working_copy_base_service.log matches class name MergeRequests::WorkingCopyBaseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/metrics_service.log matches class name MetricsService
Dataflow file: ../applications/pw-gitlab//dataflow/services/milestones/base_service.log matches class name Milestones::BaseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/milestones/close_service.log matches class name Milestones::CloseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/milestones/create_service.log matches class name Milestones::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/milestones/destroy_service.log matches class name Milestones::DestroyService
Dataflow file: ../applications/pw-gitlab//dataflow/services/milestones/promote_service.log matches class name Milestones::PromoteService
Dataflow file: ../applications/pw-gitlab//dataflow/services/milestones/reopen_service.log matches class name Milestones::ReopenService
Dataflow file: ../applications/pw-gitlab//dataflow/services/milestones/update_service.log matches class name Milestones::UpdateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/note_summary.log matches class name NoteSummary
Dataflow file: ../applications/pw-gitlab//dataflow/services/notes/build_service.log matches class name Notes::BuildService
Dataflow file: ../applications/pw-gitlab//dataflow/services/notes/create_service.log matches class name Notes::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/notes/destroy_service.log matches class name Notes::DestroyService
Dataflow file: ../applications/pw-gitlab//dataflow/services/notes/post_process_service.log matches class name Notes::PostProcessService
Dataflow file: ../applications/pw-gitlab//dataflow/services/notes/quick_actions_service.log matches class name Notes::QuickActionsService
Dataflow file: ../applications/pw-gitlab//dataflow/services/notes/render_service.log matches class name Notes::RenderService
Dataflow file: ../applications/pw-gitlab//dataflow/services/notes/update_service.log matches class name Notes::UpdateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/notification_recipient_service.log matches class name NotificationRecipientService::Builder::Base
Dataflow file: ../applications/pw-gitlab//dataflow/services/notification_service.log matches class name NotificationService
Dataflow file: ../applications/pw-gitlab//dataflow/services/pages_service.log matches class name PagesService
Dataflow file: ../applications/pw-gitlab//dataflow/services/preview_markdown_service.log matches class name PreviewMarkdownService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/after_import_service.log matches class name Projects::AfterImportService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/autocomplete_service.log matches class name Projects::AutocompleteService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/base_move_relations_service.log matches class name Projects::BaseMoveRelationsService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/batch_count_service.log matches class name Projects::BatchCountService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/batch_forks_count_service.log matches class name Projects::BatchForksCountService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/batch_open_issues_count_service.log matches class name Projects::BatchOpenIssuesCountService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/count_service.log matches class name Projects::CountService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/create_from_template_service.log matches class name Projects::CreateFromTemplateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/create_service.log matches class name Projects::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/destroy_service.log matches class name Projects::DestroyService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/download_service.log matches class name Projects::DownloadService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/enable_deploy_key_service.log matches class name Projects::EnableDeployKeyService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/fork_service.log matches class name Projects::ForkService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/forks_count_service.log matches class name Projects::ForksCountService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/gitlab_projects_import_service.log matches class name Projects::GitlabProjectsImportService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/group_links/create_service.log matches class name Projects::GroupLinks::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/group_links/destroy_service.log matches class name Projects::GroupLinks::DestroyService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/hashed_storage/migrate_attachments_service.log matches class name Projects::HashedStorage::MigrateAttachmentsService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/hashed_storage/migrate_repository_service.log matches class name Projects::HashedStorage::MigrateRepositoryService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/hashed_storage_migration_service.log matches class name Projects::HashedStorageMigrationService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/housekeeping_service.log matches class name Projects::HousekeepingService::LeaseTaken
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/import_export/export_service.log matches class name Projects::ImportExport::ExportService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/import_service.log matches class name Projects::ImportService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/move_access_service.log matches class name Projects::MoveAccessService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/move_deploy_keys_projects_service.log matches class name Projects::MoveDeployKeysProjectsService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/move_forks_service.log matches class name Projects::MoveForksService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/move_lfs_objects_projects_service.log matches class name Projects::MoveLfsObjectsProjectsService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/move_notification_settings_service.log matches class name Projects::MoveNotificationSettingsService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/move_project_authorizations_service.log matches class name Projects::MoveProjectAuthorizationsService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/move_project_group_links_service.log matches class name Projects::MoveProjectGroupLinksService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/move_project_members_service.log matches class name Projects::MoveProjectMembersService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/move_users_star_projects_service.log matches class name Projects::MoveUsersStarProjectsService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/open_issues_count_service.log matches class name Projects::OpenIssuesCountService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/open_merge_requests_count_service.log matches class name Projects::OpenMergeRequestsCountService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/overwrite_project_service.log matches class name Projects::OverwriteProjectService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/participants_service.log matches class name Projects::ParticipantsService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/propagate_service_template.log matches class name Projects::PropagateServiceTemplate
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/transfer_service.log matches class name Projects::TransferService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/unlink_fork_service.log matches class name Projects::UnlinkForkService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/update_pages_configuration_service.log matches class name Projects::UpdatePagesConfigurationService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/update_pages_service.log matches class name Projects::UpdatePagesService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/update_service.log matches class name Projects::UpdateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/prometheus/adapter_service.log matches class name Prometheus::AdapterService
Dataflow file: ../applications/pw-gitlab//dataflow/services/protected_branches/access_level_params.log matches class name ProtectedBranches::AccessLevelParams
Dataflow file: ../applications/pw-gitlab//dataflow/services/protected_branches/api_service.log matches class name ProtectedBranches::ApiService
Dataflow file: ../applications/pw-gitlab//dataflow/services/protected_branches/create_service.log matches class name ProtectedBranches::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/protected_branches/destroy_service.log matches class name ProtectedBranches::DestroyService
Dataflow file: ../applications/pw-gitlab//dataflow/services/protected_branches/legacy_api_create_service.log matches class name ProtectedBranches::LegacyApiCreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/protected_branches/legacy_api_update_service.log matches class name ProtectedBranches::LegacyApiUpdateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/protected_branches/update_service.log matches class name ProtectedBranches::UpdateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/protected_tags/create_service.log matches class name ProtectedTags::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/protected_tags/destroy_service.log matches class name ProtectedTags::DestroyService
Dataflow file: ../applications/pw-gitlab//dataflow/services/protected_tags/update_service.log matches class name ProtectedTags::UpdateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/push_event_payload_service.log matches class name PushEventPayloadService
Dataflow file: ../applications/pw-gitlab//dataflow/services/quick_actions/interpret_service.log matches class name QuickActions::InterpretService
Dataflow file: ../applications/pw-gitlab//dataflow/services/repair_ldap_blocked_user_service.log matches class name RepairLdapBlockedUserService
Dataflow file: ../applications/pw-gitlab//dataflow/services/repository_archive_clean_up_service.log matches class name RepositoryArchiveCleanUpService
Dataflow file: ../applications/pw-gitlab//dataflow/services/reset_project_cache_service.log matches class name ResetProjectCacheService
Dataflow file: ../applications/pw-gitlab//dataflow/services/search/global_service.log matches class name Search::GlobalService
Dataflow file: ../applications/pw-gitlab//dataflow/services/search/group_service.log matches class name Search::GroupService
Dataflow file: ../applications/pw-gitlab//dataflow/services/search/project_service.log matches class name Search::ProjectService
Dataflow file: ../applications/pw-gitlab//dataflow/services/search/snippet_service.log matches class name Search::SnippetService
Dataflow file: ../applications/pw-gitlab//dataflow/services/search_service.log matches class name SearchService
Dataflow file: ../applications/pw-gitlab//dataflow/services/spam_check_service.log matches class name SpamCheckService
Dataflow file: ../applications/pw-gitlab//dataflow/services/spam_service.log matches class name SpamService
Dataflow file: ../applications/pw-gitlab//dataflow/services/submit_usage_ping_service.log matches class name SubmitUsagePingService
Dataflow file: ../applications/pw-gitlab//dataflow/services/system_hooks_service.log matches class name SystemHooksService
Dataflow file: ../applications/pw-gitlab//dataflow/services/system_note_service.log matches class name SystemNoteService
Dataflow file: ../applications/pw-gitlab//dataflow/services/tags/create_service.log matches class name Tags::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/tags/destroy_service.log matches class name Tags::DestroyService
Dataflow file: ../applications/pw-gitlab//dataflow/services/test_hooks/base_service.log matches class name TestHooks::BaseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/test_hooks/project_service.log matches class name TestHooks::ProjectService
Dataflow file: ../applications/pw-gitlab//dataflow/services/test_hooks/system_service.log matches class name TestHooks::SystemService
Dataflow file: ../applications/pw-gitlab//dataflow/services/todo_service.log matches class name TodoService
Dataflow file: ../applications/pw-gitlab//dataflow/services/update_release_service.log matches class name UpdateReleaseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/update_snippet_service.log matches class name UpdateSnippetService
Dataflow file: ../applications/pw-gitlab//dataflow/services/upload_service.log matches class name UploadService
Dataflow file: ../applications/pw-gitlab//dataflow/services/user_agent_detail_service.log matches class name UserAgentDetailService
Dataflow file: ../applications/pw-gitlab//dataflow/services/user_project_access_changed_service.log matches class name UserProjectAccessChangedService
Dataflow file: ../applications/pw-gitlab//dataflow/services/users/activity_service.log matches class name Users::ActivityService
Dataflow file: ../applications/pw-gitlab//dataflow/services/users/build_service.log matches class name Users::BuildService
Dataflow file: ../applications/pw-gitlab//dataflow/services/users/create_service.log matches class name Users::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/users/destroy_service.log matches class name Users::DestroyService
Dataflow file: ../applications/pw-gitlab//dataflow/services/users/keys_count_service.log matches class name Users::KeysCountService
Dataflow file: ../applications/pw-gitlab//dataflow/services/users/last_push_event_service.log matches class name Users::LastPushEventService
Dataflow file: ../applications/pw-gitlab//dataflow/services/users/migrate_to_ghost_user_service.log matches class name Users::MigrateToGhostUserService
Dataflow file: ../applications/pw-gitlab//dataflow/services/users/refresh_authorized_projects_service.log matches class name Users::RefreshAuthorizedProjectsService
Dataflow file: ../applications/pw-gitlab//dataflow/services/users/update_service.log matches class name Users::UpdateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/validate_new_branch_service.log matches class name ValidateNewBranchService
Dataflow file: ../applications/pw-gitlab//dataflow/services/verify_pages_domain_service.log matches class name VerifyPagesDomainService
Dataflow file: ../applications/pw-gitlab//dataflow/services/web_hook_service.log matches class name WebHookService::InternalErrorResponse
Dataflow file: ../applications/pw-gitlab//dataflow/services/wiki_pages/base_service.log matches class name WikiPages::BaseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/wiki_pages/create_service.log matches class name WikiPages::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/wiki_pages/destroy_service.log matches class name WikiPages::DestroyService
Dataflow file: ../applications/pw-gitlab//dataflow/services/wiki_pages/update_service.log matches class name WikiPages::UpdateService
Dataflow file: ../applications/pw-gitlab//dataflow/uploaders/attachment_uploader.log matches class name AttachmentUploader
Dataflow file: ../applications/pw-gitlab//dataflow/uploaders/avatar_uploader.log matches class name AvatarUploader
Dataflow file: ../applications/pw-gitlab//dataflow/uploaders/file_mover.log matches class name FileMover
Dataflow file: ../applications/pw-gitlab//dataflow/uploaders/file_uploader.log matches class name FileUploader
Dataflow file: ../applications/pw-gitlab//dataflow/uploaders/gitlab_uploader.log matches class name GitlabUploader
Dataflow file: ../applications/pw-gitlab//dataflow/uploaders/job_artifact_uploader.log matches class name JobArtifactUploader
Dataflow file: ../applications/pw-gitlab//dataflow/uploaders/legacy_artifact_uploader.log matches class name LegacyArtifactUploader
Dataflow file: ../applications/pw-gitlab//dataflow/uploaders/lfs_object_uploader.log matches class name LfsObjectUploader
Dataflow file: ../applications/pw-gitlab//dataflow/uploaders/namespace_file_uploader.log matches class name NamespaceFileUploader
Dataflow file: ../applications/pw-gitlab//dataflow/uploaders/object_storage.log matches class name ObjectStorage::Store
Dataflow file: ../applications/pw-gitlab//dataflow/uploaders/personal_file_uploader.log matches class name PersonalFileUploader
Dataflow file: ../applications/pw-gitlab//dataflow/uploaders/records_uploads.log matches class name RecordsUploads::Concern
Dataflow file: ../applications/pw-gitlab//dataflow/uploaders/uploader_helper.log matches class name UploaderHelper
Dataflow file: ../applications/pw-gitlab//dataflow/uploaders/workhorse.log matches class name Workhorse::UploadPath
Dataflow file: ../applications/pw-gitlab//dataflow/validators/abstract_path_validator.log matches class name AbstractPathValidator
Dataflow file: ../applications/pw-gitlab//dataflow/validators/addressable_url_validator.log matches class name AddressableUrlValidator
Dataflow file: ../applications/pw-gitlab//dataflow/validators/certificate_fingerprint_validator.log matches class name CertificateFingerprintValidator
Dataflow file: ../applications/pw-gitlab//dataflow/validators/certificate_key_validator.log matches class name CertificateKeyValidator
Dataflow file: ../applications/pw-gitlab//dataflow/validators/certificate_validator.log matches class name CertificateValidator
Dataflow file: ../applications/pw-gitlab//dataflow/validators/cluster_name_validator.log matches class name ClusterNameValidator
Dataflow file: ../applications/pw-gitlab//dataflow/validators/color_validator.log matches class name ColorValidator
Dataflow file: ../applications/pw-gitlab//dataflow/validators/cron_timezone_validator.log matches class name CronTimezoneValidator
Dataflow file: ../applications/pw-gitlab//dataflow/validators/cron_validator.log matches class name CronValidator
Dataflow file: ../applications/pw-gitlab//dataflow/validators/duration_validator.log matches class name DurationValidator
Dataflow file: ../applications/pw-gitlab//dataflow/validators/email_validator.log matches class name EmailValidator
Dataflow file: ../applications/pw-gitlab//dataflow/validators/importable_url_validator.log matches class name ImportableUrlValidator
Dataflow file: ../applications/pw-gitlab//dataflow/validators/key_restriction_validator.log matches class name KeyRestrictionValidator
Dataflow file: ../applications/pw-gitlab//dataflow/validators/line_code_validator.log matches class name LineCodeValidator
Dataflow file: ../applications/pw-gitlab//dataflow/validators/namespace_name_validator.log matches class name NamespaceNameValidator
Dataflow file: ../applications/pw-gitlab//dataflow/validators/namespace_path_validator.log matches class name NamespacePathValidator
Dataflow file: ../applications/pw-gitlab//dataflow/validators/project_path_validator.log matches class name ProjectPathValidator
Dataflow file: ../applications/pw-gitlab//dataflow/validators/top_level_group_validator.log matches class name TopLevelGroupValidator
Dataflow file: ../applications/pw-gitlab//dataflow/validators/url_placeholder_validator.log matches class name UrlPlaceholderValidator
Dataflow file: ../applications/pw-gitlab//dataflow/validators/url_validator.log matches class name UrlValidator
Dataflow file: ../applications/pw-gitlab//dataflow/validators/variable_duplicates_validator.log matches class name VariableDuplicatesValidator
Dataflow file: ../applications/pw-gitlab//dataflow/workers/admin_email_worker.log matches class name AdminEmailWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/archive_trace_worker.log matches class name ArchiveTraceWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/authorized_projects_worker.log matches class name AuthorizedProjectsWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/background_migration_worker.log matches class name BackgroundMigrationWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/build_coverage_worker.log matches class name BuildCoverageWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/build_finished_worker.log matches class name BuildFinishedWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/build_hooks_worker.log matches class name BuildHooksWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/build_queue_worker.log matches class name BuildQueueWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/build_success_worker.log matches class name BuildSuccessWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/build_trace_sections_worker.log matches class name BuildTraceSectionsWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/check_gcp_project_billing_worker.log matches class name CheckGcpProjectBillingWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/cluster_install_app_worker.log matches class name ClusterInstallAppWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/cluster_provision_worker.log matches class name ClusterProvisionWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/cluster_wait_for_app_installation_worker.log matches class name ClusterWaitForAppInstallationWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/cluster_wait_for_ingress_ip_address_worker.log matches class name ClusterWaitForIngressIpAddressWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/concerns/application_worker.log matches class name ApplicationWorker::ClassMethods
Dataflow file: ../applications/pw-gitlab//dataflow/workers/concerns/cluster_applications.log matches class name ClusterApplications
Dataflow file: ../applications/pw-gitlab//dataflow/workers/concerns/cluster_queue.log matches class name ClusterQueue
Dataflow file: ../applications/pw-gitlab//dataflow/workers/concerns/cronjob_queue.log matches class name CronjobQueue
Dataflow file: ../applications/pw-gitlab//dataflow/workers/concerns/exception_backtrace.log matches class name ExceptionBacktrace
Dataflow file: ../applications/pw-gitlab//dataflow/workers/concerns/gitlab/github_import/notify_upon_death.log matches class name Gitlab::GithubImport::NotifyUponDeath
Dataflow file: ../applications/pw-gitlab//dataflow/workers/concerns/gitlab/github_import/object_importer.log matches class name Gitlab::GithubImport::ObjectImporter
Dataflow file: ../applications/pw-gitlab//dataflow/workers/concerns/gitlab/github_import/queue.log matches class name Gitlab::GithubImport::Queue
Dataflow file: ../applications/pw-gitlab//dataflow/workers/concerns/gitlab/github_import/rescheduling_methods.log matches class name Gitlab::GithubImport::ReschedulingMethods
Dataflow file: ../applications/pw-gitlab//dataflow/workers/concerns/gitlab/github_import/stage_methods.log matches class name Gitlab::GithubImport::StageMethods
Dataflow file: ../applications/pw-gitlab//dataflow/workers/concerns/mail_scheduler_queue.log matches class name MailSchedulerQueue
Dataflow file: ../applications/pw-gitlab//dataflow/workers/concerns/new_issuable.log matches class name NewIssuable
Dataflow file: ../applications/pw-gitlab//dataflow/workers/concerns/object_storage_queue.log matches class name ObjectStorageQueue
Dataflow file: ../applications/pw-gitlab//dataflow/workers/concerns/pipeline_background_queue.log matches class name PipelineBackgroundQueue
Dataflow file: ../applications/pw-gitlab//dataflow/workers/concerns/pipeline_queue.log matches class name PipelineQueue
Dataflow file: ../applications/pw-gitlab//dataflow/workers/concerns/project_import_options.log matches class name ProjectImportOptions
Dataflow file: ../applications/pw-gitlab//dataflow/workers/concerns/project_start_import.log matches class name ProjectStartImport
Dataflow file: ../applications/pw-gitlab//dataflow/workers/concerns/repository_check_queue.log matches class name RepositoryCheckQueue
Dataflow file: ../applications/pw-gitlab//dataflow/workers/concerns/waitable_worker.log matches class name WaitableWorker::ClassMethods
Dataflow file: ../applications/pw-gitlab//dataflow/workers/create_gpg_signature_worker.log matches class name CreateGpgSignatureWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/create_pipeline_worker.log matches class name CreatePipelineWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/delete_merged_branches_worker.log matches class name DeleteMergedBranchesWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/delete_user_worker.log matches class name DeleteUserWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/email_receiver_worker.log matches class name EmailReceiverWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/emails_on_push_worker.log matches class name EmailsOnPushWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/expire_build_artifacts_worker.log matches class name ExpireBuildArtifactsWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/expire_build_instance_artifacts_worker.log matches class name ExpireBuildInstanceArtifactsWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/expire_job_cache_worker.log matches class name ExpireJobCacheWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/expire_pipeline_cache_worker.log matches class name ExpirePipelineCacheWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/git_garbage_collect_worker.log matches class name GitGarbageCollectWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/gitlab/github_import/advance_stage_worker.log matches class name Gitlab::GithubImport::AdvanceStageWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/gitlab/github_import/import_diff_note_worker.log matches class name Gitlab::GithubImport::ImportDiffNoteWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/gitlab/github_import/import_issue_worker.log matches class name Gitlab::GithubImport::ImportIssueWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/gitlab/github_import/import_note_worker.log matches class name Gitlab::GithubImport::ImportNoteWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/gitlab/github_import/import_pull_request_worker.log matches class name Gitlab::GithubImport::ImportPullRequestWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/gitlab/github_import/refresh_import_jid_worker.log matches class name Gitlab::GithubImport::RefreshImportJidWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/gitlab/github_import/stage/finish_import_worker.log matches class name Gitlab::GithubImport::Stage::FinishImportWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/gitlab/github_import/stage/import_base_data_worker.log matches class name Gitlab::GithubImport::Stage::ImportBaseDataWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/gitlab/github_import/stage/import_issues_and_diff_notes_worker.log matches class name Gitlab::GithubImport::Stage::ImportIssuesAndDiffNotesWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/gitlab/github_import/stage/import_notes_worker.log matches class name Gitlab::GithubImport::Stage::ImportNotesWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/gitlab/github_import/stage/import_pull_requests_worker.log matches class name Gitlab::GithubImport::Stage::ImportPullRequestsWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/gitlab/github_import/stage/import_repository_worker.log matches class name Gitlab::GithubImport::Stage::ImportRepositoryWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/gitlab_shell_worker.log matches class name GitlabShellWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/gitlab_usage_ping_worker.log matches class name GitlabUsagePingWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/group_destroy_worker.log matches class name GroupDestroyWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/import_export_project_cleanup_worker.log matches class name ImportExportProjectCleanupWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/invalid_gpg_signature_update_worker.log matches class name InvalidGpgSignatureUpdateWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/irker_worker.log matches class name IrkerWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/issue_due_scheduler_worker.log matches class name IssueDueSchedulerWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/mail_scheduler/issue_due_worker.log matches class name MailScheduler::IssueDueWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/merge_worker.log matches class name MergeWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/namespaceless_project_destroy_worker.log matches class name NamespacelessProjectDestroyWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/new_issue_worker.log matches class name NewIssueWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/new_merge_request_worker.log matches class name NewMergeRequestWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/new_note_worker.log matches class name NewNoteWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/object_storage/background_move_worker.log matches class name ObjectStorage::BackgroundMoveWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/object_storage/migrate_uploads_worker.log matches class name ObjectStorage::MigrateUploadsWorker::Upload
Dataflow file: ../applications/pw-gitlab//dataflow/workers/object_storage_upload_worker.log matches class name ObjectStorageUploadWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/pages_domain_verification_cron_worker.log matches class name PagesDomainVerificationCronWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/pages_domain_verification_worker.log matches class name PagesDomainVerificationWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/pages_worker.log matches class name PagesWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/pipeline_hooks_worker.log matches class name PipelineHooksWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/pipeline_metrics_worker.log matches class name PipelineMetricsWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/pipeline_notification_worker.log matches class name PipelineNotificationWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/pipeline_process_worker.log matches class name PipelineProcessWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/pipeline_schedule_worker.log matches class name PipelineScheduleWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/pipeline_success_worker.log matches class name PipelineSuccessWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/pipeline_update_worker.log matches class name PipelineUpdateWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/plugin_worker.log matches class name PluginWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/post_receive.log matches class name PostReceive
Dataflow file: ../applications/pw-gitlab//dataflow/workers/process_commit_worker.log matches class name ProcessCommitWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/project_cache_worker.log matches class name ProjectCacheWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/project_destroy_worker.log matches class name ProjectDestroyWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/project_export_worker.log matches class name ProjectExportWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/project_migrate_hashed_storage_worker.log matches class name ProjectMigrateHashedStorageWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/project_service_worker.log matches class name ProjectServiceWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/propagate_service_template_worker.log matches class name PropagateServiceTemplateWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/prune_old_events_worker.log matches class name PruneOldEventsWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/reactive_caching_worker.log matches class name ReactiveCachingWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/rebase_worker.log matches class name RebaseWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/remove_expired_group_links_worker.log matches class name RemoveExpiredGroupLinksWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/remove_expired_members_worker.log matches class name RemoveExpiredMembersWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/remove_old_web_hook_logs_worker.log matches class name RemoveOldWebHookLogsWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/remove_unreferenced_lfs_objects_worker.log matches class name RemoveUnreferencedLfsObjectsWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/repository_archive_cache_worker.log matches class name RepositoryArchiveCacheWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/repository_check/batch_worker.log matches class name RepositoryCheck::BatchWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/repository_check/clear_worker.log matches class name RepositoryCheck::ClearWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/repository_check/single_repository_worker.log matches class name RepositoryCheck::SingleRepositoryWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/repository_fork_worker.log matches class name RepositoryForkWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/repository_import_worker.log matches class name RepositoryImportWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/requests_profiles_worker.log matches class name RequestsProfilesWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/run_pipeline_schedule_worker.log matches class name RunPipelineScheduleWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/schedule_update_user_activity_worker.log matches class name ScheduleUpdateUserActivityWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/stage_update_worker.log matches class name StageUpdateWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/storage_migrator_worker.log matches class name StorageMigratorWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/stuck_ci_jobs_worker.log matches class name StuckCiJobsWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/stuck_import_jobs_worker.log matches class name StuckImportJobsWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/stuck_merge_jobs_worker.log matches class name StuckMergeJobsWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/system_hook_push_worker.log matches class name SystemHookPushWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/trending_projects_worker.log matches class name TrendingProjectsWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/update_head_pipeline_for_merge_request_worker.log matches class name UpdateHeadPipelineForMergeRequestWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/update_merge_requests_worker.log matches class name UpdateMergeRequestsWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/update_user_activity_worker.log matches class name UpdateUserActivityWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/upload_checksum_worker.log matches class name UploadChecksumWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/wait_for_cluster_creation_worker.log matches class name WaitForClusterCreationWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/web_hook_worker.log matches class name WebHookWorker
read_dataflow: 1917.653164
	TIME-read_util_function: 0.00018
	TIME-read_repeatable_function: 7.0e-06
	TIME-Fill in the empty CFG: 0.256037
in MilestoneActions Reject ApplicationController . view_to_html_string
in RendersBlob Reject ApplicationController . view_to_html_string
in RoutableActions Reject ApplicationController . route_not_found
in AccessRequestable Reject UsersController . exists
in TokenAuthenticatable Reject UsersController . exists
in ValidAttribute Reject UsersController . exists
in ProjectFeaturesCompatibility Reject UsersController . exists
in Presentable Reject UsersController . exists
in Routable Reject UsersController . exists
in GroupDescendant Reject UsersController . exists
in DeploymentPlatform Reject UsersController . exists
in ChronicDurationAttribute Reject UsersController . exists
in RunnerJobsFinder Reject Admin::RunnersController . runner
Find caller_type = deploy_token, DeployToken, in func DeployTokensHelper.expand_deploy_tokens_section?
Find caller_type = external_wiki_service, ExternalWikiService, in func ExternalWikiHelper.get_project_wiki_path
in BlobLike Reject Projects::ArtifactsController . entry
in Ci::ArtifactBlob Reject Projects::ArtifactsController . entry
in BlobLike Reject Projects::ArtifactsController . entry
in Ci::ArtifactBlob Reject Projects::ArtifactsController . entry
in Importable Reject Admin::UsersController . block
in HasStatus Reject Admin::UsersController . block
in Ci::Stage Reject Admin::UsersController . block
in Importable Reject Profiles::TwoFactorAuthsController . skip
in HasStatus Reject Profiles::TwoFactorAuthsController . skip
in Ci::Stage Reject Profiles::TwoFactorAuthsController . skip
in Importable Reject Profiles::TwoFactorAuthsController . skip
in HasStatus Reject Profiles::TwoFactorAuthsController . skip
in Ci::Stage Reject Profiles::TwoFactorAuthsController . skip
in Clusters::Applications::Runner Reject Admin::RunnersController . runner
in HasStatus Reject Projects::PipelinesController . stage
in Importable Reject Projects::PipelinesController . stage
in AccessRequestable Reject Projects::MergeRequestsController . merge!
in TokenAuthenticatable Reject Projects::MergeRequestsController . merge!
in ValidAttribute Reject Projects::MergeRequestsController . merge!
in ProjectFeaturesCompatibility Reject Projects::MergeRequestsController . merge!
in Presentable Reject Projects::MergeRequestsController . merge!
in Routable Reject Projects::MergeRequestsController . merge!
in GroupDescendant Reject Projects::MergeRequestsController . merge!
in DeploymentPlatform Reject Projects::MergeRequestsController . merge!
in ChronicDurationAttribute Reject Projects::MergeRequestsController . merge!
in Routable Reject Projects::EnvironmentsController . folder
in AccessRequestable Reject Projects::EnvironmentsController . folder
in GroupDescendant Reject Projects::EnvironmentsController . folder
in GitlabRoutingHelper Reject Projects::PipelinesController . stage
in RequestAwareEntity Reject Projects::PipelinesController . stage
in StageEntity Reject Projects::PipelinesController . stage
Find caller_type = chat_name, ChatName, in func ChatNames::FindUserService.execute
in Ci::RegisterJobService Reject Admin::RunnersController . runner
in Ci::RegisterJobService Reject Admin::RunnersController . runner
in Ci::RegisterJobService Reject Admin::RunnersController . runner
in Ci::RegisterJobService Reject Admin::RunnersController . runner
in Ci::RegisterJobService Reject Admin::RunnersController . runner
in Ci::RegisterJobService Reject Admin::RunnersController . runner
in Ci::RegisterJobService Reject Admin::RunnersController . runner
in Ci::RegisterJobService Reject Admin::RunnersController . runner
in Ci::RegisterJobService Reject Admin::RunnersController . runner
in Ci::UpdateRunnerService Reject Admin::RunnersController . runner
in Ci::UpdateRunnerService Reject Admin::RunnersController . runner
Find caller_type = commit_status, CommitStatus, in func MergeRequests::AddTodoWhenBuildFailsService.execute
Find caller_type = protected_tag, ProtectedTag, in func ProtectedTags::DestroyService.execute
Find caller_type = protected_tag, ProtectedTag, in func ProtectedTags::UpdateService.execute
in TokenAuthenticatable Reject Admin::UsersController . block
in FeatureGate Reject Admin::UsersController . block
in CreatedAtFilterable Reject Admin::UsersController . block
in BulkMemberAccessLoad Reject Admin::UsersController . block
in BlocksJsonSerialization Reject Admin::UsersController . block
in TokenAuthenticatable Reject Admin::UsersController . block
in FeatureGate Reject Admin::UsersController . block
in CreatedAtFilterable Reject Admin::UsersController . block
in BulkMemberAccessLoad Reject Admin::UsersController . block
in BlocksJsonSerialization Reject Admin::UsersController . block
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
	TIME-ADD associates: 5.0e-06 t1: 0.002536999999999983 t2: 0.029743000000000342 t3: 0.0015169999999999787 t4: 427.013096999998 t4_1: 106.37042100000345 t4_2: 2086.786007000034
in MilestoneActions Reject ApplicationController . view_to_html_string
in RendersBlob Reject ApplicationController . view_to_html_string
in RoutableActions Reject ApplicationController . route_not_found
in AccessRequestable Reject UsersController . exists
in TokenAuthenticatable Reject UsersController . exists
in ValidAttribute Reject UsersController . exists
in ProjectFeaturesCompatibility Reject UsersController . exists
in Presentable Reject UsersController . exists
in Routable Reject UsersController . exists
in GroupDescendant Reject UsersController . exists
in DeploymentPlatform Reject UsersController . exists
in ChronicDurationAttribute Reject UsersController . exists
in RunnerJobsFinder Reject Admin::RunnersController . runner
in BlobLike Reject Projects::ArtifactsController . entry
in Ci::ArtifactBlob Reject Projects::ArtifactsController . entry
in BlobLike Reject Projects::ArtifactsController . entry
in Ci::ArtifactBlob Reject Projects::ArtifactsController . entry
in Importable Reject Admin::UsersController . block
in HasStatus Reject Admin::UsersController . block
in Ci::Stage Reject Admin::UsersController . block
in Importable Reject Profiles::TwoFactorAuthsController . skip
in HasStatus Reject Profiles::TwoFactorAuthsController . skip
in Ci::Stage Reject Profiles::TwoFactorAuthsController . skip
in Importable Reject Profiles::TwoFactorAuthsController . skip
in HasStatus Reject Profiles::TwoFactorAuthsController . skip
in Ci::Stage Reject Profiles::TwoFactorAuthsController . skip
in Clusters::Applications::Runner Reject Admin::RunnersController . runner
in AccessRequestable Reject Projects::MergeRequestsController . merge!
in TokenAuthenticatable Reject Projects::MergeRequestsController . merge!
in ValidAttribute Reject Projects::MergeRequestsController . merge!
in ProjectFeaturesCompatibility Reject Projects::MergeRequestsController . merge!
in Presentable Reject Projects::MergeRequestsController . merge!
in Routable Reject Projects::MergeRequestsController . merge!
in GroupDescendant Reject Projects::MergeRequestsController . merge!
in DeploymentPlatform Reject Projects::MergeRequestsController . merge!
in ChronicDurationAttribute Reject Projects::MergeRequestsController . merge!
in Routable Reject Projects::EnvironmentsController . folder
in AccessRequestable Reject Projects::EnvironmentsController . folder
in GroupDescendant Reject Projects::EnvironmentsController . folder
in GitlabRoutingHelper Reject Projects::PipelinesController . stage
in RequestAwareEntity Reject Projects::PipelinesController . stage
in StageEntity Reject Projects::PipelinesController . stage
in Ci::RegisterJobService Reject Admin::RunnersController . runner
in Ci::RegisterJobService Reject Admin::RunnersController . runner
in Ci::RegisterJobService Reject Admin::RunnersController . runner
in Ci::RegisterJobService Reject Admin::RunnersController . runner
in Ci::RegisterJobService Reject Admin::RunnersController . runner
in Ci::RegisterJobService Reject Admin::RunnersController . runner
in Ci::RegisterJobService Reject Admin::RunnersController . runner
in Ci::RegisterJobService Reject Admin::RunnersController . runner
in Ci::RegisterJobService Reject Admin::RunnersController . runner
in Ci::UpdateRunnerService Reject Admin::RunnersController . runner
in Ci::UpdateRunnerService Reject Admin::RunnersController . runner
in TokenAuthenticatable Reject Admin::UsersController . block
in FeatureGate Reject Admin::UsersController . block
in CreatedAtFilterable Reject Admin::UsersController . block
in BulkMemberAccessLoad Reject Admin::UsersController . block
in BlocksJsonSerialization Reject Admin::UsersController . block
in TokenAuthenticatable Reject Admin::UsersController . block
in FeatureGate Reject Admin::UsersController . block
in CreatedAtFilterable Reject Admin::UsersController . block
in BulkMemberAccessLoad Reject Admin::UsersController . block
in BlocksJsonSerialization Reject Admin::UsersController . block
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
	TIME-second do_type_inference_cfg: 1272.155483
Set ResolvableDiscussion.can_resolve? funcname to be can_resolve_note_Project
Set LfsFileLock.can_be_unlocked_by? funcname to be can_admin_project_Project
Set DeleteBranchService.execute funcname to be can_push_code_Project
	TIME-third do_type_inference_cfg: 1.771939
do_type_inference: 3467.426516
k: [User.ldap_user?] (1.) %self[1.0]  self . identities 
complexity: 1
k: [User.ldap_user?] (1.) %self[1.0]  self . identities 
complexity: 1
k: [User.ldap_user?] (1.) %self[1.0]  identities(Identity) . find 
complexity: 1
k: [User.ldap_user?] (1.) %self[1.0]  self . identities 
complexity: 1
k: [User.ldap_user?] (1.) %self[1.0]  identities(Identity) . exists? 
complexity: 1
k: [User.ldap_user?] (1.) %self[1.0]  self . identities 
complexity: 1
k: [User.ldap_user?] (1.) %self[1.0]  self . identities 
complexity: 1
k: [User.ldap_user?] (1.) %self[1.0]  identities(Identity) . find 
complexity: 1
k: [User.ldap_user?] (1.) %self[1.0]  self . identities 
complexity: 1
k: [User.ldap_user?] (1.) %self[1.0]  identities(Identity) . exists? 
complexity: 1
k: [User.ldap_user?] (1.) %self[1.0]  self . identities 
complexity: 1
k: [User.ldap_user?] (1.) %self[1.0]  self . identities 
complexity: 1
k: [User.ldap_user?] (1.) %self[1.0]  identities(Identity) . find 
complexity: 1
k: [User.ldap_user?] (1.) %self[1.0]  self . identities 
complexity: 1
k: [User.ldap_user?] (1.) %self[1.0]  identities(Identity) . exists? 
complexity: 1
k: [AbuseReportsController.set_user] (2.10) %v_3[2.6] %v_6[2.9]  %v_3 -> find_by 
complexity: 1
k: [FormHelper.form_errors] (1.) %self[1.0]  model.errors . any? 
complexity: 1
k: [FormHelper.form_errors] (1.) %self[1.0]  model.errors . count 
complexity: 1
k: [FormHelper.form_errors] (1.) %self[1.0]  model.errors.full_messages            .map { |msg| content_tag(:li, msg) } . join 
complexity: 1
k: [Project.owner] (1.) %self[1.0]  self . group 
complexity: 1
k: [Project.owner] (1.) %self[1.0]  self . group 
complexity: 1
k: [Project.owner] (1.) %self[1.0]  self . namespace 
complexity: 1
k: [Project.owner] (1.) %self[1.0]  self . group 
complexity: 1
k: [Project.owner] (1.) %self[1.0]  self . group 
complexity: 1
k: [Project.owner] (1.) %self[1.0]  self . namespace 
complexity: 1
ruby main.rb -d ../applications/pw-gitlab/ -p Admin::AbuseReportsController,destroy
Start 2018-08-18 18:19:48 -0500
dir = ../applications/pw-gitlab/
run performance
resolve_upper_class: 0.012332
resolve_upper_class: 0.01499
ADD INDEX: AuditEvent, author_id
ADD INDEX: AuditEvent, entity_id
ADD INDEX: AuditEvent, type
ADD INDEX: Ci::Build, commit_id
ADD INDEX: Ci::Build, commit_id
ADD INDEX: Ci::Build, commit_id
ADD INDEX: Ci::Build, commit_id
ADD INDEX: Ci::Build, commit_id
ADD INDEX: Ci::Build, erased_by_id
ADD INDEX: Ci::Build, gl_project_id
ADD INDEX: Ci::Build, project_id
ADD INDEX: Ci::Build, project_id
ADD INDEX: Ci::Build, runner_id
ADD INDEX: Ci::Build, status
ADD INDEX: Ci::Build, type
read schema: class ci_commits (CiCommit) cannot be found!
INDEX:: TABLE ci_commits - CiCommit field gl_project_id cannot be found
INDEX:: TABLE ci_commits - CiCommit field gl_project_id cannot be found
INDEX:: TABLE ci_commits - CiCommit field gl_project_id cannot be found
INDEX:: TABLE ci_commits - CiCommit field project_id cannot be found
INDEX:: TABLE ci_commits - CiCommit field project_id cannot be found
INDEX:: TABLE ci_commits - CiCommit field project_id cannot be found
INDEX:: TABLE ci_commits - CiCommit field project_id cannot be found
INDEX:: TABLE ci_commits - CiCommit field sha cannot be found
INDEX:: TABLE ci_commits - CiCommit field status cannot be found
ADD INDEX: Event, created_at
ADD INDEX: Event, is_admin
ADD INDEX: Event, project_id
read schema: class ci_jobs (CiJob) cannot be found!
INDEX:: TABLE ci_jobs - CiJob field deleted_at cannot be found
INDEX:: TABLE ci_jobs - CiJob field project_id cannot be found
read schema: class ci_projects (CiProject) cannot be found!
INDEX:: TABLE ci_projects - CiProject field gitlab_id cannot be found
INDEX:: TABLE ci_projects - CiProject field shared_runners_enabled cannot be found
ADD INDEX: Ci::RunnerProject, gl_project_id
ADD INDEX: Ci::RunnerProject, runner_id
ADD INDEX: Ci::Runner, description
ADD INDEX: Ci::Runner, token
ADD INDEX: Ci::Runner, token
ADD INDEX: CiService, project_id
read schema: class ci_sessions (CiSession) cannot be found!
INDEX:: TABLE ci_sessions - CiSession field session_id cannot be found
INDEX:: TABLE ci_sessions - CiSession field updated_at cannot be found
read schema: class ci_taggings (CiTagging) cannot be found!
INDEX:: TABLE ci_taggings - CiTagging field tag_id cannot be found
INDEX:: TABLE ci_taggings - CiTagging field taggable_id cannot be found
read schema: class ci_tags (CiTag) cannot be found!
INDEX:: TABLE ci_tags - CiTag field name cannot be found
ADD INDEX: Ci::Trigger, deleted_at
ADD INDEX: Ci::Trigger, gl_project_id
ADD INDEX: Ci::Variable, gl_project_id
read schema: class ci_web_hooks (CiWebHook) cannot be found!
ADD INDEX: DeployKeysProject, project_id
ADD INDEX: Email, email
ADD INDEX: Email, user_id
ADD INDEX: Event, action
ADD INDEX: Event, author_id
ADD INDEX: Event, created_at
ADD INDEX: Event, project_id
ADD INDEX: Event, target_id
ADD INDEX: Event, target_type
ADD INDEX: ForkedProjectLink, forked_to_project_id
ADD INDEX: Identity, created_at
ADD INDEX: Identity, user_id
ADD INDEX: Issue, assignee_id
ADD INDEX: Issue, author_id
ADD INDEX: Issue, confidential
ADD INDEX: Issue, created_at
ADD INDEX: Issue, created_at
ADD INDEX: Issue, deleted_at
ADD INDEX: Issue, description
ADD INDEX: Issue, due_date
ADD INDEX: Issue, milestone_id
ADD INDEX: Issue, project_id
ADD INDEX: Issue, project_id
ADD INDEX: Issue, state
ADD INDEX: Issue, title
ADD INDEX: Issue, title
ADD INDEX: Key, created_at
ADD INDEX: Key, user_id
ADD INDEX: LabelLink, label_id
ADD INDEX: LabelLink, target_id
ADD INDEX: Label, project_id
ADD INDEX: LfsObject, oid
ADD INDEX: LfsObjectsProject, project_id
ADD INDEX: Member, access_level
ADD INDEX: Member, created_at
ADD INDEX: Member, invite_token
ADD INDEX: Member, source_id
ADD INDEX: Member, type
ADD INDEX: Member, user_id
ADD INDEX: MergeRequestDiff, merge_request_id
ADD INDEX: MergeRequest, assignee_id
ADD INDEX: MergeRequest, author_id
ADD INDEX: MergeRequest, created_at
ADD INDEX: MergeRequest, created_at
ADD INDEX: MergeRequest, deleted_at
ADD INDEX: MergeRequest, description
ADD INDEX: MergeRequest, milestone_id
ADD INDEX: MergeRequest, source_branch
ADD INDEX: MergeRequest, source_project_id
ADD INDEX: MergeRequest, target_branch
ADD INDEX: MergeRequest, target_project_id
ADD INDEX: MergeRequest, title
ADD INDEX: MergeRequest, title
ADD INDEX: Milestone, created_at
ADD INDEX: Milestone, description
ADD INDEX: Milestone, due_date
ADD INDEX: Milestone, project_id
ADD INDEX: Milestone, project_id
ADD INDEX: Milestone, title
ADD INDEX: Milestone, title
ADD INDEX: Namespace, created_at
ADD INDEX: Namespace, name
ADD INDEX: Namespace, name
ADD INDEX: Namespace, owner_id
ADD INDEX: Namespace, path
ADD INDEX: Namespace, path
ADD INDEX: Namespace, type
ADD INDEX: Namespace, visibility_level
read schema: class notes (Note) cannot be found!
INDEX:: TABLE notes - Note field author_id cannot be found
INDEX:: TABLE notes - Note field commit_id cannot be found
INDEX:: TABLE notes - Note field created_at cannot be found
INDEX:: TABLE notes - Note field created_at cannot be found
INDEX:: TABLE notes - Note field is_award cannot be found
INDEX:: TABLE notes - Note field line_code cannot be found
INDEX:: TABLE notes - Note field note cannot be found
INDEX:: TABLE notes - Note field noteable_id cannot be found
INDEX:: TABLE notes - Note field noteable_type cannot be found
INDEX:: TABLE notes - Note field project_id cannot be found
INDEX:: TABLE notes - Note field project_id cannot be found
INDEX:: TABLE notes - Note field updated_at cannot be found
ADD INDEX: NotificationSetting, source_id
ADD INDEX: NotificationSetting, user_id
ADD INDEX: OauthAccessGrant, token
ADD INDEX: OauthAccessToken, refresh_token
ADD INDEX: OauthAccessToken, resource_owner_id
ADD INDEX: OauthAccessToken, token
read schema: class oauth_applications (OauthApplication) cannot be found!
INDEX:: TABLE oauth_applications - OauthApplication field owner_id cannot be found
INDEX:: TABLE oauth_applications - OauthApplication field uid cannot be found
ADD INDEX: Project, builds_enabled
ADD INDEX: Project, builds_enabled
ADD INDEX: Project, ci_id
ADD INDEX: Project, created_at
ADD INDEX: Project, creator_id
ADD INDEX: Project, description
ADD INDEX: Project, last_activity_at
ADD INDEX: Project, last_repository_check_failed
ADD INDEX: Project, name
ADD INDEX: Project, namespace_id
ADD INDEX: Project, path
ADD INDEX: Project, path
ADD INDEX: Project, pending_delete
ADD INDEX: Project, runners_token
ADD INDEX: Project, star_count
ADD INDEX: Project, visibility_level
ADD INDEX: ProtectedBranch, project_id
ADD INDEX: Release, project_id
ADD INDEX: Release, project_id
ADD INDEX: SentNotification, reply_key
ADD INDEX: Service, category
ADD INDEX: Service, created_at
ADD INDEX: Service, default
ADD INDEX: Service, project_id
ADD INDEX: Service, template
ADD INDEX: Snippet, author_id
ADD INDEX: Snippet, created_at
ADD INDEX: Snippet, created_at
ADD INDEX: Snippet, file_name
ADD INDEX: Snippet, project_id
ADD INDEX: Snippet, title
ADD INDEX: Snippet, updated_at
ADD INDEX: Snippet, visibility_level
ADD INDEX: Subscription, subscribable_id
read schema: class taggings (Tagging) cannot be found!
INDEX:: TABLE taggings - Tagging field tag_id cannot be found
INDEX:: TABLE taggings - Tagging field taggable_id cannot be found
read schema: class tags (Tag) cannot be found!
INDEX:: TABLE tags - Tag field name cannot be found
ADD INDEX: Todo, author_id
ADD INDEX: Todo, commit_id
ADD INDEX: Todo, note_id
ADD INDEX: Todo, project_id
ADD INDEX: Todo, state
ADD INDEX: Todo, target_type
ADD INDEX: Todo, user_id
ADD INDEX: User, admin
ADD INDEX: User, authentication_token
ADD INDEX: User, confirmation_token
ADD INDEX: User, created_at
ADD INDEX: User, current_sign_in_at
ADD INDEX: User, email
ADD INDEX: User, email
ADD INDEX: User, name
ADD INDEX: User, name
ADD INDEX: User, reset_password_token
ADD INDEX: User, username
ADD INDEX: User, username
ADD INDEX: UsersStarProject, project_id
ADD INDEX: UsersStarProject, user_id
ADD INDEX: UsersStarProject, user_id
ADD INDEX: WebHook, created_at
ADD INDEX: WebHook, project_id
read_schema: 0.994125
ForkProjectsFinder.initialize, Found super ProjectsFinder
GroupProjectsFinder.initialize, Found super ProjectsFinder
DeferScriptTagHelper.javascript_include_tag, Found super 
LazyImageTagHelper.image_tag, Found super 
ApplicationSetting.default_project_visibility=, Found super ActiveRecord::Base
ApplicationSetting.default_snippet_visibility=, Found super ActiveRecord::Base
ApplicationSetting.default_group_visibility=, Found super ActiveRecord::Base
ApplicationSetting.restricted_visibility_levels=, Found super ActiveRecord::Base
ApplicationSetting.performance_bar_allowed_group_id=, Found super ActiveRecord::Base
ApplicationSetting.performance_bar_allowed_group_id=, Found super ActiveRecord::Base
ApplicationSetting.performance_bar_allowed_group_id=, Found super ActiveRecord::Base
AwardEmoji.downvotes, Found super ActiveRecord::Base
AwardEmoji.upvotes, Found super ActiveRecord::Base
Badge.order_created_at_asc, Found super ActiveRecord::Base
Blob.initialize, Found super SimpleDelegator
Blob.load_all_data!, Found super SimpleDelegator
Ci::Build.unstarted, Found super 
Ci::Build.ignore_failures, Found super 
Ci::Build.with_artifacts_archive, Found super 
Ci::Build.with_artifacts_stored_locally, Found super 
Ci::Build.with_artifacts_not_expired, Found super 
Ci::Build.with_expired_artifacts, Found super 
Ci::Build.last_month, Found super 
Ci::Build.manual_actions, Found super 
Ci::Build.ref_protected, Found super 
Ci::Build.matches_tag_ids, Found super 
Ci::Build.with_any_tags, Found super 
Ci::Build.serializable_hash, Found super 
Ci::GroupVariable.unprotected, Found super 
Ci::JobArtifact.with_files_stored_locally, Found super 
Ci::Pipeline.internal, Found super 
Ci::PipelineSchedule.active, Found super 
Ci::PipelineSchedule.inactive, Found super 
Ci::Runner.specific, Found super 
Ci::Runner.shared, Found super 
Ci::Runner.active, Found super 
Ci::Runner.paused, Found super 
Ci::Runner.online, Found super 
Ci::Runner.ordered, Found super 
Ci::Runner.owned_or_shared, Found super 
Ci::Runner.assignable_for, Found super 
Ci::Variable.unprotected, Found super 
Clusters::Cluster.enabled, Found super 
Clusters::Cluster.disabled, Found super 
Clusters::Cluster.user_provided, Found super 
Clusters::Cluster.gcp_provided, Found super 
Clusters::Cluster.gcp_installed, Found super 
Clusters::Cluster.default_environment, Found super 
Clusters::Concerns::ApplicationStatus.installed, Found super 
Commit.link_reference_pattern, Found super 
CommitRange.link_reference_pattern, Found super 
CommitStatus.failed_but_allowed, Found super ActiveRecord::Base
CommitStatus.exclude_ignored, Found super ActiveRecord::Base
CommitStatus.latest, Found super ActiveRecord::Base
CommitStatus.retried, Found super ActiveRecord::Base
CommitStatus.ordered, Found super ActiveRecord::Base
CommitStatus.latest_ordered, Found super ActiveRecord::Base
CommitStatus.retried_ordered, Found super ActiveRecord::Base
CommitStatus.after_stage, Found super ActiveRecord::Base
CreatedAtFilterable.created_before, Found super 
CreatedAtFilterable.created_after, Found super 
Expirable.expired, Found super 
HasStatus.created, Found super 
HasStatus.relevant, Found super 
HasStatus.running, Found super 
HasStatus.pending, Found super 
HasStatus.success, Found super 
HasStatus.failed, Found super 
HasStatus.canceled, Found super 
HasStatus.skipped, Found super 
HasStatus.manual, Found super 
HasStatus.alive, Found super 
HasStatus.created_or_pending, Found super 
HasStatus.running_or_pending, Found super 
HasStatus.finished, Found super 
HasStatus.failed_or_canceled, Found super 
HasStatus.cancelable, Found super 
HasVariable.order_key_asc, Found super 
HasVariable.key=, Found super 
Issuable::ClassMethods.authored, Found super 
Issuable::ClassMethods.recent, Found super 
Issuable::ClassMethods.of_projects, Found super 
Issuable::ClassMethods.of_milestones, Found super 
Issuable::ClassMethods.with_milestone, Found super 
Issuable::ClassMethods.opened, Found super 
Issuable::ClassMethods.only_opened, Found super 
Issuable::ClassMethods.closed, Found super 
Issuable::ClassMethods.left_joins_milestones, Found super 
Issuable::ClassMethods.order_milestone_due_desc, Found super 
Issuable::ClassMethods.order_milestone_due_asc, Found super 
Issuable::ClassMethods.without_label, Found super 
Issuable::ClassMethods.join_project, Found super 
Issuable::ClassMethods.inc_notes_with_associations, Found super 
Issuable::ClassMethods.references_project, Found super 
Issuable::ClassMethods.non_archived, Found super 
ManualInverseAssociation::ClassMethods.manual_inverse_association, Found super 
ProtectedRefAccess.master, Found super 
ProtectedRefAccess.developer, Found super 
ResolvableNote::ClassMethods.potentially_resolvable, Found super 
ResolvableNote::ClassMethods.resolvable, Found super 
ResolvableNote::ClassMethods.resolved, Found super 
ResolvableNote::ClassMethods.unresolved, Found super 
Routable.with_route, Found super 
Sortable::ClassMethods.order_id_desc, Found super 
Sortable::ClassMethods.order_id_asc, Found super 
Sortable::ClassMethods.order_created_desc, Found super 
Sortable::ClassMethods.order_created_asc, Found super 
Sortable::ClassMethods.order_updated_desc, Found super 
Sortable::ClassMethods.order_updated_asc, Found super 
Sortable::ClassMethods.order_name_asc, Found super 
Sortable::ClassMethods.order_name_desc, Found super 
UpdatedAtFilterable.updated_before, Found super 
UpdatedAtFilterable.updated_after, Found super 
DeployKey.in_projects, Found super Key
DeployKey.are_public, Found super Key
DeployKeysProject.without_project_deleted, Found super ActiveRecord::Base
DeployKeysProject.in_project, Found super ActiveRecord::Base
DeployKeysProject.with_write_access, Found super ActiveRecord::Base
DeployToken.active, Found super ActiveRecord::Base
Email.confirmed, Found super ActiveRecord::Base
Environment.available, Found super ActiveRecord::Base
Environment.stopped, Found super ActiveRecord::Base
Environment.order_by_last_deployed_at, Found super ActiveRecord::Base
Environment.in_review_folder, Found super ActiveRecord::Base
Event.recent, Found super ActiveRecord::Base
Event.code_push, Found super ActiveRecord::Base
Event.in_projects, Found super ActiveRecord::Base
Event.with_associations, Found super ActiveRecord::Base
Event.for_milestone_id, Found super ActiveRecord::Base
GpgKey.with_subkeys, Found super ActiveRecord::Base
GpgKey.key=, Found super ActiveRecord::Base
GroupMilestone.build_collection, Found super GlobalMilestone
GroupMilestone.build, Found super GlobalMilestone
Identity.with_provider, Found super ActiveRecord::Base
Identity.with_extern_uid, Found super ActiveRecord::Base
Issue.in_projects, Found super ActiveRecord::Base
Issue.assigned, Found super ActiveRecord::Base
Issue.unassigned, Found super ActiveRecord::Base
Issue.assigned_to, Found super ActiveRecord::Base
Issue.without_due_date, Found super ActiveRecord::Base
Issue.due_before, Found super ActiveRecord::Base
Issue.due_between, Found super ActiveRecord::Base
Issue.due_tomorrow, Found super ActiveRecord::Base
Issue.order_due_date_asc, Found super ActiveRecord::Base
Issue.order_due_date_desc, Found super ActiveRecord::Base
Issue.preload_associations, Found super ActiveRecord::Base
Issue.public_only, Found super ActiveRecord::Base
Issue.link_reference_pattern, Found super ActiveRecord::Base
Issue.as_json, Found super ActiveRecord::Base
Label.templates, Found super ActiveRecord::Base
Label.with_title, Found super ActiveRecord::Base
Label.with_lists_and_board, Found super ActiveRecord::Base
Label.on_group_boards, Found super ActiveRecord::Base
Label.on_project_boards, Found super ActiveRecord::Base
Label.as_json, Found super ActiveRecord::Base
LfsObject.with_files_stored_locally, Found super ActiveRecord::Base
List.destroyable, Found super ActiveRecord::Base
List.movable, Found super ActiveRecord::Base
List.as_json, Found super ActiveRecord::Base
Member.active, Found super ActiveRecord::Base
Member.active_without_invites_and_requests, Found super ActiveRecord::Base
Member.invite, Found super ActiveRecord::Base
Member.non_invite, Found super ActiveRecord::Base
Member.request, Found super ActiveRecord::Base
Member.non_request, Found super ActiveRecord::Base
Member.has_access, Found super ActiveRecord::Base
Member.guests, Found super ActiveRecord::Base
Member.reporters, Found super ActiveRecord::Base
Member.developers, Found super ActiveRecord::Base
Member.masters, Found super ActiveRecord::Base
Member.owners, Found super ActiveRecord::Base
Member.owners_and_masters, Found super ActiveRecord::Base
Member.order_name_asc, Found super ActiveRecord::Base
Member.order_name_desc, Found super ActiveRecord::Base
Member.order_recent_sign_in, Found super ActiveRecord::Base
Member.order_oldest_sign_in, Found super ActiveRecord::Base
ProjectMember.in_project, Found super Member
MergeRequest.by_source_or_target_branch, Found super ActiveRecord::Base
MergeRequest.by_milestone, Found super ActiveRecord::Base
MergeRequest.of_projects, Found super ActiveRecord::Base
MergeRequest.from_project, Found super ActiveRecord::Base
MergeRequest.merged, Found super ActiveRecord::Base
MergeRequest.closed_and_merged, Found super ActiveRecord::Base
MergeRequest.from_source_branches, Found super ActiveRecord::Base
MergeRequest.by_commit_sha, Found super ActiveRecord::Base
MergeRequest.join_project, Found super ActiveRecord::Base
MergeRequest.references_project, Found super ActiveRecord::Base
MergeRequest.assigned, Found super ActiveRecord::Base
MergeRequest.unassigned, Found super ActiveRecord::Base
MergeRequest.assigned_to, Found super ActiveRecord::Base
MergeRequest.link_reference_pattern, Found super ActiveRecord::Base
MergeRequestDiff.viewable, Found super ActiveRecord::Base
MergeRequestDiff.by_commit_sha, Found super ActiveRecord::Base
MergeRequestDiff.recent, Found super ActiveRecord::Base
Milestone.of_projects, Found super ActiveRecord::Base
Milestone.of_groups, Found super ActiveRecord::Base
Milestone.active, Found super ActiveRecord::Base
Milestone.closed, Found super ActiveRecord::Base
Milestone.for_projects, Found super ActiveRecord::Base
Milestone.for_projects_and_groups, Found super ActiveRecord::Base
Milestone.link_reference_pattern, Found super ActiveRecord::Base
Namespace.for_user, Found super ActiveRecord::Base
Namespace.with_statistics, Found super ActiveRecord::Base
Note::SpecialRole.for_commit_id, Found super ActiveRecord::Base
Note::SpecialRole.system, Found super ActiveRecord::Base
Note::SpecialRole.user, Found super ActiveRecord::Base
Note::SpecialRole.common, Found super ActiveRecord::Base
Note::SpecialRole.fresh, Found super ActiveRecord::Base
Note::SpecialRole.updated_after, Found super ActiveRecord::Base
Note::SpecialRole.inc_author_project, Found super ActiveRecord::Base
Note::SpecialRole.inc_author, Found super ActiveRecord::Base
Note::SpecialRole.inc_relations_for_view, Found super ActiveRecord::Base
Note::SpecialRole.diff_notes, Found super ActiveRecord::Base
Note::SpecialRole.new_diff_notes, Found super ActiveRecord::Base
Note::SpecialRole.non_diff_notes, Found super ActiveRecord::Base
Note::SpecialRole.with_associations, Found super ActiveRecord::Base
Note::SpecialRole.with_metadata, Found super ActiveRecord::Base
Note::SpecialRole.noteable_type=, Found super ActiveRecord::Base
Note::SpecialRole.discussion_id, Found super ActiveRecord::Base
NotificationSetting.for_groups, Found super ActiveRecord::Base
NotificationSetting.for_projects, Found super ActiveRecord::Base
OauthAccessToken.scopes=, Found super Doorkeeper::AccessToken
PagesDomain.enabled, Found super ActiveRecord::Base
PagesDomain.needs_verification, Found super ActiveRecord::Base
PersonalAccessToken.active, Found super ActiveRecord::Base
PersonalAccessToken.inactive, Found super ActiveRecord::Base
PersonalAccessToken.with_impersonation, Found super ActiveRecord::Base
PersonalAccessToken.without_impersonation, Found super ActiveRecord::Base
Project.pending_delete, Found super ActiveRecord::Base
Project.without_deleted, Found super ActiveRecord::Base
Project.with_storage_feature, Found super ActiveRecord::Base
Project.without_storage_feature, Found super ActiveRecord::Base
Project.with_unmigrated_storage, Found super ActiveRecord::Base
Project.sorted_by_activity, Found super ActiveRecord::Base
Project.sorted_by_stars, Found super ActiveRecord::Base
Project.in_namespace, Found super ActiveRecord::Base
Project.personal, Found super ActiveRecord::Base
Project.joined, Found super ActiveRecord::Base
Project.starred_by, Found super ActiveRecord::Base
Project.visible_to_user, Found super ActiveRecord::Base
Project.archived, Found super ActiveRecord::Base
Project.non_archived, Found super ActiveRecord::Base
Project.for_milestones, Found super ActiveRecord::Base
Project.with_push, Found super ActiveRecord::Base
Project.with_project_feature, Found super ActiveRecord::Base
Project.with_statistics, Found super ActiveRecord::Base
Project.with_shared_runners, Found super ActiveRecord::Base
Project.inside_path, Found super ActiveRecord::Base
Project.with_feature_enabled, Found super ActiveRecord::Base
Project.with_feature_access_level, Found super ActiveRecord::Base
Project.with_builds_enabled, Found super ActiveRecord::Base
Project.with_issues_enabled, Found super ActiveRecord::Base
Project.with_issues_available_for_user, Found super ActiveRecord::Base
Project.with_merge_requests_enabled, Found super ActiveRecord::Base
Project.active, Found super ActiveRecord::Base
Project.abandoned, Found super ActiveRecord::Base
Project.excluding_project, Found super ActiveRecord::Base
Project.import_started, Found super ActiveRecord::Base
Project.ci_config_path=, Found super ActiveRecord::Base
Project.import_url=, Found super ActiveRecord::Base
Project.import_url=, Found super ActiveRecord::Base
ProjectAutoDevops.enabled, Found super ActiveRecord::Base
ProjectAutoDevops.disabled, Found super ActiveRecord::Base
ProjectLabel.to_reference, Found super Label
MicrosoftTeamsService.custom_data, Found super ChatNotificationService
ProjectSnippet.fresh, Found super Snippet
ReadmeBlob.initialize, Found super SimpleDelegator
RedirectRoute.matching_path_and_descendants, Found super ActiveRecord::Base
Route.inside_path, Found super ActiveRecord::Base
SentNotification.position=, Found super ActiveRecord::Base
Service.visible, Found super ActiveRecord::Base
Service.issue_trackers, Found super ActiveRecord::Base
Service.external_wikis, Found super ActiveRecord::Base
Service.active, Found super ActiveRecord::Base
Service.without_defaults, Found super ActiveRecord::Base
Service.push_hooks, Found super ActiveRecord::Base
Service.tag_push_hooks, Found super ActiveRecord::Base
Service.issue_hooks, Found super ActiveRecord::Base
Service.confidential_issue_hooks, Found super ActiveRecord::Base
Service.merge_request_hooks, Found super ActiveRecord::Base
Service.note_hooks, Found super ActiveRecord::Base
Service.confidential_note_hooks, Found super ActiveRecord::Base
Service.job_hooks, Found super ActiveRecord::Base
Service.pipeline_hooks, Found super ActiveRecord::Base
Service.wiki_page_hooks, Found super ActiveRecord::Base
Service.external_issue_trackers, Found super ActiveRecord::Base
Service.deployment, Found super ActiveRecord::Base
Snippet.are_internal, Found super ActiveRecord::Base
Snippet.are_private, Found super ActiveRecord::Base
Snippet.are_public, Found super ActiveRecord::Base
Snippet.public_and_internal, Found super ActiveRecord::Base
Snippet.fresh, Found super ActiveRecord::Base
Snippet.link_reference_pattern, Found super ActiveRecord::Base
Todo.pending, Found super ActiveRecord::Base
Todo.done, Found super ActiveRecord::Base
Upload.with_files_stored_locally, Found super ActiveRecord::Base
User.admins, Found super ActiveRecord::Base
User.blocked, Found super ActiveRecord::Base
User.external, Found super ActiveRecord::Base
User.active, Found super ActiveRecord::Base
User.without_projects, Found super ActiveRecord::Base
User.todo_authors, Found super ActiveRecord::Base
User.order_recent_sign_in, Found super ActiveRecord::Base
User.order_oldest_sign_in, Found super ActiveRecord::Base
User.authorized_projects, Found super ActiveRecord::Base
AnalyticsGenericSerializer.represent, Found super BaseSerializer
WithPagination.represent, Found super 
WithPagination.represent, Found super 
ContainerTagsSerializer.represent, Found super BaseSerializer
EnvironmentSerializer.represent, Found super BaseSerializer
EnvironmentSerializer.represent, Found super BaseSerializer
GroupChildSerializer.represent, Found super BaseSerializer
IssueSerializer.represent, Found super BaseSerializer
MergeRequestSerializer.represent, Found super BaseSerializer
PipelineSerializer.represent, Found super BaseSerializer
PipelineSerializer.represent, Found super BaseSerializer
Boards::Issues::CreateService.initialize, Found super 
CreateBranchService.success, Found super BaseService
CreateReleaseService.success, Found super BaseService
DeleteBranchService.error, Found super BaseService
DeleteBranchService.success, Found super BaseService
MergeRequests::CreateFromIssueService.initialize, Found super 
MergeRequests::CreateFromIssueService.success, Found super 
Search::GroupService.initialize, Found super 
Tags::DestroyService.error, Found super 
Tags::DestroyService.success, Found super 
UpdateReleaseService.success, Found super BaseService
UpdateSnippetService.initialize, Found super BaseService
FileUploader.initialize, Found super GitlabUploader
GitlabUploader.initialize, Found super CarrierWave::Uploader::Base
UrlPlaceholderValidator.validate_each, Found super UrlValidator
WaitableWorker::ClassMethods.perform, Found super 
ObjectStorage::MigrateUploadsWorker::Upload.stored_locally, Found super ActiveRecord::Base
ObjectStorage::MigrateUploadsWorker::Upload.stored_remotely, Found super ActiveRecord::Base
ObjectStorage::MigrateUploadsWorker::Report::MigrationFailures.stored_locally, Found super 
ObjectStorage::MigrateUploadsWorker::Report::MigrationFailures.stored_remotely, Found super 
retrieve_func_calls: 1694.457307
CALLS: ["params", "find", "params", "current_user", "remove_user", "destroy", "admin_root_path"]
CALLS: ["request", "current_user"]
CALLS: ["options", "fetch"]
CALLS: ["client_url", "parse", "username", "password", "join", "to_s", "path", "chomp", "scheme"]
CALLS: ["success?", "upload", "id", "error", "message"]
CALLS: ["errors", "map", "join"]
CALLS: ["error", "nil?"]
CALLS: ["error", "nil?"]
CALLS: []
CALLS: ["", "merge"]
CALLS: ["author_id", "created_at", "update!"]
CALLS: ["version", "date"]
CALLS: ["persisted?", "version"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["raw_repository", "target_branch", "update", "merge", "with_cache_hooks"]
CALLS: ["change_state", "change_subscription", "change_todo", "toggle_award", "filter_params", "associations_before_update", "params", "label_ids", "process_label_ids", "label_ids", "labels_changing?", "params", "changed?", "params", "present?", "params", "current_user", "merge", "assign_attributes", "has_title_or_description_changed?", "now", "current_user", "assign_attributes", "before_update", "project", "update_project_counter_caches?", "save", "with_transaction_returning_status", "project", "current_user", "new", "execute", "no_touching", "handle_changes", "assignees", "to_a", "compact", "invalidate_cache_counts", "after_update", "current_user", "create_new_cross_references!", "execute_hooks", "update_project_counter_caches"]
CALLS: ["move", "update_markdown", "uploader", "record_upload", "uploader", "schedule_background_upload"]
CALLS: ["model", "file", "file", "exists?", "transaction_begin", "uploads", "upload_path", "where", "delete_all", "upload", "upload", "destroy!", "upload", "build_upload", "tap", "transaction_end", "transaction"]
CALLS: ["class", "to_s", "file", "size", "upload_path", "model", "mounted_as", "new"]
CALLS: ["data", "bytesize"]
CALLS: ["snippet", "content"]
CALLS: ["text_data"]
CALLS: ["params", "find_by"]
CALLS: ["skip_cross_project_check"]
CALLS: ["should_skip_cross_project_check", "should_skip_cross_project_check"]
CALLS: ["execute", "find_by"]
CALLS: ["params", "find_by"]
CALLS: ["snippets", "params", "find"]
CALLS: ["load_snippets", "html", "view_to_html_string", "json", "respond_to"]
CALLS: ["current_user", "user", "params", "new", "execute", "params", "page"]
CALLS: ["", "where"]
CALLS: ["ghost"]
CALLS: ["where", "bio", "name", "unique_internal"]
CALLS: ["first", "create_unique_internal"]
CALLS: ["minute", "to_i", "new", "try_obtain", "sleep", "first", "uncached", "present?", "new", "find_by_username", "string", "sprintf", "find_by_email", "string", "build", "new", "execute", "cancel"]
CALLS: ["merge_when_pipeline_succeeds?", "open?", "reset_merge_when_pipeline_succeeds", "cancel_merge_when_pipeline_succeeds", "success", "error"]
CALLS: ["success", "merge"]
CALLS: ["", "merge"]
CALLS: ["new", "create_note"]
CALLS: ["note", "merge", "create", "metadata?", "system_note_metadata", "metadata", "new"]
CALLS: ["request", "spammable", "request", "env", "request", "env", "to_s", "create_user_agent_detail"]
CALLS: ["class", "__method__"]
CALLS: ["params", "new", "params", "new", "verify_params!", "params", "access_levels", "access_levels", "new", "execute"]
CALLS: []
CALLS: ["ce_style_access_level"]
CALLS: ["params", "type"]
CALLS: ["object", "class", "name", "downcase"]
CALLS: ["params"]
CALLS: ["sym_options_with_owner"]
CALLS: ["sym_options"]
CALLS: ["metadata", "present?"]
CALLS: []
CALLS: ["handle_quick_actions_on_create", "filter_params", "params", "delete", "params", "current_user", "params", "process_label_ids", "params", "assign_attributes", "before_create", "params", "present?", "params", "create_issuable", "after_create", "execute_hooks", "assignees", "invalidate_cache_counts", "update_project_counter_caches"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["handle_wip_event"]
CALLS: ["params", "delete", "params", "title", "params", "wip_title", "wipless_title"]
CALLS: ["params", "params"]
CALLS: ["class", "unhyphenize", "unescape_html"]
CALLS: ["gsub"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["properties", "properties", "present?", "properties"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["properties", "properties", "present?", "properties"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["properties", "properties", "present?", "properties"]
CALLS: []
CALLS: []
CALLS: ["properties", "properties", "present?", "properties"]
CALLS: []
CALLS: []
CALLS: []
CALLS: ["class", "title", "wip_title"]
CALLS: ["class", "title", "wipless_title"]
CALLS: ["label?", "label", "name", "list_type", "humanize"]
CALLS: ["access_level"]
CALLS: ["nil?", "max_member_access_for_user"]
CALLS: ["admin?", "members_with_parents", "where", "reorder", "first", "access_level"]
CALLS: ["parent_id", "self_and_ancestors", "reorder", "select", "id", "active_without_invites_and_requests", "where"]
CALLS: ["parent_id", "class", "id", "where", "class", "id", "where", "new", "base_and_ancestors"]
CALLS: ["", "left_join_users", "where", "non_request", "reorder"]
CALLS: ["arel_table", "arel_table", "join", "eq", "on", "join_sources", "joins"]
CALLS: ["", "where"]
CALLS: ["admin?"]
CALLS: ["access_level_attribute", "public_send"]
CALLS: ["respond_to?", "model_name", "plural", "to_sym", "include?", "to_sym"]
CALLS: ["new"]
CALLS: ["new"]
CALLS: ["new"]
CALLS: ["new"]
CALLS: ["labels", "params", "find"]
CALLS: ["current_user", "project", "id", "new", "execute", "select", "respond_to?", "labels", "pluck", "as_json", "find", "each"]
CALLS: ["new", "current_user", "enabled_keys", "represent", "available_project_keys", "represent", "available_public_keys", "represent"]
CALLS: ["is_a?", "preload", "paginated?", "represent", "represent"]
CALLS: ["present?"]
CALLS: ["paginator", "present?"]
CALLS: ["subgroups", "projects", "with_route", "params", "new"]
CALLS: ["group", "none", "group", "full_path", "inside_path"]
CALLS: ["params", "present?", "params", "find_by", "current_user", "can?"]
CALLS: ["allowed?"]
CALLS: ["is_a?", "policy_for", "can?", "user_scope", "can?", "subject_scope", "can?"]
CALLS: ["includes"]
CALLS: ["includes"]
CALLS: ["active?", "policy_for"]
CALLS: ["revoked?", "expired?"]
CALLS: ["domain", "enabled_until", "domain", "enabled_until", "now"]
CALLS: ["pages_domains", "params", "to_s", "find_by!"]
CALLS: ["skip_cross_project_check"]
CALLS: ["execute", "find_by!"]
CALLS: ["x509", "new", "x509", "not_before", "x509", "not_after"]
CALLS: ["certificate", "certificate", "new"]
CALLS: ["action"]
CALLS: ["create?", "remove?"]
CALLS: ["revision_after", "blank_ref?"]
CALLS: ["fetch"]
CALLS: ["revision_before", "blank_ref?"]
CALLS: ["fetch"]
CALLS: ["environment_options"]
CALLS: ["job", "options", "dig"]
CALLS: ["project", "builds", "params", "find"]
CALLS: ["pipeline", "builds", "name", "where"]
CALLS: ["actual_head_pipeline"]
CALLS: ["head_pipeline", "sha", "diff_head_sha", "head_pipeline"]
CALLS: ["build", "sha"]
CALLS: ["commit", "try"]
CALLS: ["params", "merge_request", "merge_commit_message", "merge_jid", "log_info", "repository", "current_user", "source", "merge_request", "merge", "merge_jid", "log_info", "merge_request", "update", "message", "message", "merge_request", "update"]
CALLS: ["repository"]
CALLS: ["diff_head_sha"]
CALLS: ["logger", "merge_request_info", "info"]
CALLS: ["merge_request", "to_reference"]
CALLS: ["class", "reference_prefix", "username"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["reference_prefix"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["class", "reference_prefix", "id", "project", "present?", "project", "to_reference"]
CALLS: ["to_reference"]
CALLS: ["cross_namespace_reference?", "full_path", "cross_project_reference?", "path"]
CALLS: ["is_a?"]
CALLS: ["namespace", "namespace", "namespace"]
CALLS: ["milestone_format_reference", "class", "reference_prefix", "project", "project", "to_reference"]
CALLS: ["include?", "group_milestone?", "name", "include?", "iid"]
CALLS: ["group_id", "present?"]
CALLS: ["to_s"]
CALLS: []
CALLS: ["class", "reference_prefix", "iid", "project", "to_reference"]
CALLS: ["label_format_reference", "class", "reference_prefix", "to_reference"]
CALLS: ["include?", "name", "include?", "id"]
CALLS: ["class", "reference_prefix", "iid", "project", "to_reference"]
CALLS: ["class", "reference_prefix", "full_path"]
CALLS: ["reference_link_text"]
CALLS: ["title"]
CALLS: ["id", "id", "id"]
CALLS: ["to_reference"]
CALLS: ["project", "to_reference", "ref_from", "notation", "ref_to", "present?", "class", "reference_prefix"]
CALLS: ["short_id", "commit_reference"]
CALLS: ["project", "to_reference", "present?", "class", "reference_prefix"]
CALLS: ["short_id"]
CALLS: []
CALLS: ["project", "to_reference", "present?", "class", "reference_prefix", "id", "id"]
CALLS: ["id", "commit_reference"]
CALLS: ["project", "current_user", "merge_request_params", "new", "execute"]
CALLS: ["project", "id", "branch_name", "project", "id", "ref", "issue", "milestone_id"]
CALLS: ["fetch"]
CALLS: ["build", "ref"]
CALLS: ["project", "default_branch"]
CALLS: ["wiki", "class", "default_ref"]
CALLS: ["project", "gl_repository", "project", "repository_storage", "disk_path", "new", "exists?", "create_repo!", "new"]
CALLS: ["project", "full_path"]
CALLS: ["disk_hash", "base_dir", "disk_hash"]
CALLS: ["options", "base_dir", "model_path_segment", "join"]
CALLS: ["class", "to_s", "underscore", "id", "to_s", "join"]
CALLS: ["id", "to_s", "join"]
CALLS: ["disk_path", "hashed_storage?", "disk_path", "full_path"]
CALLS: ["include?", "storage_version", "storage_version"]
CALLS: []
CALLS: ["options", "base_dir", "model_path_segment", "join"]
CALLS: ["model", "project_id", "to_s", "hexdigest"]
CALLS: ["file", "hexdigest"]
CALLS: ["file", "hexdigest"]
CALLS: ["file", "hexdigest"]
CALLS: ["id"]
CALLS: ["id"]
CALLS: ["project", "id"]
CALLS: ["hexdigest"]
CALLS: ["hexdigest"]
CALLS: ["options", "fetch"]
CALLS: ["class", "object_store", "base_dir"]
CALLS: ["model"]
CALLS: ["model", "store_serialization_column", "try"]
CALLS: ["serialization_column", "compact", "join", "to_sym"]
CALLS: ["class", "model", "class", "mounted_as", "serialization_column"]
CALLS: ["namespace", "full_path"]
CALLS: ["project", "id", "project", "id", "to_s", "hexdigest"]
CALLS: ["disk_hash", "disk_hash", "disk_hash"]
CALLS: ["gitlab_shell", "project", "repository_storage", "disk_path", "create_repository", "exists?", "repository", "after_create"]
CALLS: ["project", "create_repository"]
CALLS: ["forked?", "gitlab_shell", "repository_storage", "disk_path", "create_repository", "repository", "after_create", "errors", "add"]
CALLS: ["fork_network", "fork_network", "root_project", "forked_project_link", "nil?", "forked_project_link", "forked_from_project", "nil?"]
CALLS: ["fork_network", "fork_network", "forked_from_project", "fork_network", "create_root_of_fork_network", "create_root_of_fork_network"]
CALLS: ["gl_repository"]
CALLS: ["project", "disk_path"]
CALLS: ["repository_storages", "first"]
CALLS: ["read_attribute"]
CALLS: ["owner", "new"]
CALLS: ["group", "group", "namespace", "try"]
CALLS: ["repository", "exists?", "repository", "root_ref"]
CALLS: ["raw_repository", "root_ref"]
CALLS: ["issue", "to_branch_name"]
CALLS: ["confidential?", "iid", "iid", "title", "parameterize"]
CALLS: ["noteable", "try"]
CALLS: ["for_commit?", "project", "commit_id", "commit"]
CALLS: ["target_type"]
CALLS: []
CALLS: ["noteable_type"]
CALLS: ["commit_to", "commit_from"]
CALLS: ["noteable_type"]
CALLS: ["for_commit?", "commit"]
CALLS: ["notes_finder", "target", "noteable"]
CALLS: ["note", "noteable"]
CALLS: []
CALLS: ["for_commit?", "project", "commit_id", "commit"]
CALLS: ["allowed?", "commit", "noteables_for_type", "find"]
CALLS: ["id", "new", "execute", "id", "new", "execute", "new", "execute", "all"]
CALLS: ["params", "downcase", "current_user", "id", "new", "params", "find_by", "current_user", "id", "new", "params", "find_by", "params", "commit"]
CALLS: ["project", "current_user", "finder_params", "new"]
CALLS: ["params", "last_fetched_at", "snippet", "id", "merge"]
CALLS: ["request", "headers"]
CALLS: ["params", "last_fetched_at", "merge"]
CALLS: ["current_user", "project", "id", "new", "find_by"]
CALLS: ["target_project", "issue_iid", "current_user", "get_issue"]
CALLS: ["merge_request", "target_project"]
CALLS: ["target_project", "external_issue_tracker", "source_branch", "target_project", "external_issue_reference_pattern", "match", "try", "source_branch", "match", "try", "strong_memoize"]
CALLS: ["has_external_issue_tracker", "nil?", "cache_has_external_issue_tracker", "has_external_issue_tracker?", "services", "external_issue_trackers", "first"]
CALLS: ["", "issue_trackers", "active", "without_defaults"]
CALLS: ["", "with_state", "non_internal"]
CALLS: ["internal_attributes", "map", "join", "where"]
CALLS: []
CALLS: ["", "where"]
CALLS: ["", "where"]
CALLS: ["", "where"]
CALLS: ["", "joins", "order"]
CALLS: ["nulls_last_order", "reorder", "order"]
CALLS: ["", "where"]
CALLS: ["", "with_state"]
CALLS: ["", "arel_table", "eq", "arel_table", "not_eq", "and", "arel_table", "eq", "new", "or", "left_join_users", "where", "where", "reorder"]
CALLS: ["", "where"]
CALLS: ["", "where"]
CALLS: ["", "where"]
CALLS: ["read_write?", "services", "external_issue_trackers", "any?", "update_column"]
CALLS: ["from_services"]
CALLS: ["external_issue_tracker", "class", "issues_enabled?", "reference_pattern"]
CALLS: ["reference_prefix", "escape"]
CALLS: ["reference_pattern", "reference_prefix", "escape"]
CALLS: []
CALLS: ["reference_prefix"]
CALLS: ["issues_access_level"]
CALLS: []
CALLS: ["reference_pattern", "reference_prefix", "escape"]
CALLS: ["reference_pattern", "reference_prefix", "escape"]
CALLS: ["reference_pattern", "reference_prefix", "escape"]
CALLS: ["reference_pattern", "reference_prefix", "escape"]
CALLS: ["reference_pattern"]
CALLS: ["reference_pattern"]
CALLS: ["__method__"]
CALLS: ["reference_pattern", "reference_pattern", "union"]
CALLS: ["find_union", "with_route"]
CALLS: ["length", "select", "map", "new", "table_name", "to_sql", "where", "first"]
CALLS: ["one?", "first", "find_union"]
CALLS: ["reference_pattern", "reference_prefix"]
CALLS: ["reference_pattern", "reference_prefix"]
CALLS: ["params", "presence"]
CALLS: ["issues_enabled?", "id", "new", "find_by", "external_issue_tracker", "new"]
CALLS: ["params", "ref_name"]
CALLS: ["push_event_payload", "ref"]
CALLS: ["issue?", "target"]
CALLS: ["target_type"]
CALLS: ["params", "try"]
CALLS: ["issues", "params", "where", "reorder", "take!", "notes", "new", "current_user", "can?", "render_404"]
CALLS: ["current_user", "project", "id", "new", "execute", "select"]
CALLS: ["milestoneish_ids", "of_milestones", "includes"]
CALLS: ["id"]
CALLS: ["milestones", "select"]
CALLS: ["id", "group", "group", "id", "new", "execute", "select"]
CALLS: ["milestones?", "project?", "project", "group", "id", "project", "id", "group", "group", "id", "params", "new", "execute", "none"]
CALLS: ["object", "is_a?"]
CALLS: ["params", "present?"]
CALLS: ["params", "present?"]
CALLS: ["params", "present?"]
CALLS: ["params", "present?"]
CALLS: ["search_params", "new", "execute"]
CALLS: ["group", "current_user", "group", "can?", "group", "params", "permit", "id", "id", "merge"]
CALLS: ["params", "permit", "group", "id", "merge"]
CALLS: ["milestones", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["properties", "properties", "present?", "properties"]
CALLS: []
CALLS: ["s_"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["properties", "properties", "present?", "properties"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["properties", "properties", "present?", "properties"]
CALLS: []
CALLS: []
CALLS: ["properties", "properties", "present?", "properties"]
CALLS: []
CALLS: []
CALLS: []
CALLS: ["route", "route", "name", "present?", "route", "name", "persisted?", "update_route", "build_full_name"]
CALLS: ["read_only?", "prepare_route", "route", "save"]
CALLS: ["sync_profile_from_provider?", "synced?"]
CALLS: ["provider", "sync_profile_from_provider?"]
CALLS: ["gcp?", "provider_gcp"]
CALLS: []
CALLS: []
CALLS: ["config_for"]
CALLS: ["read_attribute"]
CALLS: ["route", "build_route", "route", "path", "build_full_path", "route", "name", "build_full_name"]
CALLS: ["parent", "path", "parent", "full_path", "path", "path"]
CALLS: ["project"]
CALLS: ["group", "project"]
CALLS: ["parent_id", "project", "parent_id", "commit_by", "strong_memoize"]
CALLS: ["key?", "find_commit"]
CALLS: ["is_a?", "raw_repository", "find", "new"]
CALLS: ["repository", "commit_by"]
CALLS: ["group", "project"]
CALLS: []
CALLS: []
CALLS: ["group?", "group", "project", "strong_memoize"]
CALLS: ["params", "present?"]
CALLS: ["instance_variable_defined?"]
CALLS: ["parent", "name", "parent", "human_name", "name", "name"]
CALLS: ["owner_name"]
CALLS: ["full_name"]
CALLS: ["full_title", "length", "safe_message", "safe_message", "split", "try"]
CALLS: ["safe_message", "blank?", "no_commit_message", "safe_message", "split", "first"]
CALLS: ["group", "group", "group_title", "namespace", "owner", "name", "simple_sanitize", "user_path", "link_to", "project_path", "avatar_url", "env", "test?", "name", "project_icon", "name", "simple_sanitize", "content_tag", "html_safe", "group", "breadcrumb_list_item", "html_safe"]
CALLS: ["helpers", "content_tag"]
CALLS: ["new", "email", "username", "execute"]
CALLS: ["avatar_in_git", "url_helpers", "project_avatar_url"]
CALLS: ["url_helpers"]
CALLS: ["repository", "avatar"]
CALLS: ["file_on_head", "path", "allow_n_plus_1_calls"]
CALLS: ["tree", "blobs", "path", "type_of", "find"]
CALLS: ["select"]
CALLS: ["head_commit", "nil?", "head_tree", "head_commit", "sha", "new"]
CALLS: ["head_commit", "head_commit", "sha", "new"]
CALLS: ["root_ref", "commit"]
CALLS: ["head_commit_sha", "project", "head_commit_sha", "commit_by"]
CALLS: ["persisted?", "nil?", "last_commit_sha"]
CALLS: ["last_version", "sha"]
CALLS: ["versions", "first"]
CALLS: ["persisted?", "wiki", "wiki", "path", "page_versions"]
CALLS: ["commit_shas", "first"]
CALLS: ["merge_request_diff_commits", "map"]
CALLS: ["persisted?", "merge_request_diff", "commit_shas", "compare_commits", "compare_commits", "to_a", "reverse", "map", "diff_head_sha"]
CALLS: ["empty?", "association", "loaded?", "latest_merge_request_diff"]
CALLS: ["exists?", "has_visible_content?"]
CALLS: ["raw_size"]
CALLS: ["stored_externally?", "external_size", "size"]
CALLS: []
CALLS: ["external_storage", "external_storage_error?"]
CALLS: []
CALLS: []
CALLS: ["external_storage", "project", "lfs_enabled?"]
CALLS: ["nil?", "namespace", "lfs_enabled?", "config", "lfs", "enabled"]
CALLS: []
CALLS: ["", "where"]
CALLS: ["", "now", "where"]
CALLS: ["", "where"]
CALLS: ["config", "lfs", "enabled"]
CALLS: ["config", "lfs", "enabled", "nil?", "config", "lfs", "enabled"]
CALLS: ["commit", "sha"]
CALLS: ["head", "project", "new", "strong_memoize"]
CALLS: ["args", "fetch", "avatar_path"]
CALLS: ["present?", "asset_host", "present?", "respond_to?", "public?", "gitlab_config", "base_url", "gitlab_config", "relative_url_root", "avatar", "local_url"]
CALLS: ["class", "base_dir", "dynamic_segment", "filename", "join"]
CALLS: ["file", "filename"]
CALLS: ["model", "oid", "model", "oid", "join"]
CALLS: ["params", "to_s"]
CALLS: ["model", "oid"]
CALLS: ["model", "id", "model", "created_at", "utc", "strftime", "model", "project_id", "to_s", "model", "id", "to_s", "join"]
CALLS: ["model", "id", "model", "created_at", "utc", "strftime", "disk_hash", "disk_hash", "disk_hash", "model", "job_id", "to_s", "model", "id", "to_s", "join"]
CALLS: ["raise"]
CALLS: ["file", "filename"]
CALLS: ["secret"]
CALLS: ["class", "generate_secret"]
CALLS: ["hex"]
CALLS: ["file", "filename"]
CALLS: ["model", "class", "to_s", "underscore", "mounted_as", "to_s", "model", "id", "to_s", "join"]
CALLS: ["model", "class", "to_s", "underscore", "mounted_as", "to_s", "model", "id", "to_s", "join"]
CALLS: ["config", "gitlab"]
CALLS: ["config", "gitlab"]
CALLS: ["ancestors", "reverse", "group_title_link", "add_to_breadcrumb_dropdown", "group_title_link", "each_with_index", "_", "group_title_link", "html_safe", "simple_sanitize", "link_to", "html_safe"]
CALLS: ["parent_id", "class", "none", "class", "parent_id", "where", "new", "base_and_ancestors"]
CALLS: ["group_path", "try", "env", "test?", "group_icon", "name", "simple_sanitize", "html_safe", "link_to"]
CALLS: ["group_icon_url"]
CALLS: ["is_a?", "find_by_full_path", "try", "helpers", "image_path"]
CALLS: ["for_user", "find_by_full_path", "owner"]
CALLS: ["", "where"]
CALLS: ["mysql?", "connection", "quote", "where_full_path_in", "reorder", "take", "postgresql?", "joins", "find_by", "joins", "find_by"]
CALLS: ["postgresql?", "connection", "quote", "each", "empty?", "none", "joins", "join", "where"]
CALLS: []
CALLS: ["sprite_icon"]
CALLS: ["blank?", "sprite_icon_path", "content_tag", "empty?", "content_tag"]
CALLS: ["asset_host", "config", "gitlab", "url", "helpers", "image_path"]
CALLS: ["domain", "certificate", "present?", "domain", "domain"]
CALLS: ["sanitize"]
CALLS: ["respond_to?", "find_by_full_path", "avatar_url", "avatar_url", "project_identicon"]
CALLS: ["id", "values", "name", "upcase", "content_tag"]
CALLS: ["constants", "const_get", "map"]
CALLS: ["chart_values_file", "read"]
CALLS: ["root", "name"]
CALLS: ["options", "storage_path"]
CALLS: ["options", "storage_path"]
CALLS: ["options", "storage_path"]
CALLS: ["options", "storage_path", "join"]
CALLS: ["content_values", "to_yaml"]
CALLS: ["chart_values_file", "load_file", "specification", "deep_merge!"]
CALLS: ["gitlab_url", "ensure_runner", "token", "privileged"]
CALLS: ["url_helpers", "root_url"]
CALLS: ["runner", "create_and_assign_runner"]
CALLS: ["transaction_begin", "project", "runners", "create!", "id", "update!", "tap", "transaction_end", "transaction"]
CALLS: ["params", "find"]
CALLS: ["params", "sub"]
CALLS: ["link_to", "breadcrumb_list_item"]
CALLS: ["present?", "squish", "present?", "sanitize", "truncate_words"]
CALLS: ["search_params", "new", "execute", "group", "group_projects", "params", "build_collection", "params", "sort"]
CALLS: ["build_collection", "group", "each"]
CALLS: ["map", "new", "execute", "select", "group_by", "map", "where", "new", "map", "due_date", "sort_by"]
CALLS: ["due_date", "first", "due_date", "all?", "first", "due_date"]
CALLS: ["group_by", "new", "map"]
CALLS: ["discussion_id", "group_by", "values", "build", "map"]
CALLS: ["discussion_class", "override_discussion_id", ""]
CALLS: ["discussion_id"]
CALLS: ["noteable"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["build_discussion_id", "join", "hexdigest"]
CALLS: ["base_discussion_id"]
CALLS: ["noteable_id", "commit_id", "noteable_type", "try"]
CALLS: ["base_discussion_id", "hex"]
CALLS: ["params", "params", "sort_by_attribute", "order_id_desc"]
CALLS: ["to_s", "order_recent_sign_in", "order_oldest_sign_in", "order_by"]
CALLS: ["", "nulls_last_order", "reorder"]
CALLS: ["", "nulls_last_order", "reorder"]
CALLS: ["", "left_join_users", "nulls_last_order", "reorder"]
CALLS: ["", "left_join_users", "nulls_last_order", "reorder"]
CALLS: ["to_s", "order_created_asc", "order_created_desc", "order_created_desc", "order_id_asc", "order_id_desc", "order_name_asc", "order_name_desc", "order_updated_asc", "order_updated_desc", "all"]
CALLS: ["", "left_join_users", "nulls_last_order", "reorder"]
CALLS: ["", "left_join_users", "nulls_last_order", "reorder"]
CALLS: ["", "reorder"]
CALLS: ["", "reorder"]
CALLS: ["", "reorder"]
CALLS: ["", "reorder"]
CALLS: ["", "reorder"]
CALLS: ["", "reorder"]
CALLS: ["", "reorder"]
CALLS: ["include?", "include?", "reverse!", "tap", "first", "public_send", "second", "public_send", "in?", "casecmp", "sort"]
CALLS: ["to_s", "order_by_labels_priority", "order_by", "order"]
CALLS: ["highest_label_priority", "to_sql", "table_name", "select", "nulls_last_order", "order", "order"]
CALLS: ["arel_table", "minimum", "select", "left_join_priorities", "joins", "where", "where", "reorder", "where", "where", "present?", "where", "not"]
CALLS: ["arel_table", "arel_table", "join", "eq", "on", "join_sources", "joins"]
CALLS: ["to_s", "reorder", "reorder", "reorder", "order_by"]
CALLS: ["to_s", "nulls_last_order", "reorder", "nulls_last_order", "reorder", "nulls_last_order", "reorder", "nulls_last_order", "reorder", "order_by"]
CALLS: ["to_s", "reorder", "reorder", "order_recent_sign_in", "order_oldest_sign_in", "order_created_desc", "order_created_asc", "order_by"]
CALLS: ["to_s", "order_due_date_asc", "order_due_date_asc", "order_due_date_desc"]
CALLS: ["", "reorder"]
CALLS: ["", "reorder"]
CALLS: ["reorder", "order_by"]
CALLS: ["", "reorder"]
CALLS: ["to_s", "order_downvotes_desc", "order_labels_priority", "order_milestone_due_asc", "order_milestone_due_asc", "order_milestone_due_desc", "order_upvotes_desc", "order_due_date_and_labels_priority", "order_upvotes_desc", "order_by", "order"]
CALLS: ["name", "table_name", "table_name", "project_foreign_key", "highest_label_priority", "to_sql", "table_name", "join", "select", "arel_table", "group", "nulls_last_order", "reorder"]
CALLS: []
CALLS: []
CALLS: ["order_milestone_due_asc", "order_labels_priority", "nulls_last_order", "nulls_last_order", "reorder"]
CALLS: ["", "left_joins_milestones", "reorder"]
CALLS: ["", "table_name", "joins"]
CALLS: ["", "left_joins_milestones", "reorder"]
CALLS: ["order_votes_desc"]
CALLS: ["arel_table", "arel_table", "join", "eq", "name", "eq", "eq", "and", "and", "on", "join_sources", "joins", "group", "reorder"]
CALLS: ["order_votes_desc"]
CALLS: ["presence"]
CALLS: ["params", "present?", "params", "sort_by_attribute", "order_id_desc"]
CALLS: ["reorder"]
CALLS: ["params", "params", "label_names", "sort_by_attribute", "reorder"]
CALLS: ["labels", "order", "pluck"]
CALLS: ["labels?", "params", "is_a?", "params", "split", "params"]
CALLS: ["params", "present?"]
CALLS: ["params", "fetch"]
CALLS: ["presence"]
CALLS: ["params", "fetch", "sort_by_attribute"]
CALLS: ["group", "current_user", "new", "execute"]
CALLS: ["params", "build_collection"]
CALLS: ["", "where"]
CALLS: ["none"]
CALLS: ["project", "notes", "id", "for_commit_id"]
CALLS: ["", "where"]
CALLS: ["project", "notes", "sha", "for_commit_id"]
CALLS: ["message", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["issues", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["root", "join"]
CALLS: ["issuables_collection", "non_archived", "params", "page", "collection_type", "issuable_meta_data", "html", "atom", "respond_to"]
CALLS: ["", "where"]
CALLS: ["", "join_project", "where"]
CALLS: ["create_event"]
CALLS: ["transaction_begin", "event_service", "current_user", "reopen_mr", "merge_request_metrics_service", "reopen", "transaction_end", "transaction"]
CALLS: ["reopen_resource_email"]
CALLS: ["build_recipients", "mailer", "user", "id", "id", "id", "reason", "send", "deliver_later", "each"]
CALLS: []
CALLS: ["new", "notification_recipients"]
CALLS: ["build!", "filter!", "recipients", "reason", "priority", "sort_by", "uniq", "freeze"]
CALLS: ["delete", "build!"]
CALLS: []
CALLS: ["recipients", "select!"]
CALLS: ["note", "author", "add_participants", "note", "author", "note", "add_mentions", "note", "for_project_noteable?", "add_project_watchers", "add_custom_notifications", "add_subscribed_users"]
CALLS: ["target", "respond_to?", "target", "project", "subscribers", "add_recipients"]
CALLS: ["is_a?", "includes", "compact", "recipients", "make_recipient", "map", "concat"]
CALLS: ["project", "custom_action", "target", "acting_user", "new"]
CALLS: []
CALLS: ["note", "author"]
CALLS: ["action", "target", "class", "model_name", "name", "underscore", "to_sym"]
CALLS: ["skip_current_user", "current_user"]
CALLS: []
CALLS: ["current_user"]
CALLS: ["project", "custom_action", "target", "acting_user", "new"]
CALLS: ["is_a?", "includes", "compact", "recipients", "make_recipient", "map", "concat"]
CALLS: ["subscriptions_available", "where", "map"]
CALLS: ["arel_table", "subscriptions", "eq", "try", "eq", "or", "where"]
CALLS: ["project_watchers", "add_recipients"]
CALLS: ["project", "user_ids_notifiable_on", "project", "user_ids_notifiable_on", "project", "group", "user_ids_notifiable_on", "uniq", "user_ids_with_global_level_watch", "select_project_members_ids", "project", "group", "select_group_members_ids", "user_scope", "concat", "uniq", "where"]
CALLS: ["settings_with_global_level_of", "pluck"]
CALLS: ["levels", "where"]
CALLS: ["levels", "where"]
CALLS: ["user_ids_notifiable_on"]
CALLS: ["project", "user_ids_notifiable_on"]
CALLS: ["notification_settings", "levels", "where", "pluck"]
CALLS: ["settings_with_global_level_of", "pluck"]
CALLS: ["user_ids_notifiable_on"]
CALLS: ["project", "user_ids_notifiable_on"]
CALLS: ["notification_settings", "levels", "where", "pluck"]
CALLS: ["project", "user_ids_notifiable_on", "project", "user_ids_notifiable_on", "project", "group", "user_ids_notifiable_on", "uniq", "user_ids_with_global_level_watch", "select_project_members_ids", "project", "group", "select_group_members_ids", "user_scope", "concat", "uniq", "where"]
CALLS: ["project", "user_ids_notifiable_on", "project", "group", "user_ids_notifiable_on", "project", "user_ids_notifiable_on", "project", "group", "user_ids_notifiable_on", "concat", "custom_action", "user_ids_with_global_level_custom", "user_scope", "where", "add_recipients"]
CALLS: ["settings_with_global_level_of", "pluck"]
CALLS: ["settings_with_global_level_of", "pluck"]
CALLS: ["respond_to?", "mentioned_users", "add_recipients"]
CALLS: ["all_references", "users"]
CALLS: ["extractors", "extractors", "project", "new", "reset_memoized_values", "class", "mentionable_attrs", "__send__", "author", "skip_project_check?", "merge", "analyze", "each"]
CALLS: ["for_project_noteable?"]
CALLS: []
CALLS: []
CALLS: []
CALLS: ["params", "current_user", "new", "execute", "new", "represent"]
CALLS: ["target", "respond_to?", "target", "participants", "add_recipients"]
CALLS: ["joins", "id", "where", "uniq"]
CALLS: ["milestones", "map", "flatten", "uniq"]
CALLS: ["all_participants"]
CALLS: ["raw_participants", "new"]
CALLS: ["author", "project", "new", "new", "empty?", "pop", "class", "participant_attrs", "respond_to?", "instance_exec", "__send__", "each", "reverse_each", "users", "merge", "to_a", "users_that_can_read_personal_snippet", "to_a", "project", "users_that_can_read_project"]
CALLS: ["allowed?", "select", "subject_scope"]
CALLS: ["allowed?", "select", "subject_scope"]
CALLS: ["milestone_redirect_path", "html", "participants", "tabs_json", "json", "respond_to"]
CALLS: ["project_milestone_path", "safe_title", "title", "group_milestone_path", "safe_title", "title", "dashboard_milestone_path"]
CALLS: ["title", "to_slug", "normalize", "to_s"]
CALLS: ["to_slug", "normalize", "to_s"]
CALLS: ["view_to_html_string"]
CALLS: ["target", "respond_to?", "target", "project", "subscribers", "add_recipients"]
CALLS: ["project_watchers", "add_recipients"]
CALLS: ["project", "user_ids_notifiable_on", "project", "group", "user_ids_notifiable_on", "project", "user_ids_notifiable_on", "project", "group", "user_ids_notifiable_on", "concat", "custom_action", "user_ids_with_global_level_custom", "user_scope", "where", "add_recipients"]
CALLS: ["respond_to?", "mentioned_users", "add_recipients"]
CALLS: ["target", "respond_to?", "target", "participants", "add_recipients"]
CALLS: ["for_personal_snippet?"]
CALLS: ["noteable", "is_a?"]
CALLS: ["author_email", "downcase", "find_by_any_email"]
CALLS: ["by_any_email", "take"]
CALLS: ["where", "joins", "where", "new", "to_sql", "table_name", "from"]
CALLS: ["author?", "params", "params", "find"]
CALLS: ["params", "present?"]
CALLS: ["author_id?", "params", "find_by", "author_username?", "params", "find_by"]
CALLS: ["params", "present?", "params"]
CALLS: ["params", "present?", "params"]
CALLS: ["current_user", "add_participants", "add_project_watchers", "add_custom_notifications", "custom_action", "previous_assignee", "add_recipients", "target", "assignee", "add_recipients", "previous_assignee", "add_recipients", "target", "assignees", "add_recipients", "add_subscribed_users", "custom_action", "include?", "current_user", "target", "add_mentions", "custom_action", "target", "assignees", "target", "assignee", "add_recipients", "add_labels_subscribers"]
CALLS: ["target", "respond_to?", "target", "labels", "project", "subscribers", "add_recipients", "each"]
CALLS: ["target", "respond_to?", "target", "labels", "project", "subscribers", "add_recipients", "each"]
CALLS: ["assignee_id?", "params", "find_by", "assignee_username?", "params", "find_by"]
CALLS: ["params", "present?", "params"]
CALLS: ["params", "present?", "params"]
CALLS: []
CALLS: ["recipients", "select!"]
CALLS: []
CALLS: ["index", "length"]
CALLS: ["params", "present?", "params", "find_by", "render_404", "current_user", "params", "new", "execute", "params", "page", "current_user", "dashboard_snippets_path", "explore_snippets_path", "redirect_to", "snippets_path", "current_user"]
CALLS: ["collection", "newest_first"]
CALLS: ["order", "where"]
CALLS: ["allow_n_plus_1_calls", "header_title", "root_path"]
CALLS: ["current_user", "root_path", "explore_root_path", "redirect_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project_settings_ci_cd_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["params", "params", "presence", "sort_value_recently_updated", "params", "params", "new", "execute", "paginate_array", "params", "page", "map", "pipelines", "latest_successful_for_refs", "project", "releases", "where", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project", "pipelines", "sha", "where"]
CALLS: ["newest_first", "success", "ref", "each_with_object"]
CALLS: []
CALLS: ["all_pipelines", "response", "set_header", "new", "represent", "count", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["cache", "cache_key", "cache_options", "uncached_count", "fetch", "to_i"]
CALLS: ["user", "id"]
CALLS: ["id", "cache_key_name"]
CALLS: []
CALLS: []
CALLS: []
CALLS: ["raise"]
CALLS: ["raw?"]
CALLS: []
CALLS: []
CALLS: []
CALLS: ["relation_for_count", "count"]
CALLS: ["user", "keys"]
CALLS: ["user", "keys", "order_id_desc", "name", "name", "blocked?", "internal?", "admin", "current_user", "can?", "impersonate_admin_user_path", "edit_admin_user_path", "admin_user_path", "nav_link", "projects_admin_user_path", "nav_link", "keys_admin_user_path", "nav_link", "admin_user_identities_path", "nav_link", "admin_user_impersonation_tokens_path", "nav_link", "admin_root_path"]
CALLS: ["class", "internal_attributes", "any?"]
CALLS: []
CALLS: ["status"]
CALLS: ["all", "status_sql", "pluck", "first"]
CALLS: ["respond_to?", "exclude_ignored", "all", "respond_to?", "failed_but_allowed", "none", "select", "to_sql", "created", "select", "to_sql", "success", "select", "to_sql", "manual", "select", "to_sql", "pending", "select", "to_sql", "running", "select", "to_sql", "skipped", "select", "to_sql", "canceled", "select", "to_sql", "select", "to_sql", "presence"]
CALLS: ["", "with_state"]
CALLS: ["", "where"]
CALLS: ["", "where"]
CALLS: ["", "where"]
CALLS: ["", "where"]
CALLS: ["", "where"]
CALLS: ["", "where"]
CALLS: ["", "all_state_names", "where"]
CALLS: ["state_machines", "values", "flat_map", "map", "flat_map"]
CALLS: ["", "where"]
CALLS: ["key?", "project", "pipelines", "id", "latest_status_per_commit", "id"]
CALLS: ["arel_table", "arel_table", "alias", "eq", "eq", "and", "lt", "and", "eq", "and", "join", "on", "select", "where", "eq", "where", "join_sources", "joins", "where", "each_with_object"]
CALLS: ["contacted_at", "nil?", "active?", "online?"]
CALLS: ["contacted_at", "contacted_at", "class", "contact_time_deadline"]
CALLS: ["ago"]
CALLS: ["statuses", "latest", "status"]
CALLS: ["", "where"]
CALLS: ["pipeline", "statuses", "name", "where"]
CALLS: ["commit_statuses", "status"]
CALLS: ["jobs", "map", "where"]
CALLS: ["current_user", "created_projects", "where", "to_json"]
CALLS: ["class", "name"]
CALLS: ["current_user", "created_projects", "where", "to_json"]
CALLS: ["current_user", "created_projects", "provider", "where", "to_json"]
CALLS: ["current_user", "created_projects", "where", "to_json"]
CALLS: ["current_user", "created_projects", "where", "to_json"]
CALLS: ["new", "represent_status", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["present?", "represent", "dig"]
CALLS: ["represent"]
CALLS: ["represent", "fetch"]
CALLS: ["new", "represent_status", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["response", "set_header", "new", "represent_status", "json", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["client", "valid?", "new_import_google_code_path", "client", "repos", "client", "incompatible_repos", "current_user", "created_projects", "where", "pluck", "name", "include?", "reject!"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["project_id", "target_id", "target_type"]
CALLS: ["project"]
CALLS: ["teamcity_url", "build_type", "username", "password"]
CALLS: []
CALLS: []
CALLS: []
CALLS: ["project_url", "issues_url", "new_issue_url"]
CALLS: ["url"]
CALLS: ["url"]
CALLS: ["project", "web_url"]
CALLS: ["url_helpers", "project_wiki_url"]
CALLS: ["url_helpers", "project_url"]
CALLS: ["url_helpers", "group_canonical_url"]
CALLS: ["project", "new_project_issue_url"]
CALLS: ["project", "project_issues_url"]
CALLS: ["project", "web_url"]
CALLS: ["api_key", "user_key", "priority"]
CALLS: ["api_url"]
CALLS: ["token"]
CALLS: ["recipients"]
CALLS: ["username", "token"]
CALLS: []
CALLS: []
CALLS: []
CALLS: ["mock_service_url"]
CALLS: []
CALLS: []
CALLS: []
CALLS: ["api_url", "token", "enforce_namespace_to_lower_case", "namespace"]
CALLS: ["namespace", "namespace", "downcase"]
CALLS: ["namespace", "namespace", "downcase"]
CALLS: ["url", "api_url", "username", "password"]
CALLS: ["options", "new"]
CALLS: []
CALLS: ["recipients", "get_channels"]
CALLS: ["activated?", "recipients", "nil?", "recipients", "empty?", "map_recipients", "channels", "empty?", "errors", "add"]
CALLS: ["active"]
CALLS: ["channels", "recipients", "split", "format_channel", "map", "channels", "reject!"]
CALLS: ["parse", "consider_uri", "present?", "default_irc_uri", "nil?", "default_irc_uri", "join", "to_s", "parse", "consider_uri", "logger", "default_irc_uri", "error"]
CALLS: ["scheme", "nil?", "is_a?", "scheme", "path", "nil?", "to_s"]
CALLS: ["token"]
CALLS: ["project_url", "issues_url", "new_issue_url"]
CALLS: ["token", "api_key"]
CALLS: ["token"]
CALLS: ["external_wiki_url"]
CALLS: ["recipients"]
CALLS: ["drone_url", "token"]
CALLS: []
CALLS: ["project_url", "issues_url", "new_issue_url"]
CALLS: []
CALLS: ["webhook"]
CALLS: ["token"]
CALLS: []
CALLS: ["project_url", "token"]
CALLS: ["project_url", "issues_url", "new_issue_url"]
CALLS: ["bamboo_url", "build_key", "username", "password"]
CALLS: ["token"]
CALLS: ["api_key"]
CALLS: ["api_key", "authentication", "new"]
CALLS: ["project"]
CALLS: []
CALLS: []
CALLS: ["source_type", "access_level"]
CALLS: ["membershipable", "class", "to_s", "humanize"]
CALLS: []
CALLS: ["source_type"]
CALLS: []
CALLS: []
CALLS: []
CALLS: ["service"]
CALLS: ["kubeclient", "get_service", "strong_memoize"]
CALLS: ["cluster", "kubeclient"]
CALLS: ["provider", "cluster"]
CALLS: ["params"]
CALLS: ["app", "cluster"]
CALLS: ["project", "clusters", "params", "find", "current_user", "present"]
CALLS: ["attributes", "new", "fabricate!"]
CALLS: ["attributes_before_markdown_cache", "delete", "cached_markdown_fields", "html_fields", "delete", "each"]
CALLS: ["markdown_fields", "html_field", "map"]
CALLS: []
CALLS: ["keys"]
CALLS: ["project", "clusters", "params", "find", "render_404"]
CALLS: ["build_kubeclient!"]
CALLS: ["api_url", "username", "password", "join_api_url", "username", "password", "kubeclient_ssl_options", "new"]
CALLS: ["ca_pem", "present?", "new", "ca_pem", "new", "add_cert"]
CALLS: ["api_url", "parse", "path", "sub", "path", "join", "to_s"]
CALLS: ["api_url", "parse", "path", "sub", "path", "join", "to_s"]
CALLS: ["ca_pem", "present?", "new", "ca_pem", "new", "add_cert"]
CALLS: ["api_url", "parse", "path", "sub", "path", "join", "to_s"]
CALLS: ["ca_pem", "present?", "new", "ca_pem", "new", "add_cert"]
CALLS: ["api_url", "actual_namespace", "token", "join_api_url", "kubeclient_auth_options", "kubeclient_ssl_options", "new"]
CALLS: ["token"]
CALLS: ["namespace", "present?", "namespace", "default_namespace"]
CALLS: ["project", "project", "path", "project", "id", "downcase", "gsub", "gsub"]
CALLS: ["project", "project", "path", "project", "id", "downcase", "gsub", "gsub"]
CALLS: ["token"]
CALLS: ["namespace", "present?", "namespace", "default_namespace"]
CALLS: ["api_url", "actual_namespace", "username", "password", "token", "join_api_url", "kubeclient_auth_options", "kubeclient_ssl_options", "new"]
CALLS: ["build_kubeclient!"]
CALLS: ["kubernetes?", "platform_kubernetes", "kubeclient"]
CALLS: ["params", "find_or_initialize_service"]
CALLS: ["find_or_initialize_services", "to_param", "find"]
CALLS: ["username"]
CALLS: []
CALLS: ["reply_key"]
CALLS: ["hex"]
CALLS: ["reply_key"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["where", "available_services_names", "services", "find_service", "find_service", "nil?", "public_send", "id", "build_from_template", "map"]
CALLS: ["dup", "valid?", "active", "template", "project_id"]
CALLS: ["env", "development?", "sort_by"]
CALLS: ["to_param", "find"]
CALLS: ["persisted?", "errors", "include?", "path_was", "path"]
CALLS: ["domain"]
CALLS: ["full_path"]
CALLS: ["iid", "to_s"]
CALLS: ["sha_start", "sha_to"]
CALLS: ["sha_from", "exclude_start?", "sha_from", "sha_from"]
CALLS: ["id"]
CALLS: []
CALLS: ["id"]
CALLS: ["name"]
CALLS: ["find_or_initialize_service"]
CALLS: ["params", "where", "first"]
CALLS: ["project"]
CALLS: []
CALLS: ["group"]
CALLS: ["variables", "two_factor_grace_period"]
CALLS: ["params", "to_h", "map"]
CALLS: ["markdown_name", "secure_url", "markdown_link"]
CALLS: ["base_dir", "secret", "file", "filename", "join"]
CALLS: ["file", "filename", "join"]
CALLS: ["image_or_video?", "filename", "filename", "extname", "basename", "filename", "gsub"]
CALLS: ["image?", "video?"]
CALLS: ["extension_match?"]
CALLS: ["file", "file", "try", "file", "path", "extname", "delete", "downcase", "include?"]
CALLS: ["extension_match?"]
CALLS: ["extension", "include?"]
CALLS: ["extname", "downcase", "delete"]
CALLS: ["uploader", "uploader", "exists?", "uploader", "image_or_video?"]
CALLS: ["markdown_name", "secure_url", "image_or_video?", "dangerous?", "prepend"]
CALLS: ["extension_match?"]
CALLS: ["new", "persisted_variables", "concat", "scoped_variables", "concat", "persisted_environment_variables", "concat", "to_runner_variables"]
CALLS: ["new", "persisted?", "persisted_environment", "present?", "persisted_environment", "predefined_variables", "concat", "environment_url", "environment_url", "append", "tap"]
CALLS: ["environment_options"]
CALLS: ["kubeconfig", "dump", "new", "api_url", "append", "token", "append", "actual_namespace", "append", "append", "ca_pem", "present?", "ca_pem", "append", "ca_pem", "append", "tap"]
CALLS: ["api_url", "actual_namespace", "token", "ca_pem", "to_kubeconfig"]
CALLS: ["api_url", "actual_namespace", "token", "ca_pem", "to_kubeconfig"]
CALLS: []
CALLS: ["new", "has_domain?", "domain", "presence", "instance_domain", "append", "tap"]
CALLS: ["domain", "present?", "instance_domain", "present?"]
CALLS: ["auto_devops_domain"]
CALLS: ["visibility_level", "string_level", "new", "id", "to_s", "append", "path", "append", "full_path", "append", "full_path_slug", "append", "namespace", "full_path", "append", "web_url", "append", "append", "container_registry_variables", "concat", "auto_devops_variables", "concat"]
CALLS: ["auto_devops_enabled?", "auto_devops", "build_auto_devops", "predefined_variables"]
CALLS: ["auto_devops", "enabled", "nil?", "auto_devops_enabled?", "auto_devops", "enabled?"]
CALLS: ["pages_domain_verification_enabled?", "enabled_until", "present?"]
CALLS: ["new", "config", "registry", "enabled", "config", "registry", "host_port", "append", "container_registry_enabled?", "container_registry_url", "append", "tap"]
CALLS: ["config", "registry"]
CALLS: ["config", "registry", "enabled", "config", "registry", "host_port", "full_path", "downcase"]
CALLS: ["path", "full_access_token", "config", "registry", "api_url", "config", "registry", "host_port", "new"]
CALLS: ["flatten", "config", "registry", "key", "new", "issuer", "issuer", "audience", "expire_time", "token_expire_at", "map", "encoded"]
CALLS: ["now", "container_registry_token_expire_delay", "minutes"]
CALLS: ["config", "registry", "enabled", "current_user", "can?"]
CALLS: ["full_path", "to_s", "slugify"]
CALLS: ["new", "name", "append", "slug", "append"]
CALLS: ["present?", "wiki", "wiki", "title", "format", "preview_slug"]
CALLS: []
CALLS: ["format"]
CALLS: ["format"]
CALLS: ["format"]
CALLS: ["presence", "generate_slug"]
CALLS: ["name", "to_s", "downcase", "gsub", "cover?", "gsub!", "end_with?", "chop!", "name", "end_with?", "random_suffix", "slug"]
CALLS: ["sample", "map", "join"]
CALLS: ["kubeconfig", "dump", "new", "api_url", "append", "token", "append", "actual_namespace", "append", "append", "ca_pem", "present?", "ca_pem", "append", "ca_pem", "append", "tap"]
CALLS: ["new", "id", "to_s", "append", "description", "append", "tag_list", "to_s", "append"]
CALLS: ["tag_list", "tag_path", "link_to", "each", "html_safe"]
CALLS: []
CALLS: ["new", "id", "to_s", "append", "ci_yaml_file_path", "append", "source", "to_s", "append"]
CALLS: ["project", "ci_config_path", "blank?", "project", "ci_config_path"]
CALLS: ["options", "dig", "persisted_environment", "external_url"]
CALLS: ["external_link?", "full_path", "partition", "last", "id", "path", "join", "pages_group_url"]
CALLS: ["config", "pages", "url", "pages_subdomain", "sub", "downcase"]
CALLS: ["wiki", "pages", "new", "map"]
CALLS: ["full_path", "partition", "first"]
CALLS: ["pages", "paginate_array", "params", "page", "group_by_directory", "get_project_wiki_path", "s_", "s_", "_", "container_class", "s_", "project_wikis_git_access_path", "icon", "_", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["blank?", "directory", "slug", "sort_by", "group_by", "present?", "new", "map", "flatten"]
CALLS: ["wiki", "slug", "page_title_and_dir", "last", "to_s"]
CALLS: ["split", "pop", "join"]
CALLS: ["fluid_layout", "blank_container"]
CALLS: ["nil?"]
CALLS: ["current_user", "current_user", "layout"]
CALLS: ["keys", "empty?", "include?", "fa_stacked_icon", "fa_icon"]
CALLS: ["external_wiki", "properties", "project_wiki_path"]
CALLS: ["has_external_wiki", "nil?", "cache_has_external_wiki", "has_external_wiki", "services", "external_wikis", "first"]
CALLS: ["", "where", "active"]
CALLS: ["read_write?", "services", "external_wikis", "any?", "update_column"]
CALLS: ["pages_config", "enabled", "pages_config", "artifacts_server", "name", "extname", "include?", "project", "public?"]
CALLS: ["pages_domains_config", "project", "pages_https_only?"]
CALLS: ["enabled_pages_domains", "domain", "certificate", "key", "project", "pages_https_only?", "https?", "map"]
CALLS: ["pages_domain_verification_enabled?", "project", "pages_domains", "enabled", "project", "pages_domains"]
CALLS: ["certificate", "present?"]
CALLS: ["config", "pages", "external_https"]
CALLS: ["config", "pages"]
CALLS: ["new", "append", "append", "project", "licensed_features", "join", "append", "append", "append", "append", "name", "append", "stage", "append", "sha", "append", "ref", "append", "ref_slug", "append", "tag?", "ref", "append", "trigger_request", "append", "action?", "append", "legacy_variables", "concat", "tap"]
CALLS: []
CALLS: ["new", "sha", "append", "before_sha", "append", "ref", "append", "ref_slug", "append", "name", "append", "stage", "append", "tag?", "ref", "append", "trigger_request", "append", "action?", "append", "tap"]
CALLS: ["pipeline", "before_sha"]
CALLS: ["ref", "to_s", "slugify"]
CALLS: ["when"]
CALLS: ["read_attribute", "build_attributes_from_config"]
CALLS: ["pipeline", "config_processor", "pipeline", "config_processor", "name", "build_attributes"]
CALLS: ["ci_yaml_file", "ci_yaml_file", "new", "yaml_errors", "message", "yaml_errors"]
CALLS: ["auto_devops_source?", "implied_ci_yaml_file", "ci_yaml_from_repo", "yaml_errors", "sha"]
CALLS: ["project", "project", "auto_devops_enabled?", "find", "content"]
CALLS: ["project", "sha", "project", "repository", "sha", "ci_yaml_file_path", "gitlab_ci_yml_for"]
CALLS: ["blob_data_at"]
CALLS: ["blob_at", "load_all_data!", "data"]
CALLS: ["raw_repository", "blob_at", "project", "decorate"]
CALLS: ["is_a?", "new"]
CALLS: ["is_a?", "new", "map"]
CALLS: ["nil?", "new"]
CALLS: []
CALLS: ["project", "", "allow_n_plus_1_calls"]
CALLS: ["action", "present?", "to_action_id"]
CALLS: ["action", "to_sym", "key"]
CALLS: ["pipeline", "params", "legacy_stage", "not_found", "view_to_html_string", "json", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["new", "statuses_count", "zero?"]
CALLS: ["statuses", "count"]
CALLS: ["render_404"]
CALLS: ["has_environment?", "expanded_environment_name", "project", "find_by", "strong_memoize"]
CALLS: ["environment", "present?"]
CALLS: ["job", "persisted_environment"]
CALLS: ["project", "environments", "params", "find"]
CALLS: ["project", "current_user", "new", "execute"]
CALLS: ["builds", "where", "not", "success", "pluck", "uniq"]
CALLS: ["project", "environments", "params", "find"]
CALLS: ["has_environment?", "environment", "simple_variables", "expand", "strong_memoize"]
CALLS: ["scoped_variables", "to_runner_variables", "strong_memoize"]
CALLS: ["new", "persisted?", "id", "to_s", "append", "token", "append", "id", "to_s", "append", "token", "append", "append", "token", "append", "repo_url", "append", "tap"]
CALLS: ["ensure_token!", "project", "http_url_to_repo", "sub"]
CALLS: ["config", "gitlab", "url", "full_path"]
CALLS: ["web_url"]
CALLS: ["expanded_environment_name", "new", "predefined_variables", "concat", "project", "predefined_variables", "concat", "pipeline", "predefined_variables", "concat", "runner", "runner", "predefined_variables", "concat", "project", "deployment_variables", "concat", "yaml_variables", "concat", "user_variables", "concat", "secret_group_variables", "concat", "secret_project_variables", "concat", "trigger_request", "trigger_request", "user_variables", "concat", "pipeline", "variables", "concat", "pipeline", "pipeline_schedule", "pipeline", "pipeline_schedule", "job_variables", "concat", "tap"]
CALLS: ["deployment_platform", "predefined_variables"]
CALLS: ["project", "name", "deployment_platform"]
CALLS: ["find_deployment_platform"]
CALLS: ["find_cluster_platform_kubernetes", "find_kubernetes_service_integration", "build_cluster_and_deployment_platform"]
CALLS: ["kubernetes_service_template", "cluster_attributes_from_service_template", "create", "persisted?", "platform_kubernetes"]
CALLS: ["platform_kubernetes_attributes_from_service_template"]
CALLS: ["kubernetes_service_template", "api_url", "kubernetes_service_template", "ca_pem", "kubernetes_service_template", "token", "kubernetes_service_template", "namespace"]
CALLS: ["active", "find_by_template"]
CALLS: ["find_by"]
CALLS: ["services", "deployment", "reorder", "find_by"]
CALLS: ["", "where"]
CALLS: ["environment", "deployments", "params", "find_by"]
CALLS: ["clusters", "enabled", "default_environment", "last", "platform_kubernetes"]
CALLS: ["", "where"]
CALLS: ["variables", "variables", "map"]
CALLS: ["variables", "map"]
CALLS: ["persisted_environment", "project", "ref", "secret_variables_for"]
CALLS: ["protected_for?", "variables", "variables", "unprotected"]
CALLS: ["repository", "branch_exists?", "protected?", "repository", "tag_exists?", "protected?"]
CALLS: ["raw_repository", "tag_names", "include?"]
CALLS: ["raw_repository", "branch_names", "include?"]
CALLS: ["protected_tags", "select", "matching", "present?"]
CALLS: ["name", "matches?", "select"]
CALLS: ["name", "blank?", "exact_match?", "wildcard_match?"]
CALLS: ["wildcard?", "wildcard_regex"]
CALLS: ["name", "gsub", "quote", "gsub"]
CALLS: ["name", "name", "include?"]
CALLS: ["name"]
CALLS: ["matching"]
CALLS: ["empty_repo?", "default_branch_protected?", "protected_branches", "select", "matching", "present?"]
CALLS: ["default_branch_protection", "default_branch_protection"]
CALLS: ["repository", "empty?"]
CALLS: ["", "where"]
CALLS: ["", "where"]
CALLS: ["ancestors", "where", "protected_for?", "unprotected", "group_by", "reverse", "id", "map", "compact", "flatten"]
CALLS: ["project", "group", "project", "group", "ref", "project", "secret_variables_for"]
CALLS: ["new", "user", "blank?", "user", "id", "to_s", "append", "user", "email", "append", "user", "username", "append", "user", "name", "append", "tap"]
CALLS: ["read_attribute", "build_attributes_from_config"]
CALLS: ["two_factor_grace_period", "current_user", "try", "current_user", "two_factor_grace_period", "min"]
CALLS: ["set_default_values", "target_url"]
CALLS: ["context", "stage", "stage_idx"]
CALLS: ["token", "blank?", "token", "hex"]
CALLS: ["token", "blank?", "token", "hex"]
CALLS: []
CALLS: []
CALLS: []
CALLS: ["validation_message", "blank?"]
CALLS: ["prepare!", "blob", "data", "new", "message"]
CALLS: ["new", "decorate"]
CALLS: ["diff_file", "old_blob", "load_all_data!", "diff_file", "new_blob", "load_all_data!"]
CALLS: ["diff", "diff", "project_repository", "new"]
CALLS: ["binary?", "unpack", "first"]
CALLS: ["binary"]
CALLS: []
CALLS: ["binary"]
CALLS: ["st_diff", "respond_to?", "st_diff", "new"]
CALLS: ["active?", "project_id", "project", "repository", "fetch", "project", "repository"]
CALLS: ["apply_diff_view_cookie!", "load_all_data!", "path", "data", "highlight", "lines", "params", "new", "since", "to", "map", "bottom?", "length", "since", "join", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["length", "highlight"]
CALLS: ["params", "present?", "cookies", "permanent", "params", "delete"]
CALLS: ["original_position", "project", "repository", "diff_file"]
CALLS: []
CALLS: []
CALLS: ["new"]
CALLS: ["blob", "load_all_data!"]
CALLS: []
CALLS: ["id", "blob_at", "id", "tree", "entries", "any?", "join", "project_tree_path", "render_404"]
CALLS: ["namespace", "repository", "root_ref", "namespace_project_tree_path"]
CALLS: ["prepare!", "blob", "data", "validation_message"]
CALLS: ["validation_message", "blank?"]
CALLS: ["project"]
CALLS: ["group"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["session", "new"]
CALLS: []
CALLS: []
CALLS: ["session", "new"]
CALLS: []
CALLS: ["session", "access_token_key", "client_options", "new"]
CALLS: []
CALLS: ["provider"]
CALLS: ["session", "host_key"]
CALLS: ["provider"]
CALLS: []
CALLS: []
CALLS: ["session", "session", "new"]
CALLS: []
CALLS: ["provider", "app_id", "provider", "app_secret", "options", "new"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["client", "projects", "current_user", "created_projects", "where", "pluck", "to_a", "include?", "reject"]
CALLS: ["client", "repos", "current_user", "created_projects", "provider", "where", "pluck", "full_name", "include?", "reject!", "has_ci_cd_only_params?", "_", "_", "root_path", "import_github_title"]
CALLS: ["_"]
CALLS: []
CALLS: ["session", "host_key", "root_path", "custom_icon"]
CALLS: []
CALLS: ["client", "valid?", "new_import_fogbugz_path", "client", "repos", "current_user", "created_projects", "where", "pluck", "name", "include?", "reject!"]
CALLS: ["credentials", "new", "repos", "valid?", "partition", "current_user", "created_projects", "where", "pluck", "to_a", "full_name", "include?", "reject!"]
CALLS: ["new", "create!"]
CALLS: ["session", "session", "session", "session"]
CALLS: ["active_nav_link?", "delete", "strip!", "block_given?", "capture", "content_tag", "content_tag"]
CALLS: ["delete", "respond_to?", "current_path?", "any?", "delete", "respond_to?", "current_page?", "any?", "delete", "delete", "current_controller?", "current_action?", "current_controller?", "current_action?"]
CALLS: ["split", "current_controller?", "current_action?"]
CALLS: ["to_s", "downcase", "action_name", "any?"]
CALLS: ["action"]
CALLS: ["push?", "push_action_name", "closed?", "merged?", "joined?", "left?", "expired?", "destroyed?", "commented?", "created_project?", "created_project_action_name"]
CALLS: []
CALLS: ["state"]
CALLS: ["milestones", "state", "each"]
CALLS: ["project", "external_import?"]
CALLS: ["import_url", "present?"]
CALLS: ["import_data", "present?", "import_data", "credentials", "new", "full_url"]
CALLS: ["has_importer?", "project", "gitlab_project_import?", "project", "repository", "expire_content_cache", "importer", "execute"]
CALLS: ["importer_class", "project", "new"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["project", "import_type", "importer"]
CALLS: ["importer_names", "project", "import_type", "include?"]
CALLS: ["expire_tags_cache", "expire_branches_cache", "expire_root_ref_cache", "expire_emptiness_caches", "expire_exists_cache", "expire_statistics_caches"]
CALLS: ["expire_method_caches"]
CALLS: ["empty?", "expire_method_caches", "raw_repository", "expire_has_local_branches_cache"]
CALLS: ["expire_method_caches"]
CALLS: ["expire_method_caches"]
CALLS: ["expire_method_caches"]
CALLS: ["expire_method_caches"]
CALLS: ["import_type"]
CALLS: ["new_ref?", "rm_ref?"]
CALLS: ["push_event_payload", "removed?"]
CALLS: ["push_event_payload", "created?"]
CALLS: ["action"]
CALLS: ["status_name"]
CALLS: ["provider", "provider", "status_name"]
CALLS: ["created?", "target", "target_type", "nil?"]
CALLS: ["action"]
CALLS: ["action"]
CALLS: ["action"]
CALLS: ["action"]
CALLS: ["action"]
CALLS: ["action"]
CALLS: []
CALLS: ["to_s", "downcase", "controller", "controller_name", "to_s", "downcase", "controller", "controller_path", "any?"]
CALLS: ["merge_requests", "opened"]
CALLS: ["merge_requests", "map"]
CALLS: ["current_user", "project", "id", "new", "execute", "select"]
CALLS: ["milestoneish_ids", "of_milestones", "includes"]
CALLS: ["projects", "where"]
CALLS: ["", "with_state"]
CALLS: ["project", "merge_requests", "sha", "by_commit_sha"]
CALLS: ["", "joins", "where", "reorder"]
CALLS: ["", "select", "where", "by_commit_sha", "where", "reorder"]
CALLS: ["merge_requests", "iid", "merge_request_path", "title", "map", "to_json", "json", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project", "project_merge_request_path"]
CALLS: ["merge_requests", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["milestone_redirect_path", "html", "sorted_merge_requests", "tabs_json", "json", "respond_to"]
CALLS: ["merge_requests", "sort_by_attribute"]
CALLS: ["issuables_collection", "params", "page", "collection_type", "issuable_meta_data"]
CALLS: ["class", "id", "query"]
CALLS: ["opened", "public_only", "where"]
CALLS: ["", "where"]
CALLS: ["where"]
CALLS: ["raise"]
CALLS: []
CALLS: ["can_query?", "to_s", "classify", "const_get", "map!", "name", "method", "with_reactive_cache"]
CALLS: []
CALLS: ["cache", "full_reactive_cache_key", "read", "present?", "within_reactive_cache_lifetime", "cache", "alive_reactive_cache_key", "class", "reactive_cache_lifetime", "write", "class", "id", "perform_async"]
CALLS: ["cache", "alive_reactive_cache_key", "read"]
CALLS: ["full_reactive_cache_key"]
CALLS: ["class", "reactive_cache_key", "respond_to?", "call", "flatten", "join"]
CALLS: ["prometheus_client", "present?"]
CALLS: ["api_url", "manual_configuration?", "active?", "api_url", "new"]
CALLS: []
CALLS: ["kube_client", "kube_client", "service_name", "service_port", "proxy_url", "kube_client", "rest_client", "options", "kube_client", "headers", "merge", "new"]
CALLS: ["cluster", "kubeclient"]
CALLS: []
CALLS: []
CALLS: ["raise"]
CALLS: ["new"]
CALLS: ["class", "table_name", "id", "read_attribute_before_type_cast"]
CALLS: ["options", "project", "jobs_cache_index", "project", "jobs_cache_index", "merge"]
CALLS: ["source_project", "none", "source_project", "pipelines", "all_commit_shas", "source_branch", "where", "order"]
CALLS: ["merge_request", "source_project"]
CALLS: ["persisted?", "commit_shas", "all_commits", "pluck", "uniq"]
CALLS: ["postgresql?", "merge_request_diffs", "recent", "merge_request_diffs", "where", "limit"]
CALLS: ["", "order", "limit"]
CALLS: ["", "reorder"]
CALLS: ["", "reorder"]
CALLS: ["recent_branches"]
CALLS: ["project"]
CALLS: ["all_pipelines", "response", "set_header", "new", "represent", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["pipelines", "order", "params", "params", "where", "html", "response", "set_header", "new", "represent", "count", "json", "respond_to", "title", "short_id", "id", "project_commit_path", "size", "nav_link", "current_user", "can?", "id", "pipelines_project_commit_path", "pipelines", "size", "nav_link", "id", "pipelines_project_commit_path", "id", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["current_user", "params", "new", "execute", "params", "page", "out_of_range?", "total_pages", "total_pages", "project_snippets_path", "current_user", "team", "current_user", "member?", "current_user", "admin?", "local_assigns", "current_user", "fetch", "local_assigns", "fetch", "params", "nil?", "active_when", "subject_snippets_path", "snippets", "count", "snippets", "public_and_internal", "count", "params", "active_when", "subject_snippets_path", "snippets", "are_private", "count", "params", "active_when", "subject_snippets_path", "snippets", "are_internal", "count", "params", "active_when", "subject_snippets_path", "snippets", "are_public", "count", "current_user", "can?", "new_project_snippet_path", "local_assigns", "fetch", "each", "empty?", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["", "where"]
CALLS: ["", "where"]
CALLS: ["", "where"]
CALLS: ["", "where"]
CALLS: ["id", "max_member_access"]
CALLS: ["max_member_access_for_user_ids"]
CALLS: ["project", "id", "project", "project_authorizations", "where", "group", "maximum", "max_member_access_for_resource_ids"]
CALLS: ["id", "block_given?", "uniq", "max_member_access_for_resource_key", "active?", "store", "store", "keys", "empty?", "merge!", "keys", "each"]
CALLS: ["name", "underscore", "pluralize"]
CALLS: ["merge_when_pipeline_succeeds_active?", "mergeable?", "params", "diff_head_sha", "update", "params", "present?", "actual_head_pipeline", "actual_head_pipeline", "active?", "current_user", "merge_params", "new", "execute", "actual_head_pipeline", "success?", "current_user", "id", "params", "merge_async", "current_user", "id", "params", "merge_async"]
CALLS: ["mergeable_state?", "check_if_can_be_merged", "can_be_merged?", "should_be_rebased?"]
CALLS: ["project", "ff_merge_must_be_possible?", "ff_merge_possible?"]
CALLS: ["merge_requests_ff_only_enabled", "merge_requests_rebase_enabled"]
CALLS: ["project", "repository", "target_branch_sha", "diff_head_sha", "ancestor?"]
CALLS: ["nil?", "nil?", "raw_repository", "ancestor?"]
CALLS: ["target_branch_head", "try"]
CALLS: ["target_project", "repository", "target_branch_ref", "commit", "strong_memoize"]
CALLS: ["target_branch", "target_branch"]
CALLS: ["open?", "work_in_progress?", "broken?", "mergeable_ci_state?", "mergeable_discussions_state?"]
CALLS: ["project", "only_allow_merge_if_pipeline_succeeds?", "head_pipeline", "actual_head_pipeline", "success?", "actual_head_pipeline", "skipped?"]
CALLS: ["has_no_commits?", "branch_missing?", "cannot_be_merged?"]
CALLS: ["has_commits?"]
CALLS: ["merge_request_diff", "commits_count"]
CALLS: ["merge_request_diff_commits", "size"]
CALLS: ["persisted?", "merge_request_diff", "commits_count", "compare_commits", "compare_commits", "size"]
CALLS: ["source_branch_exists?", "target_branch_exists?"]
CALLS: ["target_branch", "blank?", "target_project", "target_branch", "commit"]
CALLS: ["source_branch", "blank?", "source_project", "source_branch", "commit"]
CALLS: ["target_project", "target_project", "repository", "target_branch", "branch_exists?"]
CALLS: ["source_project", "source_project", "repository", "source_branch", "branch_exists?"]
CALLS: ["project", "only_allow_merge_if_all_discussions_are_resolved?", "discussions_to_be_resolved?"]
CALLS: ["discussions_resolvable?", "discussions_resolved?"]
CALLS: ["discussions_resolvable?", "resolvable_discussions", "none?"]
CALLS: ["select", "discussion_notes", "resolvable", "discussions"]
CALLS: ["all", "includes", "fresh", "build_collection"]
CALLS: ["", "order"]
CALLS: ["fresh", "order"]
CALLS: ["", "order"]
CALLS: ["", "potentially_resolvable", "user"]
CALLS: ["", "where", "where"]
CALLS: ["discussion_notes", "inc_relations_for_view", "discussions"]
CALLS: ["", "includes"]
CALLS: ["notes"]
CALLS: ["notes", "non_diff_notes"]
CALLS: ["", "where"]
CALLS: ["issuable", "notes", "inc_relations_for_view", "includes", "fresh", "prepare_notes_for_rendering", "current_user", "cross_reference_not_visible_for?", "reject", "issuable", "build_collection", "discussion_serializer", "represent"]
CALLS: ["issue", "merge_request"]
CALLS: ["cross_reference?", "has_referenced_mentionables?"]
CALLS: ["cross_reference_note_prefix"]
CALLS: []
CALLS: ["user_visible_reference_count", "present?", "user_visible_reference_count", "referenced_mentionables", "any?"]
CALLS: ["author", "matches_cross_reference_regex?", "all_references", "issues", "merge_requests", "commits", "local_reference", "reject"]
CALLS: ["raw_repository", "length", "where", "present?", "decorate", "project", "new"]
CALLS: ["commits_between", "sha", "sha", "message", "author_name", "author_email", "map"]
CALLS: ["raw_repository", "between", "present?", "decorate"]
CALLS: ["user", "name"]
CALLS: ["load_commits"]
CALLS: ["merge_request_diff_commits", "to_hash", "project", "from_hash", "map", "merge_request", "source_project", "merge_request", "source_branch", "new"]
CALLS: ["as_json", "diff", "merge", "with_indifferent_access"]
CALLS: ["public_send", "each_with_object"]
CALLS: ["repository", "raw", "new", "new"]
CALLS: ["trace_artifact_file", "trace_artifact_file", "raw_send_params", "raw_redirect_params", "send_upload", "build", "trace", "file?", "path", "raw", "read"]
CALLS: ["new"]
CALLS: ["build", "job_artifacts_trace", "file"]
CALLS: []
CALLS: []
CALLS: ["build", "trace", "id", "status", "complete?", "valid?", "limit", "params", "presence", "html_with_state", "to_h", "merge!", "json", "respond_to", "read", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["total_items_count", "total_items_count", "closed_items_count"]
CALLS: ["total_issues_count", "merge_requests", "size", "memoize_per_user"]
CALLS: ["memoized_users", "id"]
CALLS: ["new"]
CALLS: ["count_issues_by_state", "values", "sum"]
CALLS: ["issues_visible_to_user", "reorder", "group", "count", "memoize_per_user"]
CALLS: ["issues_finder_params", "new", "execute", "preload", "milestoneish_ids", "where", "memoize_per_user"]
CALLS: ["project_id"]
CALLS: ["group", "id"]
CALLS: []
CALLS: []
CALLS: ["count_issues_by_state", "merge_requests", "closed_and_merged", "size", "memoize_per_user"]
CALLS: ["", "with_states"]
CALLS: ["status", "include?"]
CALLS: ["inspect", "merge!", "file_storage?", "path", "class", "proxy_download_enabled?", "headers", "url", "send_url", "store", "url"]
CALLS: ["storage", "is_a?"]
CALLS: ["object_store", "storage_for"]
CALLS: ["class", "object_store_enabled?", "new", "new"]
CALLS: ["object_store_options", "enabled"]
CALLS: ["options", "object_store"]
CALLS: ["hashed_storage?", "new", "new"]
CALLS: ["object_store_options", "proxy_download"]
CALLS: ["storage"]
CALLS: ["class", "merge_request", "to_reference"]
CALLS: ["class", "name"]
CALLS: []
CALLS: ["class", "name", "id", "commit_id", "path"]
CALLS: ["project", "job", "raw_project_job_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project", "job", "params", "raw_project_job_artifacts_path"]
CALLS: ["params", "new", "build", "send_artifacts_entry"]
CALLS: ["headers", "send_artifacts_entry", "store"]
CALLS: ["params", "content", "convert_line_endings", "sanitized_file_name", "send_data"]
CALLS: ["file_name", "gsub"]
CALLS: ["to_s"]
CALLS: ["params", "gsub"]
CALLS: ["persisted?", "merge_request_diff", "commits", "compare_commits", "compare_commits", "reverse"]
CALLS: ["project", "project", "default_issues_tracker?", "class", "mentionable_attrs", "__send__", "any?"]
CALLS: ["external_issue_tracker"]
CALLS: []
CALLS: ["commits", "project", "decorate"]
CALLS: ["commits", "with_pipeline_status", "prepare_commits_for_rendering", "view_to_html_string", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project", "pipelines", "map", "ref", "latest_status_per_commit", "ref", "id", "set_status_for_ref", "each"]
CALLS: []
CALLS: ["current_user", "render"]
CALLS: ["full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["system?", "force_cross_reference_regex_check?", "matches_cross_reference_regex?", "note", "cross_reference?"]
CALLS: ["system?", "system_note_metadata", "action", "include?"]
CALLS: ["params", "current_user", "id", "new", "params", "find", "current_user", "id", "new", "params", "find"]
CALLS: ["preload_noteable_for_regular_notes", "preload_max_access_for_authors", "preload_first_time_contribution_for_authors", "current_user", "new", "execute"]
CALLS: ["is_a?", "first_contribution?", "specialize_for_first_contribution!", "each"]
CALLS: ["author_id", "author_id", "special_role"]
CALLS: ["project", "team", "author_id", "max_member_access", "project", "merge_requests", "merged", "author_id", "where", "empty?"]
CALLS: ["", "with_state"]
CALLS: []
CALLS: ["new", "reject", "preload"]
CALLS: ["map", "team", "max_member_access_for_user_ids"]
CALLS: ["project", "issuable", "current_user", "new"]
CALLS: ["resolvable_discussions", "any?"]
CALLS: ["class", "title", "work_in_progress?"]
CALLS: ["title"]
CALLS: ["unchecked?", "read_write?", "broken?", "project", "repository", "diff_head_sha", "target_branch", "can_be_merged?", "mark_as_mergeable", "mark_as_unmergeable"]
CALLS: ["check_if_can_be_merged"]
CALLS: ["id", "perform_async", "update_column"]
CALLS: ["diff_head_sha", "merge_params_ee", "merge"]
CALLS: []
CALLS: ["params", "present?", "head_pipeline", "head_pipeline", "active?"]
CALLS: ["params", "merge_params_attributes", "permit"]
CALLS: []
CALLS: ["new"]
CALLS: ["max_member_access_for_user"]
CALLS: ["", "where"]
CALLS: ["is_a?", "project_snippets_path", "dashboard_snippets_path"]
CALLS: []
CALLS: ["id", "api_v4_projects_badges_path", "_", "_"]
CALLS: ["project_settings_ci_cd_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["new", "request", "response", "with_pagination", "tags", "represent", "json", "respond_to"]
CALLS: ["new", "tap"]
CALLS: ["paginator", "new", "tap"]
CALLS: ["raw_repository", "tags"]
CALLS: []
CALLS: ["manifest", "manifest", "manifest", "new", "map"]
CALLS: ["client", "path", "repository_tags"]
CALLS: ["project", "repository", "tag_names"]
CALLS: ["image", "tags", "new"]
CALLS: ["from_image"]
CALLS: ["project", "container_repositories", "params", "find"]
CALLS: ["project", "container_repositories", "params", "find"]
CALLS: ["project", "container_repositories", "html", "project", "current_user", "new", "represent", "json", "respond_to"]
CALLS: ["redirect_to_repository_settings"]
CALLS: ["project_settings_repository_path"]
CALLS: ["params", "presence", "sort_value_name", "project_group_links", "pluck", "personal?", "namespace_id", "group", "group", "ancestors", "pluck", "current_user", "new", "execute", "params", "present?", "joins", "params", "search", "merge", "invited_groups", "params", "search", "select", "where", "sort_by_attribute", "params", "page", "present_members", "new", "current_user", "execute", "present_members", "project_members", "new", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["where", "ago", "where", "includes", "limit", "to_a", "empty?", "each", "loop"]
CALLS: ["namespace", "try"]
CALLS: ["blank?", "none", "downcase", "fuzzy_arel_match", "fuzzy_arel_match", "or", "arel_table", "eq", "or", "where", "connection", "quote", "reorder"]
CALLS: ["fuzzy_search"]
CALLS: ["group"]
CALLS: ["fuzzy_search"]
CALLS: ["fuzzy_search"]
CALLS: ["fuzzy_search"]
CALLS: ["fuzzy_search"]
CALLS: ["joins", "search", "merge"]
CALLS: ["fuzzy_search"]
CALLS: ["fuzzy_search"]
CALLS: []
CALLS: ["presence"]
CALLS: ["search"]
CALLS: ["params", "presence"]
CALLS: ["presence"]
CALLS: ["current_user", "new", "fabricate!"]
CALLS: ["params", "project", "new", "execute", "params", "page", "per", "project", "new", "execute", "count", "project", "new", "execute", "count", "project", "new", "execute", "count", "project", "new", "execute", "count", "map", "html", "response", "set_header", "new", "request", "response", "with_pagination", "represent", "json", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["params", "new", "execute", "new", "params", "execute", "includes", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["params", "milestones", "sort_by_attribute", "namespace", "becomes", "for_projects", "params", "page", "html", "to_json", "json", "respond_to", "container_class", "milestones", "milestone_counts", "milestones", "params", "milestone_class_for_state", "milestones_filter_path", "counts", "params", "milestone_class_for_state", "milestones_filter_path", "counts", "params", "milestone_class_for_state", "milestones_filter_path", "counts", "current_user", "can?", "new_project_milestone_path", "blank?", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["", "includes", "references", "where", "where", "not"]
CALLS: ["noteable", "part_of_discussion?", "discussion", "notes", "id", "id", "take_while"]
CALLS: ["to_discussion", "individual_note?"]
CALLS: ["build"]
CALLS: []
CALLS: []
CALLS: ["part_of_discussion?", "noteable", "notes", "discussion_id", "find_discussion", "to_discussion"]
CALLS: ["project", "project", "notes", "find_discussion", "find_discussion", "noteable", "noteable_without_project?"]
CALLS: ["is_a?", "current_user", "can?"]
CALLS: ["where", "fresh", "to_a", "empty?", "build"]
CALLS: ["params", "find_discussion", "render_404"]
CALLS: ["", "where", "includes"]
CALLS: ["blank?"]
CALLS: ["reorder", "group", "count", "values", "sum"]
CALLS: ["project_milestones_path", "group_milestones_path", "dashboard_milestones_path"]
CALLS: ["html", "view_to_html_string", "as_json", "json", "respond_to", "current_user", "can?", "merge_request_source_project_for_project", "project_new_merge_request_path", "current_user", "new_issuable_address", "container_class", "merge_requests", "exists?", "container_class", "exists?", "local_assigns", "fetch", "local_assigns", "fetch", "_", "_", "_", "_", "_", "_", "present?", "merge_request", "local_assigns", "fetch", "local_assigns", "fetch", "_", "_", "_", "_", "_", "_", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["supports_issue_creation?", "ensure_incoming_email_token!", "full_path", "incoming_email_token", "reply_address"]
CALLS: ["current_user", "can?", "current_user", "can?", "current_user", "fork_of"]
CALLS: ["namespace", "find_fork_of"]
CALLS: ["fork_network", "active?", "id", "fork_network", "projects", "find_forks_in", "first", "new", "fetch", "fork_network", "projects", "find_forks_in", "first"]
CALLS: ["projects", "where"]
CALLS: ["supports_issue_creation?", "render_404", "current_user", "reset_incoming_email_token!", "current_user", "params", "new_issuable_address", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project", "user", "params", "new", "execute", "render_json"]
CALLS: ["build_payload", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["new", "represent", "error_payload"]
CALLS: ["help_url", "merge"]
CALLS: ["prioritized", "unprioritized", "params", "page", "html", "new", "represent_appearance", "json", "respond_to", "current_user", "can?", "exists?", "exists?", "container_class", "new_project_label_path", "empty?", "params", "present?", "params", "set_priorities_project_labels_path", "empty?", "present?", "each", "present?", "each", "_", "_", "current_user", "can?", "_", "new_project_label_path", "_", "_", "generate_project_labels_path", "_", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["represent"]
CALLS: ["arel_table", "arel_table", "join", "eq", "id", "eq", "and", "on", "join_sources", "joins", "eq", "where"]
CALLS: ["joins", "where", "reorder"]
CALLS: ["params", "project", "builds", "relevant", "order", "pending", "reverse_order", "running", "reverse_order", "finished", "includes", "params", "page", "per", "without_count", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["", "where"]
CALLS: ["", "where"]
CALLS: ["html", "atom", "view_to_html_string", "as_json", "json", "respond_to", "current_user", "can?", "current_user", "new_issuable_address", "safe_params", "rss_url_options", "merge", "to_h", "name", "auto_discovery_link_tag", "project_issues", "exists?", "container_class", "local_assigns", "fetch", "each", "blank?", "present?", "issue", "new_project_issue_path", "local_assigns", "fetch", "local_assigns", "fetch", "current_user", "_", "_", "_", "_", "_", "new_user_session_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["params", "respond_to?", "params", "except", "permit!", "params"]
CALLS: ["current_user", "try"]
CALLS: ["current_user", "id", "new", "execute"]
CALLS: ["project_settings_integrations_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["namespace_project_settings_members_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project", "forks", "includes", "project", "params", "params", "merge", "current_user", "new", "execute", "size", "size", "params", "page", "html", "view_to_html_string", "json", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project", "environments", "params", "with_state", "html", "response", "set_header", "new", "request", "response", "with_pagination", "within_folders", "represent", "project", "environments", "available", "count", "project", "environments", "stopped", "count", "json", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["tap"]
CALLS: ["", "with_state"]
CALLS: ["", "with_state"]
CALLS: ["environment", "deployments", "reorder", "params", "to_time", "params", "to_time", "where", "project", "new", "represent_concise", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["represent"]
CALLS: ["redirect_to_repository_settings", "html", "current_user", "new", "as_json", "json", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["container_class", "_", "capture", "capture", "_", "html_safe", "_", "html_safe", "project_compare_index_path", "params", "params", "icon", "params", "params", "s_", "params", "params", "refs_project_path", "params", "params", "_", "local_assigns", "fetch", "dropdown_content", "dropdown_loading", "s_", "params", "params", "refs_project_path", "params", "params", "_", "local_assigns", "fetch", "dropdown_content", "dropdown_loading", "s_", "present?", "_", "project_merge_request_path", "create_mr_button?", "_", "create_mr_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["icon"]
CALLS: ["capture", "content_tag"]
CALLS: ["params", "params", "project_new_merge_request_path"]
CALLS: ["params", "params", "present?", "present?", "current_user", "can?", "repository", "branch_exists?", "repository", "branch_exists?"]
CALLS: ["project", "current_user", "new", "execute", "params", "page", "per", "empty?", "s_", "_", "help_page_path", "link_to", "s_", "html_safe", "current_user", "can?", "s_", "new_project_cluster_path", "s_", "s_", "s_", "s_", "current_user", "present", "present", "each", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project", "project_jobs_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["params", "presence", "sort_value_recently_updated", "params", "presence", "fetch_branches_by_mode", "pipelines", "map", "latest_successful_for_refs", "repository", "map", "merged_branch_names", "repository", "diverging_commit_counts", "max", "reduce", "allow_n_plus_1_calls", "render", "html", "params", "new", "execute", "paginate_array", "params", "page", "map", "json", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["raw_repository", "root_ref", "commit", "id", "cache", "name", "raw_repository", "dereferenced_target", "sha", "count_commits_between", "fetch"]
CALLS: ["sort_value_recently_updated", "new", "execute", "partition", "first", "first", "params", "merge", "new", "execute", "include?", "state", "to_s", "select", "paginate_array", "params", "page"]
CALLS: ["project", "current_user", "new", "execute", "respond_with_boards", "first", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["respond_with"]
CALLS: ["html", "serialize_as_json", "json", "respond_to"]
CALLS: ["as_json"]
CALLS: ["as_json"]
CALLS: ["as_json"]
CALLS: ["as_json"]
CALLS: ["board", "group_board?", "as_json"]
CALLS: ["parent", "boards", "params", "find"]
CALLS: ["parent", "boards"]
CALLS: ["parent", "boards", "params", "find"]
CALLS: ["parent", "boards", "params", "delete", "find"]
CALLS: ["group_id", "present?"]
CALLS: ["first"]
CALLS: ["params", "find"]
CALLS: ["set_index_vars", "finder", "build", "fluid_layout", "page_title", "clipboard_button", "profile_personal_access_tokens_path", "impersonation", "token", "path", "token", "form_errors", "label", "text_field", "label", "text_field", "label", "token", "scopes", "submit", "current_user", "rss_token", "incoming_email_token_enabled?", "current_user", "incoming_email_token", "header_title", "profile_path"]
CALLS: ["akismet_enabled?", "text", "owner", "name", "owner", "email", "akismet_client", "options", "options", "public_send", "logger", "error"]
CALLS: ["akismet_enabled"]
CALLS: ["akismet_api_key", "config", "gitlab", "url", "new"]
CALLS: ["title", "description", "join"]
CALLS: ["ensure_rss_token!"]
CALLS: ["read_attribute", "select"]
CALLS: ["any?", "compact", "push", "any?", "last", "join"]
CALLS: ["transaction_begin", "create_event", "new", "execute", "transaction_end", "transaction", "new", "cache_last_push_event", "new", "execute"]
CALLS: ["project", "project_cache_key", "user_cache_key", "project", "forked_from_project", "project_cache_key", "id", "set_key", "each"]
CALLS: ["cache", "write"]
CALLS: ["id", "id"]
CALLS: ["id"]
CALLS: ["errors", "any?", "errors", "count", "pluralize", "content_tag", "errors", "full_messages", "content_tag", "map", "join", "html_safe", "content_tag", "content_tag"]
CALLS: ["delete", "delete", "delete", "merge", "icon", "concat", "concat"]
CALLS: ["current_user", "incoming_email_token", "supports_issue_creation?"]
CALLS: ["current_user", "available_scopes", "finder", "execute", "finder", "execute", "order", "current_user", "id", "redis_getdel"]
CALLS: ["redis_shared_state_key", "get", "redis_shared_state_key", "del", "with"]
CALLS: []
CALLS: ["current_user", "merge", "new"]
CALLS: ["current_user", "oauth_applications", "current_user", "oauth_authorized_tokens", "reject", "map", "uniq", "reject", "new"]
CALLS: ["id", "where"]
CALLS: ["finder_type", "issuable_finder_for", "strong_memoize"]
CALLS: []
CALLS: []
CALLS: []
CALLS: ["action_name"]
CALLS: ["action_name"]
CALLS: ["current_user", "filter_params", "new"]
CALLS: ["current_user", "available_scopes", "finder", "build", "finder", "execute", "finder", "execute", "order"]
CALLS: ["user", "merge", "new"]
CALLS: ["params", "find"]
CALLS: ["current_user", "keys", "order_id_desc", "new", "fluid_layout", "page_title", "help_page_path", "help_page_path", "form_errors", "label", "text_area", "label", "text_field", "submit", "local_assigns", "fetch", "any?", "header_title", "profile_path"]
CALLS: ["current_user", "gpg_keys", "with_subkeys", "new", "fluid_layout", "page_title", "help_page_path", "form_errors", "label", "text_area", "submit", "local_assigns", "fetch", "any?", "emails_with_verified_status", "map", "fingerprint", "subkeys", "present?", "subkeys", "fingerprint", "each", "profile_gpg_key_path", "icon", "revoke_profile_gpg_key_path", "each", "header_title", "profile_path"]
CALLS: ["upcase"]
CALLS: ["user_infos", "user", "verified_email?", "map", "to_h"]
CALLS: ["downcase", "email", "primary_email_verified?", "emails", "confirmed", "where", "exists?"]
CALLS: ["confirmed?", "temp_oauth_email?"]
CALLS: ["email", "start_with?"]
CALLS: ["", "where", "not"]
CALLS: ["key", "user_infos_from_key"]
CALLS: ["upcase"]
CALLS: ["", "includes"]
CALLS: ["current_user", "email", "current_user", "emails", "order_id_desc", "fluid_layout", "page_title", "profile_emails_path", "label", "text_field", "submit", "current_user", "confirmed?", "current_user", "confirmed?", "current_user", "public_email", "current_user", "notification_email", "email", "confirmed?", "email", "confirmed?", "email", "current_user", "public_email", "email", "current_user", "notification_email", "confirmed?", "confirmation_sent_at", "resend_confirmation_instructions_profile_email_path", "profile_email_path", "icon", "each", "header_title", "profile_path"]
CALLS: ["current_user", "chat_names", "fluid_layout", "page_title", "present?", "header_title", "profile_path"]
CALLS: ["current_user", "chat_names"]
CALLS: ["set_index_vars"]
CALLS: ["prometheus_metrics_enabled?", "metrics_service", "metrics_text", "help_page_url"]
CALLS: ["prometheus_metrics_text", "health_metrics_text", "concat"]
CALLS: ["flat_map", "formatter", "marshal"]
CALLS: ["new"]
CALLS: ["multiprocess_metrics_path", "marshal_multiprocess"]
CALLS: ["configuration", "multiprocess_files_dir"]
CALLS: ["new"]
CALLS: ["root", "join", "read", "icon", "koding_project_url", "koding_url", "koding_path"]
CALLS: ["full_path", "default_branch", "commit", "short_id", "koding_url", "join", "to_s", "koding_url"]
CALLS: []
CALLS: ["root", "join", "read", "sub", "config", "gitlab", "relative_url_root", "gsub!", "help_page_text", "present?", "current_application_settings", "markdown_field", "user_signed_in?", "namespace_project_commits_path", "version_status_badge", "help_page_hide_commercial_content?", "help_instance_configuration_url", "markdown", "support_url", "help_page_hide_commercial_content?", "help_path"]
CALLS: ["project", "render", "merge!", "render", "post_process", "sanitize", "truncate"]
CALLS: ["project", "truncate_team"]
CALLS: ["id"]
CALLS: ["env", "production?", "version_check_enabled", "new", "url"]
CALLS: ["respond_to?", "for_display", "try", "present?", "render_field", "respond_to?", "banzai_render_context", "reverse_merge!", "prepare_for_rendering"]
CALLS: ["noteable", "merge"]
CALLS: []
CALLS: []
CALLS: []
CALLS: ["cached_markdown_fields", "markdown_fields", "include?", "inspect", "new", "respond_to?", "project", "respond_to?", "group", "cached_markdown_fields", "merge", "respond_to?", "author", "markdown_engine"]
CALLS: ["latest_cached_markdown_version"]
CALLS: ["cached_markdown_version", "cached_markdown_version"]
CALLS: ["project", "author", "author"]
CALLS: ["present?", "current_user", "current_user", "merge!", "post_process", "preserve"]
CALLS: ["present?", "markdown_unsafe", "prepare_for_rendering"]
CALLS: ["render"]
CALLS: ["current_application_settings", "help_page_support_url", "presence", "promo_url"]
CALLS: ["promo_host"]
CALLS: []
CALLS: ["current_user", "dashboard_groups_path", "explore_groups_path", "redirect_to", "name", "page_description", "description", "header_title", "group_title", "current_user"]
CALLS: ["id", "api_v4_groups_badges_path", "_", "_"]
CALLS: ["group_projects", "group", "states_count", "milestones", "paginate_array", "params", "page", "html", "milestones", "for_display", "slice", "map", "json", "respond_to", "params", "milestone_class_for_state", "milestones_filter_path", "counts", "params", "milestone_class_for_state", "milestones_filter_path", "counts", "params", "milestone_class_for_state", "milestones_filter_path", "counts", "current_user", "can?", "new_group_milestone_path", "blank?", "each", "name", "page_description", "description", "header_title", "group_title", "current_user"]
CALLS: ["legacy_group_milestone_states_count", "group_milestones_states_count", "merge"]
CALLS: ["map", "new", "execute", "reorder", "group", "count", "count_by_state", "count_by_state", "map", "uniq", "count"]
CALLS: ["count"]
CALLS: ["params", "merge", "label_names", "any?", "label_names", "count", "class", "current_user", "new", "new", "execute", "reorder", "group", "count", "last", "to_sym", "each", "values", "sum"]
CALLS: ["id", "new", "execute", "reorder", "group", "count", "values", "sum"]
CALLS: ["labels", "params", "page", "html", "current_user", "id", "params", "params", "params", "new", "execute", "new", "represent_appearance", "json", "respond_to", "_", "to_sentence", "current_user", "can?", "new_group_label_path", "present?", "each", "_", "name", "page_description", "description", "header_title", "group_title", "current_user"]
CALLS: ["params", "presence", "sort_value_name", "params", "projects", "params", "find", "new", "execute", "current_user", "can?", "non_invite", "params", "present?", "params", "search", "sort_by_attribute", "params", "page", "per", "includes", "present_members", "new", "current_user", "execute", "present_members", "group_members", "new", "current_user", "can?", "name", "group_group_members_path", "users_select_tag", "access_level_roles", "access_level", "options_for_select", "help_page_path", "submit", "local_assigns", "fetch", "local_assigns", "fetch", "local_assigns", "fetch", "empty?", "name", "size", "each", "group_group_members_path", "params", "icon", "member_sort_options_hash", "dropdown_toggle", "member_sort_options_hash", "filter_group_project_member_path", "each", "name", "total_count", "each", "name", "page_description", "description", "header_title", "group_title", "current_user"]
CALLS: ["member", "class", "access_level_roles"]
CALLS: ["find"]
CALLS: ["params", "find_by_invite_token", "render_404"]
CALLS: ["token_generator", "digest", "find_by"]
CALLS: ["options"]
CALLS: ["options_with_owner"]
CALLS: ["", "where"]
CALLS: ["sort_value_access_level_asc", "sort_title_access_level_asc", "sort_value_access_level_desc", "sort_title_access_level_desc", "sort_value_last_joined", "sort_title_last_joined", "sort_value_name", "sort_title_name_asc", "sort_value_name_desc", "sort_title_name_desc", "sort_value_oldest_joined", "sort_title_oldest_joined", "sort_value_oldest_signin", "sort_title_oldest_signin", "sort_value_recently_signin", "sort_title_recently_signin"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["users_select_data_attributes", "id", "id", "hidden_field_tag"]
CALLS: ["current_user", "current_user", "username", "map"]
CALLS: ["params", "slice", "merge", "request", "path", "to_param"]
CALLS: ["key?", "key?", "content_tag", "icon", "html_safe", "content_tag"]
CALLS: ["params", "present?", "current_user", "new", "params", "execute", "nil?", "render_404", "setup_children", "current_user", "new", "request", "response", "with_pagination", "params", "present?", "expand_hierarchy", "represent", "json", "respond_to"]
CALLS: []
CALLS: ["current_user", "params", "new", "execute", "params", "page"]
CALLS: ["group", "current_user", "new", "execute", "respond_with_boards", "first", "name", "page_description", "description", "header_title", "group_title", "current_user"]
CALLS: ["current_user", "new", "execute", "params", "page", "snippets_path", "current_user", "dashboard_snippets_path", "dashboard_snippets_path", "nav_link", "explore_snippets_path", "explore_snippets_path", "nav_link", "current_user", "new_snippet_path", "current_user", "explore_root_path"]
CALLS: ["params", "params", "load_projects", "html", "view_to_html_string", "json", "respond_to", "dashboard_projects_path", "current_user", "cookies", "blank?", "current_user", "hide_project_limit", "current_user", "can_create_project?", "current_user", "projects_limit", "profile_path", "icon", "icon", "dashboard_projects_path", "root_path", "dashboard_projects_path", "nav_link", "starred_dashboard_projects_path", "starred_dashboard_projects_path", "nav_link", "explore_root_path", "trending_explore_projects_path", "starred_explore_projects_path", "explore_projects_path", "explore_root_path", "nav_link", "sort_value_latest_activity", "projects_sort_options_hash", "dropdown_toggle", "projects_sort_options_hash", "filter_projects_path", "each", "filter_projects_path", "params", "present?", "filter_projects_path", "params", "to_boolean", "filter_projects_path", "params", "current_user", "filter_projects_path", "params", "present?", "filter_projects_path", "params", "present?", "shared_projects", "present?", "filter_projects_path", "params", "present?", "filter_projects_path", "params", "filter_projects_path", "params", "current_user", "can_create_project?", "new_project_path", "trending_explore_projects_path", "explore_root_path", "trending_explore_projects_path", "nav_link", "starred_explore_projects_path", "starred_explore_projects_path", "nav_link", "explore_projects_path", "explore_projects_path", "nav_link", "current_user", "sort_value_latest_activity", "projects_sort_options_hash", "dropdown_toggle", "projects_sort_options_hash", "filter_projects_path", "each", "filter_projects_path", "params", "present?", "filter_projects_path", "params", "to_boolean", "filter_projects_path", "params", "current_user", "filter_projects_path", "params", "present?", "filter_projects_path", "params", "present?", "shared_projects", "present?", "filter_projects_path", "params", "present?", "filter_projects_path", "params", "filter_projects_path", "params", "projects", "current_user", "current_user", "explore_root_path"]
CALLS: ["projects_limit_left"]
CALLS: ["projects_limit", "personal_projects_count"]
CALLS: ["cache", "id", "hours", "personal_projects", "count", "fetch", "to_i"]
CALLS: []
CALLS: ["sort_value_latest_activity", "sort_title_latest_activity", "sort_value_name", "sort_title_name", "sort_value_oldest_activity", "sort_title_oldest_activity", "sort_value_oldest_created", "sort_title_oldest_created", "sort_value_recently_created", "sort_title_recently_created", "current_controller?", "sort_value_largest_repo", "sort_title_largest_repo"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["params", "params", "params", "params", "params", "params", "params", "params", "params", "params", "merge", "blank?", "delete_if", "request_path_with_options"]
CALLS: ["request", "path", "to_param"]
CALLS: ["group", "shared_projects"]
CALLS: ["user", "new", "current_user", "execute", "params", "page", "prepare_projects_for_rendering"]
CALLS: ["preload_max_member_access_for_collection"]
CALLS: ["current_user", "blank?", "name", "underscore", "current_user", "ids", "public_send"]
CALLS: ["current_user", "params", "new", "execute", "includes", "params", "page", "without_count", "prepare_projects_for_rendering"]
CALLS: ["current_user", "new", "execute", "includes", "prepare_projects_for_rendering"]
CALLS: ["current_user", "new", "execute", "dashboard_groups_path", "current_user", "dashboard_groups_path", "dashboard_groups_path", "_", "nav_link", "explore_groups_path", "explore_groups_path", "_", "nav_link", "request", "path", "params", "s_", "local_assigns", "groups_sort_options_hash", "fetch", "local_assigns", "fetch", "present?", "params", "params", "sort_value_recently_created", "icon", "_", "filter_groups_path", "each", "filter_groups_path", "params", "present?", "filter_groups_path", "params", "to_boolean", "filter_groups_path", "params", "current_user", "can_create_group?", "_", "new_group_path", "explore_groups_path", "explore_groups_path", "nav_link", "request", "path", "params", "s_", "local_assigns", "groups_sort_options_hash", "fetch", "local_assigns", "fetch", "present?", "params", "params", "sort_value_recently_created", "icon", "_", "filter_groups_path", "each", "filter_groups_path", "params", "present?", "filter_groups_path", "params", "to_boolean", "filter_groups_path", "params", "cookies", "icon", "custom_icon", "params", "blank?", "empty?", "current_user", "explore_root_path"]
CALLS: ["subgroup?", "current_user", "parent", "can?", "parent", "errors", "add", "current_user", "can?", "errors", "add"]
CALLS: ["has_parent?"]
CALLS: ["parent", "present?"]
CALLS: ["can?"]
CALLS: ["sort_value_name", "sort_title_name", "sort_value_name_desc", "sort_title_name_desc", "sort_value_recently_created", "sort_title_recently_created", "sort_value_oldest_created", "sort_title_oldest_created", "sort_value_recently_updated", "sort_title_recently_updated", "sort_value_oldest_updated", "sort_title_oldest_updated"]
CALLS: []
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["request_path_with_options"]
CALLS: ["params", "params", "page", "redirect_out_of_range", "header_title", "root_path"]
CALLS: ["todo_params", "except", "empty?", "current_user", "todos_pending_count", "to_f", "limit_value", "ceil", "total_pages", "zero?", "current_page", "safe_params", "merge", "url_for"]
CALLS: ["cache", "id", "minutes", "new", "execute", "count", "fetch"]
CALLS: []
CALLS: ["current_user", "todos_pending_count"]
CALLS: ["params", "permit"]
CALLS: ["nil?", "zero?", "current_page", "params", "merge", "url_for", "redirect_to"]
CALLS: ["current_user", "current_user", "params", "new", "execute", "params", "page", "dashboard_snippets_path", "dashboard_snippets_path", "dashboard_snippets_path", "nav_link", "explore_snippets_path", "explore_snippets_path", "nav_link", "current_user", "new_snippet_path", "new_snippet_path", "header_title", "root_path"]
CALLS: ["params", "merge", "load_projects", "params", "page", "html", "load_events", "atom", "view_to_html_string", "json", "respond_to", "rss_url_options", "dashboard_projects_url", "auto_discovery_link_tag", "dashboard_projects_path", "container_class", "params", "show_projects?", "cookies", "blank?", "current_user", "hide_project_limit", "current_user", "can_create_project?", "current_user", "projects_limit", "profile_path", "icon", "icon", "dashboard_projects_path", "root_path", "dashboard_projects_path", "nav_link", "starred_dashboard_projects_path", "starred_dashboard_projects_path", "nav_link", "explore_root_path", "trending_explore_projects_path", "starred_explore_projects_path", "explore_projects_path", "explore_root_path", "nav_link", "sort_value_latest_activity", "projects_sort_options_hash", "dropdown_toggle", "projects_sort_options_hash", "filter_projects_path", "each", "filter_projects_path", "params", "present?", "filter_projects_path", "params", "to_boolean", "filter_projects_path", "params", "current_user", "filter_projects_path", "params", "present?", "filter_projects_path", "params", "present?", "shared_projects", "present?", "filter_projects_path", "params", "present?", "filter_projects_path", "params", "filter_projects_path", "params", "current_user", "can_create_project?", "new_project_path", "params", "present?", "s_", "dashboard_projects_path", "nav_link", "params", "present?", "s_", "filter_projects_path", "nav_link", "current_user", "current_user", "admin?", "current_user", "admin?", "new_project_path", "custom_icon", "current_user", "can_create_group?", "new_group_path", "custom_icon", "new_admin_user_path", "custom_icon", "admin_root_path", "custom_icon", "current_user", "new", "execute", "count", "current_user", "can_create_project?", "new_project_path", "custom_icon", "custom_icon", "current_user", "can_create_group?", "new_group_path", "custom_icon", "trending_explore_projects_path", "custom_icon", "number_with_delimiter", "custom_icon", "header_title", "root_path"]
CALLS: ["any_projects?"]
CALLS: ["is_a?", "any?", "limit_value", "to_a", "any?", "except", "any?"]
CALLS: ["current_user", "user", "params", "new", "execute", "current_user", "new", "request", "format", "atom?", "execute"]
CALLS: ["id", "where", "params", "to_i", "event_filter", "new", "to_a", "current_user", "new", "request", "format", "atom?", "execute"]
CALLS: ["cookies", "present?", "cookies", "split", "new"]
CALLS: ["params", "params", "params", "params", "group", "current_user", "new", "execute", "includes", "params", "to_i", "event_filter", "new", "to_a", "current_user", "new", "request", "format", "atom?", "execute"]
CALLS: ["params", "current_user", "new", "execute", "current_user", "authorized_projects", "params", "to_i", "new", "to_a", "current_user", "new", "execute"]
CALLS: ["", "where"]
CALLS: ["params", "merge", "load_projects", "params", "to_i", "event_filter", "new", "to_a", "current_user", "new", "request", "format", "atom?", "execute"]
CALLS: ["states_count", "milestones", "paginate_array", "params", "page", "html", "milestones", "json", "respond_to", "dashboard_milestones_path", "params", "milestone_class_for_state", "milestones_filter_path", "counts", "params", "milestone_class_for_state", "milestones_filter_path", "counts", "params", "milestone_class_for_state", "milestones_filter_path", "counts", "blank?", "each", "header_title", "root_path"]
CALLS: ["new", "labels", "represent_appearance", "json", "respond_to", "header_title", "root_path"]
CALLS: ["current_user", "new", "execute", "render_group_tree", "dashboard_groups_path", "dashboard_groups_path", "dashboard_groups_path", "_", "nav_link", "explore_groups_path", "explore_groups_path", "_", "nav_link", "request", "path", "params", "s_", "local_assigns", "groups_sort_options_hash", "fetch", "local_assigns", "fetch", "present?", "params", "params", "sort_value_recently_created", "icon", "_", "filter_groups_path", "each", "filter_groups_path", "params", "present?", "filter_groups_path", "params", "to_boolean", "filter_groups_path", "params", "current_user", "can_create_group?", "_", "new_group_path", "params", "blank?", "empty?", "header_title", "root_path"]
CALLS: ["params", "present?", "params", "search", "select", "where", "new", "base_and_ancestors", "params", "where", "params", "with_selects_for_list", "params", "sort_by_attribute", "params", "page", "html", "current_user", "new", "request", "response", "with_pagination", "params", "present?", "expand_hierarchy", "represent", "json", "respond_to"]
CALLS: ["with_route", "with_counts"]
CALLS: ["project_count_sql", "to_sql", "member_count_sql", "to_sql", "subgroup_count_sql", "to_sql", "select"]
CALLS: ["arel_table", "arel_table", "star", "count", "as", "project", "name", "eq", "where", "eq", "where", "eq", "where"]
CALLS: ["arel_table", "alias", "star", "count", "as", "project", "from", "eq", "where"]
CALLS: ["arel_table", "arel_table", "star", "count", "as", "project", "eq", "where", "eq", "where", "to_boolean", "not_eq", "where"]
CALLS: ["now", "to_i", "notes_finder", "execute", "inc_relations_for_view", "prepare_notes_for_rendering", "current_user", "cross_reference_not_visible_for?", "reject", "use_note_serializer?", "note_serializer", "represent", "note_json", "map"]
CALLS: ["params", "noteable", "is_a?", "cookies", "noteable", "discussions_rendered_on_frontend?"]
CALLS: []
CALLS: []
CALLS: ["project", "noteable", "current_user", "new"]
CALLS: ["commands_changes", "persisted?", "use_note_serializer?", "note_serializer", "represent", "merge!", "id", "noteable", "discussion_id", "note_html", "note", "try", "merge!", "noteable", "to_discussion", "individual_note?", "resolvable?", "diff_discussion_html", "discussion_html", "merge!", "diff_discussion?", "line_code", "errors", "merge!"]
CALLS: []
CALLS: ["potentially_resolvable?", "system?"]
CALLS: ["class", "name", "include?", "noteable", "supports_resolvable_notes?"]
CALLS: ["base_class_name", "include?"]
CALLS: ["class", "base_class", "name"]
CALLS: ["potentially_resolvable?", "notes", "any?", "strong_memoize"]
CALLS: []
CALLS: ["individual_note?", "render_to_string"]
CALLS: ["diff_discussion?", "on_image?", "params", "params", "render_to_string"]
CALLS: []
CALLS: []
CALLS: ["position", "position_type"]
CALLS: ["render_to_string"]
CALLS: ["board", "parent", "current_user", "new", "board", "execute", "serialize_as_json"]
CALLS: ["board_parent", "current_user", "filter_params", "new", "execute", "params", "page", "params", "per", "read_write?", "make_sure_position_is_set", "preload", "serialize_as_json", "total_count"]
CALLS: ["relative_position", "move_to_end", "save", "each"]
CALLS: ["relative_position", "max_relative_position", "position_between"]
CALLS: ["sort"]
CALLS: ["class", "parent_ids", "in_parents", "maximum"]
CALLS: []
CALLS: ["board", "parent"]
CALLS: ["order_name_asc", "params", "filter", "params", "present?", "params", "search_with_secondary_emails", "params", "sort_by_attribute", "params", "page", "container_class", "admin_users_path", "params", "present?", "params", "h", "params", "icon", "present?", "sort_options_hash", "sort_title_name", "dropdown_toggle", "sort_value_name", "params", "admin_users_path", "sort_title_name", "sort_value_recently_signin", "params", "admin_users_path", "sort_title_recently_signin", "sort_value_oldest_signin", "params", "admin_users_path", "sort_title_oldest_signin", "sort_value_recently_created", "params", "admin_users_path", "sort_title_recently_created", "sort_value_oldest_created", "params", "admin_users_path", "sort_title_oldest_created", "sort_value_recently_updated", "params", "admin_users_path", "sort_title_recently_updated", "sort_value_oldest_updated", "params", "admin_users_path", "sort_title_oldest_updated", "new_admin_user_path", "icon", "icon", "params", "nil?", "active_when", "admin_users_path", "active", "count", "number_with_delimiter", "nav_link", "params", "active_when", "admin_users_path", "admins", "count", "number_with_delimiter", "nav_link", "params", "active_when", "admin_users_path", "with_two_factor", "count", "number_with_delimiter", "nav_link", "params", "active_when", "admin_users_path", "without_two_factor", "count", "number_with_delimiter", "nav_link", "params", "active_when", "admin_users_path", "external", "count", "number_with_delimiter", "nav_link", "params", "active_when", "admin_users_path", "blocked", "count", "number_with_delimiter", "nav_link", "params", "active_when", "admin_users_path", "without_projects", "count", "number_with_delimiter", "nav_link", "empty?", "each", "admin_root_path"]
CALLS: ["blank?", "none", "downcase", "arel_table", "project", "eq", "where", "fuzzy_arel_match", "fuzzy_arel_match", "or", "arel_table", "eq", "or", "arel_table", "in", "or", "where"]
CALLS: ["admins", "blocked", "without_two_factor", "with_two_factor", "without_projects", "external", "active"]
CALLS: ["joins", "where"]
CALLS: ["joins", "where", "arel_table", "distinct"]
CALLS: ["", "where"]
CALLS: ["", "where"]
CALLS: ["", "with_states"]
CALLS: ["", "where"]
CALLS: ["sort_value_created_date", "sort_title_created_date", "sort_value_downvotes", "sort_title_downvotes", "sort_value_due_date", "sort_title_due_date", "sort_value_due_date_later", "sort_title_due_date_later", "sort_value_due_date_soon", "sort_title_due_date_soon", "sort_value_label_priority", "sort_title_label_priority", "sort_value_largest_group", "sort_title_largest_group", "sort_value_largest_repo", "sort_title_largest_repo", "sort_value_milestone", "sort_title_milestone", "sort_value_milestone_later", "sort_title_milestone_later", "sort_value_milestone_soon", "sort_title_milestone_soon", "sort_value_name", "sort_title_name", "sort_value_name_desc", "sort_title_name_desc", "sort_value_oldest_created", "sort_title_oldest_created", "sort_value_oldest_signin", "sort_title_oldest_signin", "sort_value_oldest_updated", "sort_title_oldest_updated", "sort_value_recently_created", "sort_title_recently_created", "sort_value_recently_signin", "sort_title_recently_signin", "sort_value_recently_updated", "sort_title_recently_updated", "sort_value_popularity", "sort_title_popularity", "sort_value_priority", "sort_title_priority", "sort_value_upvotes", "sort_title_upvotes"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["order", "params", "page", "present?", "admin_root_path"]
CALLS: ["services_templates", "sort_by", "activated?", "id", "edit_admin_application_settings_service_path", "title", "description", "updated_at", "each", "admin_root_path"]
CALLS: ["available_services_names", "concat", "camelize", "constantize", "where", "first_or_create", "map"]
CALLS: ["params", "order", "params", "present?", "params", "search", "params", "page", "per", "online", "count", "admin_root_path"]
CALLS: ["", "contact_time_deadline", "where"]
CALLS: ["profile_token", "all", "group_by", "container_class", "page_title", "present?", "time", "to_s", "admin_requests_profile_path", "each", "each", "admin_root_path"]
CALLS: ["params", "params", "params", "current_user", "new", "execute", "html", "view_to_html_string", "json", "respond_to", "params", "container_class", "params", "present?", "params", "params", "find", "kind", "full_path", "dropdown_toggle", "dropdown_title", "dropdown_filter", "dropdown_content", "dropdown_loading", "sort_value_latest_activity", "projects_sort_options_hash", "dropdown_toggle", "projects_sort_options_hash", "filter_projects_path", "each", "filter_projects_path", "params", "present?", "filter_projects_path", "params", "to_boolean", "filter_projects_path", "params", "current_user", "filter_projects_path", "params", "present?", "filter_projects_path", "params", "present?", "shared_projects", "present?", "filter_projects_path", "params", "present?", "filter_projects_path", "params", "filter_projects_path", "params", "new_project_path", "params", "present?", "admin_projects_path", "admin_projects_path", "nav_link", "params", "to_s", "active_when", "admin_projects_path", "nav_link", "params", "to_s", "active_when", "admin_projects_path", "nav_link", "params", "to_s", "active_when", "admin_projects_path", "nav_link", "admin_root_path"]
CALLS: ["type"]
CALLS: ["icon", "icon", "html_safe"]
CALLS: ["fetch", "icon", "content_tag", "content_tag", "fetch", "icon", "content_tag", "html_safe"]
CALLS: ["templates", "params", "page", "new_admin_label_path", "present?", "admin_root_path"]
CALLS: ["", "where"]
CALLS: ["params", "order", "pending", "reverse_order", "running", "reverse_order", "finished", "params", "page", "per", "admin_root_path"]
CALLS: ["set_index_vars", "name", "name", "blocked?", "internal?", "admin", "current_user", "can?", "impersonate_admin_user_path", "edit_admin_user_path", "admin_user_path", "nav_link", "projects_admin_user_path", "nav_link", "keys_admin_user_path", "nav_link", "admin_user_identities_path", "nav_link", "admin_user_impersonation_tokens_path", "nav_link", "admin_user_impersonation_tokens_path", "impersonation", "token", "path", "token", "form_errors", "label", "text_field", "label", "text_field", "label", "token", "scopes", "submit", "admin_root_path"]
CALLS: ["identities", "name", "name", "blocked?", "internal?", "admin", "current_user", "can?", "impersonate_admin_user_path", "edit_admin_user_path", "admin_user_path", "nav_link", "projects_admin_user_path", "nav_link", "keys_admin_user_path", "nav_link", "admin_user_identities_path", "nav_link", "admin_user_impersonation_tokens_path", "nav_link", "new_admin_user_identity_path", "present?", "admin_root_path"]
CALLS: ["all", "new", "admin_root_path"]
CALLS: ["with_statistics", "with_route", "params", "sort_by_attribute", "params", "present?", "params", "search", "params", "page", "container_class", "admin_groups_path", "params", "present?", "params", "icon", "admin_groups_sort_options_hash", "local_assigns", "groups_sort_options_hash", "fetch", "local_assigns", "fetch", "present?", "params", "params", "sort_value_recently_created", "icon", "_", "filter_groups_path", "each", "filter_groups_path", "params", "present?", "filter_groups_path", "params", "to_boolean", "filter_groups_path", "params", "new_admin_group_path", "admin_root_path"]
CALLS: ["", "includes"]
CALLS: ["", "joins", "group", "select"]
CALLS: ["groups_sort_options_hash", "sort_value_largest_group", "sort_title_largest_group", "merge"]
CALLS: ["all", "_", "_", "any?", "_", "n_", "_", "_", "_", "storage", "address", "server_version", "git_binary_version", "up_to_date?", "boolean_to_icon", "each", "_", "admin_root_path"]
CALLS: ["icon", "icon"]
CALLS: ["new_admin_deploy_key_path", "any?", "title", "fingerprint", "projects_with_write_access", "full_name", "admin_project_path", "each", "edit_admin_deploy_key_path", "admin_deploy_key_path", "each", "admin_root_path"]
CALLS: ["preload", "deploy_keys_projects", "with_write_access", "select", "where"]
CALLS: ["", "where"]
CALLS: ["order_id_desc", "without_deleted", "with_route", "limit", "order_id_desc", "limit", "order_id_desc", "with_route", "limit", "admin_root_path"]
CALLS: ["", "where"]
CALLS: ["usage_ping_enabled", "cache", "day", "new", "execute", "fetch", "new", "represent", "container_class", "icon", "help_page_path", "times", "each", "each", "help_page_path", "admin_application_settings_path", "admin_root_path"]
CALLS: ["usage_ping_can_be_configured?"]
CALLS: ["gitlab", "usage_ping_enabled"]
CALLS: ["order", "params", "page", "new", "any?", "broadcast_message_status", "broadcast_message", "starts_at", "ends_at", "icon", "edit_admin_broadcast_message_path", "icon", "admin_broadcast_message_path", "each", "admin_root_path"]
CALLS: ["active?", "ended?"]
CALLS: ["ends_at", "zone", "now"]
CALLS: ["present?", "broadcast_message_style", "icon", "render_broadcast_message"]
CALLS: ["render_field", "html_safe"]
CALLS: ["color", "present?", "color", "font", "present?", "font", "present?", "font"]
CALLS: []
CALLS: ["where", "new_admin_application_path", "id", "name", "admin_application_path", "redirect_uri", "access_tokens", "map", "uniq", "count", "trusted?", "edit_admin_application_path", "admin_application_path", "each", "admin_root_path"]
CALLS: ["order", "params", "page", "includes", "present?", "admin_root_path"]
CALLS: ["priorities", "loaded?", "priorities", "project", "first", "priorities", "find_by", "try"]
CALLS: ["build!", "filter!", "recipients", "reason", "priority", "sort_by", "uniq", "freeze"]
CALLS: ["metrics", "new"]
CALLS: ["merge_requests", "where"]
CALLS: ["root", "read", "parse"]
CALLS: ["has_metrics?", "prometheus_adapter", "query"]
CALLS: ["service_prometheus_adapter", "can_query?", "service_prometheus_adapter", "cluster_prometheus_adapter"]
CALLS: ["deployment_platform", "respond_to?", "deployment_platform", "cluster", "application_prometheus", "installed?", "application_prometheus"]
CALLS: ["project", "find_or_initialize_service"]
CALLS: ["project", "deployment_platform", "new", "prometheus_adapter"]
CALLS: ["prometheus_adapter", "can_query?", "available?", "last_deployment", "present?"]
CALLS: ["current_version"]
CALLS: ["current_version"]
CALLS: ["environment", "prometheus_adapter"]
CALLS: ["prometheus_adapter", "can_query?"]
CALLS: ["project", "new", "prometheus_adapter"]
CALLS: ["has_metrics?", "prometheus_adapter", "query", "created_at", "to_i", "merge"]
CALLS: ["environment", "metrics", "html", "any?", "json", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["deployment", "has_metrics?", "render_404", "deployment", "metrics", "any?", "render_404", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["update!"]
CALLS: ["create_record_event"]
CALLS: ["project", "id", "class", "name", "create_event"]
CALLS: ["new"]
CALLS: ["new"]
CALLS: ["transaction_begin", "current_user", "create_merge_event", "merge_request_metrics_service", "merge", "transaction_end", "transaction"]
CALLS: ["new", "merge_mr"]
CALLS: ["merge_when_pipeline_succeeds?", "close_resource_email"]
CALLS: ["build_recipients", "mailer", "user", "id", "id", "id", "reason", "send", "deliver_later", "each"]
CALLS: ["create_record_event"]
CALLS: ["transaction_begin", "event_service", "current_user", "close_mr", "merge_request_metrics_service", "close", "transaction_end", "transaction"]
CALLS: ["close_resource_email"]
CALLS: ["todo_service", "merge_request_build_retried", "commit_status_merge_requests"]
CALLS: ["author", "mark_pending_todos_as_done", "merge_when_pipeline_succeeds?", "merge_user", "mark_pending_todos_as_done"]
CALLS: ["attributes_for_target", "pending_todos", "update_all", "update_todos_count_cache"]
CALLS: ["todos", "pending", "slice", "where"]
CALLS: ["project", "id", "id", "class", "name", "is_a?", "id", "merge!"]
CALLS: ["todos_done_count", "todos_pending_count"]
CALLS: ["cache", "id", "minutes", "new", "execute", "count", "fetch"]
CALLS: ["current_user", "todos_done_count"]
CALLS: ["ref", "merge_requests_for", "head_pipeline", "sha", "sha", "each"]
CALLS: ["with_state", "id", "where", "preload", "select"]
CALLS: ["new"]
CALLS: ["author_id", "created_at", "update!"]
CALLS: ["create_record_event"]
CALLS: ["id", "reverse_merge!", "create!"]
CALLS: ["", "joins"]
CALLS: ["", "joins"]
CALLS: ["finder"]
CALLS: ["finder", "execute", "preload_for_collection", "preload"]
CALLS: ["collection_type"]
CALLS: ["root", "join", "html", "js", "any", "respond_to"]
CALLS: ["cycle_analytics", "events", "render_events"]
CALLS: ["project", "events_params", "options", "new"]
CALLS: ["params", "present?", "params", "permit"]
CALLS: ["html", "json", "respond_to"]
CALLS: ["params", "params", "strip_tags", "sanitize", "unescape", "default_branch"]
CALLS: ["issues_finder", "params", "find"]
CALLS: ["board", "group_board?", "current_user", "board_parent", "id", "new", "current_user", "board_parent", "id", "new"]
CALLS: ["params", "require", "merge_request_params_attributes", "permit"]
CALLS: []
CALLS: ["params"]
CALLS: ["params"]
CALLS: ["info"]
CALLS: ["info"]
CALLS: ["full_path", "disk_path", "new"]
CALLS: ["full_path", "disk_path", "new"]
CALLS: ["project", "repository"]
CALLS: ["closes_issues", "target_project", "to_reference", "map", "source_branch", "target_branch", "title", "present?", "to_sentence", "description", "present?", "description", "to_reference", "join"]
CALLS: ["params", "merge_request", "current_user", "closes_issues"]
CALLS: ["author", "target_branch", "project", "default_branch", "title", "description", "merge_request_diff", "commits", "map", "concat", "project", "new", "join", "closed_by_message"]
CALLS: ["committer", "project", "new", "safe_message", "closed_by_message"]
CALLS: ["committer_email", "downcase", "find_by_any_email"]
CALLS: ["merge_request?", "target"]
CALLS: ["target_type"]
CALLS: []
CALLS: []
CALLS: ["includes", "ref", "pipeline", "project", "where", "reorder", "commit_shas", "pipeline", "sha", "include?", "find"]
CALLS: ["merge_requests", "params", "find_by!"]
CALLS: ["wiki?", "project", "wiki", "repository", "project", "repository"]
CALLS: ["parse_repo_path"]
CALLS: ["params", "params", "parse"]
CALLS: ["current_user", "id", "new", "params", "find_by!"]
CALLS: ["current_user", "id", "new", "execute", "opened", "find_by"]
CALLS: ["project", "repository"]
CALLS: ["repository", "current_user", "source", "merge_request", "target_branch", "merge_request", "ff_merge", "message", "message", "merge_request", "update"]
CALLS: ["commit", "id", "nil?", "update", "raw", "ff_merge", "with_cache_hooks"]
CALLS: ["project", "origin_sha", "origin_ref", "commit"]
CALLS: ["exists?", "is_a?", "find_commit"]
CALLS: ["repository", "commit"]
CALLS: ["commit_id", "present?", "project", "commit_id", "commit"]
CALLS: ["project", "commit_sha", "commit"]
CALLS: ["project", "sha", "commit"]
CALLS: ["project", "name", "commit"]
CALLS: ["project", "sha", "lazy"]
CALLS: ["for", "group_by", "map", "repository", "commits_by", "project", "id", "call", "each", "each", "batch"]
CALLS: ["find_by"]
CALLS: ["present?", "raw_repository", "batch_by_oid", "present?", "decorate"]
CALLS: ["objects", "present?", "render_lfs_not_found", "download_request?", "download_objects!", "upload_request?", "upload_objects!", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["action_name", "include?"]
CALLS: ["action_name"]
CALLS: ["params", "include?"]
CALLS: ["params"]
CALLS: ["objects", "existing_oids", "include?", "upload_actions", "each", "objects"]
CALLS: ["project", "http_url_to_repo", "request", "headers", "compact"]
CALLS: ["project", "all_lfs_objects", "objects", "to_s", "map", "where", "pluck"]
CALLS: ["lfs_storage_project", "lfs_objects"]
CALLS: ["forked?", "fork_source"]
CALLS: ["forked?", "forked_from_project", "fork_network", "root_project"]
CALLS: ["objects", "existing_oids", "include?", "download_actions", "project", "can?", "each", "objects"]
CALLS: ["project", "http_url_to_repo", "request", "headers", "compact"]
CALLS: ["params"]
CALLS: ["params"]
CALLS: ["upload_pack?"]
CALLS: ["git_command"]
CALLS: ["action_name", "params", "action_name", "dasherize"]
CALLS: []
CALLS: []
CALLS: ["params", "to_a"]
CALLS: ["help_url", "render"]
CALLS: ["for", "group_by", "values_at", "map", "repository", "blobs_at", "project", "commit_id", "path", "call", "each", "each", "batch"]
CALLS: ["raw_repository", "batch_blobs", "project", "decorate", "map"]
CALLS: ["params"]
CALLS: ["commit"]
CALLS: ["params", "presence", "all_commits", "exists?", "commit"]
CALLS: ["params", "commit_by"]
CALLS: ["commit", "render_404"]
CALLS: ["persisted?", "merge_request_diff", "head_commit_sha", "source_branch_head", "try"]
CALLS: ["source_project", "source_branch_ref", "source_project", "repository", "source_branch_ref", "commit", "strong_memoize"]
CALLS: ["source_branch", "source_branch"]
CALLS: ["project", "pipelines", "params", "find_by!", "current_user", "present"]
CALLS: ["project", "params", "new"]
CALLS: ["render_show"]
CALLS: ["current_user", "new", "deploy_tokens", "active", "define_deploy_token", "define_protected_refs", "fluid_layout", "current_user", "can?", "empty?", "each", "env", "test?", "current_user", "current_user", "can?", "each", "env", "test?", "current_user", "expand_deploy_tokens_section?", "s_", "s_", "persisted?", "s_", "deploy_token", "username", "deploy_token", "username", "s_", "clipboard_button", "s_", "deploy_token", "token", "deploy_token", "token", "s_", "clipboard_button", "s_", "s_", "s_", "token", "project", "namespace", "project", "create_deploy_token_namespace_project_settings_repository_path", "token", "form_errors", "label", "text_field", "label", "object", "expires_at", "text_field", "label", "check_box", "s_", "project", "container_registry_enabled?", "check_box", "s_", "s_", "submit", "s_", "active_tokens", "length", "active_tokens", "present?", "s_", "s_", "s_", "s_", "s_", "active_tokens", "name", "username", "created_at", "to_date", "to_s", "expires?", "expires_soon?", "scopes", "present?", "scopes", "join", "s_", "id", "project", "project", "each", "s_"]
CALLS: ["read_attribute", "date"]
CALLS: ["due_date", "due_date", "past?", "due_date", "to_s", "due_date", "to_s"]
CALLS: ["expires?", "expires_at", "days", "from_now"]
CALLS: ["expires_at", "present?"]
CALLS: ["persisted?", "errors", "present?", "env", "test?"]
CALLS: ["new"]
CALLS: ["protected_branches", "order", "params", "page", "protected_tags", "order", "params", "page", "protected_branches", "new", "protected_tags", "new", "repository", "branches", "matching", "size", "reduce", "repository", "tags", "matching", "size", "reduce", "load_gon_index"]
CALLS: ["project", "repository", "branch_names"]
CALLS: ["gon", "protectable_tags_for_dropdown", "push", "gon", "protectable_branches_for_dropdown", "push", "gon", "access_levels_options", "push"]
CALLS: ["new", "hash"]
CALLS: ["protectable_ref_names", "map"]
CALLS: ["ref_names", "non_wildcard_protected_ref_names"]
CALLS: ["branch_names", "tag_names"]
CALLS: ["protections", "reject", "map"]
CALLS: ["public_send"]
CALLS: ["refs", "map"]
CALLS: ["repository", "public_send"]
CALLS: ["ref_names", "join", "notes", "id", "pluralize"]
CALLS: ["params", "nil?", "include?", "include?", "include?", "params", "new", "execute", "take", "map", "s_", "tag_count", "nonzero?", "params", "new", "execute", "take", "map", "s_", "params", "unescape", "flatten", "exclude?", "to_json", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["class", "to_s", "hash"]
CALLS: ["new", "hash"]
CALLS: ["levels_for_dropdown", "levels_for_dropdown", "levels_for_dropdown"]
CALLS: ["map"]
CALLS: ["repository", "branch_count", "repository", "commit", "id", "branch_names_contains", "repository", "tag_count", "repository", "commit", "id", "tag_names_contains", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["raw_repository", "tag_names_contains_sha"]
CALLS: ["raw_repository", "branch_names_contains_sha"]
CALLS: ["html", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["job_from_id", "job_from_ref"]
CALLS: ["project", "latest_successful_builds_for", "params", "find_by"]
CALLS: ["default_branch", "pipelines", "latest_successful_for", "builds", "latest", "with_artifacts_archive", "builds", "none"]
CALLS: ["newest_first", "success", "take"]
CALLS: ["", "select", "where", "archive", "where"]
CALLS: ["current_user", "can?", "access_denied!", "archive!", "project_path", "html", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["update_attribute"]
CALLS: ["any", "html", "respond_to"]
CALLS: ["params", "path", "tr", "params", "logger", "class", "name", "error", "git_not_found!", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: []
CALLS: ["params", "project", "builds", "params", "find_by"]
CALLS: ["params"]
CALLS: ["due_date", "due_date", "past?"]
CALLS: ["expires?", "expires_at", "current"]
CALLS: ["cache", "cache_expires_in", "current_and_future_messages", "to_a", "fetch", "empty?", "select", "empty?", "cache", "delete", "select"]
CALLS: []
CALLS: ["zone", "now", "where", "order_id_asc"]
CALLS: ["ensure_cache_setup", "cache", "last", "tap", "fetch", "last"]
CALLS: ["define_attribute_methods"]
CALLS: ["cache", "first", "fetch"]
CALLS: []
CALLS: ["for_commit?", "diff_line", "noteable", "noteable", "diff_refs", "find_noteable_diff", "new", "diff", "each_line", "parse", "text", "diff_line", "text", "any?"]
CALLS: ["start_commit_sha", "base_commit_sha", "base_commit_sha", "start_commit_sha", "head_commit_sha", "new"]
CALLS: ["start_commit", "head_commit", "project", "start_commit", "id", "head_commit", "id", "merge_base_commit", "sha", "strong_memoize"]
CALLS: ["repository", "merge_base", "commit_by"]
CALLS: ["commit", "try", "commit", "try", "raw_repository", "merge_base"]
CALLS: ["start_commit_sha", "project", "start_commit_sha", "commit_by"]
CALLS: ["base", "project", "new", "strong_memoize"]
CALLS: ["start_commit", "sha"]
CALLS: ["persisted?", "merge_request_diff", "diff_refs", "diff_base_sha", "diff_start_sha", "diff_head_sha", "new"]
CALLS: ["persisted?", "merge_request_diff", "base_commit_sha", "branch_merge_base_commit", "try"]
CALLS: ["target_branch_sha", "source_branch_sha", "target_project", "merge_base_commit"]
CALLS: ["source_branch_head", "try"]
CALLS: ["persisted?", "merge_request_diff", "start_commit_sha", "target_branch_head", "try"]
CALLS: ["noteable", "max_diff_options", "raw_diffs", "new_path", "diff", "new_path", "find"]
CALLS: ["compare", "diffs", "load_diffs"]
CALLS: ["merge_request_diff_files", "map", "include?", "include?", "select", "new"]
CALLS: ["repository", "raw_repository", "safe_start_commit_sha", "head_commit_sha", "new"]
CALLS: ["start_commit_sha", "merge_request", "target_branch_sha"]
CALLS: ["new"]
CALLS: ["compare", "compare", "merge", "diffs", "merge_request_diff", "diffs"]
CALLS: ["project", "diff_refs", "new"]
CALLS: ["new"]
CALLS: ["can_be_created", "diff_options", "diffs", "current_user", "environments_for", "last", "view_to_html_string", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["diff_head_commit", "target_project", "target_branch", "diff_head_commit", "new", "execute", "source_project", "source_project", "source_branch", "diff_head_commit", "new", "execute", "concat", "uniq", "new"]
CALLS: ["persisted?", "merge_request_diff", "head_commit", "source_branch_head"]
CALLS: ["hide_whitespace?", "diffs_expanded?", "action_name", "params", "values_at"]
CALLS: ["params"]
CALLS: ["params", "present?"]
CALLS: ["merge_request_diff", "merge_request_diff", "raw_diffs", "compare", "raw_diffs"]
CALLS: ["diffs"]
CALLS: ["raw", "diffs"]
CALLS: []
CALLS: ["diff_file", "line_code", "line_for_line_code"]
CALLS: ["diff_file", "original_position", "line_for_position"]
CALLS: []
CALLS: ["start_commit_sha", "base_commit_sha", "start_commit_sha", "head_commit_sha", "new"]
CALLS: ["parent_id", "sha", "new"]
CALLS: ["present?", "first_note", "active?"]
CALLS: ["notes", "first", "strong_memoize"]
CALLS: ["state"]
CALLS: ["supported?", "for_commit?", "noteable", "diff_refs", "position", "diff_refs"]
CALLS: ["class", "supported?"]
CALLS: ["for_commit?", "noteable", "has_complete_diff_refs?"]
CALLS: ["diff_refs", "diff_refs", "complete?"]
CALLS: ["revoked"]
CALLS: []
CALLS: ["status", "include?"]
CALLS: ["started?", "ended?"]
CALLS: ["status", "include?", "started_at"]
CALLS: ["all", "minimum"]
CALLS: ["zone", "now", "starts_at"]
CALLS: ["allowed?"]
CALLS: ["current_user", "action", "subject", "allowed?"]
CALLS: ["x509", "x509", "subject", "to_s"]
CALLS: ["name", "present?", "join", "config", "gitlab", "email_subject_suffix", "present?", "config", "gitlab", "email_subject_suffix"]
CALLS: ["allowed?"]
CALLS: ["allowed?"]
CALLS: ["parent", "group", "raise_error"]
CALLS: ["new"]
CALLS: []
CALLS: []
CALLS: ["username"]
CALLS: ["", "sanitize_sql_like", "where"]
CALLS: ["full_path"]
CALLS: ["project", "group"]
CALLS: ["", "joins", "sanitize_sql_like", "where"]
CALLS: ["source"]
CALLS: ["active?", "persisted?", "uncached_full_path", "full_path_key", "uncached_full_path"]
CALLS: ["class", "name", "id"]
CALLS: ["route", "route", "path", "present?", "route", "path", "persisted?", "update_route", "build_full_path"]
CALLS: ["params", "present?", "params", "find"]
CALLS: ["params", "params", "find_routable!"]
CALLS: ["request", "get?", "find_by_full_path", "routable_authorized?", "ensure_canonical_path", "handle_not_found_or_authorized"]
CALLS: ["request", "get?", "full_path", "casecmp", "flash", "class", "to_s", "titleize", "build_canonical_path"]
CALLS: ["safe_params", "to_param", "merge", "url_for"]
CALLS: ["params", "namespace", "to_param", "params", "to_param", "safe_params", "url_for"]
CALLS: ["params", "namespace", "to_param", "params", "to_param", "params", "url_for"]
CALLS: ["action_name", "group_path", "params", "to_param", "safe_params", "url_for"]
CALLS: ["params", "to_param", "params", "url_for"]
CALLS: ["class", "to_s", "underscore", "current_user", "can?", "call"]
CALLS: ["route_not_found"]
CALLS: ["current_user", "not_found", "authenticate_user!"]
CALLS: ["current_user", "request", "get?", "request", "xhr?", "request", "fullpath", "new_user_session_path"]
CALLS: ["current_user", "allow_signup?", "request", "fullpath", "new_user_session_path"]
CALLS: ["signup_enabled?", "password_authentication_enabled_for_web?"]
CALLS: ["group"]
CALLS: ["params", "find_by_full_path"]
CALLS: ["current_user", "new", "execute"]
CALLS: ["user", "authorized_projects"]
CALLS: ["milestoneish_ids", "for_milestones"]
CALLS: ["", "joins", "where", "distinct"]
CALLS: ["except"]
CALLS: ["", "includes"]
CALLS: ["target_user", "project_interactions", "joins", "current_user", "where", "select", "target_user", "project_interactions", "where", "select", "new", "to_sql"]
CALLS: ["skip_authorization", "all", "current_user", "new", "execute", "group?", "params", "in_namespace", "projects?", "params", "where", "reorder"]
CALLS: ["", "where"]
CALLS: ["params"]
CALLS: ["project?", "project", "current_user", "params", "presence", "current_user_related?", "current_user", "authorized_projects", "group", "params", "group", "current_user", "new", "execute", "current_user", "item_project_ids", "new", "execute", "klass", "current_user", "with_feature_available_for_user", "reorder"]
CALLS: ["admin?", "with_feature_enabled", "quoted_access_level_column", "with_project_feature", "authorizations_for_projects", "where", "with_feature_access_level"]
CALLS: ["project_authorizations", "select", "where"]
CALLS: ["connection", "access_level_attribute", "quote_column_name", "connection", "table_name", "quote_table_name"]
CALLS: ["", "access_level_attribute", "with_project_feature", "where"]
CALLS: ["", "access_level_attribute", "with_project_feature", "where"]
CALLS: ["", "joins"]
CALLS: ["reorder", "select"]
CALLS: []
CALLS: ["reorder", "select"]
CALLS: ["includes"]
CALLS: ["params", "params", "params"]
CALLS: ["params", "projects_matching_filter", "direct_child_projects", "with_route", "sort", "order_by"]
CALLS: ["hierarchy_for_parent", "base_and_descendants", "select", "where", "params", "params", "merge", "current_user", "new", "execute"]
CALLS: ["parent_group", "id", "where", "new"]
CALLS: ["parent_group", "current_user", "params", "new", "execute"]
CALLS: ["supports_nested_groups?", "none", "params", "subgroups_matching_filter", "direct_child_groups", "params", "with_selects_for_list", "sort", "order_by"]
CALLS: ["postgresql?"]
CALLS: ["supports_nested_groups?"]
CALLS: ["all_visible_descendant_groups", "params", "search"]
CALLS: ["arel_table", "current_user", "levels_for_user", "in", "current_user", "current_user", "new", "execute", "as", "project", "from", "eq", "where", "exists", "or", "hierarchy_for_parent", "descendants", "where"]
CALLS: ["class", "id", "where", "new", "base_and_descendants"]
CALLS: ["params", "find_by_path_or_name"]
CALLS: ["downcase", "find_by"]
CALLS: ["current_user", "parent_group", "new", "execute"]
CALLS: ["load_projects", "html", "view_to_html_string", "json", "respond_to"]
CALLS: ["projects", "with_statistics", "params", "page", "name", "current_user", "id", "new_project_path", "visibility_level", "visibility_level_color", "visibility_level", "visibility_level_icon", "full_name", "archived", "statistics", "storage_size", "storage_counter", "project_project_members_path", "dom_id", "edit_project_path", "dom_id", "remove_project_message", "each", "blank?", "name", "page_description", "description", "header_title", "group_title", "current_user"]
CALLS: ["", "where"]
CALLS: []
CALLS: ["megabyte", "number_to_human_size"]
CALLS: ["_", "full_name"]
CALLS: ["icon"]
CALLS: ["current_user", "authorized_projects", "sorted_by_activity", "non_archived"]
CALLS: ["", "reorder"]
CALLS: ["params", "find_by_id", "projects_finder", "params", "params", "execute", "to_json"]
CALLS: ["current_user", "new"]
CALLS: ["user", "personal_projects", "user", "projects", "joined", "admin_root_path"]
CALLS: ["", "namespace_id", "where"]
CALLS: ["represent"]
CALLS: ["represent"]
CALLS: ["should_expand_hierarchy", "paginated?", "paginator", "paginate", "represent_hierarchies", "represent"]
CALLS: ["is_a?", "hierarchy_root", "hierarchy", "represent_hierarchy", "first", "hierarchy_root", "build_hierarchy", "wrap", "represent_hierarchy"]
CALLS: ["class", "params", "new", "is_a?", "represent", "represent_hierarchy", "wrap", "merge", "map", "is_a?", "represent_hierarchy", "flat_map", "represent"]
CALLS: ["wrap", "uniq", "empty?", "is_a?", "all?", "new", "hierarchy", "map", "merge"]
CALLS: ["ancestors_upto", "expand_hierarchy_for_child"]
CALLS: ["namespace_id", "where", "new", "base_and_ancestors"]
CALLS: ["class", "id", "where", "new", "ancestors"]
CALLS: ["parent_id", "id", "is_a?", "id", "parent_id", "detect", "nil?", "parent_id", "nil?", "parent", "new", "map", "track_exception", "nil?", "present?", "new", "expand_hierarchy_for_child"]
CALLS: ["itemized?", "itemize", "name", "size", "represent", "map", "represent"]
CALLS: ["order", "group", "select", "paginated?", "paginate", "map", "where", "index_by", "folder", "size", "last_id", "new", "map"]
CALLS: ["project", "environments", "params", "where", "params", "with_state", "order", "params", "html", "new", "request", "response", "with_pagination", "represent", "available", "count", "stopped", "count", "json", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: []
CALLS: ["paginated?", "paginate", "represent"]
CALLS: ["paginated?", "respond_to?", "", ""]
CALLS: ["class", "entity_class", "merge", "represent", "as_json"]
CALLS: []
CALLS: ["symbolize_keys!", "represent"]
CALLS: ["are_public", "includes", "enabled_keys", "available_project_keys"]
CALLS: ["current_user", "project_deploy_keys", "includes", "enabled_keys"]
CALLS: ["unscoped", "authorized_projects", "pluck", "in_projects", "distinct"]
CALLS: ["unscoped", "where", "select", "unscoped", "where", "select", "new", "to_sql", "where"]
CALLS: ["", "where"]
CALLS: ["", "except", "select", "where", "where", "recent"]
CALLS: ["", "joins", "where"]
CALLS: ["project", "deploy_keys", "includes"]
CALLS: ["are_public"]
CALLS: ["members", "current_user", "present", "each"]
CALLS: ["fetch_members"]
CALLS: ["project", "authorized_users", "where"]
CALLS: ["current_user", "new", "target", "execute", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["", "key?", "label", "board", "project", "as_json", "tap"]
CALLS: ["", "try", "key?", "priority", "tap"]
CALLS: ["", "key?", "project", "url_helpers", "to_reference", "to_reference", "project", "project_issue_path", "project", "project_issue_path", "project", "toggle_subscription_project_issue_path", "merge!", "key?", "labels", "project", "as_json", "tap"]
CALLS: ["commits", "each"]
CALLS: ["milestones", "includes", "map", "flatten", "build_collection", "sort_by!"]
CALLS: ["labels?", "filter_by_no_label?", "current_user", "projects", "label_names", "new", "execute", "none"]
CALLS: ["labels?", "params", "title", "include?"]
CALLS: ["target", "labels", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["projects", "select", "current_user", "new", "execute", "build_collection"]
CALLS: ["milestone_redirect_path", "html", "labels", "tabs_json", "json", "respond_to"]
CALLS: ["current_user", "id", "new", "execute"]
CALLS: ["labels", "params", "find"]
CALLS: []
CALLS: ["full_title", "length", "full_title", "full_title", "truncate"]
CALLS: ["params", "params"]
CALLS: ["todo_service", "current_user", "new_merge_request", "current_user", "cache_merge_request_closes_issues!", "update_merge_requests_head_pipeline"]
CALLS: ["new_issuable"]
CALLS: ["create_assignment_todo", "project", "create_mention_todos"]
CALLS: ["filter_directly_addressed_users", "attributes_for_todo", "create_todos", "filter_mentioned_users", "attributes_for_todo", "create_todos"]
CALLS: ["directly_addressed_users", "filter_todo_users"]
CALLS: ["reject_users_without_access", "uniq"]
CALLS: ["is_a?", "for_issue?", "for_merge_request?", "noteable", "is_a?", "to_ability_name", "select_users", "select_users"]
CALLS: ["to_sym", "can?", "select"]
CALLS: ["for_personal_snippet?", "noteable_type", "underscore"]
CALLS: ["noteable_type"]
CALLS: ["noteable_type"]
CALLS: ["class", "to_ability_name"]
CALLS: ["all_references", "directly_addressed_users"]
CALLS: ["mentioned_users", "filter_todo_users"]
CALLS: ["attributes_for_target", "id", "id", "merge!"]
CALLS: ["pending_todos", "exists?", "id", "merge", "create", "update_todos_count_cache", "map"]
CALLS: ["assignees", "any?", "assignees", "project", "attributes_for_todo", "create_todos"]
CALLS: ["new_resource_email"]
CALLS: ["author", "build_recipients", "mailer", "user", "id", "id", "reason", "send", "deliver_later", "each"]
CALLS: ["head_pipeline_for", "id", "update"]
CALLS: ["source_project", "source_branch_sha", "source_project", "pipelines", "source_branch", "where", "order", "first"]
CALLS: ["project", "issues_enabled?", "transaction_begin", "merge_requests_closing_issues", "delete_all", "closes_issues", "is_a?", "merge_requests_closing_issues", "create!", "each", "transaction_end", "transaction"]
CALLS: ["current_user", "id", "id", "perform_async", "run_after_commit"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["todo_service", "current_user", "new_issue", "user_agent_detail_service", "create", "resolve_discussions_with_issue"]
CALLS: ["new_issuable"]
CALLS: ["new_resource_email"]
CALLS: ["new"]
CALLS: ["discussions_to_resolve", "empty?", "project", "current_user", "merge_request_to_resolve_discussions_of", "new", "discussions_to_resolve", "execute"]
CALLS: ["merge_request_to_resolve_discussions_of", "discussion_to_resolve_id", "merge_request_to_resolve_discussions_of", "discussion_to_resolve_id", "find_discussion", "merge_request_to_resolve_discussions_of", "discussions_to_be_resolved"]
CALLS: ["resolvable_discussions", "select"]
CALLS: ["current_user", "project", "id", "new", "execute", "merge_request_to_resolve_discussions_of_iid", "find_by", "strong_memoize"]
CALLS: ["current_user", "spam_check", "move_to_end", "current_user", "id", "id", "perform_async", "run_after_commit"]
CALLS: ["new", "spam_logs", "find_by", "update!", "when_recaptcha_verified"]
CALLS: ["spammable", "spam", "check", "spammable", "spam_log", "spam_log"]
CALLS: ["has_pushes?", "repository", "git_fsck", "wiki_enabled?", "create_wiki", "wiki", "repository", "git_fsck"]
CALLS: ["with_push", "id", "exists?"]
CALLS: ["", "joins", "where"]
CALLS: ["exists?", "raw_repository", "fsck", "message", "error"]
CALLS: ["wiki_access_level"]
CALLS: ["owner", "new", "wiki", "errors", "add"]
CALLS: ["txt_records", "parse", "domain", "keyed_verification_code", "domain", "verification_code", "any?", "domain", "domain", "log_error"]
CALLS: ["logger", "class", "error"]
CALLS: ["getresources"]
CALLS: ["class", "name", "merge_request", "to_reference", "error", "merge_request", "update"]
CALLS: ["error"]
CALLS: ["verification_code", "present?", "verification_code"]
CALLS: ["request", "check_for_spam?", "akismet", "spam?", "create_spam_log"]
CALLS: ["spammable_owner_id", "spammable", "spam_title", "spammable", "spam_description", "options", "options", "spammable", "class", "to_s", "create!"]
CALLS: ["spammable", "respond_to?", "spammable", "author_id", "spammable", "respond_to?", "spammable", "creator_id"]
CALLS: ["class", "spammable_attrs", "fetch", "find", "first", "to_sym", "respond_to?", "first", "public_send"]
CALLS: ["class", "spammable_attrs", "fetch", "find", "first", "to_sym", "respond_to?", "first", "public_send"]
CALLS: ["spammable", "check_for_spam?"]
CALLS: ["spammable_owner", "spammable", "spammable_text", "options", "new"]
CALLS: ["spammable_owner_id", "find"]
CALLS: ["class", "spammable_attrs", "first", "public_send", "map", "reject", "join"]
CALLS: ["spam_log", "user", "spam_log", "text", "spam_log", "source_ip", "spam_log", "user_agent", "new"]
CALLS: ["akismet_enabled?", "text", "now", "owner", "name", "owner", "email", "options", "akismet_client", "options", "options", "check", "logger", "error"]
CALLS: ["visibility_level_changed?", "public?", "title_changed?", "content_changed?"]
CALLS: ["title", "present?", "class", "url_path", "unhyphenize", "title"]
CALLS: ["project", "public?", "title_changed?", "description_changed?"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["save", "update_attributes", "with_transaction_returning_status"]
CALLS: ["present?", "process_title", "slice!", "merge!"]
CALLS: ["blank?", "deep_title_squish", "dirname", "present?", "directory", "presence", "compact", "join"]
CALLS: ["split", "map", "join"]
CALLS: ["merge_quick_actions_into_params!"]
CALLS: ["params", "description", "fetch", "project", "current_user", "new", "execute", "params", "params", "merge!"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["wiki", "delete_page"]
CALLS: ["wiki", "path", "title", "commit_details", "delete_page", "update_project_activity"]
CALLS: ["touch"]
CALLS: ["touch_noteable"]
CALLS: ["for_commit?", "association", "loaded?", "noteable", "scope", "select", "take", "touch"]
CALLS: ["params", "delete"]
CALLS: ["params", "delete"]
CALLS: ["params", "delete"]
CALLS: ["params", "params", "process_scope"]
CALLS: ["split", "split", "process_registry_access", "new", "process_repository_access"]
CALLS: ["valid?", "repository_project", "can_access?", "select", "present?", "ensure_container_repository!", "to_s"]
CALLS: ["container_registry_enabled?", "build_can_pull?", "user_can_pull?", "deploy_token_can_pull?", "build_can_push?", "user_can_push?", "user_can_admin?"]
CALLS: ["has_authentication_ability?", "can_user?"]
CALLS: ["to_a", "include?"]
CALLS: ["current_user", "is_a?", "current_user", "can?"]
CALLS: ["authentication_abilities", "include?"]
CALLS: ["has_authentication_ability?", "project"]
CALLS: ["has_authentication_ability?", "current_user", "is_a?", "current_user", "has_access_to?", "current_user", "read_registry?"]
CALLS: ["active?", "project"]
CALLS: ["deploy_keys_project_for", "present?"]
CALLS: ["deploy_keys_projects", "find_by"]
CALLS: ["has_authentication_ability?", "can_user?"]
CALLS: ["has_authentication_ability?", "can_user?"]
CALLS: ["has_authentication_ability?", "project", "can_user?"]
CALLS: ["has_repository?", "include?", "create_from_path!"]
CALLS: ["build_from_path", "tap"]
CALLS: ["repository_project", "repository_name", "new"]
CALLS: ["current_user", "admin?"]
CALLS: ["zone", "now", "updated_at"]
CALLS: []
CALLS: ["default_message", "id", "username", "name", "email", "new"]
CALLS: ["username"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["delete_conflicting_redirects"]
CALLS: ["conflicting_redirects", "delete_all"]
CALLS: ["path", "matching_path_and_descendants"]
CALLS: ["", "postgresql?", "sanitize_sql_like", "where"]
CALLS: ["expire_exists_cache", "expire_root_ref_cache", "expire_emptiness_caches", "repository_event"]
CALLS: ["full_path", "merge", "add_event"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["track_user_interacted_projects", "set_last_repository_updated_at", "reset_project_activity"]
CALLS: ["created_at", "update_column"]
CALLS: ["available?", "track"]
CALLS: ["project_id", "project_id", "author_id", "transaction_begin", "where", "select", "first", "create!", "transaction_end", "transaction", "cached_exists?"]
CALLS: ["cache", "fetch"]
CALLS: ["unscoped", "project_id", "where", "created_at", "update_all"]
CALLS: ["project", "recent_update?", "unscoped", "project_id", "where", "ago", "where", "created_at", "update_all"]
CALLS: ["project", "last_activity_at", "ago"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["create_project_feature", "set_last_activity_at", "set_last_repository_updated_at", "check_repository_absence!", "ensure_storage_path_exists"]
CALLS: ["namespace", "gitlab_shell", "repository_storage_path", "base_dir", "add_namespace"]
CALLS: ["repository_storage_path"]
CALLS: ["config", "repositories", "storages", "repository_storage", "legacy_disk_path"]
CALLS: ["gitlab_shell", "repository_storage_path", "base_dir", "add_namespace"]
CALLS: ["created_at", "update_column"]
CALLS: ["skip_disk_validation", "repository_storage_path", "blank?", "repository_with_same_path_already_exists?", "errors", "add"]
CALLS: ["gitlab_shell", "repository_storage_path", "disk_path", "exists?"]
CALLS: []
CALLS: []
CALLS: ["update_daemon"]
CALLS: ["project", "new", "execute"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["sync_share_with_group_lock_with_parent"]
CALLS: ["parent", "share_with_group_lock?", "share_with_group_lock"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["save_git_content"]
CALLS: ["merge_request_id", "id", "where", "id", "update_all", "ensure_commit_shas", "save_commits", "save_diffs", "save", "keep_around_commits"]
CALLS: ["repository", "merge_request", "source_project", "repository", "uniq", "start_commit_sha", "keep_around", "head_commit_sha", "keep_around", "base_commit_sha", "keep_around", "each"]
CALLS: ["present?", "commit_by", "kept_around?", "raw_repository", "keep_around_ref_name", "write_ref", "logger", "path", "error"]
CALLS: []
CALLS: ["keep_around_ref_name", "ref_exists?"]
CALLS: ["raw_repository", "ref_exists?"]
CALLS: ["id", "compare", "commits", "reverse", "create_bulk", "merge_request_diff_commits", "commits_count", "size"]
CALLS: ["new", "map", "to_hash", "except", "delete", "serialize", "sanitize_timestamp", "sanitize_timestamp", "merge", "with_index", "table_name", "bulk_insert"]
CALLS: ["compare", "commits", "size", "zero?", "compare", "max_diff_options", "diffs", "real_size", "any?", "create_merge_request_diff_files", "overflow?", "assign_attributes"]
CALLS: ["map", "to_hash", "id", "merge", "encoding", "ascii_only?", "pack", "tap", "with_index", "bulk_insert"]
CALLS: ["start_commit_sha", "merge_request", "target_branch_sha", "head_commit_sha", "merge_request", "source_branch_sha", "base_commit_sha", "find_base_sha"]
CALLS: ["head_commit_sha", "start_commit_sha", "project", "head_commit_sha", "start_commit_sha", "merge_base_commit", "try"]
CALLS: ["project", "repository", "original_position", "base_sha", "keep_around", "project", "repository", "original_position", "start_sha", "keep_around", "project", "repository", "original_position", "head_sha", "keep_around", "position", "original_position", "project", "repository", "position", "base_sha", "keep_around", "project", "repository", "position", "start_sha", "keep_around", "project", "repository", "position", "head_sha", "keep_around"]
CALLS: ["project", "project", "repository", "sha", "keep_around", "project", "repository", "before_sha", "keep_around"]
CALLS: ["ensure_merge_request_diff"]
CALLS: ["merge_request_diff", "create_merge_request_diff"]
CALLS: ["fetch_ref!", "merge_request_diffs", "create", "reload_merge_request_diff", "allow_n_plus_1_calls"]
CALLS: ["target_project", "repository", "source_project", "repository", "source_branch", "ref_path", "fetch_source_branch!"]
CALLS: ["raw_repository", "raw_repository", "fetch_source_branch!"]
CALLS: ["iid"]
CALLS: ["slug"]
CALLS: ["environment", "ref_path", "iid", "to_s", "join"]
CALLS: ["merge_request_diff"]
CALLS: []
CALLS: ["post_create_hook", "create_notification_setting", "send_request", "send_invite"]
CALLS: ["owner?", "event_service", "project", "user", "join_project", "notification_service", "new_project_member"]
CALLS: ["notifiable?", "mailer", "real_source_type", "id", "member_access_granted_email", "deliver_later"]
CALLS: ["notifiable?"]
CALLS: ["new", "notifiable?"]
CALLS: ["has_access?", "own_activity?", "unsubscribed?", "suitable_notification_level?", "unsubscribed?"]
CALLS: ["user", "can?", "user", "can?", "user", "can?", "read_ability", "has_policy?", "user", "read_ability", "can?", "subject_scope"]
CALLS: ["instance_variable_defined?", "to_ability_name", "class", "model_name", "name", "underscore"]
CALLS: ["user", "notified_of_own_activity?"]
CALLS: ["respond_to?", "subscriptions", "id", "find_by_user_id", "subscribed"]
CALLS: ["notification_level", "custom_enabled?", "include?", "action_excluded?"]
CALLS: ["excluded_watcher_action?", "excluded_participating_action?"]
CALLS: ["notification_level", "include?"]
CALLS: ["notification_level", "include?"]
CALLS: ["notification_setting", "event_enabled?"]
CALLS: ["respond_to?", "public_send"]
CALLS: ["find_notification_setting"]
CALLS: ["user", "notification_settings_for", "nil?", "global?", "user", "notification_settings_for", "nil?", "global?", "user", "global_notification_setting"]
CALLS: ["notification_settings", "find_or_initialize_by", "persisted?", "levels", "update_attributes"]
CALLS: ["notification_settings", "loaded?", "notification_settings", "source", "find", "notification_settings", "find_or_initialize_by"]
CALLS: ["user", "source", "notification_settings_for"]
CALLS: ["notification_setting", "level", "to_sym"]
CALLS: []
CALLS: ["user", "blank?", "user", "notifiable_options", "merge", "notifiable?"]
CALLS: ["project"]
CALLS: ["group"]
CALLS: []
CALLS: ["source_type"]
CALLS: ["member", "user", "notification_email", "member_source", "human_name", "member_source", "model_name", "singular", "subject", "mail"]
CALLS: ["member", "source"]
CALLS: ["new"]
CALLS: ["new"]
CALLS: ["new"]
CALLS: ["project", "owner", "user"]
CALLS: ["new"]
CALLS: ["notification_service", "invite_project_member"]
CALLS: ["notifiable?", "mailer", "real_source_type", "id", "member_invited_email", "deliver_later"]
CALLS: ["member", "invite_email", "member_source", "human_name", "member_source", "model_name", "singular", "subject", "mail"]
CALLS: ["notification_service", "new_group_member"]
CALLS: ["notifiable?", "mailer", "real_source_type", "id", "member_access_granted_email", "deliver_later"]
CALLS: ["notification_service", "invite_group_member"]
CALLS: ["mailer", "real_source_type", "id", "member_invited_email", "deliver_later"]
CALLS: ["system_hook_service", "execute_hooks_for"]
CALLS: ["build_event_data", "new", "execute_hooks", "run_after_commit_or_now"]
CALLS: ["build_event_name", "created_at", "xmlschema", "updated_at", "xmlschema", "key", "id", "merge!", "user", "user", "username", "project_data", "merge!", "old_path_with_namespace", "user_data", "merge!", "username_was", "state", "project_member_data", "merge!", "group_data", "merge!", "path_was", "full_path_was", "merge!", "group_member_data", "merge!"]
CALLS: ["name", "email", "id", "username"]
CALLS: ["group", "name", "group", "path", "group", "id", "user", "username", "user", "name", "user", "email", "user", "id", "human_access"]
CALLS: ["class", "access_options", "group_access", "key"]
CALLS: ["options"]
CALLS: ["owner", "name", "path", "full_path", "id", "try", "try"]
CALLS: ["project", "unscoped", "source_id", "find", "name", "path", "full_path", "id", "user", "username", "user", "name", "user", "email", "user", "id", "human_access", "visibility_levels", "visibility_level_value", "key", "downcase"]
CALLS: ["options"]
CALLS: ["owner", "name", "path", "full_path", "id", "name", "respond_to?", "email", "visibility", "downcase"]
CALLS: ["class", "name", "downcase"]
CALLS: ["namespace", "full_path", "previous_changes", "first", "join"]
CALLS: ["parent_id_was", "nil?", "path_was", "parent_id_was", "find_by", "full_path", "path_was"]
CALLS: ["new"]
CALLS: ["new"]
CALLS: ["new"]
CALLS: ["new"]
CALLS: ["notification_service", "new_access_request"]
CALLS: ["notifiable?", "source", "members", "active_without_invites_and_requests", "owners_and_masters", "fallback_to_group_owners_masters?", "source", "group", "members", "active_without_invites_and_requests", "owners_and_masters", "deliver_access_request_email", "each"]
CALLS: ["present?", "source", "respond_to?", "source", "group"]
CALLS: ["mailer", "real_source_type", "id", "user", "notification_email", "member_access_requested_email", "deliver_later"]
CALLS: ["member_source", "human_name", "member_source", "model_name", "singular", "subject", "mail"]
CALLS: ["", "active", "where"]
CALLS: []
CALLS: ["user", "notification_settings", "source", "find_or_create_for"]
CALLS: ["find_or_initialize_by", "persisted?", "save"]
CALLS: ["new", "execute_hooks_for"]
CALLS: ["name", "info", "system_hook_service", "execute_hooks_for"]
CALLS: ["post_create_hook", "create_notification_setting", "send_request", "send_invite", "update_two_factor_requirement"]
CALLS: ["expanded_groups_requiring_two_factor_authentication", "pluck", "require_two_factor_authentication_from_group", "any?", "two_factor_grace_period", "min", "column_defaults", "save"]
CALLS: ["all_expanded_groups", "where"]
CALLS: ["groups", "new", "all_groups"]
CALLS: ["current_user", "authorized_groups", "sort_by", "users", "count", "full_path", "full_name", "avatar_url", "map"]
CALLS: ["groups", "select", "authorized_projects", "select", "new", "to_sql", "where"]
CALLS: ["statuses", "ordered", "latest", "sort_by", "group_by", "new", "map"]
CALLS: ["", "order"]
CALLS: ["", "order"]
CALLS: ["authorized_groups", "visible_to_user", "authorized_groups", "public_to_user"]
CALLS: ["", "authorized_projects", "select", "reorder", "where"]
CALLS: ["authorized_groups", "select", "reorder", "where"]
CALLS: ["params", "owned_groups", "current_user", "full_private_access?", "all", "current_user", "groups_for_ancestors", "groups_for_descendants", "new", "all_groups", "include_public_groups?", "unscoped", "current_user", "public_to_user", "empty?", "none"]
CALLS: ["admin?"]
CALLS: ["current_user", "nil?", "params", "fetch"]
CALLS: ["current_user", "owned_groups", "none"]
CALLS: ["current_user", "groups"]
CALLS: ["current_user", "authorized_groups"]
CALLS: ["load_groups", "html", "view_to_html_string", "json", "respond_to"]
CALLS: ["user", "new", "current_user", "execute", "prepare_groups_for_rendering"]
CALLS: ["preload_max_member_access_for_collection"]
CALLS: ["require_two_factor_authentication_changed?", "two_factor_grace_period_changed?", "users", "find_each"]
CALLS: ["send_invite", "send_request", "create_notification_setting", "post_create_hook"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["set_diff"]
CALLS: ["for_merge_request?", "diff_for_line_code", "find_diff", "st_diff", "to_hash"]
CALLS: ["noteable_type", "line_code", "for_commit?", "commit_id", "noteable_id", "class", "where", "last", "try"]
CALLS: ["noteable", "noteable", "max_diff_options", "raw_diffs", "new_path", "new_path", "hexdigest", "diff_file_hash", "find"]
CALLS: ["line_code", "line_code", "split"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["post_create_hook", "refresh_user_cache"]
CALLS: ["user", "user", "new", "refresh_cache"]
CALLS: ["count_service", "new", "count_stored?", "global_count", "id", "to_i", "refresh_cache", "each"]
CALLS: []
CALLS: ["count_service", "project_ids", "query", "group", "count"]
CALLS: ["hours", "ago", "where", "limit", "pluck", "month", "ago", "where", "reorder", "limit", "pluck"]
CALLS: ["map"]
CALLS: ["collection", "map", "uniq"]
CALLS: ["except", "select", "mysql?", "except", "select", "to_sql", "from"]
CALLS: []
CALLS: ["count_service", "project_ids", "query", "group", "count"]
CALLS: []
CALLS: []
CALLS: ["cache", "cache_key", "read", "present?"]
CALLS: ["cache", "cache_key", "block_given?", "uncached_count", "raw?", "write"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["sync_share_with_group_lock_with_parent", "post_create_hook"]
CALLS: []
CALLS: []
CALLS: ["generate_subkeys"]
CALLS: ["key", "subkeys_from_key", "primary_keyid", "subkeys", "create!", "each"]
CALLS: ["upcase"]
CALLS: []
CALLS: []
CALLS: ["before_create_do_block"]
CALLS: ["project", "user", "new", "id", "perform_async", "run_after_commit", "execute", "queued_at", "now", "started_at", "now", "any", "finished_at", "now", "any", "args", "first", "failure_reason", "project", "loopback?", "pipeline_id", "complete?", "manual?", "pipeline_id", "perform_async", "pipeline_id", "perform_async", "stage_id", "perform_async", "id", "perform_async", "run_after_commit", "after_transition", "any", "project", "project", "new", "execute", "run_after_commit"]
CALLS: ["pipeline", "failure_reason?", "pipeline", "failure_reason", "to_sym", "pipeline", "failure_reason"]
CALLS: ["all", "maximum"]
CALLS: ["id", "perform_async", "run_after_commit"]
CALLS: []
CALLS: []
CALLS: ["add_root_as_member"]
CALLS: ["projects", "root_project"]
CALLS: []
CALLS: []
CALLS: ["reset_project_activity", "set_last_repository_updated_at", "track_user_interacted_projects"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["create_ref", "invalidate_cache"]
CALLS: ["raw_repository", "write_ref"]
CALLS: ["environment", "expire_etag_cache"]
CALLS: ["noteable", "discussions_rendered_on_frontend?", "new", "etag_key", "touch"]
CALLS: ["url_helpers", "project", "noteable_type", "underscore", "noteable_id", "project_noteable_notes_path"]
CALLS: ["url_helpers", "project", "realtime_changes_project_issue_path", "new", "touch"]
CALLS: ["new", "etag_cache_key", "touch", "tap"]
CALLS: ["url_helpers", "project", "project_environments_path"]
CALLS: ["awardable", "try"]
CALLS: []
CALLS: ["project", "repository", "ref", "ref_path", "create_ref"]
CALLS: []
CALLS: []
CALLS: ["refresh_user_cache", "post_create_hook"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["refresh_markdown_cache"]
CALLS: ["skip_project_check?", "cached_markdown_fields", "markdown_fields", "cached_markdown_fields", "html_field", "cacheless_render_field", "map", "to_h", "latest_cached_markdown_version", "write_attribute", "each"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["before_create_do_block"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["keep_around_commits"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["ensure_metadata", "before_create_do_block"]
CALLS: ["metadata", "project", "build_metadata"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["update_attributes", "title", "wiki", "title", "content", "format", "message", "create_page", "save"]
CALLS: ["commit_details", "wiki", "to_sym", "write_page", "update_project_activity", "message"]
CALLS: ["note?", "target"]
CALLS: ["target", "is_a?"]
CALLS: ["ensure_callout", "persisted?", "json", "respond_to", "json", "respond_to"]
CALLS: ["current_user", "callouts", "feature_names", "feature_name", "find_or_create_by"]
CALLS: ["params", "require"]
CALLS: ["snippet_params", "spammable_params", "merge", "current_user", "new", "execute", "valid?", "params", "move_temporary_files", "recaptcha_check_with_fallback", "snippets_path", "current_user"]
CALLS: ["params", "new", "execute", "each"]
CALLS: ["params", "require", "permit"]
CALLS: ["params", "require", "permit"]
CALLS: ["request", "params", "ensure_spam_config_loaded!", "verify_recaptcha", "params", "merge"]
CALLS: ["load_configurations!", "strong_memoize"]
CALLS: ["spammable", "valid?", "spammable_path", "render_recaptcha?", "ensure_spam_config_loaded!", "params", "flash", "html", "spammable", "render_to_string", "json", "respond_to"]
CALLS: ["snippet_path"]
CALLS: ["project_snippet_path"]
CALLS: ["project_issue_path"]
CALLS: ["spammable", "errors", "count", "enabled?", "spammable", "spam"]
CALLS: ["class", "__method__"]
CALLS: ["snippet", "notes", "params", "find"]
CALLS: ["reset_password_token", "present?", "update_attributes", "flash", "current_user", "authentication_method", "log_audit_event", "current_user", "log_user_activity"]
CALLS: ["user_params", "user_params"]
CALLS: ["params", "require", "permit"]
CALLS: ["params", "require", "permit"]
CALLS: ["params", "require", "permit"]
CALLS: ["params", "require", "permit"]
CALLS: ["params", "require", "user_params_ce", "permit"]
CALLS: []
CALLS: ["login_counter", "increment", "new", "execute"]
CALLS: ["counter"]
CALLS: ["counter"]
CALLS: ["counter"]
CALLS: ["counter_name", "counter_description", "counter"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["username", "request", "remote_ip", "admin?", "info", "new", "for_authentication", "security_event"]
CALLS: ["id", "id", "class", "name", "create"]
CALLS: ["id", "name"]
CALLS: ["user", "new", "execute"]
CALLS: ["new", "for_authentication", "security_event"]
CALLS: ["params", "resource_name", "present?", "params", "resource_name", "blank?", "params", "resource_name", "params", "resource_name", "delete", "load_configurations!", "verify_recaptcha", "flash", "flash", "delete", "new_user_session_path", "redirect_to"]
CALLS: []
CALLS: ["controller_name", "singularize"]
CALLS: ["current_user", "project_params", "new", "execute", "saved?", "cookies", "project_path", "at", "custom_import_params", "project_path", "_", "name", "redirect_to", "active_new_project_tab", "active_new_project_tab", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["id", "persisted?"]
CALLS: ["project_params", "present?"]
CALLS: []
CALLS: ["params", "require", "project_params_attributes", "permit"]
CALLS: []
CALLS: ["params", "require", "permit"]
CALLS: ["params", "permit"]
CALLS: ["current_user", "wiki_params", "new", "execute", "persisted?", "project_wiki_path", "redirect_to", "fluid_layout", "_", "title", "capitalize", "_", "wiki_page_errors", "icon", "persisted?", "title", "capitalize", "project_wiki_path", "title", "capitalize", "persisted?", "s_", "s_", "current_user", "can?", "s_", "persisted?", "project_wiki_history_path", "s_", "current_user", "can?", "project_wiki_path", "s_", "_", "persisted?", "s_", "s_", "title", "namespace", "becomes", "persisted?", "form_errors", "persisted?", "last_commit_sha", "hidden_field", "label", "title", "text_field", "persisted?", "icon", "s_", "icon", "help_page_path", "label", "format", "options_for_select", "select", "label", "slug", "project_wiki_preview_markdown_path", "s_", "slug", "project_wiki_preview_markdown_path", "s_", "html_safe", "s_", "help_page_path", "s_", "html_safe", "label", "text_field", "persisted?", "_", "submit", "_", "project_wiki_path", "s_", "submit", "_", "project_wiki_path", "wiki_params", "build_page", "fluid_layout", "_", "title", "capitalize", "_", "wiki_page_errors", "icon", "persisted?", "title", "capitalize", "project_wiki_path", "title", "capitalize", "persisted?", "s_", "s_", "current_user", "can?", "s_", "persisted?", "project_wiki_history_path", "s_", "current_user", "can?", "project_wiki_path", "s_", "_", "persisted?", "s_", "s_", "title", "namespace", "becomes", "persisted?", "form_errors", "persisted?", "last_commit_sha", "hidden_field", "label", "title", "text_field", "persisted?", "icon", "s_", "icon", "help_page_path", "label", "format", "options_for_select", "select", "label", "slug", "project_wiki_preview_markdown_path", "s_", "slug", "project_wiki_preview_markdown_path", "s_", "html_safe", "s_", "help_page_path", "s_", "html_safe", "label", "text_field", "persisted?", "_", "submit", "_", "project_wiki_path", "s_", "submit", "_", "project_wiki_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["with_reactive_cache"]
CALLS: ["mock_service_url", "project", "namespace", "path", "project", "path", "join", "to_s"]
CALLS: ["drone_url", "project", "full_path", "to_s", "encode", "join", "to_s"]
CALLS: []
CALLS: ["project_url"]
CALLS: ["with_reactive_cache"]
CALLS: ["s_", "project_wiki_path", "s_", "html_safe", "concat", "s_", "message", "content_tag"]
CALLS: ["new", "update_attributes", "tap"]
CALLS: ["params", "require", "permit"]
CALLS: ["project", "triggers", "trigger_params", "current_user", "merge", "create", "valid?", "flash", "flash", "project_settings_ci_cd_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["params", "require", "permit"]
CALLS: ["new", "issuable", "current_user", "mark_todo", "current_user", "new", "execute", "count", "dashboard_todo_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project", "attributes_for_todo", "create_todos"]
CALLS: ["current_user", "new", "params", "params", "params", "params", "execute", "name", "project_tag_path", "params", "params", "s_", "params", "default_branch", "s_", "namespace_project_tags_path", "params", "s_", "s_", "s_", "preview_markdown_path", "s_", "preview_markdown_path", "s_", "s_", "s_", "project_tags_path", "repository", "ref_names", "to_json", "html_safe", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["is_a?", "group_preview_markdown_path", "is_a?", "preview_markdown_snippets_path", "preview_markdown_project_path"]
CALLS: ["snippet_params", "spammable_params", "merge", "current_user", "new", "execute", "recaptcha_check_with_fallback", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["params", "find", "current_user", "can?", "head", "project", "runners_path", "project", "current_user", "assign_to", "persisted?", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["shared?", "is_shared", "save", "runner_projects", "id", "create"]
CALLS: ["is_shared"]
CALLS: ["project_runners_path"]
CALLS: ["create_repository", "project_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["create_service_class", "current_user", "protected_ref_params", "new", "execute", "persisted?", "flash", "errors", "full_messages", "join", "html_safe", "redirect_to_repository_settings"]
CALLS: ["params", "require", "access_level_attributes", "permit"]
CALLS: []
CALLS: ["service_namespace"]
CALLS: []
CALLS: []
CALLS: ["params", "require", "access_level_attributes", "access_level_attributes", "permit"]
CALLS: ["project", "current_user", "create_params", "new", "execute", "persisted?", "project", "project_pipeline_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["url_helpers", "project_pipeline_path"]
CALLS: ["url_helpers", "project_pipeline_path"]
CALLS: ["params", "require", "permit"]
CALLS: ["params", "require", "permit"]
CALLS: ["params", "require", "permit", "dig", "id", "merge!"]
CALLS: ["params", "require", "permit"]
CALLS: ["params", "require", "permit", "merge"]
CALLS: ["params", "require", "permit", "merge"]
CALLS: ["params", "require", "permit"]
CALLS: ["current_user", "schedule_params", "new", "execute", "persisted?", "pipeline_schedules_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project_pipeline_schedules_path"]
CALLS: ["params", "require", "permit"]
CALLS: ["pages_domains", "create_params", "create", "valid?", "project_pages_domain_path", "project_pages_path", "namespace", "becomes", "errors", "any?", "errors", "full_messages", "each", "label", "persisted?", "text_field", "config", "pages", "external_https", "label", "text_area", "label", "text_area", "submit", "_", "project_pages_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["notes", "params", "find"]
CALLS: ["full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project", "current_user", "milestone_params", "new", "execute", "valid?", "project_milestone_path", "container_class", "namespace", "becomes", "form_errors", "label", "text_field", "label", "preview_markdown_path", "preview_markdown_path", "label", "text_field", "label", "text_field", "new_record?", "submit", "project_milestones_path", "submit", "project_milestone_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["params", "require", "permit"]
CALLS: ["params", "require", "permit"]
CALLS: ["project", "current_user", "merge_request_params", "new", "execute", "valid?", "merge_request_path", "redirect_to", "source_project", "target_project", "define_new_vars", "can_be_created", "params", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["target_project", "target_project", "repository", "branch_names", "target_project", "source_project", "commits", "prepare_commits_for_rendering", "diff_head_commit", "current_user", "id", "new", "execute", "set_pipeline_variables"]
CALLS: ["all_pipelines", "head_pipeline", "present?", "statuses", "relevant", "count"]
CALLS: ["current_user", "configure_params", "configure", "flash", "service", "edit_project_service_path", "flash", "new_project_mattermost_path"]
CALLS: ["new", "command", "create", "update", "message"]
CALLS: ["bitmaps_enabled?", "git", "bitmaps_enabled?", "git", "git", "inspect"]
CALLS: []
CALLS: ["housekeeping_bitmaps_enabled"]
CALLS: ["project", "full_name", "merge"]
CALLS: ["params", "require", "permit", "service_trigger_url", "asset_url", "merge"]
CALLS: ["gitlab", "url", "project_id", "to_param"]
CALLS: ["project", "user", "params", "new", "execute", "render_json"]
CALLS: ["label_params", "new", "execute", "valid?", "project_labels_path", "html", "json", "respond_to", "html", "errors", "messages", "json", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: []
CALLS: ["repo", "tags", "new", "to_hashes"]
CALLS: []
CALLS: ["params", "require", "permit"]
CALLS: ["params", "require", "permit"]
CALLS: ["params", "permit"]
CALLS: ["issue_params", "spammable_params", "merge", "params", "params", "merge", "project", "current_user", "new", "execute", "discussions_to_resolve", "count", "flash", "discussion_to_resolve_id", "recaptcha_check_with_fallback", "html", "attachment", "url", "to_js", "js", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["issue_params_with_info_from_discussions", "whitelisted_issue_params", "merge"]
CALLS: ["current_user", "project", "can?", "params", "slice", "params", "slice"]
CALLS: ["merge_request_to_resolve_discussions_of", "title_from_merge_request", "description_for_discussions"]
CALLS: ["discussions_to_resolve", "empty?", "merge_request_to_resolve_discussions_of", "to_reference", "discussions_to_resolve", "size", "pluralize", "merge_request_to_resolve_discussions_of", "to_reference", "items_for_discussions", "join"]
CALLS: ["discussions_to_resolve", "item_for_discussion", "map"]
CALLS: ["first_note_to_resolve", "first_note", "first_note", "build", "notes", "size", "author", "to_reference", "pluralize", "note", "new", "call", "lines", "map", "join", "join"]
CALLS: ["resolvable?", "notes", "find", "strong_memoize"]
CALLS: ["merge_request_to_resolve_discussions_of", "title"]
CALLS: ["move_between_lists?", "add_label_ids", "remove_label_ids", "issue_state", "merge!", "move_between_ids", "move_between_ids", "board", "group", "id"]
CALLS: ["params", "params", "params", "params"]
CALLS: ["moving_to_list", "movable?", "moving_from_list", "label_id", "board", "group_board?", "parent", "id", "on_group_boards", "pluck", "parent", "id", "on_project_boards", "pluck", "compact"]
CALLS: ["board", "lists", "params", "find_by"]
CALLS: ["board", "lists", "params", "find_by"]
CALLS: ["label?"]
CALLS: ["", "with_lists_and_board", "where"]
CALLS: ["", "joins", "movable", "merge"]
CALLS: ["", "list_types", "where"]
CALLS: ["", "with_lists_and_board", "where"]
CALLS: ["moving_to_list", "label_id", "compact"]
CALLS: ["moving_from_list", "closed?", "moving_to_list", "closed?"]
CALLS: ["moving_from_list", "present?", "moving_to_list", "present?", "moving_from_list", "moving_to_list"]
CALLS: ["params", "require", "issue_params_attributes", "permit"]
CALLS: []
CALLS: ["params", "require", "permit", "params", "params", "request", "merge"]
CALLS: ["import_url", "params", "save", "reload", "import_schedule", "project_import_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["errors", "empty?", "import?", "bare_repository_import?", "import_schedule", "errors", "full_messages", "join", "fail"]
CALLS: ["dup", "id", "id", "logger", "error", "errors", "add", "import?", "mark_import_as_failed"]
CALLS: ["errors", "dup", "sanitize", "import_fail", "update_column", "logger", "message", "error"]
CALLS: ["import_type"]
CALLS: ["external_import?", "forked?", "gitlab_project_import?", "bare_repository_import?"]
CALLS: ["hooks", "hook_params", "new", "save", "valid?", "hooks", "select", "flash", "errors", "full_messages", "join", "html_safe", "project_settings_integrations_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["params", "require", "triggers", "values", "permit"]
CALLS: ["params", "require", "triggers", "values", "permit"]
CALLS: ["params", "present?", "params", "find", "current_user", "can?", "render_404", "project", "current_user", "group_link_create_params", "new", "execute", "flash", "project", "project_project_members_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["params", "permit"]
CALLS: ["params", "find", "projects", "project", "path", "find_by", "forked_from_project", "project", "project", "current_user", "new", "execute", "saved?", "forked?", "import_in_progress?", "continue_params", "project_import_path", "continue_params", "continue_params", "continue_params", "project_path", "name", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["import_started?", "import_scheduled?"]
CALLS: ["import_status"]
CALLS: ["import_status", "import?"]
CALLS: ["params", "permit", "start_with?", "start_with?"]
CALLS: ["project", "environments", "environment_params", "create", "persisted?", "project", "project_environment_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["params", "require", "permit"]
CALLS: ["current_user", "create_params", "new", "execute", "valid?", "flash", "errors", "full_messages", "join", "html_safe", "redirect_to_repository_settings", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["params", "blank?", "params", "blank?", "flash", "params", "presence", "params", "presence", "project_compare_index_path", "params", "params", "project_compare_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project", "current_user", "create_params", "new", "execute", "persisted?", "project", "project_cluster_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project", "current_user", "create_params", "new", "token_in_session", "execute", "persisted?", "project", "project_cluster_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["session", "session_key_for_token"]
CALLS: ["project", "current_user", "new", "execute"]
CALLS: ["params", "yaml_processor_options", "validation_message", "blank?", "blank?", "yaml_processor_options", "new", "stages", "builds", "jobs", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project", "repository", "commit", "sha"]
CALLS: ["params", "strip_tags", "sanitize", "unescape", "project", "empty_repo?", "project", "deployment_platform", "present?", "project", "current_user", "new", "ref", "execute", "params", "current_user", "id", "new", "params", "find_by", "current_user", "new_issue_branch", "project", "url_to_autodeploy_setup", "view_context", "autodeploy_flash_notice", "project_tree_path", "params", "default_branch", "namespace_project_branches_path", "params", "icon", "project_branches_path", "repository", "ref_names", "to_json", "html_safe", "html", "project_tree_url", "json", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["url_helpers", "default_branch", "project_compare_url", "new", "create_note"]
CALLS: ["_", "sanitize", "truncate", "link_to_autodeploy_doc", "html_safe"]
CALLS: ["_", "help_page_path"]
CALLS: ["project_new_blob_path"]
CALLS: ["join", "project_blob_path", "project_new_blob_path", "create_commit", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["user_access", "branch_name_or_ref", "can_push_to_branch?", "current_user", "fork_of", "repository", "next_branch", "merge", "current_user", "new", "execute", "update_flash_notice", "final_success_path", "html", "json", "respond_to", "flash", "respond_to?", "call", "html", "json", "respond_to"]
CALLS: ["branch_names", "match", "to_i", "map", "compact", "max"]
CALLS: []
CALLS: ["create_merge_request?", "merge_request_exists?", "existing_merge_request_path", "new_merge_request_path", "respond_to?", "call"]
CALLS: ["params", "present?", "different_project?"]
CALLS: []
CALLS: ["current_user", "id", "new", "execute", "opened", "find_by", "strong_memoize"]
CALLS: ["project_merge_request_path"]
CALLS: ["id", "id", "project_new_merge_request_path"]
CALLS: ["flash", "create_merge_request?", "merge_request_exists?", "flash", "different_project?", "flash"]
CALLS: ["current_user", "new"]
CALLS: ["current_user", "params", "validate_and_consume_otp!", "current_user", "current_user", "new", "generate_otp_backup_codes!", "execute!", "build_qr_code", "setup_u2f_registration", "header_title", "profile_path"]
CALLS: ["execute", "new"]
CALLS: ["can_see_access_requests?", "source", "requesters"]
CALLS: ["source", "source", "class", "to_s", "underscore", "source", "allowed?"]
CALLS: ["new", "current_user", "u2f_registrations", "u2f_app_id", "new", "registration_requests", "map", "authentication_requests", "session", "map", "gon", "session", "u2f_app_id", "push"]
CALLS: ["request", "base_url"]
CALLS: ["current_user", "account_string", "issuer_host", "otp_provisioning_uri", "render_qrcode"]
CALLS: ["config", "gitlab", "host"]
CALLS: ["gitlab", "host"]
CALLS: ["issuer_host", "current_user", "email"]
CALLS: ["finder", "personal_access_token_params", "build", "save", "current_user", "id", "token", "redis_store!", "profile_personal_access_tokens_path", "set_index_vars", "header_title", "profile_path"]
CALLS: ["redis_shared_state_key", "set", "with"]
CALLS: ["params", "require", "permit"]
CALLS: ["password_automatically_set", "user_params", "valid_password?", "new_profile_password_path", "user_params", "user_params", "current_user", "merge", "new", "execute", "current_user", "new", "execute", "root_path", "header_title", "profile_path"]
CALLS: ["current_user", "key_params", "request", "remote_ip", "merge", "new", "execute", "persisted?", "profile_key_path", "current_user", "keys", "select", "header_title", "profile_path"]
CALLS: ["params", "require", "permit"]
CALLS: ["params", "require"]
CALLS: ["current_user", "gpg_key_params", "new", "execute", "persisted?", "profile_gpg_keys_path", "current_user", "gpg_keys", "select", "header_title", "profile_path"]
CALLS: ["params", "require", "permit"]
CALLS: ["current_user", "email_params", "current_user", "merge", "new", "execute", "errors", "blank?", "flash", "errors", "full_messages", "first", "profile_emails_url", "header_title", "profile_path"]
CALLS: ["params", "require", "permit"]
CALLS: ["current_user", "chat_names", "chat_name_params", "new", "save", "flash", "chat_name", "flash", "delete_chat_name_token", "profile_chat_names_path"]
CALLS: ["id"]
CALLS: ["chat_name_token", "get", "render_404"]
CALLS: ["new"]
CALLS: ["params", "render_404", "render_404", "params", "new"]
CALLS: ["chat_name_token", "delete"]
CALLS: ["current_user", "create_application_params", "new", "request", "execute", "persisted?", "flash", "t", "oauth_application_url", "set_index_vars", "header_title", "profile_path"]
CALLS: ["application_params", "current_user", "tap"]
CALLS: ["params", "require", "permit"]
CALLS: ["resource", "can_read?", "render_404", "current_user", "resource", "notification_settings_for", "notification_setting_params", "update_attributes", "render_response"]
CALLS: ["current_user", "sign_up_params", "new", "execute"]
CALLS: ["params", "require", "permit"]
CALLS: ["dup", "params", "require", "permit"]
CALLS: ["view_to_html_string"]
CALLS: ["class", "name", "downcase", "to_sym", "current_user", "can?"]
CALLS: ["params", "present?", "params", "find", "params", "present?", "params", "find"]
CALLS: ["client", "params", "repo", "session", "current_user", "namespace", "current_user", "new", "execute", "persisted?", "new", "represent", "errors", "full_messages"]
CALLS: ["file_is_valid?", "redirect_back_or_default", "current_user", "project_params", "new", "execute", "saved?", "project_path", "name", "redirect_to", "errors", "full_messages", "join", "redirect_back_or_default"]
CALLS: ["project_params", "project_params", "respond_to?"]
CALLS: ["root_path", "request", "referer", "present?"]
CALLS: ["client", "params", "to_i", "project", "client", "user", "find_or_create_namespace", "current_user", "can?", "current_user", "access_params", "new", "execute", "persisted?", "new", "represent", "errors", "full_messages"]
CALLS: ["session"]
CALLS: ["session", "access_token_key"]
CALLS: ["params", "presence", "current_user", "namespace", "current_user", "new", "execute", "errors", "any?", "current_user", "namespace", "error", "current_user", "namespace"]
CALLS: ["client", "params", "to_i", "repo", "params", "presence", "name", "params", "presence", "current_user", "namespace_path", "current_user", "namespace_path", "find_or_create_namespace", "current_user", "can?", "current_user", "access_params", "provider", "new", "extra_project_attrs", "execute", "persisted?", "new", "represent", "errors", "full_messages"]
CALLS: []
CALLS: ["client", "params", "repo", "session", "session", "session", "client", "user_map", "current_user", "namespace", "current_user", "new", "execute", "persisted?", "new", "represent", "errors", "full_messages"]
CALLS: ["client", "user_map", "session", "update", "sort"]
CALLS: ["client", "user_map", "session", "update"]
CALLS: ["credentials", "new", "params", "to_s", "gsub", "repo", "params", "presence", "name", "owner", "user", "username", "current_user", "username", "params", "presence", "current_user", "find_or_create_namespace", "current_user", "can?", "session", "connection", "token", "current_user", "credentials", "new", "execute", "persisted?", "new", "represent", "errors", "full_messages"]
CALLS: ["current_user", "group_params", "new", "execute", "persisted?", "chat_team", "present?", "name", "name", "dashboard_groups_path", "dashboard_groups_path", "form_errors", "label", "_", "_", "file_field", "_", "default_group_visibility", "default_group_visibility", "local_assigns", "fetch", "icon", "help_page_path", "label", "can_change_visibility_level", "form_model", "values", "form_model", "disallowed_visibility_level?", "restricted_visibility_levels", "include?", "form", "model_method", "form", "model_method", "selected_level", "radio_button", "visibility_level_icon", "visibility_level_label", "form_model", "visibility_level_description", "restricted_visibility_level_description", "form_model", "disallowed_visibility_level_description", "label", "each", "form_model", "render", "visibility_level_icon", "visibility_level_label", "form_model", "visibility_level_description", "config", "mattermost", "enabled", "custom_icon", "label", "check_box", "label", "mattermost", "host", "submit", "dashboard_groups_path", "name", "page_description", "description", "header_title", "group_title", "current_user"]
CALLS: ["respond_to?", "visibility_level_allowed?"]
CALLS: ["visibility_level", "visibility_level_allowed_as_fork?", "visibility_level_allowed_by_group?"]
CALLS: ["visibility_level", "group", "group", "visibility_level"]
CALLS: ["visibility_level", "forked?", "forked_project_link", "forked_from_project", "visibility_level"]
CALLS: ["visibility_level", "visibility_level_allowed_by_parent?", "visibility_level_allowed_by_projects?", "visibility_level_allowed_by_sub_groups?"]
CALLS: ["visibility_level", "children", "where", "exists?"]
CALLS: ["paginator", "params", "paginate"]
CALLS: ["visibility_level", "projects", "where", "exists?"]
CALLS: ["visibility_level", "parent_id", "parent_id", "nonzero?", "parent", "visibility_level"]
CALLS: ["current_user", "admin?", "restricted_visibility_levels"]
CALLS: ["visibility_levels", "key", "s_"]
CALLS: ["disallowed_project_visibility_level_description", "disallowed_group_visibility_level_description"]
CALLS: ["level_name", "downcase", "visibility_level_allowed_by_projects?", "visibility_level_allowed_by_sub_groups?", "visibility_level_allowed_by_parent?", "parent", "visibility_level_errors_for_group", "any?", "to_sentence", "html_safe"]
CALLS: ["name", "group_path", "edit_group_path", "visibility"]
CALLS: ["level_name", "downcase", "visibility_level_allowed_as_fork?", "visibility_level_allowed_by_group?", "group", "visibility_level_errors_for_group", "any?", "to_sentence", "html_safe"]
CALLS: ["level_name", "capitalize"]
CALLS: ["project_visibility_level_description", "group_visibility_level_description", "snippet_visibility_level_description"]
CALLS: ["is_a?"]
CALLS: []
CALLS: ["_", "_", "_"]
CALLS: ["params", "require", "group_params_attributes", "permit"]
CALLS: []
CALLS: ["params", "require", "group_params_ce", "permit"]
CALLS: []
CALLS: ["group", "current_user", "milestone_params", "new", "execute", "persisted?", "milestone_path", "form_errors", "label", "text_field", "label", "group_preview_markdown_path", "group_preview_markdown_path", "label", "text_field", "label", "text_field", "new_record?", "submit", "group_milestones_path", "submit", "group_milestone_path", "name", "page_description", "description", "header_title", "group_title", "current_user"]
CALLS: ["group_milestone?", "group", "group_milestone_path", "project_milestone?", "project", "project_milestone_path"]
CALLS: ["project_id", "present?"]
CALLS: []
CALLS: ["legacy_group_milestone?", "group", "safe_title", "title", "group_milestone_path", "group", "iid", "group_milestone_path"]
CALLS: []
CALLS: []
CALLS: ["label_params", "new", "group", "execute", "valid?", "group_labels_path", "html", "new", "represent_appearance", "json", "respond_to", "name", "page_description", "description", "header_title", "group_title", "current_user"]
CALLS: ["model", "params", "uploader_class", "new", "execute", "json", "json", "respond_to"]
CALLS: ["uploader", "const_get"]
CALLS: ["uploader", "const_get"]
CALLS: ["uploader", "const_get"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["note_params", "params", "params", "merge", "note_project", "current_user", "new", "execute", "is_a?", "current_user", "new", "execute", "note_json", "json", "redirect_back_or_default", "html", "respond_to"]
CALLS: ["params", "merge"]
CALLS: ["project", "params", "present?", "find", "project", "current_user", "can?", "access_denied!", "strong_memoize"]
CALLS: ["params", "require", "permit"]
CALLS: ["params", "permit", "current_user", "new", "membershipable", "execute", "members_page_url", "members_page_url"]
CALLS: ["membershipable", "membershipable", "polymorphic_url", "membershipable", "project_project_members_path", "membershipable"]
CALLS: ["board", "parent", "current_user", "list_params", "new", "board", "execute", "valid?", "serialize_as_json", "errors"]
CALLS: ["params", "require", "permit"]
CALLS: ["board_parent", "project", "current_user", "issue_params", "new", "execute", "valid?", "serialize_as_json", "errors"]
CALLS: ["current_user", "user_params", "merge", "new", "execute", "persisted?", "html", "json", "form_errors", "label", "text_field", "label", "text_field", "label", "text_field", "new_record?", "label", "label", "object", "force_random_password", "password_field", "label", "object", "force_random_password", "password_field", "label", "number_field", "label", "check_box", "label", "current_user", "radio_button", "radio_button", "label", "check_box", "label", "file_field", "label", "text_field", "label", "text_field", "label", "text_field", "label", "text_field", "new_record?", "submit", "admin_users_path", "submit", "admin_user_path", "html", "errors", "json", "respond_to", "admin_root_path"]
CALLS: ["params", "find", "current_user", "assign_to", "persisted?", "admin_runner_path", "admin_runner_path", "admin_root_path"]
CALLS: ["label_params", "new", "execute", "persisted?", "admin_labels_url", "admin_root_path"]
CALLS: ["finder", "impersonation_token_params", "build", "save", "admin_user_impersonation_tokens_path", "set_index_vars", "admin_root_path"]
CALLS: ["params", "require", "permit"]
CALLS: ["identity_params", "new", "user_id", "user", "id", "save", "admin_user_identities_path", "admin_root_path"]
CALLS: ["params", "require", "permit"]
CALLS: ["hook_params", "new", "save", "admin_hooks_path", "all", "admin_root_path"]
CALLS: ["group_params", "new", "name", "name", "path", "dup", "save", "current_user", "add_owner", "name", "default_group_visibility", "form_errors", "label", "_", "_", "file_field", "_", "visibility_level", "can_change_group_visibility_level?", "visibility_level", "local_assigns", "fetch", "icon", "help_page_path", "label", "can_change_visibility_level", "form_model", "values", "form_model", "disallowed_visibility_level?", "restricted_visibility_levels", "include?", "form", "model_method", "form", "model_method", "selected_level", "radio_button", "visibility_level_icon", "visibility_level_label", "form_model", "visibility_level_description", "restricted_visibility_level_description", "form_model", "disallowed_visibility_level_description", "label", "each", "form_model", "render", "visibility_level_icon", "visibility_level_label", "form_model", "visibility_level_description", "form", "form", "check_box", "label", "current_user", "admin?", "label", "lfs_enabled?", "check_box", "icon", "help_page_path", "label", "current_user", "label", "check_box", "icon", "help_page_path", "label", "text_field", "new_record?", "submit", "admin_groups_path", "submit", "admin_group_path", "admin_root_path"]
CALLS: ["add_user"]
CALLS: ["project", "add_user"]
CALLS: ["retrieve_member", "retrieve_access_level", "can_update_member?", "attributes", "created_by", "request?", "new", "execute", "save"]
CALLS: ["created_by_id", "created_by_id", "find_by"]
CALLS: ["owner?", "new_record?"]
CALLS: ["requested_at", "present?"]
CALLS: ["type", "underscore", "can?"]
CALLS: ["access_levels", "to_i", "fetch"]
CALLS: ["retrieve_user", "is_a?", "id", "members", "id", "build", "members_and_requesters", "id", "find_or_initialize_by", "members", "build"]
CALLS: ["is_a?", "find_by", "find_by"]
CALLS: ["add_user"]
CALLS: ["current_user", "can?"]
CALLS: ["current_user", "create_params", "merge", "new", "execute", "persisted?", "admin_deploy_keys_path", "local_assigns", "fetch", "local_assigns", "fetch", "deploy_keys_project_for", "form_errors", "label", "text_field", "new_record?", "label", "help_page_path", "text_area", "label", "text_field", "present?", "check_box", "label", "fields_for", "submit", "admin_deploy_keys_path", "admin_root_path"]
CALLS: ["broadcast_message_params", "new", "save", "admin_broadcast_messages_path", "admin_root_path"]
CALLS: ["params", "require", "permit"]
CALLS: ["current_user", "application_params", "new", "request", "execute", "persisted?", "flash", "t", "admin_application_url", "admin_root_path"]
CALLS: ["appearance_params", "new", "save", "admin_appearances_path", "admin_appearances_path", "form_errors", "label", "header_logo?", "header_logo_url", "persisted?", "header_logos_admin_appearances_path", "hidden_field", "file_field", "label", "text_field", "label", "text_area", "label", "logo?", "logo_url", "persisted?", "logo_admin_appearances_path", "hidden_field", "file_field", "label", "text_area", "submit", "persisted?", "preview_sign_in_admin_appearances_path", "new_project_path", "updated_at", "admin_root_path"]
CALLS: ["params", "require", "allowed_appearance_params", "permit"]
CALLS: []
CALLS: ["report_params", "new", "reporter", "current_user", "save", "notify", "user"]
CALLS: ["verification_enabled?", "domain", "domain", "info", "notification_service", "domain", "public_send"]
CALLS: ["pages_domain_verification_enabled?"]
CALLS: ["webhook", "new", "project_name", "pretext", "activity", "attachments", "ping"]
CALLS: ["project", "full_name", "gsub"]
CALLS: ["project", "full_name", "gsub"]
CALLS: ["user_combined_name", "action", "wiki_page_link", "project_link", "title", "user_avatar"]
CALLS: ["project_url", "project_name"]
CALLS: ["wiki_page_url"]
CALLS: ["project_name", "project_url"]
CALLS: ["project_name", "project_url"]
CALLS: ["project_name", "project_url"]
CALLS: ["project_name", "project_url", "link"]
CALLS: []
CALLS: ["project_name", "project_url", "link"]
CALLS: ["project_name", "project_url", "link"]
CALLS: ["user_full_name", "present?", "user_full_name", "user_name", "user_name"]
CALLS: ["user_avatar_without_link", "user_path", "link_to", "mail_to"]
CALLS: ["try", "merge", "user_avatar_url_for", "nil?", "push", "push", "placeholder_image", "tag"]
CALLS: ["new"]
CALLS: []
CALLS: ["avatar_icon_for_user", "avatar_icon_for_email"]
CALLS: ["avatar_url", "default_avatar", "gravatar_icon"]
CALLS: ["asset_path"]
CALLS: ["new", "execute", "default_avatar"]
CALLS: ["try", "find_by_any_email", "avatar_icon_for_user", "gravatar_icon"]
CALLS: ["params", "find_tag"]
CALLS: ["tags", "name", "find"]
CALLS: ["image", "params", "tag"]
CALLS: ["markdown", "description", "description_message"]
CALLS: ["format", "attachment_color"]
CALLS: []
CALLS: ["status"]
CALLS: []
CALLS: ["note", "format", "attachment_color"]
CALLS: ["issue_title", "issue_url", "description", "format"]
CALLS: ["issues_url", "to_s", "gsub"]
CALLS: ["project", "project_issue_url"]
CALLS: ["reference_prefix", "issue_iid", "title"]
CALLS: ["project", "project_issue_url"]
CALLS: ["new_branch?", "removed_branch?", "user_combined_name", "ref_type", "project_link", "compare_link", "user_avatar"]
CALLS: ["ref", "tag_ref?"]
CALLS: ["compare_url"]
CALLS: ["truncate_sha", "truncate_sha", "config", "gitlab", "url"]
CALLS: []
CALLS: []
CALLS: ["truncate_sha"]
CALLS: ["project_url", "before", "after"]
CALLS: ["after", "blank_ref?"]
CALLS: ["before", "blank_ref?"]
CALLS: ["new_branch?", "removed_branch?", "markdown", "commit_messages", "commit_message_attachments"]
CALLS: ["commit_messages", "format", "attachment_color"]
CALLS: ["commits", "compose_commit_message", "map", "join"]
CALLS: ["truncate_sha"]
CALLS: ["pipeline_link", "ref_type", "branch_link", "user_combined_name", "humanized_status", "project_link", "duration", "pretty_duration", "user_avatar"]
CALLS: []
CALLS: ["ref", "branch_url"]
CALLS: ["project_url", "ref"]
CALLS: ["project_url", "ref"]
CALLS: ["pipeline_id", "pipeline_url"]
CALLS: ["project_url", "pipeline_id"]
CALLS: ["project", "id", "project_pipeline_url"]
CALLS: ["ref", "branch_url"]
CALLS: ["status", "status"]
CALLS: ["duration", "hour", "at", "utc", "strftime"]
CALLS: ["calculate_duration"]
CALLS: ["started_at", "finished_at", "finished_at", "started_at", "started_at", "now", "started_at"]
CALLS: ["markdown", "message", "message", "format", "attachment_color"]
CALLS: []
CALLS: ["user_combined_name", "target", "note_url", "link", "project_link", "formatted_title", "user_avatar"]
CALLS: ["title", "format_title"]
CALLS: ["render_line"]
CALLS: ["lines", "first", "chomp", "markdown"]
CALLS: ["lines", "first", "chomp"]
CALLS: ["lines", "first", "chomp"]
CALLS: ["noteable", "is_a?", "noteable", "snippet_note_path", "project_note_path"]
CALLS: ["markdown", "note", "description_message"]
CALLS: ["state", "user_combined_name", "project_link", "merge_request_link", "user_avatar"]
CALLS: ["merge_request_title", "merge_request_url", "link"]
CALLS: ["project_url", "merge_request_iid"]
CALLS: ["reference_prefix", "merge_request_iid", "title"]
CALLS: ["project", "project_merge_request_url"]
CALLS: []
CALLS: ["state", "user_combined_name", "project_link", "issue_link", "user_avatar"]
CALLS: ["issue_title", "issue_url", "link"]
CALLS: ["opened_issue?", "markdown", "description", "description_message"]
CALLS: ["action"]
CALLS: []
CALLS: []
CALLS: ["markdown", "message", "message", "format"]
CALLS: ["project", "project", "full_name"]
CALLS: ["html", "load_events", "count", "pager_json", "json", "respond_to", "_", "container_class", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["render_to_string"]
CALLS: ["html", "load_events", "count", "pager_json", "json", "respond_to", "rss_url_options", "group_url", "name", "auto_discovery_link_tag", "rss_url_options", "group_path", "icon", "icon", "all", "_", "s_", "event_filter_visible", "push", "_", "s_", "event_filter_visible", "merged", "_", "s_", "event_filter_visible", "issue", "_", "s_", "comments_visible?", "comments", "_", "s_", "team", "_", "s_", "spinner", "name", "page_description", "description", "header_title", "group_title", "current_user"]
CALLS: ["icon"]
CALLS: ["event_filter_visible", "event_filter_visible", "event_filter_visible"]
CALLS: ["current_user", "feature_available?"]
CALLS: ["project", "project_feature", "access_level", "guest?", "admin?"]
CALLS: ["id", "max_member_access"]
CALLS: ["access_level", "get_permission"]
CALLS: ["project", "team", "member?", "full_private_access?"]
CALLS: ["html", "load_events", "count", "pager_json", "json", "respond_to", "rss_url_options", "dashboard_projects_url", "auto_discovery_link_tag", "activity_dashboard_path", "container_class", "params", "nil?", "active_when", "activity_dashboard_path", "params", "active_when", "activity_dashboard_path", "rss_url_options", "dashboard_projects_path", "icon", "icon", "all", "_", "s_", "event_filter_visible", "push", "_", "s_", "event_filter_visible", "merged", "_", "s_", "event_filter_visible", "issue", "_", "s_", "comments_visible?", "comments", "_", "s_", "team", "_", "s_", "spinner", "header_title", "root_path"]
CALLS: ["webhook", "new", "pretext", "attachments", "fallback", "ping"]
CALLS: ["message", "format"]
CALLS: []
CALLS: ["persisted?", "id", "notify", "deliver_later"]
CALLS: ["admins", "pluck", "mail"]
CALLS: ["deliverable?", "find", "admin_notification_email", "user", "name", "user", "username", "mail"]
CALLS: ["admin_notification_email", "present?"]
CALLS: ["params", "require", "permit"]
CALLS: ["state", "target_project", "current_user", "change_status"]
CALLS: ["dup", "gfm_reference", "new", "create_note"]
CALLS: ["class", "to_s", "underscore", "humanize", "downcase", "to_reference"]
CALLS: ["state", "project", "current_user", "change_status"]
CALLS: ["project", "current_user", "state", "change_status"]
CALLS: ["success", "delete_artifact!"]
CALLS: ["build", "reload", "build", "has_expiring_artifacts?", "build", "erase_artifacts!"]
CALLS: ["artifacts_expire_at", "present?", "artifacts_expire_at", "now"]
CALLS: ["remove_artifacts_file!", "remove_artifacts_metadata!", "save"]
CALLS: ["job_artifacts_metadata", "job_artifacts_metadata", "destroy", "remove_legacy_artifacts_metadata!"]
CALLS: ["job_artifacts_archive", "job_artifacts_archive", "destroy", "remove_legacy_artifacts_file!"]
CALLS: ["merge_requests_for_source_branch", "each"]
CALLS: ["merge_requests_for"]
CALLS: ["", "merge"]
CALLS: ["success", "merge"]
CALLS: ["success", "merge"]
CALLS: ["success", "merge"]
CALLS: []
CALLS: ["merge_when_pipeline_succeeds?", "merge_when_pipeline_succeeds", "merge_user", "merge_params", "merge_params", "delete", "merge_params", "delete", "save"]
CALLS: ["to_reference", "new", "create_note"]
CALLS: ["opened?"]
CALLS: ["", "where"]
CALLS: ["current_user", "can_cancel_merge_when_pipeline_succeeds?", "access_denied!", "current_user", "new", "cancel", "serialize_widget", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["can_be_merged_by?", "author"]
CALLS: ["project", "new", "target_branch", "can_update_branch?"]
CALLS: ["serializer", "represent"]
CALLS: ["current_user", "merge_request", "project", "new"]
CALLS: ["current_user", "issue", "project", "new"]
CALLS: []
CALLS: ["iwhere", "take"]
CALLS: ["postgresql?", "connection", "quote_table_name", "where", "each"]
CALLS: ["build", "group", "tap"]
CALLS: ["of_projects", "where", "blank?", "new"]
CALLS: ["", "where"]
CALLS: ["", "where"]
CALLS: ["", "where"]
CALLS: ["first", "discussion_class", "new"]
CALLS: ["base_string", "increment_counter!", "base_string"]
CALLS: []
CALLS: ["respond_to?", "call"]
CALLS: ["pipeline", "cancel_running", "project", "project_pipelines_path", "html", "json", "respond_to"]
CALLS: ["url_helpers", "project_pipelines_path"]
CALLS: ["cancelable_statuses", "block_given?", "cancel", "find_each", "retry_optimistic_lock"]
CALLS: ["project", "builds", "params", "find", "current_user", "present"]
CALLS: ["cancelable?", "respond_422", "cancel", "build_path"]
CALLS: ["build", "cancelable?", "request", "current_user", "build", "can?"]
CALLS: []
CALLS: ["cancelable_statuses", "any?"]
CALLS: ["active?"]
CALLS: ["project", "project_job_path"]
CALLS: ["url_helpers", "id", "project_build_path"]
CALLS: []
CALLS: ["build_from_id", "build_from_ref", "current_user", "present"]
CALLS: ["project", "latest_successful_builds_for", "params", "find_by"]
CALLS: ["params", "project", "builds", "params", "find_by"]
CALLS: ["snippet", "file_name"]
CALLS: []
CALLS: ["class", "application_name"]
CALLS: ["to_s", "demodulize", "underscore"]
CALLS: ["params", "find_routable!"]
CALLS: ["current_user"]
CALLS: ["current_user"]
CALLS: ["params", "find", "new", "represent"]
CALLS: ["params", "find_by!"]
CALLS: ["params", "find_by!"]
CALLS: ["params", "find_by!"]
CALLS: ["params", "find_by!"]
CALLS: ["render_to_string"]
CALLS: []
CALLS: ["path"]
CALLS: ["binary?", "encode"]
CALLS: ["exists?", "raw_repository", "size"]
CALLS: ["real_size", "presence", "raw_diffs", "size"]
CALLS: []
CALLS: ["entry", "metadata"]
CALLS: ["build", "params", "artifacts_metadata_entry", "exists?", "render_404"]
CALLS: ["artifacts_metadata", "options", "new", "to_entry", "use_file"]
CALLS: ["unsafe_use_file", "with_exclusive_lease"]
CALLS: ["file_storage?", "path", "cache_stored_file!", "cache_path", "cache_path", "rm_f", "cache_storage", "cache_path", "delete_dir!"]
CALLS: ["exclusive_lease_key", "hour", "to_i", "new", "try_obtain", "exclusive_lease_key", "cancel"]
CALLS: ["model", "class", "model", "id"]
CALLS: ["job_artifacts_metadata", "file", "legacy_artifacts_metadata"]
CALLS: ["params", "to_i"]
CALLS: ["order", "class", "to_s", "where"]
CALLS: ["store_dir", "filename", "to_s", "join"]
CALLS: ["store_dirs", "object_store"]
CALLS: ["base_dir", "dynamic_segment", "join", "class", "model", "model_path_segment", "dynamic_segment", "join"]
CALLS: ["base_dir", "dynamic_segment", "join", "dynamic_segment", "join"]
CALLS: ["base_dir", "dynamic_segment", "join", "class", "model", "model_path_segment", "dynamic_segment", "join"]
CALLS: ["base_dir", "dynamic_segment", "join", "base_dir", "dynamic_segment", "join"]
CALLS: ["store_dirs", "object_store"]
CALLS: ["store_dirs", "object_store"]
CALLS: ["dynamic_segment"]
CALLS: ["dynamic_segment"]
CALLS: ["dynamic_segment"]
CALLS: ["file", "present?"]
CALLS: ["store", "object_store", "tap"]
CALLS: ["store", "object_store", "tap"]
CALLS: ["file", "present?"]
CALLS: ["secret", "secret", "tap"]
CALLS: ["file_storage?", "dynamic_segment", "identifier", "join", "store_dir", "identifier", "join"]
CALLS: ["path", "basename"]
CALLS: ["path", "basename"]
CALLS: ["filename"]
CALLS: ["path", "basename"]
CALLS: ["model", "avatar", "file", "model", "avatar", "file", "present?"]
CALLS: ["full_path", "raw_repository", "exists?"]
CALLS: ["execute", "model"]
CALLS: ["project", "job", "params", "file_project_job_artifacts_path"]
CALLS: ["blob", "conditionally_expand_blob", "build", "external_link?", "build", "external_url", "name", "id", "browse_project_job_artifacts_path", "truncate", "file_project_job_artifacts_path", "browse_project_job_artifacts_path", "path_breadcrumbs", "blob", "mode", "name", "name", "path", "copy_file_path_button", "raw_size", "number_to_human_size", "stored_externally?", "external_storage", "copy_blob_source_button", "open_raw_blob_button", "simple_viewer", "rich_viewer", "params", "html", "render_blob_json", "json", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: []
CALLS: ["entry", "metadata"]
CALLS: ["rich_viewer_class", "new"]
CALLS: ["viewer_class_from"]
CALLS: ["empty?", "external_storage_error?", "stored_externally?", "can_render?", "find"]
CALLS: ["old_blob", "can_render_blob?", "new_blob", "can_render_blob?"]
CALLS: ["nil?", "binary?", "binary?", "extensions", "extension", "include?", "file_types", "file_type", "include?"]
CALLS: ["path", "basename", "path", "type_of", "type_of"]
CALLS: ["binary?", "binary?", "extensions", "extension", "include?", "file_types", "file_type", "include?"]
CALLS: ["simple_viewer_class", "new"]
CALLS: ["empty?", "raw_binary?"]
CALLS: ["stored_externally?", "rich_viewer", "rich_viewer", "binary?", "name", "find_by_extension", "any?", "_mime_type", "_mime_type", "binary?", "binary?"]
CALLS: ["present?", "split", "count", "count", "first", "join", "empty?", "join", "empty?", "count", "last", "include?", "each"]
CALLS: ["empty?", "raw_binary?", "stored_externally?", "sprite_icon", "icon", "blob_raw_path"]
CALLS: ["blob_raw_url"]
CALLS: ["path", "raw_project_job_artifacts_url", "project_id", "raw_project_snippet_url", "raw_snippet_url", "project_raw_url"]
CALLS: ["rendered_as_text?", "id", "clipboard_button"]
CALLS: ["simple_viewer", "is_a?", "simple_viewer", "render_error", "nil?"]
CALLS: []
CALLS: ["diff_file", "stored_externally?"]
CALLS: ["too_large?"]
CALLS: ["diff_file", "too_large?", "size_limit", "diff_file", "raw_size", "size_limit"]
CALLS: ["size_limit", "blob", "raw_size", "size_limit"]
CALLS: []
CALLS: ["blob", "stored_externally?"]
CALLS: ["project", "has_external_wiki?", "project", "wiki_enabled?", "project", "wiki", "has_home_page?"]
CALLS: ["find_page"]
CALLS: ["page_title_and_dir", "wiki", "page", "new"]
CALLS: ["license"]
CALLS: ["license_key", "license_key", "new"]
CALLS: ["exists?", "raw_repository", "license_short_name"]
CALLS: ["repository", "license", "nickname", "name"]
CALLS: ["project", "repository", "license"]
CALLS: ["project", "repository", "tag_count"]
CALLS: ["too_large?", "collapsed?"]
CALLS: ["active?"]
CALLS: ["resolved?"]
CALLS: ["resolvable?", "resolved_at", "present?"]
CALLS: ["resolvable?", "notes", "none?", "strong_memoize"]
CALLS: ["diff_file", "collapsed?", "diff_file", "expanded?", "collapse_limit", "diff_file", "raw_size", "collapse_limit"]
CALLS: ["collapsed?"]
CALLS: []
CALLS: ["blob", "expanded?", "collapse_limit", "blob", "raw_size", "collapse_limit"]
CALLS: ["errors", "full_messages", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["errors", "full_messages"]
CALLS: ["clipboard_button"]
CALLS: ["params", "expand!"]
CALLS: []
CALLS: ["blob_json", "render_404"]
CALLS: ["params", "rich_viewer", "auxiliary_viewer", "simple_viewer", "view_to_html_string"]
CALLS: ["auxiliary_viewer_class", "new"]
CALLS: ["viewer_class_from"]
CALLS: ["find_model", "strong_memoize"]
CALLS: ["params", "upload_model_class", "params", "find"]
CALLS: ["params", "raise"]
CALLS: []
CALLS: []
CALLS: ["params", "params", "find_by_full_path"]
CALLS: ["params", "find_by_full_path"]
CALLS: []
CALLS: ["schedule_background_upload?", "class", "name", "model", "class", "name", "mounted_as", "model", "id", "perform_async"]
CALLS: ["class", "object_store_enabled?", "class", "background_upload_enabled?", "file_storage?"]
CALLS: ["object_store_options", "background_upload"]
CALLS: ["any?", "send", "schedule_background_upload", "each", "run_after_commit"]
CALLS: ["any?", "send", "schedule_background_upload", "each", "run_after_commit"]
CALLS: ["schedule_background_upload?", "upload", "class", "name", "upload", "class", "to_s", "mounted_as", "upload", "id", "perform_async"]
CALLS: ["model", "secret", "new"]
CALLS: ["model", "update_field", "read_attribute", "temp_file_uploader", "markdown_link", "uploader", "markdown_link", "gsub", "model", "update_field", "update_attribute", "revert"]
CALLS: ["logger", "model", "warn", "file_path", "temp_file_path", "move"]
CALLS: ["uploader", "file_name", "retrieve_from_store!", "uploader", "file", "path"]
CALLS: ["store_dirs", "join", "map", "model", "current_upload_satisfies?", "upload", "uploads", "model", "find_by"]
CALLS: ["upload", "upload", "path", "include?", "upload", "model_id", "id", "upload", "model_type", "class", "base_class", "sti_name"]
CALLS: []
CALLS: ["upload", "upload", "path", "include?", "upload", "model_id", "id", "upload", "model_type", "class", "base_class", "sti_name"]
CALLS: ["store_dirs", "join", "map", "model", "current_upload_satisfies?", "upload", "uploads", "model", "find_by"]
CALLS: ["temp_file_uploader", "file_name", "retrieve_from_store!", "temp_file_uploader", "file", "path"]
CALLS: ["secret", "new"]
CALLS: ["project", "raw_repository", "raw", "repository", "raw_repository", "revert", "with_cache_hooks"]
CALLS: ["assign_change_commit_vars", "blank?", "render_404", "create_new_branch?", "revert_branch_name", "current_user", "change_type_title", "successful_change_path", "failed_change_path", "create_commit", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["merged_merge_request?"]
CALLS: ["merged_merge_request"]
CALLS: ["merged_merge_request_no_cache", "new"]
CALLS: ["merge_commit?", "project", "id", "new", "id", "find_by"]
CALLS: ["parents", "size"]
CALLS: ["parent_ids", "values_at", "compact"]
CALLS: ["parent_ids", "project", "lazy", "map"]
CALLS: ["short_id"]
CALLS: ["params"]
CALLS: ["referenced_merge_request_url", "params", "project_commit_url"]
CALLS: ["current_user", "merged_merge_request", "target_project", "project_merge_request_url"]
CALLS: ["referenced_merge_request_url", "project_commits_url"]
CALLS: ["params", "present?", "current_user", "can?"]
CALLS: ["file_path", "dirname", "mkdir_p", "temp_file_path", "file_path", "move"]
CALLS: ["params", "require", "params", "to_i", "params", "find", "issue", "current_user", "can_move?", "render_404", "project", "current_user", "new", "issue", "execute", "render_issue_json", "json", "respond_to", "render_conflict_response"]
CALLS: ["can?", "moved?", "persisted?", "project", "can?"]
CALLS: ["moved_to", "nil?"]
CALLS: []
CALLS: ["valid?", "serializer", "represent", "errors", "full_messages", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["html", "issuable", "human_class_name", "json", "respond_to"]
CALLS: ["base_class_name", "titleize", "downcase"]
CALLS: ["uploader_mounted?", "model", "upload_mount", "public_send", "build_uploader_from_upload", "build_uploader_from_params", "strong_memoize"]
CALLS: ["build_uploader", "params", "retrieve_from_store!"]
CALLS: ["uploader_class", "model", "new", "upload", "identifier", "retrieve_from_store!", "tap"]
CALLS: ["uploader_class", "model", "new", "upload", "identifier", "retrieve_from_store!", "tap"]
CALLS: ["build_uploader", "send"]
CALLS: ["uploader_class", "model", "mount_point", "new", "upload", "identifier", "retrieve_from_store!", "tap"]
CALLS: ["to_sym"]
CALLS: ["params", "params", "uploader_class", "model", "params", "new", "model_valid?"]
CALLS: []
CALLS: ["model"]
CALLS: ["build_uploader", "params", "upload_paths", "uploader_class", "to_s", "find_by", "build_uploader"]
CALLS: ["secret", "join", "base_dir", "secret", "join"]
CALLS: ["upload_model_class", "upload_mount", "nil?"]
CALLS: ["params", "include?"]
CALLS: ["update", "execute_hooks"]
CALLS: ["delete", "execute_hooks"]
CALLS: ["current_user", "new", "new", "create", "execute_hooks"]
CALLS: ["current_user", "build", "execute_hooks", "execute_services"]
CALLS: ["services", "public_send", "async_execute", "each", "run_after_commit_or_now"]
CALLS: ["hook", "id", "data", "hook_name", "perform_async"]
CALLS: ["hooks", "params", "find"]
CALLS: ["hooks", "params", "find"]
CALLS: ["params", "find"]
CALLS: ["params", "find"]
CALLS: ["project", "update_attribute", "project", "id", "current_user", "id", "params", "perform_async", "logger", "current_user", "id", "project", "full_path", "info"]
CALLS: ["group", "id", "current_user", "id", "perform_async", "logger", "current_user", "id", "group", "id", "info"]
CALLS: ["project", "id", "current_user", "id", "perform_async"]
CALLS: ["supported_events", "include?", "id", "perform_async"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["new", "async_execute"]
CALLS: ["now", "parsed_url", "userinfo", "blank?", "hook", "url", "make_request", "make_request_with_auth", "hook_name", "hook", "url", "data", "now", "log_execution", "code", "to_s", "hook_name", "hook", "url", "data", "new", "now", "to_s", "log_execution", "logger", "error", "to_s"]
CALLS: ["hook", "is_a?", "hook", "hook_name", "build_headers", "format_response_headers", "safe_response_body", "code", "create"]
CALLS: ["body", "body", "encode"]
CALLS: ["note", "present?", "note", "note", "target", "title"]
CALLS: ["headers", "each_capitalized", "to_h"]
CALLS: ["singularize", "titleize", "hook", "token", "present?", "hook", "token", "remove_line_breaks", "tap"]
CALLS: ["hook", "url", "parsed_url", "userinfo", "gsub", "parsed_url", "user", "unescape", "parsed_url", "password", "unescape", "make_request"]
CALLS: ["data", "to_json", "hook_name", "build_headers", "hook", "enable_ssl_verification", "request_options", "post"]
CALLS: ["hook", "url", "parse"]
CALLS: ["path"]
CALLS: ["cycle_analytics", "events", "render_events"]
CALLS: ["domain", "verification_code", "present?", "domain", "domain", "error", "verification_enabled?", "dns_record_present?", "verify_domain!", "expired?", "disable_domain!", "unverify_domain!"]
CALLS: ["timeouts", "domain", "domain", "check", "domain", "verification_domain", "check", "open"]
CALLS: ["file_storage?", "path", "path", "open", "url", "url", "cached_size", "new"]
CALLS: ["model", "size", "present?", "model", "file_changed?", "model", "size", "size"]
CALLS: ["domain", "present?", "domain"]
CALLS: ["domain", "assign_attributes", "domain", "save!", "notify", "domain", "domain", "error"]
CALLS: ["domain", "verified?", "domain", "assign_attributes", "domain", "save!", "notify", "domain", "domain", "error"]
CALLS: ["verified_at"]
CALLS: ["emails_with_verified_status", "values", "any?"]
CALLS: ["domain", "enabled?", "domain", "unverified?", "domain", "enabled_until", "from_now", "compact", "max", "domain", "now", "assign_attributes", "domain", "save!", "notify", "notify", "success"]
CALLS: ["verified?"]
CALLS: ["validate", "error", "project", "repository", "branch_exists?", "error", "success", "message", "error"]
CALLS: ["token", "expired?", "token", "revoked?", "include_any_scope?"]
CALLS: ["blank?", "token", "scopes", "map", "is_a?", "new", "request", "sufficient?", "any?"]
CALLS: ["user_synced_attributes_metadata", "params", "user_synced_attributes_metadata", "read_only_attributes", "except!", "params", "any?", "params", "assign_attributes"]
CALLS: ["sync_profile_from_provider?", "synced?", "select"]
CALLS: ["block_given?", "persisted?", "assign_attributes", "save", "notify_success", "errors", "full_messages", "uniq", "join", "error"]
CALLS: ["notify_new_user", "success"]
CALLS: ["name", "email", "log_info", "notification_service", "new_user", "system_hook_service", "execute_hooks_for"]
CALLS: ["notifiable?", "identities", "any?", "mailer", "id", "new_user_email", "deliver_later"]
CALLS: ["find", "user_url", "notification_email", "subject", "mail"]
CALLS: ["logger", "project", "name", "project", "id", "info"]
CALLS: ["user", "id", "new", "try_obtain", "sleep", "execute_without_lease", "cancel"]
CALLS: ["current_authorizations_per_project", "fresh_access_levels_per_project", "access_level", "project_id", "each_with_object", "access_level", "user", "id", "each_with_object", "update_authorizations"]
CALLS: ["current_authorizations", "index_by"]
CALLS: ["user", "project_authorizations", "select"]
CALLS: ["fresh_authorizations", "project_id", "access_level", "each_with_object"]
CALLS: ["supports_nested_groups?", "user", "new", "calculate"]
CALLS: ["empty?", "empty?", "transaction_begin", "empty?", "user", "remove_project_authorizations", "empty?", "insert_authorizations", "transaction_end", "transaction", "user", "reload"]
CALLS: ["project_authorizations", "where", "delete_all"]
CALLS: ["connection", "quote", "map", "map", "connection", "')}\n      EOF", "execute", "each_slice"]
CALLS: ["user", "block_transition", "user", "transaction_begin", "user", "block", "migrate_records_in_transaction", "rollback", "user", "save!", "transaction_end", "transaction", "user", "reload"]
CALLS: ["user", "transaction_begin", "ghost", "migrate_records", "transaction_end", "transaction"]
CALLS: ["migrate_issues", "migrate_merge_requests", "migrate_notes", "migrate_abuse_reports", "migrate_award_emojis"]
CALLS: ["user", "award_emoji", "ghost_user", "id", "update_all"]
CALLS: ["user", "reported_abuse_reports", "ghost_user", "id", "update_all"]
CALLS: ["user", "notes", "ghost_user", "id", "update_all"]
CALLS: ["user", "merge_requests", "ghost_user", "id", "update_all", "user", "id", "where", "ghost_user", "id", "update_all"]
CALLS: ["user", "issues", "ghost_user", "id", "update_all", "user", "id", "where", "ghost_user", "id", "update_all"]
CALLS: ["block", "update_user", "redirect_back_or_admin_user", "redirect_back_or_admin_user", "admin_root_path"]
CALLS: ["current_user", "user", "new", "execute"]
CALLS: ["default_route", "redirect_back_or_default"]
CALLS: []
CALLS: ["fetch", "current_user", "allowed?", "current_user", "solo_owned_groups", "present?", "errors", "members", "run_callbacks", "find_each", "solo_owned_groups", "current_user", "new", "execute", "each", "namespace", "prepare_for_destroy", "personal_projects", "current_user", "legacy_storage?", "new", "execute", "each", "block_given?", "new", "execute", "destroy", "destroy"]
CALLS: ["active_external_issue_tracker?", "where", "update_all", "active_external_wiki?", "where", "update_all"]
CALLS: ["type"]
CALLS: ["issue_tracker?", "default"]
CALLS: ["category"]
CALLS: ["read_attribute", "to_sym"]
CALLS: ["owned_groups", "owners", "select"]
CALLS: ["group", "group", "owners", "project", "owner"]
CALLS: ["", "active", "where"]
CALLS: ["storage_version", "include?"]
CALLS: ["old_repository_storage_paths"]
CALLS: ["repository_storage_paths"]
CALLS: ["all_projects", "select", "to_a", "map", "unscoped"]
CALLS: ["full_path", "inside_path"]
CALLS: ["personal_projects", "visible_to_user", "personal_projects", "public_to_user"]
CALLS: ["contributed_projects", "visible_to_user", "contributed_projects", "public_to_user"]
CALLS: ["select", "contributions", "where", "now", "year", "where", "uniq", "reorder", "where"]
CALLS: ["where"]
CALLS: ["user", "new", "current_user", "execute"]
CALLS: ["current_user", "params", "new", "execute", "recently_sent_password_reset?", "generate_reset_token", "save", "notify_new_user"]
CALLS: ["reset_password_sent_at", "present?", "reset_password_sent_at", "minute", "ago"]
CALLS: ["token_generator", "class", "generate", "reset_password_token", "reset_password_sent_at", "now", "utc"]
CALLS: ["subject", "transaction_begin", "lookup", "create_record", "maximum_iid", "increment_and_save!", "transaction_end", "transaction"]
CALLS: ["init", "subject", "call"]
CALLS: ["subject", "transaction_begin", "scope", "usage_value", "maximum_iid", "create!", "transaction_end", "transaction", "lookup"]
CALLS: ["usages", "usage", "to_s"]
CALLS: ["scope", "usage_value", "find_by"]
CALLS: ["lock!", "last_value", "last_value", "max", "save!", "last_value"]
CALLS: ["generate", "params", "project_issues_path", "params", "project_merge_requests_path", "project_labels_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["board_parent", "current_user", "new", "board", "execute", "board", "lists", "movable", "serialize_as_json"]
CALLS: ["can_create_user?", "build_user_params", "new", "current_user", "admin?", "params", "generate_reset_token", "friendly_token", "password_length", "min", "first", "password", "password_confirmation", "params", "slice", "any?", "identities", "build"]
CALLS: ["current_user", "admin?", "params", "admin_create_params", "slice", "current_user", "id", "params", "merge!", "signup_params", "params", "slice", "nil?", "skip_user_confirmation_email_from_setting"]
CALLS: ["send_user_confirmation_email"]
CALLS: []
CALLS: []
CALLS: ["current_user", "nil?", "allow_signup?", "current_user", "admin?"]
CALLS: ["is_a?", "record_activity"]
CALLS: ["read_write?", "id", "record", "logger", "id", "username", "debug"]
CALLS: ["reply_key", "is_a?", "id", "id", "project", "class", "name", "reverse_merge!", "create"]
CALLS: ["map", "bulk_perform_and_wait", "bulk_perform_async"]
CALLS: ["size", "bulk_perform_inline", "size", "new", "key", "map", "bulk_perform_async", "wait"]
CALLS: ["new", "perform", "each", "present?", "bulk_perform_async"]
CALLS: ["find", "with_indifferent_access", "new", "execute"]
CALLS: ["find_by_id", "provider", "gcp?", "new", "execute", "try", "try"]
CALLS: ["find", "calculate_checksum!", "save!", "logger", "error"]
CALLS: ["checksum", "checksummable?", "checksum", "class", "absolute_path", "hexdigest"]
CALLS: ["checksum", "nil?", "local?", "exist?"]
CALLS: ["store", "nil?", "store"]
CALLS: ["absolute_path", "exist?"]
CALLS: ["store", "nil?", "store"]
CALLS: ["absolute_path", "exist?"]
CALLS: ["store", "nil?", "store"]
CALLS: ["absolute_path", "exist?"]
CALLS: ["local?", "relative_path?", "path", "uploader_class", "absolute_path"]
CALLS: ["path", "start_with?"]
CALLS: ["path", "start_with?"]
CALLS: ["path", "start_with?"]
CALLS: ["checksum", "nil?", "local?", "exist?"]
CALLS: ["local?", "relative_path?", "path", "uploader_class", "absolute_path"]
CALLS: ["root", "path", "join"]
CALLS: ["class", "absolute_path"]
CALLS: ["checksum", "nil?", "local?", "exist?"]
CALLS: ["local?", "relative_path?", "path", "uploader_class", "absolute_path"]
CALLS: ["checksum", "checksummable?", "checksum", "class", "absolute_path", "hexdigest"]
CALLS: ["checksum", "checksummable?", "checksum", "absolute_path", "file", "hexdigest"]
CALLS: ["cast_data", "keys", "length", "where", "to_a", "flatten", "update_all", "new", "delete"]
CALLS: ["to_i", "to_i", "at", "to_s", "each_with_object"]
CALLS: ["find_by", "find_by", "new", "execute", "measure", "real", "join", "real", "logger", "info"]
CALLS: ["find", "source_project", "source_branch", "where", "last", "latest?", "diff_head_sha", "sha", "log_error_message_for", "id", "update_attribute"]
CALLS: ["logger", "id", "source_branch", "diff_head_sha", "error"]
CALLS: ["sha", "latest_sha"]
CALLS: ["project", "build", "ref", "commit", "try", "to_s", "project", "cleanup"]
CALLS: ["cleanup"]
CALLS: ["cleanup"]
CALLS: ["historical?"]
CALLS: ["historical?", "last_version", "sha", "version", "sha"]
CALLS: ["id", "merge_request", "latest_merge_request_diff_id"]
CALLS: ["ref", "commit", "present?", "project", "ref", "commit", "commit"]
CALLS: ["retried?"]
CALLS: ["logger", "info", "refresh!"]
CALLS: ["transaction_begin", "delete_all", "connection", "months", "ago", "quote", "connection", "T};\n      EOF", "execute", "transaction_end", "transaction"]
CALLS: ["blank?", "include?", "public_send", "each", "save!"]
CALLS: ["new", "execute_hooks"]
CALLS: ["stuck_merge_requests", "map", "completed_jids", "any?", "merge_jid", "include?", "select", "map", "apply_current_state!", "find_in_batches"]
CALLS: ["select", "with_state", "where", "not", "reorder"]
CALLS: ["where", "where", "not", "update_all", "where", "each", "logger", "join", "info"]
CALLS: ["mark_projects_without_jid_as_failed!", "mark_projects_with_jid_as_failed!", "add_event"]
CALLS: ["enqueued_projects_with_jid", "pluck", "to_h", "keys", "completed_jids", "any?", "values_at", "enqueued_projects_with_jid", "where", "logger", "map", "join", "info", "error_message", "mark_import_as_failed", "each", "count"]
CALLS: []
CALLS: ["enqueued_projects", "where", "not"]
CALLS: ["with_import_status"]
CALLS: ["enqueued_projects_without_jid", "error_message", "mark_import_as_failed", "each", "count"]
CALLS: ["enqueued_projects", "where"]
CALLS: ["try_obtain_lease", "logger", "class", "info", "remove_lease"]
CALLS: ["cancel"]
CALLS: ["minutes", "new", "try_obtain"]
CALLS: ["hours", "new", "try_obtain"]
CALLS: ["new", "try_obtain"]
CALLS: ["new", "try_obtain"]
CALLS: ["lease_key", "new", "try_obtain", "measure"]
CALLS: []
CALLS: ["id"]
CALLS: ["app", "id", "new", "try_obtain"]
CALLS: ["build_relation", "with_route", "logger", "full_path", "id", "info", "migrate_to_hashed_storage!", "logger", "message", "full_path", "id", "backtrace", "error", "find_each"]
CALLS: ["arel_table", "gteq", "where", "lteq", "where"]
CALLS: ["hashed_storage?", "update!", "repo_reference_count", "wiki_reference_count", "id", "perform_in", "id", "perform_async"]
CALLS: ["reference_counter", "value"]
CALLS: ["gl_repository", "new"]
CALLS: ["reference_counter", "value"]
CALLS: ["find_by", "update_status", "try"]
CALLS: ["statuses", "latest", "status", "enqueue", "run", "succeed", "drop", "cancel", "block", "skip", "skip", "retry_optimistic_lock"]
CALLS: ["search"]
CALLS: ["popen"]
CALLS: ["two_factor_grace_period_expired?", "new_profile_two_factor_auth_path", "session", "current_user", "otp_grace_period_started_at", "two_factor_grace_period", "hours", "root_path", "header_title", "profile_path"]
CALLS: ["current_user", "otp_grace_period_started_at", "two_factor_grace_period", "hours", "current"]
CALLS: ["latest_builds_status", "enqueue", "run", "succeed", "drop", "cancel", "skip", "block", "retry_optimistic_lock"]
CALLS: ["yaml_errors", "blank?", "statuses", "latest", "status"]
CALLS: ["new", "perform_async", "each_slice"]
CALLS: ["find_by", "find_by", "run_pipeline_schedule"]
CALLS: ["project", "ref", "new", "execute"]
CALLS: ["remove_all_profiles"]
CALLS: ["find", "start_import", "import_url", "full_path", "add_event", "creator", "new", "execute", "async?", "gitlab_project_import?", "fail_import", "after_import"]
CALLS: ["mark_import_as_failed"]
CALLS: ["start", "logger", "full_path", "import_status", "info"]
CALLS: ["import_started?", "import_jid", "jid", "import_start"]
CALLS: ["has_importer?", "importer_class", "try"]
CALLS: ["expire_content_cache"]
CALLS: ["repository", "after_import", "import_finish", "remove_import_jid", "update_project_counter_caches", "after_create_default_branch", "refresh_markdown_cache!"]
CALLS: ["import_jid", "import_jid", "unset", "update_column"]
CALLS: ["default_branch", "default_branch", "change_head", "default_branch_protection", "default_branch", "protected?", "default_branch", "default_branch_protection", "default_branch_protection", "creator", "new", "execute"]
CALLS: ["repository", "branch_exists?", "repository", "before_change_head", "repository", "raw_repository", "write_ref", "repository", "copy_gitattributes", "repository", "after_change_head", "reload_default_branch", "errors", "add"]
CALLS: ["root_ref", "raw_repository", "copy_gitattributes"]
CALLS: ["keys", "expire_method_caches"]
CALLS: ["expire_branch_cache", "expire_root_ref_cache", "repository_event"]
CALLS: ["root_ref", "branches", "cache", "name", "expire", "cache", "name", "expire", "each", "cache", "expire", "cache", "expire"]
CALLS: ["cache", "delete"]
CALLS: ["default_branch"]
CALLS: ["refresh_markdown_cache", "persisted?", "read_write?", "update_columns"]
CALLS: ["shift", "find", "empty?", "forked_from_project", "mark_import_as_failed", "repository_storage", "disk_path", "fork_repository", "logger", "id", "info", "config", "repositories", "storages", "legacy_disk_path", "find", "first", "raise", "fork_repository"]
CALLS: ["start_fork", "disk_path", "add_event", "gitlab_shell", "repository_storage", "disk_path", "fork_repository", "id", "disk_path", "after_import"]
CALLS: ["start", "logger", "full_path", "import_status", "info"]
CALLS: ["find", "check", "now", "update_columns"]
CALLS: ["select", "map", "where", "update_all", "find_in_batches"]
CALLS: ["now", "project_ids", "now", "current_settings", "repository_checks_enabled", "try_obtain_lease", "new", "perform", "each"]
CALLS: ["env", "test?", "fake_application_settings", "current"]
CALLS: ["new", "execute"]
CALLS: ["destroy_unreferenced"]
CALLS: ["table_name", "joins", "where", "destroy_all"]
CALLS: ["collection", "clear"]
CALLS: ["new", "current_user", "mark_todos_as_done", "dashboard_todos_path", "html", "js", "todos_counts", "merge", "json", "respond_to", "header_title", "root_path"]
CALLS: ["update_todos_state"]
CALLS: ["where", "not", "pluck", "unscope", "update_all", "update_todos_count_cache"]
CALLS: ["current_user", "todos_pending_count", "number_with_delimiter", "current_user", "todos_done_count", "number_with_delimiter"]
CALLS: ["now", "destroy_all"]
CALLS: ["expired", "new", "execute", "logger", "id", "error", "find_each"]
CALLS: ["", "current", "where"]
CALLS: ["expired", "destroy_all"]
CALLS: ["find", "find", "source_project", "new", "execute"]
CALLS: ["const_get", "find_by", "try"]
CALLS: ["unscoped", "unscoped", "months", "day", "ago", "where", "select", "limit", "where", "delete_all"]
CALLS: ["try_obtain_lease_for", "find_by", "propagate"]
CALLS: ["new", "try_obtain"]
CALLS: ["new", "try_obtain"]
CALLS: ["hash", "new", "try_obtain"]
CALLS: ["active?", "logger", "id", "info", "propagate_projects_with_template"]
CALLS: ["project_ids_batch", "empty?", "bulk_create_from_template", "size", "loop"]
CALLS: ["connection", "select_values"]
CALLS: ["service_hash", "values", "map", "transaction_begin", "service_hash", "keys", "bulk_insert_services", "run_callbacks", "transaction_end", "transaction"]
CALLS: ["as_json", "except", "is_a?", "to_json", "connection", "quote_column_name", "sanitize", "each_with_object"]
CALLS: ["connection", "')}\n      SQL", "execute"]
CALLS: ["with_indifferent_access", "find", "execute"]
CALLS: ["find_by", "nil?", "pending_delete?", "lease_for", "try_obtain", "logger", "new", "execute", "cancel_lease_for"]
CALLS: ["lease_key", "cancel"]
CALLS: ["lease_key", "new"]
CALLS: ["class", "name", "new"]
CALLS: ["find", "find", "build!", "new", "execute"]
CALLS: ["find", "find", "symbolize_keys", "new", "execute", "logger", "message", "error"]
CALLS: ["find_by", "repository", "exists?", "map", "update_statistics", "repository", "map", "refresh_method_caches", "cleanup"]
CALLS: ["id", "try_obtain_lease_for", "logger", "id", "info", "statistics", "refresh!"]
CALLS: ["to_sym", "concat", "each", "expire_method_caches", "send", "each"]
CALLS: ["find_by", "commit_exists_in_upstream?", "find_by", "build_commit", "author", "process_commit_message", "update_issue_metrics"]
CALLS: ["forked?", "forked_from_project", "with_indifferent_access", "commit", "present?"]
CALLS: ["to_s", "end_with?", "is_a?", "parse", "each", "from_hash"]
CALLS: ["all_references", "issues", "empty?", "map", "where", "committed_date", "update_all"]
CALLS: ["merged_merge_request?", "closes_issues", "any?", "close_issues", "create_cross_references!"]
CALLS: ["new", "updatable_by_user", "new", "close_issue", "each"]
CALLS: ["mark_pending_todos_as_done"]
CALLS: ["close_resource_email"]
CALLS: ["new", "execute"]
CALLS: ["project", "jira_tracker?", "project", "jira_service", "active", "is_a?", "project", "jira_service", "close_issue", "todo_service", "current_user", "close_issue", "project", "issues_enabled?", "close", "current_user", "update", "event_service", "current_user", "close_issue", "create_note", "notification_service", "current_user", "close_issue", "todo_service", "current_user", "close_issue", "execute_hooks", "assignees", "invalidate_cache_counts", "update_project_counter_caches"]
CALLS: ["issues_tracker", "to_param"]
CALLS: ["config", "issues_tracker", "to_param"]
CALLS: ["external_issue_tracker", "external_issue_tracker", "default_issue_tracker"]
CALLS: ["gitlab_issue_tracker_service", "create_gitlab_issue_tracker_service"]
CALLS: ["create_record_event"]
CALLS: ["client", "iid", "find", "jira_request", "nil?", "has_resolution?", "jira_issue_transition_id", "present?", "is_a?", "id", "is_a?", "diff_head_sha", "build_entity_url", "transition_issue", "client", "key", "find", "jira_request", "has_resolution?", "add_issue_solved_comment"]
CALLS: ["message", "logger", "class", "name", "client_url", "info"]
CALLS: ["project", "namespace", "becomes", "project", "to_sym", "gitlab", "base_url", "polymorphic_url"]
CALLS: ["respond_to?", "resolution", "present?"]
CALLS: ["build_remote_link_props", "send_message"]
CALLS: ["gitlab_config", "url", "asset_url"]
CALLS: ["client_url", "present?", "find_remote_link", "save!", "comments", "build", "save!", "remotelink", "build", "save!", "class", "name", "client_url", "logger", "info", "jira_request"]
CALLS: ["remotelink", "all", "jira_request", "object", "find"]
CALLS: ["transitions", "build", "jira_issue_transition_id", "save"]
CALLS: ["admin?", "collection", "project_ids", "projects_with_reporter_access_limited_to", "pluck", "collection", "project_id", "include?", "is_a?", "assignee_or_author?", "select"]
CALLS: ["authorized_projects", "where"]
CALLS: ["author_id", "id", "assignee_id", "id"]
CALLS: ["author_id", "id", "assignees", "id", "exists?"]
CALLS: ["target_branch", "project", "default_branch", "current_user", "closes_issues", "current_user", "can?", "project", "current_user", "new", "execute", "each"]
CALLS: ["author", "referenced_mentionables", "include?", "cross_reference_exists?", "reject!", "local_reference", "cross_reference", "each"]
CALLS: ["notes", "system", "notes_for_mentioner", "exists?"]
CALLS: ["is_a?", "cross_reference_note_prefix", "to_reference", "capitalize", "where", "project", "group", "gfm_reference", "cross_reference_note_content", "capitalize", "where"]
CALLS: ["cross_reference_note_prefix"]
CALLS: ["", "where"]
CALLS: ["cross_reference_disallowed?", "project", "group", "gfm_reference", "cross_reference_note_content", "is_a?", "project", "issues_tracker", "create_cross_reference_note", "project", "new", "create_note"]
CALLS: ["is_a?", "project", "jira_tracker_active?", "is_a?", "is_a?", "commits", "include?"]
CALLS: ["jira_tracker?", "jira_service", "active"]
CALLS: ["can_cross_reference?", "model_name", "plural", "humanize", "client", "id", "find", "jira_request", "present?", "respond_to?", "iid", "id", "noteable_name", "build_entity_url", "name", "user_path", "resource_url", "project", "full_path", "project", "namespace", "project", "namespace_project_path", "resource_url", "humanize", "downcase", "title", "add_comment"]
CALLS: ["model_name", "singular"]
CALLS: ["gitlab", "base_url", "chomp"]
CALLS: ["chomp", "build_remote_link_props", "comment_exists?", "send_message"]
CALLS: ["comments", "jira_request", "present?", "body", "include?", "any?"]
CALLS: ["commit_events", "merge_requests_events"]
CALLS: ["local_reference", "cross_reference_exists?"]
CALLS: ["parse", "nil?", "log", "include?", "decode64", "logger", "inspect", "info", "new", "process_wiki_changes", "process_project_changes"]
CALLS: ["error"]
CALLS: ["project", "touch"]
CALLS: ["new", "identify", "identifier", "log", "tag_ref?", "project", "new", "execute", "branch_ref?", "project", "new", "execute", "single_change", "changes_refs", "to_a", "after_project_changes_hooks"]
CALLS: ["project", "update", "new", "execute_hooks"]
CALLS: ["execute", "error"]
CALLS: ["find_by", "try"]
CALLS: ["find_by", "project", "new", "trigger", "try"]
CALLS: ["success?", "merge_when_pipeline_succeeds?", "mergeable?", "todo_service", "merge_request_became_unmergeable", "merge_user_id", "merge_params", "merge_async", "pipeline_merge_requests"]
CALLS: ["merge_when_pipeline_succeeds?", "merge_user", "create_unmergeable_todo"]
CALLS: ["project", "attributes_for_todo", "create_todos"]
CALLS: ["ref", "merge_requests_for", "head_pipeline", "each"]
CALLS: ["valid_token?", "find_chat_user", "user", "project", "new", "execute", "authorize_chat_name_url", "new", "authorize"]
CALLS: ["new", "execute"]
CALLS: ["new", "execute"]
CALLS: ["respond_to?", "token", "present?", "token", "variable_size_secure_compare"]
CALLS: ["respond_to?", "token", "present?", "token", "variable_size_secure_compare"]
CALLS: ["token", "token", "variable_size_secure_compare"]
CALLS: ["params", "presence", "request", "headers", "present?", "health_check_access_token", "variable_size_secure_compare"]
CALLS: ["ensure_health_check_access_token!"]
CALLS: ["is_a?", "format", "tap"]
CALLS: ["project", "triggers", "params", "find", "render_404"]
CALLS: ["active", "now", "where", "preload", "project", "owner", "ref", "new", "execute", "persisted?", "deactivate!", "logger", "id", "message", "error", "schedule_next_run!", "find_each"]
CALLS: ["save!", "update_attribute"]
CALLS: ["update_attribute"]
CALLS: ["find_by", "try"]
CALLS: ["find_by", "new", "pipeline_finished"]
CALLS: ["status", "mailer", "respond_to?", "user", "status", "notifiable_users", "map", "any?", "mailer", "public_send", "deliver_later"]
CALLS: ["notifiable_users"]
CALLS: ["compact", "new", "map", "select", "map"]
CALLS: ["find_by", "active?", "update_metrics_for_active_pipeline", "success?", "update_metrics_for_succeeded_pipeline", "try"]
CALLS: ["metrics", "started_at", "finished_at", "id", "update_all"]
CALLS: ["metrics", "started_at", "id", "update_all"]
CALLS: ["find_by", "try"]
CALLS: ["send"]
CALLS: ["find_by", "new", "execute"]
CALLS: ["needs_verification", "id", "perform_async", "find_each"]
CALLS: ["", "arel_table", "arel_table", "now", "eq", "eq", "lt", "or", "or", "where"]
CALLS: ["constantize", "constantize", "object_store_enabled?", "background_upload_enabled?", "find", "public_send", "migrate!"]
CALLS: ["unsafe_migrate!", "with_exclusive_lease"]
CALLS: ["object_store", "file", "file", "object_store", "object_store", "file_storage?", "cache_stored_file!", "storage", "file", "store!", "persist_object_store!", "file", "with_callbacks", "with_callbacks", "file", "nil?", "delete", "object_store", "file"]
CALLS: ["class", "object_store_enabled?", "class", "direct_upload_enabled?", "object_store"]
CALLS: ["object_store_options", "direct_upload"]
CALLS: ["persist_object_store?", "model", "store_serialization_column", "object_store", "update_column"]
CALLS: ["model", "store_serialization_column", "respond_to?"]
CALLS: ["args_check!", "constantize", "to_sym", "preload", "where", "sanity_check!", "migrate", "report!", "logger", "class", "message", "warn"]
CALLS: ["build_uploaders", "method", "map"]
CALLS: ["build_uploader", "map"]
CALLS: ["count", "count"]
CALLS: ["class", "sanity_check!"]
CALLS: ["partition", "logger", "header", "info", "logger", "failures", "warn", "any?", "map", "new"]
CALLS: ["map", "join"]
CALLS: ["count", "count", "count"]
CALLS: ["statuses", "latest", "failed", "present?", "render_show", "pipeline_path"]
CALLS: ["", "where"]
CALLS: ["project", "id", "project_pipeline_path"]
CALLS: ["constantize", "constantize", "object_store_enabled?", "background_upload_enabled?", "find", "to_sym", "build_uploader", "migrate!"]
CALLS: ["find_by", "can_create_notification?", "new", "new_note", "new", "execute", "logger", "error"]
CALLS: ["handle_note"]
CALLS: ["can_create_todo?", "project", "noteable", "mark_pending_todos_as_done", "create_mention_todos"]
CALLS: ["system?", "for_snippet?"]
CALLS: ["noteable_type", "end_with?"]
CALLS: ["noteable_type"]
CALLS: ["noteable_type", "present?", "cross_reference?", "system?", "to_ability_name", "to_sym", "build_new_note_recipients", "mailer", "user", "id", "id", "send", "deliver_later", "each"]
CALLS: ["new", "notification_recipients"]
CALLS: []
CALLS: ["objects_found?", "new", "issuable", "user", "open_mr", "new", "issuable", "user", "new_merge_request", "issuable", "user", "create_cross_references!"]
CALLS: ["set_user", "set_issuable", "user", "issuable"]
CALLS: ["issuable_class", "find_by", "issuable_class", "log_error"]
CALLS: []
CALLS: []
CALLS: ["find_by", "log_error"]
CALLS: ["current_user"]
CALLS: ["params", "find_by", "nil?", "root_path", "blocked?"]
CALLS: ["create_record_event"]
CALLS: ["objects_found?", "new", "issuable", "user", "open_issue", "new", "issuable", "user", "new_issue", "issuable", "user", "create_cross_references!"]
CALLS: ["create_record_event"]
CALLS: ["unscoped", "find", "namespace", "team", "truncate", "forked?", "unlink_fork", "destroy!"]
CALLS: ["forked_from_project", "merge_requests", "opened", "from_project", "update_all", "forked_project_link", "destroy"]
CALLS: ["", "id", "where"]
CALLS: ["with_indifferent_access", "find", "find", "target_project", "new", "execute"]
CALLS: ["new", "opened", "due_tomorrow", "in_projects", "preload", "issue_due", "find_each"]
CALLS: ["author", "build_recipients", "mailer", "user", "id", "id", "reason", "send", "deliver_later", "each"]
CALLS: ["", "tomorrow", "where"]
CALLS: ["opened", "due_tomorrow", "group", "pluck", "map", "bulk_perform_async"]
CALLS: ["find", "gsub", "close_connection"]
CALLS: ["close"]
CALLS: ["find_by", "new", "run"]
CALLS: ["new", "execute"]
CALLS: ["find", "find", "new", "execute"]
CALLS: ["try_obtain_lease", "new", "execute"]
CALLS: ["gitlab_shell", "__send__"]
CALLS: ["find_project", "running?", "refresh_import_jid_expiration", "class", "perform_in_the_future"]
CALLS: ["select", "import_started", "find_by"]
CALLS: ["", "where"]
CALLS: ["perform_in"]
CALLS: ["select", "import_started", "find_by"]
CALLS: ["import_started", "find_by"]
CALLS: ["import_jid", "import_jid", "set"]
CALLS: ["find_project", "wait_for_jobs", "empty?", "refresh_import_jid_expiration", "to_sym", "fetch", "perform_async", "class", "perform_in"]
CALLS: ["new", "wait", "jobs_remaining", "positive?", "key", "jobs_remaining", "each_with_object"]
CALLS: ["find", "get_lease_uuid", "renew_lease", "try_obtain_lease", "to_sym", "command", "repository", "raw_repository", "gitaly_call", "repository", "path_to_repo", "join", "info", "popen", "zero?", "error", "gitaly_migrate", "flush_ref_caches", "cleanup", "present?", "present?", "cancel_lease"]
CALLS: ["migrate", "error", "new", "error", "new"]
CALLS: ["repository", "after_create_branch", "repository", "branch_names", "repository", "has_visible_content?"]
CALLS: ["expire_branches_cache", "repository_event"]
CALLS: ["new", "bitmaps_enabled?", "garbage_collect", "bitmaps_enabled?", "repack_full", "repack_incremental"]
CALLS: ["get_uuid"]
CALLS: ["cancel"]
CALLS: ["new", "renew"]
CALLS: ["repository_storage_path", "disk_path", "join", "expand_path"]
CALLS: ["find_by", "project", "new", "project_pipelines_path", "touch", "project_pipeline_path", "touch", "commit", "nil?", "commit", "commit_pipelines_path", "touch", "new_merge_request_pipelines_path", "touch", "touch", "each_pipelines_merge_request_path", "update_for_pipeline"]
CALLS: ["all_merge_requests", "url_helpers", "pipelines_project_merge_request_path", "each"]
CALLS: ["project", "merge_requests", "ref", "where"]
CALLS: ["url_helpers", "project_new_merge_request_path"]
CALLS: ["url_helpers", "id", "pipelines_project_commit_path"]
CALLS: ["joins", "find_by", "pipeline", "project", "new", "project_pipeline_path", "touch", "project_job_path", "touch", "tap"]
CALLS: ["with_expired_artifacts", "reorder", "find_by", "project", "project", "pending_delete", "logger", "id", "info", "erase_artifacts!"]
CALLS: ["", "where"]
CALLS: ["", "with_artifacts_archive", "now", "where"]
CALLS: ["logger", "info", "with_expired_artifacts", "pluck", "map", "bulk_perform_async"]
CALLS: ["symbolize_keys!", "reverse_merge!", "find", "blank_ref?", "blank_ref?", "new", "execute", "diff_refs", "same", "commits", "empty?", "new", "execute", "diff_refs", "commits", "empty?", "split", "send_email", "logger", "full_name", "info", "each", "start"]
CALLS: ["email", "present?", "repository_push_email", "email", "to", "email", "add_message_id", "skip_premailer", "email", "header", "email", "deliver_now"]
CALLS: ["new", "target_url", "find", "add_project_headers", "headers", "author_username", "author_id", "send_from_committer_email?", "sender", "reply_to", "subject", "mail"]
CALLS: ["send_from_committer_email", "to_boolean"]
CALLS: ["headers", "name", "headers", "id", "headers", "full_path"]
CALLS: ["find", "default_sender_address", "display_name", "name", "can_send_from_user_email?", "address", "email", "format"]
CALLS: ["description", "blank?", "short_sha", "description"]
CALLS: ["sha", "truncate_sha"]
CALLS: ["token", "token"]
CALLS: ["sha", "truncate_sha"]
CALLS: ["truncate_sha"]
CALLS: ["email", "split", "last", "class", "allowed_email_domains", "include?"]
CALLS: ["config", "gitlab", "host", "split", "length", "tld_length", "join", "shift"]
CALLS: ["config", "gitlab", "email_from", "new", "display_name", "config", "gitlab", "email_display_name"]
CALLS: ["enabled?", "new", "execute", "handle_failure"]
CALLS: ["logger", "warn", "present?", "message", "rejection", "deliver_later"]
CALLS: ["new", "from", "from", "subject", "hex", "config", "gitlab", "host", "message_id", "message_id", "to", "first", "mail"]
CALLS: ["class", "model_name", "singular_route_key", "id", "config", "gitlab", "host"]
CALLS: ["find", "find", "new", "symbolize_keys", "execute", "logger", "warn"]
CALLS: ["find", "find", "new", "execute"]
CALLS: ["find", "find", "deep_symbolize_keys", "new", "execute"]
CALLS: ["find_by", "commit", "new", "signature"]
CALLS: ["gpg_commit", "signature"]
CALLS: ["commit", "commit", "new"]
CALLS: ["last", "key?", "pop", "", "jid", "notify"]
CALLS: ["find_project", "new_client_for", "try_import"]
CALLS: ["import", "class", "rate_limit_resets_in", "id", "perform_in"]
CALLS: ["id", "jid", "perform_in_the_future", "new", "execute", "counter", "increment", "id", "perform_async"]
CALLS: ["new", "execute", "refresh_import_jid_expiration", "id", "key", "jobs_remaining", "perform_async"]
CALLS: ["new", "execute", "id", "key", "jobs_remaining", "perform_async"]
CALLS: ["new", "execute", "key", "jobs_remaining", "each_with_object", "id", "perform_async"]
CALLS: ["new", "execute", "each", "refresh_import_jid_expiration", "id", "perform_async"]
CALLS: ["after_import", "report_import_time"]
CALLS: ["zone", "now", "created_at", "full_path", "histogram", "observe", "counter", "increment", "logger", "round", "info"]
CALLS: ["histogram"]
CALLS: ["representation_class", "from_json_hash", "importer_class", "new", "execute", "counter", "full_path", "increment"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["project", "project_members", "to_a", "project_members", "pluck", "invite?", "user_id", "include?", "reject!", "dup", "id", "source", "created_by", "map!", "transaction_begin", "save", "each", "transaction_end", "transaction"]
CALLS: ["invite_token", "present?"]
CALLS: ["current_user", "authorized_projects", "order_id_desc", "apply_import_project_project_members_path", "options_from_collection_for_select", "select_tag", "project_project_members_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["import"]
CALLS: ["find_by", "notify_waiter", "new_client_for", "try_import", "notify_waiter", "class", "rate_limit_resets_in", "id", "perform_in"]
CALLS: ["jid", "notify"]
CALLS: ["new", "execute", "find_application"]
CALLS: ["find", "try"]
CALLS: ["new", "execute", "find_application"]
CALLS: ["find_by_id", "provider", "gcp?", "new", "execute", "try", "try"]
CALLS: ["new", "execute", "find_application"]
CALLS: ["class", "get_session_token", "try_obtain_lease_for", "new", "execute", "empty?", "class", "get_billing_state", "update_billing_change_counter", "class", "set_billing_state"]
CALLS: ["billing_changed_counter", "state_transition", "increment"]
CALLS: ["nil?", "nil?"]
CALLS: ["counter"]
CALLS: ["redis_shared_state_key_for", "set", "with"]
CALLS: ["hexdigest"]
CALLS: ["redis_shared_state_key_for", "get", "new", "type_cast_from_user", "with"]
CALLS: ["get_redis_session_key", "get", "with"]
CALLS: []
CALLS: ["find_by", "parse_trace_sections!"]
CALLS: ["project", "user", "new", "execute"]
CALLS: ["find_by", "has_environment?", "create_deployment", "try"]
CALLS: ["new", "execute"]
CALLS: ["find_by", "new", "execute", "try"]
CALLS: ["find_by", "try"]
CALLS: ["find_by", "new", "id", "perform", "new", "id", "perform", "id", "perform_async", "id", "perform_async", "try"]
CALLS: ["find_by", "update_coverage"]
CALLS: ["trace", "coverage_regex", "extract_coverage", "present?", "update_attributes"]
CALLS: ["project", "try"]
CALLS: ["perform_and_ttl", "perform", "class", "perform_in"]
CALLS: ["always_perform?", "lease_for", "try_obtain", "ttl"]
CALLS: ["env", "test?"]
CALLS: ["find_by", "refresh_authorized_projects"]
CALLS: ["new", "execute"]
CALLS: ["find_by", "trace", "archive!", "try"]
CALLS: ["where", "count", "zero?", "notify", "deliver_now"]
CALLS: ["push_bulk"]
CALLS: []
CALLS: ["size", "max_attachment_size", "new", "store!", "to_h"]
CALLS: ["max_attachment_size", "megabytes", "to_i"]
CALLS: ["max_attachment_size", "megabytes", "to_i"]
CALLS: ["params", "to_i", "snippet", "visibility_level", "current_user", "allowed_for?", "snippet", "deny_visibility_level", "snippet", "filter_spam_check_params", "snippet", "params", "assign_attributes", "snippet", "current_user", "spam_check", "snippet", "save"]
CALLS: ["params", "delete", "params", "delete", "params", "delete", "params", "delete"]
CALLS: ["visibility_level", "level_name", "downcase", "errors", "add"]
CALLS: ["project", "repository", "find_tag", "project", "releases", "find_by", "update_attributes", "success", "error", "error"]
CALLS: ["hook", "project"]
CALLS: ["hook", "class", "triggers", "trigger", "to_sym", "key", "trigger", "nil?", "respond_to?", "error", "__send__", "hook", "execute", "catch", "error"]
CALLS: ["project", "repository", "find_tag", "error", "current_user", "rm_tag", "project", "releases", "find_by", "destroy", "build_push_data", "new", "project", "current_user", "push", "project", "dup", "execute_hooks", "project", "dup", "execute_services", "success", "error", "message", "error"]
CALLS: ["project", "current_user", "dereferenced_target", "sha", "name", "build"]
CALLS: ["params", "blank_ref?", "params", "ref_name", "project", "repository", "find_tag", "target", "params", "project", "dereferenced_target", "commit", "compact", "message", "project", "current_user", "params", "params", "params", "build"]
CALLS: ["current_user", "params", "params", "params", "build"]
CALLS: ["project", "current_user", "dereferenced_target", "sha", "name", "build"]
CALLS: ["before_remove_tag", "raw_repository", "rm_tag", "after_remove_tag"]
CALLS: ["expire_tags_cache"]
CALLS: ["expire_tags_cache", "expire_statistics_caches", "repository_event"]
CALLS: ["validate", "error", "project", "repository", "strip!", "current_user", "add_tag", "error", "message", "error", "new", "execute", "success", "merge", "error"]
CALLS: ["raw_repository", "add_tag"]
CALLS: ["hooks_for", "async_execute", "find_each", "execute_all_async"]
CALLS: ["triggers", "keys", "include?", "none", "public_send"]
CALLS: ["usage_ping_enabled?", "to_json", "post", "store_metrics", "logger", "info"]
CALLS: ["present?", "slice", "create!"]
CALLS: ["params", "present?", "params", "find_by", "current_user", "can?"]
CALLS: ["current_user", "new", "execute", "params", "new"]
CALLS: ["current_user", "project", "params", "params", "new"]
CALLS: ["current_user", "projects", "params", "default_project_filter", "new"]
CALLS: ["increment!"]
CALLS: ["increment_pushes_since_gc", "measure"]
CALLS: ["pushes_since_gc_redis_shared_state_key", "incr", "with"]
CALLS: ["id"]
CALLS: ["path", "directory?", "clean_up_old_archives", "clean_up_empty_directories", "measure"]
CALLS: ["path", "path", "run"]
CALLS: ["path", "path", "mmin", "run"]
CALLS: ["ldap_hard_blocked?", "user", "block"]
CALLS: ["user", "ldap_blocked?", "user", "ldap_user?"]
CALLS: ["identities", "loaded?", "identities", "provider", "ldap_provider?", "extern_uid", "nil?", "find", "identities", "exists?"]
CALLS: ["current_user", "can?", "extractor", "extract_commands", "extract_updates"]
CALLS: ["class", "definition_by_name", "execute", "each"]
CALLS: ["class", "command_definitions", "new"]
CALLS: ["supported?", "note", "project", "current_user", "new", "note", "noteable", "execute"]
CALLS: ["commit_count", "action", "ref_type", "commit_from_id", "commit_to_id", "trimmed_ref", "commit_title", "id", "build_push_event_payload", "push_event_payload", "save!", "push_event_payload"]
CALLS: ["commit"]
CALLS: ["ref", "ref_name"]
CALLS: ["fetch"]
CALLS: ["remove?", "revision_after"]
CALLS: ["create?", "revision_before"]
CALLS: ["fetch", "last", "index", "strip", "truncate"]
CALLS: ["root_ref", "raw_repository", "root_ref", "commit_count"]
CALLS: ["commit", "try"]
CALLS: ["current_user", "project", "can?", "params", "update"]
CALLS: ["destroy"]
CALLS: ["current_user", "project", "can?", "project", "protected_tags", "params", "create"]
CALLS: ["current_user", "can?", "params", "update"]
CALLS: ["params", "delete", "params", "delete", "transaction_begin", "delete_redundant_access_levels", "params", "params", "params", "params", "new", "execute", "transaction_end", "transaction"]
CALLS: ["nil?", "merge_access_levels", "destroy_all", "nil?", "push_access_levels", "destroy_all"]
CALLS: ["params", "delete", "params", "delete", "merge!", "new", "execute"]
CALLS: ["current_user", "can?", "destroy"]
CALLS: ["authorized?", "protected_branch", "save", "protected_branch"]
CALLS: ["project", "protected_branches", "params", "new"]
CALLS: ["current_user", "protected_branch", "can?"]
CALLS: ["project", "params", "valid_visibility_level_change?", "error", "renaming_project_with_container_registry_tags?", "error", "changing_default_branch?", "project", "params", "change_head", "error", "enabling_wiki?", "ensure_wiki_exists", "project", "params", "except", "update_attributes", "project", "previous_changes", "include?", "project", "rename_repo", "system_hook_service", "project", "execute_hooks_for", "changing_pages_https_only?", "update_pages_config", "success", "project", "errors", "full_messages", "to_sentence", "presence", "error"]
CALLS: ["project", "previous_changes", "include?"]
CALLS: ["project", "new", "execute"]
CALLS: ["project", "project", "owner", "new", "wiki", "project", "full_name", "log_error", "counter"]
CALLS: ["wiki_enabled?", "params", "dig", "to_i"]
CALLS: ["params", "project", "repository", "exists?", "project", "default_branch"]
CALLS: ["params", "project", "path", "project", "has_container_registry_tags?"]
CALLS: ["container_repositories", "to_a", "any?", "has_root_container_repository_tags?"]
CALLS: ["config", "registry", "enabled", "build_root_repository", "has_tags?"]
CALLS: ["new"]
CALLS: ["tags", "any?"]
CALLS: ["tag_list", "any?"]
CALLS: ["tag_list", "any?"]
CALLS: ["to_i", "visibility_level", "current_user", "can?", "current_user", "allowed_for?", "deny_visibility_level"]
CALLS: ["project", "build_full_path", "gitlab_shell", "repository_storage_path", "project", "full_path_was", "mv_repository", "gitlab_shell", "repository_storage_path", "project", "full_path_was", "mv_repository", "logger", "project", "full_path_was", "error"]
CALLS: ["gitlab_shell", "project", "repository_storage_path", "exists?", "gitlab_shell", "project", "repository_storage_path", "mv_repository"]
CALLS: []
CALLS: ["build_full_path", "logger", "full_path_was", "error", "has_container_registry_tags?", "logger", "full_path_was", "error", "new", "full_path_was", "expire_caches_before_rename", "storage", "rename_repo", "full_path_was", "info", "rename_repo_notify!", "after_rename_repo", "logger", "full_path_was", "error", "new"]
CALLS: ["started?", "full_path_was", "send_move_instructions", "expires_full_path_cache", "old_path_with_namespace", "full_path_was", "new", "execute_hooks_for", "reload_repository!"]
CALLS: ["new", "project_was_moved", "run_after_commit"]
CALLS: ["team", "members", "notifiable_users", "mailer", "id", "id", "project_was_moved_email", "deliver_later", "each"]
CALLS: ["find", "find", "project_url", "notification_email", "subject", "mail"]
CALLS: ["active?", "full_path_key", "delete"]
CALLS: ["write_repository_config", "previous_changes", "first", "hashed_storage?", "new", "path", "namespace", "full_path", "rename_project", "new", "path", "namespace", "full_path", "rename_project"]
CALLS: ["project", "write_repository_config"]
CALLS: ["new", "execute"]
CALLS: ["full_path", "repository", "raw_repository", "write_config", "logger", "full_path", "id", "message", "error"]
CALLS: ["new", "new", "exists?", "before_delete", "exists?", "before_delete"]
CALLS: ["expire_exists_cache", "expire_all_method_caches", "exists?", "expire_branch_cache", "expire_content_cache", "repository_event"]
CALLS: ["expire_method_caches"]
CALLS: ["register_attempt", "create_status", "enqueue!", "run!", "build", "artifacts?", "latest?", "tmp_path", "mkdir_p", "tmp_path", "extract_archive!", "join", "exist?", "latest?", "deploy_page!", "success", "mktmpdir", "message", "error", "message", "error"]
CALLS: ["sanity_check!", "ids", "to_s", "perform_async"]
CALLS: ["pages_deployments_total_counter", "increment"]
CALLS: ["counter"]
CALLS: ["pages", "path", "join"]
CALLS: ["pages_path", "mkdir_p", "public_path", "previous_public_path", "move", "public_path", "move", "previous_public_path", "rm_r"]
CALLS: ["pages_path", "hex", "join"]
CALLS: ["pages_path", "join"]
CALLS: ["project", "pages_path"]
CALLS: ["project", "pages_path"]
CALLS: ["pages", "path", "full_path", "join"]
CALLS: ["artifacts", "ends_with?", "extract_zip_archive!"]
CALLS: ["build", "artifacts_file", "path"]
CALLS: ["job_artifacts_archive", "file", "legacy_artifacts_file"]
CALLS: ["build", "artifacts_file"]
CALLS: ["build", "artifacts_metadata?", "build", "artifacts_metadata_entry", "total_size", "max_size", "total_size", "join", "build", "artifacts_file", "system", "use_file"]
CALLS: ["max_pages_size", "megabytes", "zero?", "min"]
CALLS: ["artifacts?", "artifacts_metadata", "exists?"]
CALLS: ["statuses", "count"]
CALLS: ["options"]
CALLS: ["project", "build", "pipeline", "build", "user", "build", "ref", "new"]
CALLS: ["artifacts_expired?", "artifacts_file", "exists?"]
CALLS: ["artifacts_expire_at", "artifacts_expire_at", "now"]
CALLS: ["pages_config_file", "pages_config", "to_json", "update_file", "reload_daemon", "success", "message", "error"]
CALLS: ["remove", "hex", "write", "open", "move", "remove"]
CALLS: ["pages", "path", "join", "rm_r"]
CALLS: ["pages_path", "join"]
CALLS: ["pages_update_file", "hex", "update_file"]
CALLS: ["pages", "path", "join"]
CALLS: ["options", "delete", "options", "options", "multi_action"]
CALLS: ["options", "delete", "options", "repository", "raw_repository", "raw", "options", "multi_action", "with_cache_hooks"]
CALLS: ["forked?", "fork_source", "lfs_objects", "projects", "include?", "projects", "find_each", "refresh_forks_count", "fork_network", "merge_requests", "opened", "where", "not", "from_project", "new", "execute", "each", "fork_network_member", "destroy", "forked_project_link", "destroy"]
CALLS: ["new", "refresh_cache"]
CALLS: ["new", "refresh_cache"]
CALLS: ["new", "refresh_cache"]
CALLS: ["blank?", "current_user", "project", "allowed_transfer?", "project", "transfer", "current_user", "invalidate_personal_projects_count", "project", "reload", "project", "errors", "message", "add"]
CALLS: ["can?", "id", "namespace_id", "can?"]
CALLS: ["full_path", "group", "try", "path", "join", "namespace", "path", "try", "where", "exists?", "new", "has_container_registry_tags?", "new", "attempt_transfer_transaction"]
CALLS: ["transaction_begin", "project", "expire_caches_before_rename", "update_namespace_and_visibility", "project", "send_move_instructions", "project", "move_project_folders", "current_user", "project", "new", "execute", "project", "move_project_uploads", "new", "project", "path", "full_path", "full_path", "move_project", "project", "old_path_with_namespace", "project", "expires_full_path_cache", "write_repository_config", "execute_system_hooks", "transaction_end", "transaction", "rollback_side_effects", "raise", "refresh_permissions"]
CALLS: ["hashed_storage?", "new", "path", "full_path", "full_path", "move_project"]
CALLS: ["hashed_storage?", "move_repo_folder", "new", "reload_repository!", "move_repo_folder"]
CALLS: ["gitlab_shell", "project", "repository_storage_path", "mv_repository"]
CALLS: ["new", "project", "execute_hooks_for"]
CALLS: ["rollback_folder_move", "update_namespace_and_visibility", "write_repository_config"]
CALLS: ["move_repo_folder", "move_repo_folder"]
CALLS: ["move_repository", "move_repository"]
CALLS: ["gitlab_shell", "project", "repository_storage_path", "exists?", "gitlab_shell", "project", "repository_storage_path", "exists?", "logger", "project", "full_path", "project", "id", "warn", "gitlab_shell", "project", "repository_storage_path", "mv_repository"]
CALLS: ["user_ids_for_project_authorizations", "user_ids_for_project_authorizations", "new", "execute"]
CALLS: ["owner_id"]
CALLS: ["members_with_parents", "pluck"]
CALLS: ["project", "namespace", "project", "visibility_level_allowed_by_group?", "project", "visibility_level", "visibility_level", "project", "save!"]
CALLS: ["cache", "id", "delete"]
CALLS: ["current_user", "can?", "access_denied!", "params", "find_by", "project", "current_user", "new", "execute", "errors", "present?", "flash", "errors", "first", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["params", "find_by", "current_user", "new", "execute", "flash", "name", "group_path", "flash", "now", "error", "name", "page_description", "description", "header_title", "group_title", "current_user"]
CALLS: ["params", "find_by", "current_user", "params", "dup", "new", "execute", "reload", "admin_project_path", "admin_root_path"]
CALLS: ["project", "team", "members", "sorted", "noteable_owner", "participants_in_noteable", "all_members", "groups", "uniq"]
CALLS: ["project", "team", "members", "flatten", "count"]
CALLS: ["uniq", "to_a", "compact", "sort_by", "username", "name", "avatar_url", "map"]
CALLS: ["noteable", "noteable", "current_user", "participants", "sorted"]
CALLS: ["noteable", "noteable", "author", "present?", "noteable", "author", "name", "noteable", "author", "username", "noteable", "author", "avatar_url"]
CALLS: ["namespace", "namespace", "transaction_begin", "move_before_destroy_relationships", "destroy_old_project", "name", "path", "rename_project", "transaction_end", "transaction", "attempt_restore_repositories", "class", "message", "raise"]
CALLS: ["new", "attempt_repositories_rollback"]
CALLS: ["flush_caches", "repo_path", "removal_path", "repo_path", "mv_repository", "raise_error", "wiki_path", "removal_path", "wiki_path", "mv_repository", "raise_error"]
CALLS: ["repository", "before_delete", "wiki_path", "repo_path", "new", "before_delete", "new", "delete_cache"]
CALLS: ["cache", "cache_key", "delete"]
CALLS: ["project", "id"]
CALLS: ["project", "wiki", "disk_path"]
CALLS: ["project", "disk_path"]
CALLS: ["new", "execute"]
CALLS: ["new", "execute", "new", "execute", "new", "execute", "new", "execute", "new", "execute", "new", "execute", "add_source_project_to_fork_network"]
CALLS: ["fork_network", "fork_network", "create!"]
CALLS: ["users_star_projects", "any?", "transaction_begin", "id", "update_all", "id", "reset_counters", "id", "reset_counters", "success", "transaction_end", "transaction"]
CALLS: ["transaction_begin", "move_project_members", "remove_remaining_members", "success", "transaction_end", "transaction"]
CALLS: ["source_project", "project_members", "destroy_all"]
CALLS: ["non_existent_members", "prepare_relation", "id", "update_all"]
CALLS: ["source_project", "members", "select", "where", "project_members", "select", "not"]
CALLS: ["postgresql?", "model", "pluck", "where"]
CALLS: ["transaction_begin", "move_group_links", "remove_remaining_project_group_links", "success", "transaction_end", "transaction"]
CALLS: ["source_project", "reload", "project_group_links", "destroy_all"]
CALLS: ["non_existent_group_links", "prepare_relation", "id", "update_all"]
CALLS: ["source_project", "project_group_links", "where", "group_links_in_target_project", "not"]
CALLS: ["project_group_links", "select"]
CALLS: ["transaction_begin", "move_project_authorizations", "remove_remaining_authorizations", "success", "transaction_end", "transaction"]
CALLS: ["source_project", "project_authorizations", "delete_all"]
CALLS: ["non_existent_authorization", "prepare_relation", "id", "update_all"]
CALLS: ["source_project", "project_authorizations", "select", "where", "authorized_users", "not"]
CALLS: ["transaction_begin", "move_notification_settings", "remove_remaining_notification_settings", "success", "transaction_end", "transaction"]
CALLS: ["source_project", "notification_settings", "destroy_all"]
CALLS: ["non_existent_notifications", "prepare_relation", "id", "update_all"]
CALLS: ["source_project", "notification_settings", "select", "where", "users_in_target_project", "not"]
CALLS: ["notification_settings", "select"]
CALLS: ["transaction_begin", "move_lfs_objects_projects", "remove_remaining_lfs_objects_project", "success", "transaction_end", "transaction"]
CALLS: ["source_project", "lfs_objects_projects", "destroy_all"]
CALLS: ["non_existent_lfs_objects_projects", "prepare_relation", "lfs_storage_project", "id", "update_all"]
CALLS: ["source_project", "lfs_objects_projects", "where", "lfs_objects", "not"]
CALLS: ["fork_network", "transaction_begin", "move_forked_project_links", "move_fork_network_members", "update_root_project", "refresh_forks_count", "success", "transaction_end", "transaction"]
CALLS: ["source_project", "where", "id", "update_all"]
CALLS: ["source_project", "where", "id", "update_all", "source_project", "where", "id", "update_all"]
CALLS: ["source_project", "where", "id", "update_all", "source_project", "where", "id", "update_all"]
CALLS: ["transaction_begin", "move_deploy_keys_projects", "remove_remaining_deploy_keys_projects", "success", "transaction_end", "transaction"]
CALLS: ["source_project", "deploy_keys_projects", "destroy_all"]
CALLS: ["non_existent_deploy_keys_projects", "prepare_relation", "id", "update_all"]
CALLS: ["source_project", "deploy_keys_projects", "joins", "where", "deploy_keys", "select", "not"]
CALLS: ["namespace", "namespace", "namespace", "refresh_project_authorizations", "namespace", "refresh_project_authorizations", "run_after_commit", "new", "execute", "new", "execute", "new", "execute", "success", "with_transaction_returning_status"]
CALLS: ["owner", "refresh_authorized_projects"]
CALLS: ["refresh_members_authorized_projects"]
CALLS: ["user_ids_for_project_authorizations", "new", "execute"]
CALLS: ["add_repository_to_project", "import_data", "success", "project", "import_url", "project", "full_path", "message", "error"]
CALLS: ["project", "external_import?", "unknown_url?", "project", "import_url", "validate!", "message", "has_importer?", "importer_class", "try", "unknown_url?", "create_repository", "project", "repository_exists?", "import_repository"]
CALLS: ["project", "import_url"]
CALLS: ["has_importer?", "importer_class", "try", "project", "ensure_repository", "project", "repository", "project", "import_url", "fetch_as_mirror", "gitlab_shell", "project", "repository_storage", "project", "disk_path", "project", "import_url", "import_repository", "project", "repository_exists?", "project", "repository", "expire_content_cache", "message"]
CALLS: ["hex", "add_remote", "fetch_remote", "remove_remote"]
CALLS: ["gitlab_shell", "raw_repository", "fetch_remote"]
CALLS: ["wiki", "repository_exists?"]
CALLS: ["repository_exists?", "create_repository"]
CALLS: ["file_has_changed?"]
CALLS: ["repository", "last_for_path", "sha"]
CALLS: ["params", "validate_file_status!", "each"]
CALLS: ["include?", "file_has_changed?", "raise_error"]
CALLS: ["file_has_changed?"]
CALLS: ["validate_permissions!", "validate_on_branch!", "validate_branch_existance!", "different_branch?", "validate_new_branch_name!"]
CALLS: ["project", "current_user", "new", "execute", "raise_error"]
CALLS: ["project", "empty_repo?", "different_branch?", "repository", "branch_exists?", "raise_error"]
CALLS: ["empty_repo?", "repository", "branch_exists?", "raise_error"]
CALLS: ["current_user", "project", "new", "can_push_to_branch?", "raise_error"]
CALLS: []
CALLS: ["repository", "exists?"]
CALLS: ["repository", "exists?"]
CALLS: ["project", "import_export_shared", "save_all!", "execute_after_export_action"]
CALLS: ["save_services", "project", "save", "notify_success", "cleanup_and_notify_error!"]
CALLS: ["cleanup_and_notify_error", "errors", "join", "new"]
CALLS: ["logger", "project", "name", "project", "id", "errors", "join", "error", "export_path", "rm_rf", "notify_error"]
CALLS: ["notification_service", "errors", "project_not_exported"]
CALLS: ["notifiable?", "mailer", "project_was_not_exported_email", "deliver_later"]
CALLS: ["notification_email", "subject", "mail"]
CALLS: ["namespace", "present?", "hashed_storage?", "import_export_shared", "archive_path"]
CALLS: ["version_saver", "avatar_saver", "project_tree_saver", "uploads_saver", "repo_saver", "wiki_repo_saver", "lfs_saver", "all?"]
CALLS: ["project", "new"]
CALLS: ["project", "new"]
CALLS: ["project", "new"]
CALLS: ["project", "new"]
CALLS: ["project", "new"]
CALLS: ["project", "new"]
CALLS: ["new"]
CALLS: ["current_user", "project", "execute", "cleanup_and_notify_error"]
CALLS: ["new"]
CALLS: ["try_obtain_lease", "present?", "block_given?", "execute_gitlab_shell_gc"]
CALLS: ["id", "task", "lease_key", "perform_async", "pushes_since_gc", "gc_period", "reset_pushes_since_gc", "measure"]
CALLS: ["housekeeping_gc_period"]
CALLS: ["pushes_since_gc", "gc_period", "pushes_since_gc", "full_repack_period"]
CALLS: ["housekeeping_full_repack_period"]
CALLS: ["pushes_since_gc"]
CALLS: ["pushes_since_gc_redis_shared_state_key", "del", "with"]
CALLS: ["pushes_since_gc_redis_shared_state_key", "get", "to_i", "with"]
CALLS: ["project", "hashed_storage?", "project", "logger", "new", "execute", "project", "hashed_storage?", "project", "logger", "new", "execute"]
CALLS: ["project", "disk_path", "project", "wiki", "repository_exists?", "project", "storage_version", "project", "storage_version", "project", "ensure_storage_path_exists", "project", "disk_path", "move_repository", "move_repository", "project", "write_repository_config", "rollback_folder_move", "project", "storage_version", "project", "repository_read_only", "project", "save!", "block_given?"]
CALLS: ["project", "full_path", "project", "disk_path", "project", "absolute_base_dir", "project", "storage_version", "project", "absolute_base_dir", "move_folder!", "project", "save!", "block_given?"]
CALLS: ["root", "base_dir", "join"]
CALLS: ["directory?", "logger", "project", "id", "info", "exist?", "logger", "project", "id", "error", "dirname", "mkdir_p", "mv", "logger", "project", "id", "info"]
CALLS: ["destroy"]
CALLS: ["project", "project_group_links", "params", "params", "create"]
CALLS: ["import_upload_path", "dirname", "mkdir_p", "params", "delete", "path", "import_upload_path", "copy_entry", "params", "delete", "overwrite_project?", "params", "params", "tmp_filename", "params", "params", "import_upload_path", "present?", "params", "current_user", "params", "new", "execute"]
CALLS: ["project_with_same_full_path?"]
CALLS: ["current_namespace", "full_path", "params", "find_by_full_path", "present?"]
CALLS: ["params", "find_by"]
CALLS: ["hex"]
CALLS: ["tmp_filename", "import_upload_path"]
CALLS: ["link_existing_project", "fork_new_project"]
CALLS: ["id", "allowed_visibility_level", "description", "name", "path", "shared_runners_enabled", "target_namespace", "id", "avatar", "present?", "avatar", "image?", "avatar", "current_user", "new", "execute", "persisted?", "project_feature", "builds_access_level", "project_feature", "update_attributes", "link_fork_network"]
CALLS: ["visibility_level", "target_namespace", "visibility_level", "min", "closest_allowed_level"]
CALLS: ["current_user", "namespace"]
CALLS: ["fork_network", "fork_network_members", "create", "forked_project_link", "create_forked_project_link", "refresh_forks_count"]
CALLS: ["forked?", "link_fork_network"]
CALLS: ["accessible_keys", "params", "params", "find_by", "project", "deploy_keys", "include?", "project", "deploy_keys"]
CALLS: ["current_user", "accessible_deploy_keys"]
CALLS: ["project_deploy_keys", "pluck", "are_public", "pluck", "push", "where"]
CALLS: ["valid_url?", "new", "download!", "store!", "to_h"]
CALLS: ["nil?", "default_options", "options", "merge", "strip!", "regexp"]
CALLS: []
CALLS: ["valid_protocol?", "valid_uri?"]
CALLS: ["options", "merge", "regexp"]
CALLS: ["valid?"]
CALLS: ["http?", "valid_domain?"]
CALLS: ["parse", "host", "any?"]
CALLS: ["regexp"]
CALLS: ["current_user", "project", "can?", "project", "flush_caches", "project", "current_user", "new", "execute", "project", "root_of_fork_network", "project", "full_name", "update", "project", "attempt_destroy_transaction", "system_hook_service", "project", "execute_hooks_for", "project", "full_path", "log_info", "current_user", "invalidate_personal_projects_count", "project", "message", "attempt_rollback", "project", "message", "attempt_rollback", "raise"]
CALLS: ["transaction_begin", "remove_legacy_registry_tags", "raise_error", "trash_repositories!", "team", "truncate", "destroy!", "transaction_end", "transaction"]
CALLS: ["config", "registry", "enabled", "project", "build_root_repository", "has_tags?", "delete_tags!", "tap"]
CALLS: ["has_tags?", "tags", "digest", "map", "to_set", "client", "path", "delete_repository_tag", "all?"]
CALLS: ["repo_path", "remove_repository", "raise_error", "wiki_path", "remove_repository", "raise_error"]
CALLS: ["params", "removal_path", "mv_repository", "log_info", "project", "minutes", "repository_storage_path", "perform_in", "run_after_commit"]
CALLS: ["destroyed?", "update_attributes", "full_path", "log_error"]
CALLS: ["present?", "current_user", "params", "new", "execute", "params", "delete", "params", "delete", "params", "delete", "params", "new", "current_user", "visibility_level", "allowed_for?", "deny_visibility_level", "allowed_fork?", "errors", "add", "set_project_name_from_path", "params", "current_user", "allowed_namespace?", "namespace_id", "deny_namespace", "namespace_id", "current_user", "namespace_id", "block_given?", "creator", "current_user", "build_forked_project_link", "save_project_and_import_data", "persisted?", "after_create_actions", "import_schedule", "record", "type", "record", "errors", "full_messages", "join", "fail", "message", "fail"]
CALLS: ["name", "present?", "path", "present?", "path", "present?", "name", "path", "dup", "name", "present?", "path", "name", "dup", "parameterize"]
CALLS: ["transaction_begin", "create_or_update_import_data", "save", "gitlab_project_import?", "create_services_from_active_templates", "create_labels", "import?", "create_repository", "transaction_end", "transaction"]
CALLS: ["where", "id", "build_from_template", "save!", "each"]
CALLS: ["templates", "attributes", "except", "new", "execute", "each"]
CALLS: ["nil?", "nil?", "import_data", "build_import_data", "data", "data", "data", "merge", "credentials", "credentials", "credentials", "merge"]
CALLS: ["owner", "name", "full_name", "log_info", "gitlab_project_import?", "write_repository_config", "skip_wiki?", "create_wiki", "event_service", "current_user", "create_project", "system_hook_service", "execute_hooks_for", "setup_authorizations", "current_user", "invalidate_personal_projects_count"]
CALLS: ["current_user", "feature_available?"]
CALLS: ["group", "group", "refresh_members_authorized_projects", "current_user", "refresh_authorized_projects", "namespace", "owner", "current_user", "add_master"]
CALLS: ["add_user"]
CALLS: ["add_user"]
CALLS: ["create_event"]
CALLS: ["find_by", "current_user", "can?"]
CALLS: ["nil?", "find_by", "current_user", "can?"]
CALLS: ["errors", "add"]
CALLS: ["params", "delete", "find", "file", "params", "dup", "params", "current_user", "params", "new", "execute", "close"]
CALLS: ["blank?"]
CALLS: ["new", "repository", "delete_all_refs_except", "execute", "logger", "full_path", "id", "info"]
CALLS: ["params", "explain_quick_actions", "find_user_references", "join", "success"]
CALLS: ["project", "current_user", "new", "current_user", "analyze", "users", "map"]
CALLS: ["commands_target_type", "include?", "project", "current_user", "new", "find_commands_target", "explain"]
CALLS: ["current_user", "can?", "extractor", "extract_commands", "explain_commands"]
CALLS: ["class", "definition_by_name", "explain", "map", "compact"]
CALLS: ["params"]
CALLS: ["commands_target_id", "present?", "commands_target_type", "current_user", "project", "id", "new", "commands_target_id", "find", "commands_target_type", "project", "issues", "project", "merge_requests", "build"]
CALLS: ["params"]
CALLS: ["pages", "enabled", "data", "data", "data", "perform_async"]
CALLS: ["note", "project"]
CALLS: ["target", "project"]
CALLS: ["editable?", "mentioned_users", "to_a", "params", "current_user", "merge", "update_attributes", "current_user", "create_new_cross_references!", "previous_changes", "include?", "new", "current_user", "update_note"]
CALLS: ["handle_note"]
CALLS: []
CALLS: ["manual_configuration?", "prometheus_installed?"]
CALLS: ["template?", "project", "project", "clusters", "enabled", "application_prometheus", "installed?", "any?"]
CALLS: ["template"]
CALLS: ["template"]
CALLS: ["system?"]
CALLS: ["current_user", "new", "render"]
CALLS: ["empty?", "supported?", "class", "noteable_update_service", "project", "current_user", "new", "noteable", "execute"]
CALLS: ["noteable_type"]
CALLS: ["system?", "new", "author", "leave_note", "for_personal_snippet?", "create_cross_references!", "execute_note_hooks"]
CALLS: ["project", "hook_data", "confidential?", "project", "execute_hooks", "project", "execute_services"]
CALLS: ["author", "build"]
CALLS: ["current_user", "to_hook_data", "blank_ref?"]
CALLS: ["previous_changes", "fetch", "fetch", "labels", "map", "labels", "map", "assignees", "is_a?", "map", "assignees", "map", "first", "hook_attrs", "assignee", "hook_attrs", "respond_to?", "fetch", "total_time_spent", "total_time_spent", "new", "build"]
CALLS: ["attributes"]
CALLS: ["name", "username", "avatar_url"]
CALLS: ["attributes"]
CALLS: ["web_url", "ssh_url_to_repo", "http_url_to_repo", "full_path", "default_branch"]
CALLS: ["url_to_repo"]
CALLS: ["gitlab_shell", "full_path", "url_to_repo"]
CALLS: ["gitlab_shell", "full_path", "url_to_repo"]
CALLS: ["url_to_repo"]
CALLS: ["id", "name", "description", "web_url", "avatar_url", "ssh_url_to_repo", "http_url_to_repo", "namespace", "name", "visibility_level", "full_path", "default_branch", "ci_config_path", "web_url", "url_to_repo", "ssh_url_to_repo", "http_url_to_repo", "merge!"]
CALLS: ["attributes"]
CALLS: ["new", "build"]
CALLS: ["attributes"]
CALLS: ["new", "build"]
CALLS: ["timelogs", "sum"]
CALLS: ["id", "safe_message", "committed_date", "xmlschema", "build", "author_name", "author_email", "repo_changes", "merge!"]
CALLS: ["raw_deltas", "deleted_file", "old_path", "renamed_file", "new_file", "new_path", "new_path", "each"]
CALLS: ["project", "lfs_enabled?", "lfs_file?", "decode64", "new", "create_lfs_object!", "link_lfs_object!", "pointer", "new", "new"]
CALLS: ["project", "lfs_objects"]
CALLS: ["sha256", "size", "file", "new", "find_or_create_by"]
CALLS: ["cached_attributes", "attributes"]
CALLS: ["repository", "branch_name", "new"]
CALLS: ["cache_attribute_key", "get", "parse", "with", "strong_memoize"]
CALLS: ["class", "name", "id"]
CALLS: ["raw", "deltas"]
CALLS: ["current_user", "to_hook_data"]
CALLS: ["create_record_event"]
CALLS: ["new", "destroy", "destroy_target"]
CALLS: ["todos", "pending", "select", "where", "to_a", "each"]
CALLS: ["params", "delete", "project", "current_user", "params", "new", "execute", "valid?", "allow_n_plus_1_calls", "project", "current_user", "new", "supported?", "extract_commands", "empty?", "note", "id", "perform_async", "run_after_commit", "save", "todo_service", "current_user", "new_note", "present?", "execute", "errors", "add", "commands_changes"]
CALLS: ["params", "delete", "present?", "find_discussion", "new", "errors", "add", "params", "reply_attributes", "merge!", "params", "new", "project", "project", "author", "current_user"]
CALLS: ["delete", "tap"]
CALLS: ["line_code", "merge"]
CALLS: ["delete", "tap"]
CALLS: ["first_note", "slice"]
CALLS: ["original_position", "to_json", "position", "to_json", "merge"]
CALLS: ["params", "parent", "current_user", "new", "execute", "parent", "current_user", "new", "execute", "params", "present?", "params", "except", "update_attributes"]
CALLS: ["activate", "project_milestone?", "event_service", "current_user", "reopen_milestone"]
CALLS: ["create_record_event"]
CALLS: ["check_project_milestone!", "transaction_begin", "clone_project_milestone", "move_children_to_group_milestone", "destroy_old_milestones", "valid?", "errors", "full_messages", "to_sentence", "raise_error", "transaction_end", "transaction"]
CALLS: ["milestone_ids_for_merge", "where", "destroy_all"]
CALLS: ["title", "group_project_ids", "new", "execute", "pluck"]
CALLS: ["group", "projects", "pluck"]
CALLS: ["slice", "group", "current_user", "new", "execute", "save"]
CALLS: ["project_milestone?", "raise_error"]
CALLS: ["milestone_ids_for_merge", "update_children", "in_groups_of"]
CALLS: ["group_project_ids", "where", "group_project_ids", "where", "id", "update_all", "each"]
CALLS: ["project_milestone?", "transaction_begin", "issues", "parent", "current_user", "new", "execute", "each", "merge_requests", "parent", "current_user", "new", "execute", "each", "event_service", "current_user", "destroy_milestone", "id", "for_milestone_id", "target_id", "save", "each", "destroy", "transaction_end", "transaction"]
CALLS: ["create_record_event"]
CALLS: ["", "where"]
CALLS: ["parent", "milestones", "params", "new", "save", "project_milestone?", "event_service", "current_user", "open_milestone"]
CALLS: ["create_record_event"]
CALLS: ["close", "project_milestone?", "event_service", "current_user", "close_milestone"]
CALLS: ["create_record_event"]
CALLS: ["current_user", "cache_merge_request_closes_issues!"]
CALLS: ["fetch", "fetch", "fetch", "has_changes?", "todo_service", "current_user", "mark_pending_todos_as_done", "previous_changes", "include?", "previous_changes", "include?", "todo_service", "current_user", "update_merge_request", "previous_changes", "include?", "previous_changes", "first", "target_branch", "create_branch_change_note", "previous_changes", "include?", "create_assignee_note", "notification_service", "current_user", "reassigned_merge_request", "todo_service", "current_user", "reassigned_merge_request", "previous_changes", "include?", "previous_changes", "include?", "mark_as_unchecked", "labels", "present?", "notification_service", "current_user", "relabeled_merge_request", "mentioned_users", "present?", "notification_service", "current_user", "new_mentions_in_merge_request"]
CALLS: ["create_assignment_todo"]
CALLS: ["update_issuable"]
CALLS: ["toggling_tasks?", "project", "create_mention_todos"]
CALLS: ["previous_changes", "include?", "tasks?", "updated_tasks", "any?"]
CALLS: ["tasks", "summary", "items?"]
CALLS: ["new", "data"]
CALLS: ["new"]
CALLS: ["previous_changes", "first", "description", "get_updated_tasks"]
CALLS: ["get_tasks", "get_tasks", "select", "source", "source", "complete?", "complete?", "with_index"]
CALLS: ["to_s", "scan", "strip", "new", "map"]
CALLS: ["relabeled_resource_email"]
CALLS: ["project", "subscribers", "flat_map", "uniq", "notifiable_users", "map", "mailer", "id", "id", "id", "send", "deliver_later", "each"]
CALLS: ["reassign_resource_email"]
CALLS: ["previous_record", "find_by", "build_recipients", "mailer", "user", "id", "id", "id", "reason", "send", "deliver_later", "each"]
CALLS: ["previous_changes", "include?", "previous_changes", "first"]
CALLS: ["new_mentions_in_resource_email"]
CALLS: ["build_recipients", "user", "include?", "select", "mailer", "user", "id", "id", "id", "reason", "send", "deliver_later", "each"]
CALLS: ["project", "current_user", "change_branch"]
CALLS: ["new", "create_note"]
CALLS: ["project", "current_user", "assignee", "change_assignee"]
CALLS: ["nil?", "to_reference", "new", "create_note"]
CALLS: ["project", "current_user", "change_issue_assignees"]
CALLS: ["assignees", "assignees", "to_a", "any?", "map", "to_sentence", "any?", "map", "to_sentence", "join", "new", "create_note"]
CALLS: ["previous_changes", "to_s", "include?", "any?", "labels", "assignees"]
CALLS: ["params", "except!", "params", "except!", "params", "except!", "params", "merge_from_quick_action", "closed_without_fork?", "params", "except!", "params", "present?", "merge_params", "params", "delete", "handle_wip_event", "update"]
CALLS: ["params", "delete", "current_user", "mergeable_with_quick_action?", "update", "head_pipeline", "head_pipeline", "active?", "project", "current_user", "new", "execute", "current_user", "id", "merge_async"]
CALLS: ["can_be_merged_by?", "mergeable?", "actual_head_pipeline", "actual_head_pipeline", "success?", "actual_head_pipeline", "active?", "diff_head_sha"]
CALLS: ["closed?", "source_project_missing?"]
CALLS: ["for_fork?", "source_project", "source_project", "target_project", "in_fork_network_of?"]
CALLS: ["forked_from?", "fork_network", "nil?", "fork_network", "nil?", "fork_network", "fork_network"]
CALLS: ["forked?", "forked_from_project"]
CALLS: ["target_project", "source_project"]
CALLS: ["discussions_resolved?", "project", "current_user", "resolve_all_discussions", "notification_service", "current_user", "resolve_all_discussions"]
CALLS: ["new", "create_note"]
CALLS: ["build_recipients", "mailer", "user", "id", "id", "id", "reason", "resolved_all_discussions_email", "deliver_later", "each"]
CALLS: ["setup_merge_request_mail", "find", "merge_request_thread_options", "mail_answer_thread"]
CALLS: ["hex", "config", "gitlab", "host", "message_id", "message_id", "prepend", "mail_thread"]
CALLS: ["add_project_headers", "add_unsubscription_headers_and_links", "class", "name", "id", "reply_key", "enabled?", "reply_key", "reply_address", "new", "display_name", "full_name", "reply_key", "config", "gitlab", "host", "freeze", "mail"]
CALLS: ["unsubscribable?", "unsubscribe_sent_notification_url", "enabled?", "supports_wildcard?", "reply_key", "unsubscribe_address", "headers", "map", "join", "unsubscribe_sent_notification_url"]
CALLS: ["for_commit?", "for_snippet?"]
CALLS: ["sender", "recipient", "title", "to_reference", "subject"]
CALLS: ["find", "notification_email"]
CALLS: ["find", "project", "project_merge_request_url", "reply_key", "record"]
CALLS: ["current_user", "can?", "reopen", "create_event", "create_note", "notification_service", "current_user", "reopen_mr", "execute_hooks", "current_user", "reload_diff", "mark_as_unchecked", "assignees", "invalidate_cache_counts", "update_project_counter_caches"]
CALLS: ["open?", "diff_refs", "create_merge_request_diff", "new", "execute", "diff_refs", "update_diff_discussion_positions"]
CALLS: ["has_complete_diff_refs?", "notes", "new_diff_notes", "discussions", "active?", "select", "empty?", "diff_file", "paths", "flat_map", "uniq", "project", "new", "execute", "each", "project", "resolve_outdated_diff_discussions?", "project", "new", "execute"]
CALLS: ["", "where"]
CALLS: ["branch_ref?", "ref_name", "method", "allow_n_plus_1_calls", "close_upon_missing_source_branch_ref", "post_merge_manually_merged", "reload_merge_requests", "reset_merge_when_pipeline_succeeds", "mark_pending_todos_done", "cache_merge_requests_closing_issues", "branch_added?", "branch_removed?", "comment_mr_branch_presence_changed", "notify_about_push", "mark_mr_as_wip_from_commits", "execute_mr_web_hooks"]
CALLS: ["blank_ref?"]
CALLS: ["blank_ref?"]
CALLS: ["merge_requests", "where", "cache_merge_request_closes_issues!", "each"]
CALLS: ["merge_requests_for_source_branch", "execute_hooks", "each"]
CALLS: ["present?", "merge_requests_for_source_branch", "commit_shas", "work_in_progress?", "sha", "include?", "detect", "work_in_progress?", "wip_title", "update", "project", "add_merge_request_wip_from_commit", "each"]
CALLS: ["to_reference", "new", "create_note"]
CALLS: ["present?", "merge_requests_for_source_branch", "commit_shas", "new", "id", "include?", "partition", "project", "add_commits", "notification_service", "push_to_merge_request", "each"]
CALLS: ["length", "length", "pluralize", "commits_list", "diff_comparison_url", "new", "create_note"]
CALLS: ["merge_request_diff", "id", "url_helpers", "diffs_project_merge_request_url"]
CALLS: ["existing_commit_summary", "new_commit_summary", "join", "html_safe", "content_tag"]
CALLS: ["empty?", "size", "first", "short_id", "blank_ref?", "truncate_sha", "last", "short_id", "first", "short_id", "last", "short_id", "pluralize", "target_branch", "for_fork?", "target_project_namespace", "content_tag", "html_safe", "content_tag"]
CALLS: ["target_project", "target_project", "namespace", "target_project", "namespace", "full_path"]
CALLS: ["short_id", "title", "content_tag", "collect"]
CALLS: ["short_id", "title", "map", "short_id", "title", "map", "build_recipients", "mailer", "user", "id", "id", "id", "reason", "send", "deliver_later", "each"]
CALLS: ["branch_added?", "merge_requests_for_source_branch", "project", "change_branch_presence", "each"]
CALLS: ["new", "create_note"]
CALLS: ["merge_requests_for_source_branch", "todo_service", "merge_request_push", "each"]
CALLS: ["mark_pending_todos_as_done"]
CALLS: ["merge_requests", "opened", "by_source_or_target_branch", "to_a", "opened", "where", "where", "not", "to_a", "filter_merge_requests", "source_branch", "force_push?", "current_user", "reload_diff", "commit_shas", "map", "any?", "current_user", "reload_diff", "mark_as_unchecked", "id", "perform_async", "each", "merge_requests_for_source_branch"]
CALLS: ["uniq", "select"]
CALLS: ["force_push?"]
CALLS: ["", "where"]
CALLS: ["map", "merge_requests", "preload", "opened", "where", "to_a", "select", "diff_head_sha", "include?", "merge_request_diff", "state", "select", "filter_merge_requests", "target_project", "new", "execute", "each"]
CALLS: ["merge_requests_for_source_branch", "reject", "target_project", "new", "execute", "each"]
CALLS: ["rebase", "success", "error"]
CALLS: ["merge_request", "rebase_in_progress?", "log_error", "repository", "current_user", "merge_request", "rebase", "merge_request", "update_attributes", "log_error", "message", "log_error"]
CALLS: ["source_project", "source_project", "repository", "id", "rebase_in_progress?", "strong_memoize"]
CALLS: ["raw", "id", "source_branch", "source_branch_sha", "target_project", "repository", "raw", "target_branch", "rebase"]
CALLS: ["id", "current_user", "id", "perform_async", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["close_issues", "todo_service", "current_user", "merge_merge_request", "mark_as_merged", "create_event", "create_note", "notification_service", "current_user", "merge_mr", "execute_hooks", "assignees", "invalidate_cache_counts", "update_project_counter_caches"]
CALLS: ["mark_pending_todos_as_done"]
CALLS: ["merge_params", "params", "merge!", "merge_when_pipeline_succeeds?", "merge_when_pipeline_succeeds", "merge_user", "diff_head_commit", "merge_when_pipeline_succeeds", "save"]
CALLS: ["project", "merge_requests_ff_only_enabled", "is_a?", "project", "current_user", "params", "new", "execute", "error_check!", "commit", "after_merge", "clean_merge_jid", "success", "in_locked_state", "merge_jid", "state", "log_info", "message", "handle_merge_error"]
CALLS: ["logger", "merge_request_info", "error", "update"]
CALLS: ["merge_request", "update_column"]
CALLS: ["merge_jid", "state", "log_info", "project", "current_user", "new", "merge_request", "execute", "merge_jid", "state", "log_info", "delete_source_branch?", "source_project", "branch_deletion_user", "new", "merge_request", "source_branch", "execute"]
CALLS: ["params", "force_remove_source_branch?", "fetch", "branch_deletion_user", "can_remove_source_branch?"]
CALLS: ["merge_params", "to_boolean"]
CALLS: ["source_project", "source_branch", "protected?", "source_project", "source_branch", "root_ref?", "source_project", "allowed?", "diff_head_sha", "source_branch_head", "try"]
CALLS: ["repository", "root_ref"]
CALLS: ["force_remove_source_branch?", "author", "current_user"]
CALLS: ["should_be_rebased?", "mergeable?", "source"]
CALLS: ["lock_mr", "unlock_mr"]
CALLS: ["diffs", "diff_files", "to_a", "where", "diffs", "clear_cache!", "each"]
CALLS: ["project", "printing_merge_request_link_enabled", "get_branches", "opened_merge_requests_from_source_branches", "url_for_existing_merge_request", "url_for_new_merge_request", "map"]
CALLS: ["target_project", "url_helpers", "project_merge_request_url", "source_branch"]
CALLS: ["url_helpers", "project", "project_new_merge_request_url"]
CALLS: ["project", "empty_repo?", "project", "merge_requests_enabled?", "new", "branch_ref?", "blank_ref?", "branch_name", "project", "default_branch", "map", "compact"]
CALLS: ["merge_requests_access_level"]
CALLS: ["project", "from_project", "opened", "from_source_branches", "index_by"]
CALLS: ["", "where"]
CALLS: ["set_projects!", "new", "target_project", "source_project", "source_branch", "params", "merge_params", "params", "delete", "create"]
CALLS: ["params", "params", "find", "params", "delete", "params", "delete", "current_user", "can?", "current_user", "can?"]
CALLS: ["present?", "issue", "present?", "error", "issue", "label_ids", "any?", "params", "issue", "label_ids", "project", "current_user", "new", "branch_name", "ref", "execute", "issue", "project", "current_user", "branch_name", "new_issue_branch", "merge_request", "create", "valid?", "success", "errors", "error"]
CALLS: ["merge_request", "new", "resolve"]
CALLS: ["note", "resolvable?", "render_404", "note", "current_user", "resolve!", "project", "current_user", "new", "note", "noteable", "execute", "note", "discussion", "serialize_notes?", "render_json_with_notes_serializer", "note", "resolved_by", "try", "view_to_html_string", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["resolve_without_save", "save!"]
CALLS: ["resolvable?", "resolved?", "resolved_at", "now", "resolved_by", "resolved_by_push"]
CALLS: ["resolvable?", "resolve!", "update"]
CALLS: ["has_vue_discussions_cookie?", "params"]
CALLS: ["cookies"]
CALLS: ["current_user", "new", "note", "execute", "note_serializer", "note", "represent", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project", "current_user", "merge_request", "new", "discussion", "execute", "render_discussion"]
CALLS: ["serialize_notes?", "discussion", "notes", "merge_request", "prepare_notes_for_rendering", "render_json_with_discussions_serializer", "render_json_with_html"]
CALLS: ["discussion", "resolved_by", "try", "discussion", "view_to_html_string", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project", "discussion", "noteable", "current_user", "new", "discussion", "represent", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["current_user", "can?", "allow_broken", "close", "create_event", "create_note", "notification_service", "current_user", "close_mr", "todo_service", "current_user", "close_merge_request", "execute_hooks", "assignees", "invalidate_cache_counts", "update_project_counter_caches"]
CALLS: ["mark_pending_todos_as_done"]
CALLS: ["params", "delete", "merge_request", "params", "new", "merge_request", "author", "current_user", "merge_request", "compare_commits", "merge_request", "source_project", "find_source_project", "merge_request", "target_project", "find_target_project", "merge_request", "target_branch", "find_target_branch", "merge_request", "can_be_created", "branches_valid?", "merge_request", "can_be_created", "compare_branches", "assign_title_and_description", "merge_request"]
CALLS: ["assign_title_and_description_from_single_commit", "target_project", "issues_enabled?", "target_project", "external_issue_tracker", "assign_title_from_issue", "merge_request", "title", "source_branch", "titleize", "humanize", "compare_commits", "empty?", "merge_request", "title", "wip_title", "append_closes_description"]
CALLS: ["issue", "issue", "is_a?", "merge_request", "title", "issue", "title", "merge_request", "title", "present?", "issue_iid", "present?", "merge_request", "title", "issue", "to_reference", "source_branch", "downcase", "issue_iid", "downcase", "remove", "titleize", "humanize", "present?", "merge_request", "title"]
CALLS: ["compare_commits", "count", "first", "merge_request", "title", "title", "merge_request", "description", "description", "try"]
CALLS: ["issue", "to_reference", "present?", "issue", "to_reference", "description", "present?", "merge_request", "description", "prepend", "merge_request", "description"]
CALLS: ["source_project", "source_branch_ref", "new", "target_project", "target_branch_ref", "execute", "merge_request", "compare_commits", "commits", "merge_request", "compare"]
CALLS: ["source_branch_specified?", "target_branch_specified?", "validate_branches", "errors", "blank?"]
CALLS: ["branches_present?", "add_error", "same_source_and_target?", "add_error", "source_branch_exists?", "source_branch", "add_error", "target_branch_exists?", "target_branch", "add_error"]
CALLS: ["source_project", "target_project", "target_branch", "source_branch"]
CALLS: ["target_branch", "present?", "source_branch", "present?"]
CALLS: ["errors", "add"]
CALLS: ["params", "present?"]
CALLS: ["params", "present?"]
CALLS: ["target_project", "source_project", "target_branch", "source_branch", "errors", "add", "opened?", "target_project", "merge_requests", "source_branch", "target_branch", "source_project", "try", "where", "opened", "id", "id", "where", "any?", "errors", "pluck", "add"]
CALLS: ["target_branch", "target_project", "default_branch"]
CALLS: ["target_project", "present?", "current_user", "target_project", "can?", "target_project", "project", "default_merge_request_target"]
CALLS: ["forked_from_project", "merge_requests_enabled?", "forked_from_project"]
CALLS: ["source_project", "present?", "current_user", "source_project", "can?", "source_project", "project"]
CALLS: ["current_user", "can_allow_maintainer_to_push?", "params", "delete"]
CALLS: ["maintainer_push_possible?", "source_project", "allowed?"]
CALLS: ["source_project", "present?", "for_fork?", "target_project", "visibility_level", "source_project", "visibility_level", "source_project", "source_branch", "protected?"]
CALLS: ["project", "hook_data", "project", "execute_hooks", "project", "execute_services"]
CALLS: ["assignable_issues", "project", "current_user", "current_user", "id", "new", "execute", "each", "assignable_issues", "count"]
CALLS: ["current_user", "merge_request", "author", "closes_issues", "is_a?", "assignees", "present?", "current_user", "can?", "select"]
CALLS: ["allow_failure?", "retried?", "todo_service", "merge_request_build_failed", "commit_status_merge_requests"]
CALLS: ["author", "create_build_failed_todo", "merge_when_pipeline_succeeds?", "merge_user", "create_build_failed_todo"]
CALLS: ["project", "attributes_for_todo", "create_todos"]
CALLS: ["current_user", "action_member_permission", "can?", "human_access", "params", "update_attributes", "after_execute"]
CALLS: ["update_member_permission", "override_member_permission"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["can_request_access?", "members", "current_user", "now", "utc", "create"]
CALLS: ["current_user", "can?"]
CALLS: ["can_destroy_member?", "is_a?", "source", "user", "last_owner?", "destroy", "user", "invalidate_cache_counts", "request?", "user", "current_user", "notification_service", "decline_access_request", "after_execute"]
CALLS: ["notifiable?", "mailer", "real_source_type", "source_id", "user_id", "member_access_denied_email", "deliver_later"]
CALLS: ["member_source_class", "find", "find", "notification_email", "member_source", "human_name", "member_source", "model_name", "singular", "subject", "mail"]
CALLS: ["classify", "constantize"]
CALLS: ["current_user", "destroy_member_permission", "can?"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["owners", "include?", "owners", "size"]
CALLS: ["params", "blank?", "error", "params", "split", "uniq", "user_limit", "size", "user_limit", "user_limit", "error", "params", "params", "current_user", "add_users", "after_execute", "each", "success"]
CALLS: ["params", "fetch"]
CALLS: ["project", "add_users"]
CALLS: ["present?", "parse_users_list", "transaction_begin", "add_user", "map!", "transaction_end", "transaction"]
CALLS: ["to_i", "email_regexp", "each", "present?", "where", "concat", "members_and_requesters", "where", "index_by"]
CALLS: ["add_users"]
CALLS: ["can_update_access_requester?", "params", "access_level", "params", "accept_request", "after_execute"]
CALLS: ["current_user", "update_member_permission", "can?"]
CALLS: ["request?", "update", "after_accept_request"]
CALLS: ["post_create_hook"]
CALLS: ["current_user", "new", "mattermost_team_params", "create", "errors", "message", "add"]
CALLS: ["path", "name", "public?"]
CALLS: ["current_user", "project", "can?", "unlock_file", "message", "error", "error", "message", "error"]
CALLS: ["params", "lock", "current_user", "can_be_unlocked_by?", "lock", "destroy!", "lock", "success", "error", "lock", "path", "lock", "user_id", "error"]
CALLS: ["params", "present?", "project", "lfs_file_locks", "params", "find", "params", "present?", "project", "lfs_file_locks", "params", "find_by!"]
CALLS: ["id", "user_id", "project", "can?"]
CALLS: ["find_locks", "success", "message", "error"]
CALLS: ["params", "slice", "compact", "symbolize_keys", "project", "lfs_file_locks", "where"]
CALLS: ["current_user", "project", "can?", "create_lock!", "current_lock", "error", "message", "error", "message", "error"]
CALLS: ["project", "lfs_file_locks", "current_user", "params", "create!", "success"]
CALLS: ["project", "lfs_file_locks", "params", "find_by"]
CALLS: ["params", "present?", "params", "convert_color_name_to_hex", "params", "update"]
CALLS: ["params", "strip", "downcase", "start_with?", "to_sym"]
CALLS: ["old_group", "present?", "transaction_begin", "labels_to_transfer", "find_or_create_label!", "id", "group_labels_applied_to_issues", "id", "update_label_links", "group_labels_applied_to_merge_requests", "id", "update_label_links", "id", "update_label_priorities", "find_each", "transaction_end", "transaction"]
CALLS: ["project", "id", "where", "update_all"]
CALLS: ["pluck", "where", "update_all"]
CALLS: ["attributes", "slice", "current_user", "project", "new", "execute", "id"]
CALLS: ["joins", "project", "id", "old_group", "id", "where"]
CALLS: ["joins", "project", "id", "old_group", "id", "where"]
CALLS: ["group_labels_applied_to_issues", "select", "group_labels_applied_to_merge_requests", "select", "new", "to_sql", "where", "reorder", "uniq"]
CALLS: ["project", "group", "is_a?", "transaction_begin", "clone_label_to_group_label", "label_ids_for_merge", "update_issuables", "update_issue_board_lists", "update_priorities", "subscribe_users", "update_project_labels", "find_in_batches", "valid?", "new", "transaction_end", "transaction"]
CALLS: ["attributes", "slice", "project", "group", "merge", "new", "save"]
CALLS: ["where", "destroy_all"]
CALLS: ["where", "update_all"]
CALLS: ["where", "update_all"]
CALLS: ["where", "update_all"]
CALLS: ["current_user", "title", "project", "group", "id", "new", "execute", "where", "not", "select"]
CALLS: ["where", "group", "pluck", "where", "id", "update_all"]
CALLS: ["find_or_create_label"]
CALLS: ["available_labels", "title", "find_by", "nil?", "skip_authorization", "current_user", "parent", "allowed?", "params", "new", "parent_type", "to_sym", "parent", "execute"]
CALLS: ["parent", "model_name", "param_key"]
CALLS: ["current_user", "parent_type", "to_sym", "parent", "id", "parent_is_group?", "new", "skip_authorization", "execute"]
CALLS: ["parent_type"]
CALLS: ["current_user", "id", "new", "execute"]
CALLS: ["current_user", "parent", "new", "execute"]
CALLS: ["params", "present?", "params", "convert_color_name_to_hex", "present?", "labels", "params", "create", "params", "new", "template", "save", "logger", "warn"]
CALLS: ["update?", "key", "zone", "now", "update_column"]
CALLS: ["read_only?", "key", "last_used_at", "zone", "now", "redis_lease", "try_obtain"]
CALLS: ["key", "id", "new"]
CALLS: []
CALLS: []
CALLS: ["user", "keys", "params", "create", "persisted?", "notification_service", "new_key"]
CALLS: ["user", "can?", "mailer", "id", "new_ssh_key_email", "deliver_later"]
CALLS: ["find_by", "user", "user_url", "notification_email", "subject", "mail"]
CALLS: ["new", "deploy_keys_projects", "build", "tap"]
CALLS: ["fetch", "fetch", "fetch", "fetch", "has_changes?", "todo_service", "current_user", "mark_pending_todos_as_done", "previous_changes", "include?", "previous_changes", "include?", "todo_service", "current_user", "update_issue", "assignees", "create_assignee_note", "notification_service", "current_user", "reassigned_issue", "todo_service", "current_user", "reassigned_issue", "previous_changes", "include?", "create_confidentiality_note", "labels", "present?", "notification_service", "current_user", "relabeled_issue", "mentioned_users", "present?", "notification_service", "current_user", "new_mentions_in_issue"]
CALLS: ["create_assignment_todo"]
CALLS: ["update_issuable"]
CALLS: ["relabeled_resource_email"]
CALLS: ["build_recipients", "map", "mailer", "user", "id", "id", "id", "reason", "send", "deliver_later", "each"]
CALLS: ["new_mentions_in_resource_email"]
CALLS: ["project", "current_user", "change_issue_confidentiality"]
CALLS: ["confidential", "new", "create_note"]
CALLS: ["current_user", "spam_check"]
CALLS: ["handle_move_between_ids", "filter_spam_check_params", "change_issue_duplicate", "move_issue_to_new_project", "update"]
CALLS: ["params", "delete", "current_user", "can_move?", "project", "update", "project", "current_user", "new", "execute"]
CALLS: ["params", "delete", "current_user", "new", "find_by", "project", "current_user", "new", "execute"]
CALLS: ["params", "params", "delete", "params", "delete", "get_issue_if_allowed", "get_issue_if_allowed", "move_between"]
CALLS: ["current_user", "new", "find_by", "project", "issues", "find", "current_user", "can?"]
CALLS: ["move_after", "move_before", "relative_position", "relative_position", "move_before", "relative_position", "relative_position", "relative_position", "position_between"]
CALLS: ["relative_position", "prev_relative_position", "shift_before?", "class", "parent_ids", "in_parents", "find_by!", "move_before", "relative_position", "relative_position", "position_between"]
CALLS: ["prev_relative_position", "relative_position"]
CALLS: ["relative_position", "class", "parent_ids", "in_parents", "relative_position", "where", "maximum"]
CALLS: ["relative_position", "next_relative_position", "shift_after?", "class", "parent_ids", "in_parents", "find_by!", "move_after", "relative_position", "relative_position", "position_between"]
CALLS: ["next_relative_position", "relative_position"]
CALLS: ["relative_position", "class", "parent_ids", "in_parents", "relative_position", "where", "minimum"]
CALLS: ["current_user", "can?", "reopen", "event_service", "current_user", "reopen_issue", "create_note", "notification_service", "current_user", "reopen_issue", "execute_hooks", "assignees", "invalidate_cache_counts", "update_project_counter_caches"]
CALLS: ["reopen_resource_email"]
CALLS: ["create_record_event"]
CALLS: ["current_user", "can_move?", "transaction_begin", "create_new_issue", "update_new_issue", "update_old_issue", "transaction_end", "transaction", "notify_participants"]
CALLS: ["notification_service", "issue_moved"]
CALLS: ["build_recipients", "mailer", "user", "reason", "issue_moved_email", "deliver_later", "map"]
CALLS: ["id", "id", "setup_issue_mail", "project", "id", "id", "issue_thread_options", "mail_answer_thread"]
CALLS: ["sender", "recipient", "title", "iid", "subject"]
CALLS: ["find", "project", "project_issue_url", "reply_key", "record"]
CALLS: ["cloneable_label_ids", "cloneable_milestone_id", "author", "description", "rewrite_content", "assignee_ids", "serializable_hash", "symbolize_keys", "merge", "new", "execute"]
CALLS: ["new", "rewrite", "inject"]
CALLS: ["milestone", "title", "group", "current_user", "group", "can?", "group", "id", "id", "new", "execute", "first", "id"]
CALLS: ["milestone?", "target"]
CALLS: ["target_type"]
CALLS: ["milestones", "params", "find_by!"]
CALLS: ["params", "group", "group_projects", "params", "build", "group", "milestones", "params", "find_by_iid", "render_404"]
CALLS: ["params", "build", "render_404"]
CALLS: ["id", "labels", "pluck", "current_user", "new", "execute", "pluck"]
CALLS: ["assignee_id"]
CALLS: ["", "read_attribute", "merge"]
CALLS: ["add_note_moved_to", "close_issue", "mark_as_moved"]
CALLS: ["update"]
CALLS: ["noteable_moved"]
CALLS: ["include?", "to_reference", "new", "create_note"]
CALLS: ["rewrite_notes", "rewrite_issue_award_emoji", "add_note_moved_from"]
CALLS: ["noteable_moved"]
CALLS: ["rewrite_award_emoji"]
CALLS: ["award_emoji", "dup", "awardable", "save", "each"]
CALLS: ["notes_with_associations", "dup", "note", "rewrite_content", "created_at", "updated_at", "update", "rewrite_award_emoji", "find_each"]
CALLS: ["notes", "includes"]
CALLS: ["notes", "authors_loaded?", "notes", "award_emojis_loaded?", "any?", "notes", "includes", "notes"]
CALLS: ["loaded?", "to_a", "association", "loaded?", "all?"]
CALLS: ["loaded?", "to_a", "association", "loaded?", "all?"]
CALLS: ["notes", "includes"]
CALLS: ["current_user", "referenced_merge_requests", "project", "iid", "to_s", "sort", "current_user", "closed_by_merge_requests", "project", "iid", "to_s", "sort"]
CALLS: ["open?", "all_references", "notes", "system", "all_references", "each", "merge_requests", "select", "any?", "map", "id", "where", "pluck", "id", "in?", "select"]
CALLS: ["all_references", "notes_with_associations", "all_references", "each", "merge_requests", "sort_by", "target_project", "project", "select", "merge_requests_readable_by_user"]
CALLS: ["apply_filters_if_needed", "allowed?", "select", "user_scope"]
CALLS: ["allowed?", "call", "each"]
CALLS: ["project", "current_user", "new", "issue", "execute", "view_to_html_string", "json", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["current_user", "can?", "current_user", "can?", "create_issue_duplicate_note", "create_issue_canonical_note", "close_service", "project", "current_user", "new", "execute"]
CALLS: []
CALLS: ["project", "current_user", "mark_canonical_issue_of_duplicate"]
CALLS: ["to_reference", "new", "create_note"]
CALLS: ["project", "current_user", "mark_duplicate_issue"]
CALLS: ["to_reference", "new", "create_note"]
CALLS: []
CALLS: ["project", "current_user", "params", "new", "execute", "filter_spam_check_params", "filter_resolve_discussion_params", "create"]
CALLS: ["params", "delete", "params", "delete"]
CALLS: ["current_user", "can?", "close_issue"]
CALLS: ["filter_resolve_discussion_params", "project", "issues", "issue_params", "new"]
CALLS: ["confidential_changed?"]
CALLS: ["hook_data", "confidential?", "project", "execute_hooks", "project", "execute_services"]
CALLS: ["state_changed?"]
CALLS: []
CALLS: []
CALLS: ["model_name", "singular", "public_send", "each"]
CALLS: ["labels", "to_a", "mentioned_users", "to_a", "assignees", "to_a", "respond_to?", "total_time_spent"]
CALLS: ["params", "delete", "todo_service", "current_user", "new_award_emoji", "current_user", "toggle_award_emoji"]
CALLS: ["mark_pending_todos_as_done"]
CALLS: ["awarded_emoji?", "remove_award_emoji", "create_award_emoji"]
CALLS: ["award_emoji", "where", "destroy_all"]
CALLS: ["emoji_awardable?", "award_emoji", "normalize_name", "create"]
CALLS: ["system?"]
CALLS: ["normalize_emoji_name"]
CALLS: []
CALLS: ["award_emoji", "where", "exists?"]
CALLS: ["authenticate_user!", "params", "require", "awardable", "current_user", "user_can_award?", "awardable", "current_user", "toggle_award_emoji", "awardable", "to_todoable", "new", "current_user", "new_award_emoji"]
CALLS: ["awardable_by_user?", "allowed?"]
CALLS: ["user_authored?", "normalize_name", "awardable_votes?"]
CALLS: ["respond_to?", "author", "user"]
CALLS: []
CALLS: ["for_personal_snippet?", "noteable"]
CALLS: ["params", "delete", "todo_service", "current_user", "mark_todo", "current_user", "new", "find_by", "todo_service", "current_user", "mark_todos_as_done_by_ids"]
CALLS: ["todos_by_ids", "mark_todos_as_done"]
CALLS: ["todos", "where"]
CALLS: ["params", "delete", "current_user", "project", "subscribe", "current_user", "project", "unsubscribe"]
CALLS: ["unsubscribe_from_other_levels", "find_or_initialize_subscription", "update"]
CALLS: ["subscriptions", "id", "try", "find_or_initialize_by"]
CALLS: ["subscriptions", "where", "blank?", "where", "not", "where", "update_all"]
CALLS: ["unsubscribe_from_other_levels", "find_or_initialize_subscription", "update"]
CALLS: ["params", "for", "unsubscribable?", "render_404", "current_user", "params", "unsubscribe_and_redirect"]
CALLS: ["noteable", "recipient", "project", "unsubscribe", "flash", "current_user", "issue_path", "merge_request_path", "root_path", "new_user_session_path"]
CALLS: ["issue_url"]
CALLS: ["project", "project_issue_path"]
CALLS: ["project", "project_issue_path"]
CALLS: ["params", "delete", "reopen_service", "project", "current_user", "new", "execute", "close_service", "project", "current_user", "new", "execute"]
CALLS: []
CALLS: []
CALLS: ["title_changed?", "description_changed?"]
CALLS: ["sort", "sort"]
CALLS: []
CALLS: []
CALLS: ["delete", "delete", "delete", "blank?", "blank?"]
CALLS: ["to_ability_name", "current_user", "can?", "params", "delete", "params", "delete", "params", "delete", "params", "delete", "params", "delete", "params", "delete", "params", "delete", "params", "delete", "params", "delete", "params", "delete", "params", "delete", "filter_assignee", "filter_milestone", "filter_labels"]
CALLS: ["params", "blank?", "params", "params", "params", "assignee_can_read?", "select", "params", "map", "params", "any?", "params", "params", "delete"]
CALLS: ["find_by_id", "to_ability_name", "persisted?", "project", "can?"]
CALLS: ["filter_labels_in_param", "filter_labels_in_param", "filter_labels_in_param", "find_or_create_label_ids"]
CALLS: ["params", "delete", "params", "split", "current_user", "parent", "strip", "available_labels", "new", "execute", "try", "map", "compact"]
CALLS: ["params", "to_a", "empty?", "params", "available_labels", "params", "where", "pluck"]
CALLS: ["params", "params", "project", "group", "self_and_ancestors", "pluck", "project", "id", "for_projects_and_groups", "find_by_id", "params"]
CALLS: ["", "compact", "any?", "arel_table", "in", "compact", "any?", "arel_table", "in", "reduce", "where"]
CALLS: ["params", "present?", "params", "to_s", "params", "assignee_can_read?", "params", "delete"]
CALLS: ["new", "destroy", "update_project_counter_caches", "assignees", "each", "destroy_target"]
CALLS: ["previous_changes", "include?", "previous_changes", "first", "create_title_change_note", "handle_description_change_note", "is_a?", "handle_time_tracking_note", "labels", "create_labels_note", "previous_changes", "include?", "create_discussion_lock_note", "previous_changes", "include?", "create_milestone_note"]
CALLS: ["issuable", "current_user", "discussion_lock"]
CALLS: ["discussion_locked?", "class", "to_s", "titleize", "downcase", "project", "new", "create_note"]
CALLS: ["issuable", "issuable", "project", "current_user", "issuable", "milestone", "change_milestone"]
CALLS: ["group_milestone?", "nil?", "to_reference", "new", "create_note"]
CALLS: ["create_wip_note", "issuable", "wipless_title_changed", "issuable", "issuable", "project", "current_user", "change_title"]
CALLS: ["title", "dup", "new", "inline_diffs", "new", "mark", "new", "mark", "new", "create_note"]
CALLS: ["issuable", "is_a?", "work_in_progress?", "issuable", "work_in_progress?", "issuable", "issuable", "project", "current_user", "handle_merge_request_wip"]
CALLS: ["work_in_progress?", "new", "create_note"]
CALLS: ["class", "wipless_title", "wipless_title"]
CALLS: ["title"]
CALLS: ["issuable", "labels", "issuable", "labels", "issuable", "issuable", "project", "current_user", "change_label"]
CALLS: ["count", "count", "to_reference", "map", "join", "map", "join", "present?", "present?", "present?", "pluralize", "new", "create_note"]
CALLS: ["issuable", "previous_changes", "include?", "issuable", "tasks?", "issuable", "updated_tasks", "any?", "create_task_status_note", "create_description_change_note"]
CALLS: ["issuable", "updated_tasks", "issuable", "issuable", "project", "current_user", "change_task_status", "each"]
CALLS: ["complete?", "source", "new", "create_note"]
CALLS: ["issuable", "issuable", "project", "current_user", "change_description"]
CALLS: ["new", "create_note"]
CALLS: ["issuable", "previous_changes", "include?", "create_time_estimate_note", "issuable", "time_spent?", "create_time_spent_note"]
CALLS: ["issuable", "issuable", "project", "issuable", "time_spent_user", "change_time_spent"]
CALLS: ["time_spent", "spent_at", "abs", "output", "new", "create_note"]
CALLS: ["issuable", "issuable", "project", "current_user", "change_time_estimate"]
CALLS: ["time_estimate", "output", "time_estimate", "new", "create_note"]
CALLS: ["classify", "constantize", "classify", "pluralize", "constantize", "params", "delete", "split", "where", "permitted_attrs", "params", "present?", "params", "delete", "each", "params", "to_s", "params", "current_user", "can?", "project", "current_user", "params", "new", "execute", "each", "count", "count", "zero?"]
CALLS: ["push", "push"]
CALLS: ["path", "directory?", "clean_up_export_files", "measure"]
CALLS: ["path", "path", "mmin", "popen"]
CALLS: ["reject_parent_id!", "group", "params", "valid_visibility_level_change?", "valid_share_with_group_lock_change?", "group", "params", "assign_attributes", "group", "save", "group", "errors", "message", "add"]
CALLS: ["changing_share_with_group_lock?", "current_user", "group", "can?", "group", "errors", "s_", "add"]
CALLS: ["params", "nil?", "params", "group", "share_with_group_lock"]
CALLS: ["params", "except!"]
CALLS: ["ensure_allowed_transfer", "proceed_to_transfer", "errors", "clear", "message"]
CALLS: ["group_is_already_root?", "raise_transfer_error", "supports_nested_groups?", "raise_transfer_error", "same_parent?", "raise_transfer_error", "valid_policies?", "raise_transfer_error", "namespace_with_same_path?", "raise_transfer_error"]
CALLS: []
CALLS: ["path", "exists?"]
CALLS: ["current_user", "can?", "current_user", "can?", "current_user", "can?"]
CALLS: ["id", "parent_id"]
CALLS: ["has_parent?"]
CALLS: ["transaction_begin", "update_group_attributes", "transaction_end", "transaction"]
CALLS: ["visibility_level", "visibility_level", "update_children_and_projects_visibility", "visibility_level", "visibility_level", "parent", "save!"]
CALLS: ["descendants", "visibility_level", "where", "select", "where", "visibility_level", "update_all", "all_projects", "visibility_level", "where", "visibility_level", "update_all"]
CALLS: ["group_path", "group_path", "namespace_or_group", "group_path", "include?", "supports_nested_groups?", "create_group_path"]
CALLS: ["find_by_full_path"]
CALLS: ["group_path", "split", "shift", "join", "params", "reverse_merge", "current_application_settings", "default_group_visibility", "namespace_or_group", "current_user", "new", "execute"]
CALLS: ["group", "prepare_for_destroy", "group", "projects", "current_user", "legacy_storage?", "new", "execute", "each", "group", "children", "current_user", "new", "execute", "each", "group", "chat_team", "current_user", "remove_mattermost_team", "group", "destroy"]
CALLS: ["new", "team_id", "destroy", "logger", "error"]
CALLS: ["params", "new", "can_use_visibility_level?", "can_create_group?", "name", "path", "dup", "create_chat_team?", "current_user", "new", "execute", "errors", "any?", "build_chat_team", "save", "current_user", "add_owner"]
CALLS: ["current_user", "params", "allowed_for?", "deny_visibility_level"]
CALLS: ["config", "mattermost", "enabled", "group", "chat_team", "nil?"]
CALLS: ["gravatar_enabled?", "presence", "presence", "strip", "downcase", "hexdigest", "gravatar_url", "strip", "url_encode", "strip", "url_encode"]
CALLS: ["gitlab_config", "https", "gravatar_config", "ssl_url", "gravatar_config", "plain_url"]
CALLS: ["config", "gravatar"]
CALLS: ["user", "gpg_keys", "params", "create", "persisted?", "notification_service", "new_gpg_key"]
CALLS: ["user", "can?", "mailer", "id", "new_gpg_key_email", "deliver_later"]
CALLS: ["find_by", "user", "user_url", "notification_email", "subject", "mail"]
CALLS: ["project", "empty_repo?", "project", "repository", "after_create", "project", "repository", "before_push_tag", "build_push_data", "new", "project", "current_user", "push", "project", "current_user", "new", "execute", "new", "build_system_push_data", "dup", "execute_hooks", "project", "dup", "execute_hooks", "project", "dup", "execute_services", "project", "id", "perform_async"]
CALLS: ["project", "current_user", "params", "params", "params", "build"]
CALLS: ["expire_statistics_caches", "expire_emptiness_caches", "expire_tags_cache", "repository_event"]
CALLS: ["empty_repo?", "repository", "after_create", "repository", "branch_name", "after_push_commit", "push_remove_branch?", "repository", "after_remove_branch", "push_to_new_branch?", "repository", "after_create_branch", "default_branch?", "process_default_branch", "repository", "default_branch", "params", "commits_between", "process_commit_messages", "push_to_existing_branch?", "repository", "params", "params", "commits_between", "process_commit_messages", "default_branch?", "update_gitattributes", "execute_related_hooks", "perform_housekeeping", "update_caches", "update_signatures"]
CALLS: ["params", "branch_ref?", "params", "ref_name", "project", "default_branch", "project", "default_branch", "nil?"]
CALLS: ["params", "branch_ref?", "params", "blank_ref?"]
CALLS: ["params", "branch_ref?", "params", "blank_ref?"]
CALLS: ["params", "branch_ref?", "params", "blank_ref?"]
CALLS: ["project", "repository", "params", "commit_count_for_ref", "max", "project", "repository", "params", "commits", "after_create_default_branch"]
CALLS: ["exists?", "cache", "raw_repository", "commit_count", "fetch"]
CALLS: ["new", "increment!", "needed?", "execute"]
CALLS: ["pushes_since_gc", "period_match?", "housekeeping_enabled?"]
CALLS: ["housekeeping_enabled"]
CALLS: ["gc_period", "full_repack_period", "repack_period", "pushes_since_gc", "any?"]
CALLS: ["housekeeping_incremental_repack_period"]
CALLS: ["id", "current_user", "id", "params", "params", "params", "perform_async", "new", "current_user", "build_push_data", "push", "current_user", "build_push_data", "new", "execute", "build_push_data", "dup", "perform_async", "build_push_data", "dup", "execute_hooks", "build_push_data", "dup", "execute_services", "push_remove_branch?", "project", "current_user", "new", "branch_name", "execute"]
CALLS: ["default_branch?", "last", "matches_cross_reference_regex?", "project", "id", "current_user", "id", "to_hash", "perform_async", "each"]
CALLS: ["last", "map", "empty?", "where", "pluck", "empty?", "project", "repository", "shas_with_signatures", "project", "id", "perform_async", "each"]
CALLS: ["default_branch?", "push_to_new_branch?", "new", "last", "raw_deltas", "new_path", "each", "each", "to_a", "types_in_paths", "id", "perform_async"]
CALLS: ["repository", "params", "copy_gitattributes"]
CALLS: ["expire_branches_cache"]
CALLS: ["expire_statistics_caches", "expire_branch_cache", "repository_event"]
CALLS: ["map", "compact", "render_notes"]
CALLS: ["current_user", "new", "render_options", "execute"]
CALLS: []
CALLS: ["destroy", "update_secondary_emails!"]
CALLS: ["new", "update_secondary_emails!", "execute"]
CALLS: ["set_notification_email", "set_public_email", "notification_email_changed?", "public_email_changed?", "save"]
CALLS: ["public_email", "blank?", "all_emails", "public_email", "include?", "public_email"]
CALLS: ["temp_oauth_email?", "email", "emails", "map", "concat"]
CALLS: ["notification_email", "blank?", "all_emails", "notification_email", "include?", "notification_email", "email"]
CALLS: ["emails", "merge", "create"]
CALLS: ["resend_confirmation_instructions"]
CALLS: ["current_user", "current_user", "new", "execute", "flash", "email", "flash", "profile_emails_url"]
CALLS: ["tracer", "position", "trace", "notes", "change_position", "project", "resolve_outdated_diff_discussions?", "current_user", "resolve_without_save", "position", "change_position", "each", "transaction_begin", "notes", "timeless", "each", "current_user", "project", "current_user", "diff_discussion_outdated", "transaction_end", "transaction"]
CALLS: ["noteable", "diff_refs", "merge_request_diffs", "viewable", "count", "version_params_for", "repository", "line_code", "url_helpers", "merge", "diffs_project_merge_request_url", "reply_attributes", "merge", "merge", "create", "system_note_metadata", "new"]
CALLS: ["", "without_state"]
CALLS: ["merge_request_diff_for", "id", "head_sha", "merge_request_diff_for", "id", "start_sha"]
CALLS: ["is_a?", "start_sha", "head_sha", "base_sha", "viewable_diffs", "attributes", "keys", "slice", "find"]
CALLS: ["merge_request_diffs", "viewable", "to_a"]
CALLS: ["project", "params", "params", "params", "new"]
CALLS: ["resolve_discussion", "each"]
CALLS: ["current_user", "can_resolve?", "current_user", "resolve!", "project", "current_user", "new", "merge_request", "execute", "follow_up_issue", "project", "current_user", "follow_up_issue", "discussion_continued_in_issue"]
CALLS: ["to_reference", "reply_attributes", "merge", "merge", "create", "system_note_metadata", "new"]
CALLS: ["params"]
CALLS: ["resolvable?", "noteable", "author", "project", "can?"]
CALLS: ["deploy_tokens", "params", "create"]
CALLS: ["params", "user", "merge", "create"]
CALLS: ["current_user", "project", "can?", "project", "repository", "merged_branch_names", "merge_request_branch_names", "project", "protected?", "reject", "project", "current_user", "new", "execute", "each"]
CALLS: ["project", "origin_merge_requests", "opened", "reorder", "uniq", "pluck", "project", "merge_requests", "opened", "reorder", "uniq", "pluck", "uniq"]
CALLS: ["merge_requests", "id", "where"]
CALLS: ["project", "repository", "find_branch", "current_user", "project", "can?", "error", "error", "current_user", "rm_branch", "success", "error", "message", "error"]
CALLS: ["before_remove_branch", "raw_repository", "rm_branch", "after_remove_branch"]
CALLS: ["expire_branches_cache", "repository_event"]
CALLS: ["raw_repository", "find_branch"]
CALLS: ["filter_spam_check_params", "project", "project", "snippets", "params", "build", "params", "new", "current_user", "params", "allowed_for?", "deny_visibility_level", "author", "current_user", "current_user", "spam_check", "save", "new", "create"]
CALLS: ["project", "repository", "find_tag", "project", "releases", "find_by", "error", "project", "releases", "new", "save", "success", "error"]
CALLS: ["executable?", "transaction_begin", "expanded_environment_url", "environment", "external_url", "expanded_environment_url", "environment", "action", "fire_state_event", "environment", "save", "environment", "stopped?", "deploy", "tap", "transaction_end", "transaction"]
CALLS: ["find_by", "project", "new", "execute", "project", "new", "execute"]
CALLS: ["environment_url", "environment_url", "variables", "expand"]
CALLS: ["project", "deployments", "environment", "job", "ref", "job", "tag", "job", "sha", "job", "user", "job", "on_stop", "create"]
CALLS: ["environment_options"]
CALLS: ["project", "job", "environment", "present?", "environment"]
CALLS: ["project", "empty_repo?", "create_master_branch", "project", "current_user", "new", "execute", "repository", "current_user", "add_branch", "success", "error", "message", "error"]
CALLS: ["project", "repository", "current_user", "create_file"]
CALLS: ["options", "options", "multi_action"]
CALLS: ["raw_repository", "add_branch", "after_create_branch"]
CALLS: ["repository", "start_project", "repository", "start_ref_name", "compare_source_branch", "new"]
CALLS: ["raw_repository", "raw_repository", "compare_source_branch"]
CALLS: ["validate!", "create_commit!", "success", "message", "error"]
CALLS: ["repository", "current_user", "update_file"]
CALLS: ["project", "new", "params", "actions_after_lfs_transformation", "commit_actions!"]
CALLS: ["repository", "current_user", "multi_action", "raise_error"]
CALLS: ["new_file", "content", "encoding", "map"]
CALLS: ["repository", "current_user", "delete_file"]
CALLS: ["options", "options", "multi_action"]
CALLS: ["project", "new", "new_file", "content", "create_transformed_commit"]
CALLS: ["repository", "current_user", "create_file"]
CALLS: ["repository", "current_user", "create_dir"]
CALLS: ["options", "options", "multi_action"]
CALLS: ["values", "all?", "render_404", "join", "project_tree_path", "project_tree_path", "create_commit", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["commit_change"]
CALLS: ["repository", "respond_to?", "current_user", "public_send", "repository", "current_user", "public_send", "to_s", "dasherize", "current_user", "change_type_title", "current_user", "change_type_title", "to_s", "dasherize"]
CALLS: []
CALLS: ["commit_change"]
CALLS: ["cohorts"]
CALLS: ["months", "ago", "beginning_of_month", "to_date", "new", "last", "running_totals", "counts_by_month", "to_i", "pop", "first", "new"]
CALLS: ["column_to_date", "column_to_date", "months", "ago", "end_of_month", "where", "group", "reorder", "count"]
CALLS: ["postgresql?"]
CALLS: ["counts_by_month", "map", "last", "to_i", "to_i", "reduce", "reverse", "first", "zero?", "map"]
CALLS: ["params", "update"]
CALLS: ["status", "continue_creation", "finalize_creation", "status", "status_message", "make_errored!", "request_operation"]
CALLS: ["new", "provider", "execute"]
CALLS: ["new", "provider", "execute"]
CALLS: ["elapsed_time_from_creation", "provider", "cluster_id", "perform_in", "provider", "_", "make_errored!"]
CALLS: ["now", "utc", "start_time", "to_time", "utc"]
CALLS: ["make_creating", "cluster_id", "perform_in", "errors", "make_errored!", "get_operation_id"]
CALLS: ["provider", "api_client", "provider", "gcp_project_id", "provider", "zone", "provider", "cluster", "name", "provider", "num_nodes", "provider", "machine_type", "projects_zones_clusters_create", "status", "status", "provider", "status_message", "make_errored!", "provider", "api_client", "self_link", "parse_operation_id", "provider", "make_errored!", "provider", "message", "make_errored!"]
CALLS: ["access_token", "access_token", "new"]
CALLS: ["configure_provider", "configure_kubernetes", "cluster", "save!", "message", "make_errored!", "message", "make_errored!"]
CALLS: ["cluster", "platform_type", "cluster", "gke_cluster", "endpoint", "gke_cluster", "master_auth", "cluster_ca_certificate", "decode64", "gke_cluster", "master_auth", "username", "gke_cluster", "master_auth", "password", "request_kubernetes_token", "build_platform_kubernetes"]
CALLS: ["provider", "api_client", "provider", "gcp_project_id", "provider", "zone", "cluster", "name", "projects_zones_clusters_get"]
CALLS: ["gke_cluster", "endpoint", "gke_cluster", "master_auth", "cluster_ca_certificate", "decode64", "gke_cluster", "master_auth", "username", "gke_cluster", "master_auth", "password", "new", "execute"]
CALLS: ["provider", "endpoint", "gke_cluster", "endpoint", "provider", "status_event"]
CALLS: ["api_client", "gcp_project_id", "zone", "operation_id", "projects_zones_operations", "block_given?", "message", "make_errored!"]
CALLS: ["can_create_cluster?", "_", "new", "create_cluster", "persisted?", "id", "perform_async", "tap"]
CALLS: ["project", "clusters", "empty?"]
CALLS: ["cluster_params", "create"]
CALLS: ["params", "access_token", "try", "params", "current_user", "project", "merge"]
CALLS: ["application_class", "cluster", "find_or_create_by!", "make_scheduled!", "name", "id", "perform_async", "try"]
CALLS: ["params"]
CALLS: ["params", "render_404"]
CALLS: ["app", "scheduled?", "app", "make_installing!", "helm_api", "install_command", "install", "app", "name", "app", "id", "perform_in", "app", "message", "make_errored!", "app", "make_errored!"]
CALLS: ["app", "install_command"]
CALLS: ["kubeclient", "new"]
CALLS: ["name", "chart", "values", "repository", "new"]
CALLS: ["name"]
CALLS: []
CALLS: []
CALLS: ["name", "chart", "values", "new"]
CALLS: ["name", "chart", "values", "new"]
CALLS: ["name", "new"]
CALLS: ["app", "installing?", "installation_phase", "on_success", "on_failed", "check_timeout", "app", "errored?", "app", "message", "make_errored!"]
CALLS: ["helm_api", "install_command", "pod_name", "installation_status"]
CALLS: ["timeouted?", "app", "make_errored!", "remove_installation_pod", "app", "name", "app", "id", "perform_in"]
CALLS: ["helm_api", "install_command", "pod_name", "delete_installation_pod!"]
CALLS: ["now", "utc", "app", "updated_at", "to_time", "utc"]
CALLS: ["app", "installation_errors", "make_errored!", "remove_installation_pod"]
CALLS: ["helm_api", "install_command", "pod_name", "installation_log"]
CALLS: ["app", "make_installed!", "remove_installation_pod"]
CALLS: ["app", "external_ip", "try_obtain_lease", "ingress_ip", "app", "ingress_ip", "update!"]
CALLS: ["service", "status", "loadBalancer", "ingress", "first", "ip"]
CALLS: ["project", "runners", "can_pick?", "tick_runner_queue", "each", "project", "shared_runners_enabled?", "shared", "can_pick?", "tick_runner_queue", "each"]
CALLS: ["projects", "with_shared_runners", "any?"]
CALLS: ["", "where"]
CALLS: ["hex", "runner_queue_key", "set_key_and_notify", "tap"]
CALLS: ["token"]
CALLS: ["ref_protected?", "protected?", "project_id", "assignable_for?", "accepting_tags?"]
CALLS: ["new", "can_create_tag?", "can_update_branch?"]
CALLS: ["run_untagged?", "has_tags?", "tag_list", "tag_list", "empty?"]
CALLS: ["is_shared?", "projects", "exists?"]
CALLS: ["", "where"]
CALLS: ["present?", "environments", "stop_action?", "current_user", "can?", "current_user", "stop_with_action!", "each"]
CALLS: ["available?", "stop!", "stop_action", "play"]
CALLS: ["on_stop", "present?", "manual_actions", "manual_actions", "on_stop", "find_by"]
CALLS: ["deployable", "try"]
CALLS: ["", "where"]
CALLS: ["project", "new", "execute"]
CALLS: ["schedule", "id", "current_user", "id", "perform_async", "flash", "project_pipelines_path", "html_safe", "flash", "pipeline_schedules_path"]
CALLS: ["project", "pipeline_schedules", "params", "find"]
CALLS: ["playable?", "respond_422", "current_user", "play", "build_path"]
CALLS: ["build", "playable?", "request", "current_user", "build", "can?"]
CALLS: ["build", "playable?", "request", "current_user", "build", "can?"]
CALLS: []
CALLS: ["action?", "manual?", "complete?"]
CALLS: ["available?", "stop_action", "present?"]
CALLS: ["stop_action", "present?"]
CALLS: ["current_user", "can?", "retryable_builds", "current_user", "can?", "project", "current_user", "new", "reprocess!", "find_each", "builds", "latest", "skipped", "process", "retry_optimistic_lock", "find_each", "project", "current_user", "new", "close_all", "process!"]
CALLS: ["todo_service", "merge_request_build_retried", "pipeline_merge_requests"]
CALLS: ["current_user", "can?", "public_send", "map", "current_user", "push", "retried", "transaction_begin", "pipeline", "builds", "latest", "name", "where", "update_all", "project", "builds", "create!", "transaction_end", "transaction"]
CALLS: ["", "where"]
CALLS: ["statuses", "order", "statuses", "latest"]
CALLS: ["project", "user", "new", "execute"]
CALLS: ["reprocess!", "pipeline", "stage_idx", "mark_as_processable_after_stage", "enqueue!", "project", "current_user", "new", "close", "tap"]
CALLS: ["builds", "skipped", "after_stage", "find_each"]
CALLS: ["", "where"]
CALLS: ["runner", "shared?", "builds_for_shared_runner", "builds_for_specific_runner", "enabled?", "runner", "tags", "ids", "matches_tag_ids", "runner", "run_untagged?", "with_any_tags", "runner", "can_pick?", "runner_id", "runner", "id", "run!", "register_success", "new", "drop!", "find", "register_failure", "new"]
CALLS: ["pages_deployments_failed_total_counter", "increment"]
CALLS: ["counter"]
CALLS: ["runner", "shared?", "jobs_running_for_project", "queued_at", "nil?", "job_queue_duration_seconds", "now", "queued_at", "observe", "attempt_counter", "increment"]
CALLS: ["histogram"]
CALLS: ["counter"]
CALLS: ["runner", "shared?", "project", "builds", "running", "shared", "where", "limit", "count"]
CALLS: ["failed_attempt_counter", "increment", "attempt_counter", "increment"]
CALLS: ["counter"]
CALLS: ["new_builds", "runner", "projects", "without_deleted", "with_builds_enabled", "where", "order"]
CALLS: ["pending", "unstarted", "runner", "ref_protected?", "ref_protected"]
CALLS: ["", "where"]
CALLS: ["", "where"]
CALLS: ["", "with_feature_enabled"]
CALLS: ["new_builds", "joins", "where", "joins", "where", "running_builds_for_shared_runners", "to_sql", "joins", "order"]
CALLS: ["running", "shared", "where", "group", "select"]
CALLS: ["", "where", "where", "where", "select", "where"]
CALLS: ["", "where", "where", "where", "where", "not", "select", "where"]
CALLS: ["update_retried", "stage_indexes_of_created_builds", "process_stage", "map", "update_status", "flatten", "any?"]
CALLS: ["pipeline", "statuses", "latest", "group", "having", "pluck", "any?", "pipeline", "statuses", "latest", "map", "where", "where", "map", "not", "update_all"]
CALLS: ["created_builds", "order", "pluck"]
CALLS: ["pipeline", "builds", "created"]
CALLS: ["status_for_prior_stages", "include?", "created_builds_in_stage", "process_build", "retry_lock", "select"]
CALLS: ["created_builds", "where"]
CALLS: ["pipeline", "builds", "where", "latest", "status"]
CALLS: ["when", "valid_statuses_for_when", "include?", "action?", "actionize", "enqueue", "skip"]
CALLS: []
CALLS: ["current_user", "can?", "enqueue", "current_user", "update", "tap", "current_user", "retry"]
CALLS: ["project", "new", "execute"]
CALLS: ["pipeline", "current_user", "retry_failed", "project", "project_pipelines_path", "html", "json", "respond_to"]
CALLS: ["project", "new", "execute"]
CALLS: ["retryable?", "respond_422", "current_user", "retry", "build_path"]
CALLS: ["build", "retryable?", "request", "current_user", "build", "can?"]
CALLS: []
CALLS: ["retryable_builds", "any?"]
CALLS: ["success?", "failed?", "canceled?"]
CALLS: ["build", "failed?"]
CALLS: ["hook", "hook_log", "request_data", "hook_log", "trigger", "execute", "set_hook_execution_notice", "edit_project_hook_path"]
CALLS: ["hook", "web_hook_logs", "params", "find"]
CALLS: ["flash", "flash", "flash"]
CALLS: ["hook", "web_hook_logs", "params", "find"]
CALLS: ["hook", "hook_log", "request_data", "hook_log", "trigger", "execute", "set_hook_execution_notice", "edit_admin_hook_path"]
CALLS: ["trigger_from_token", "trigger_from_token", "create_pipeline_from_trigger"]
CALLS: ["params", "to_s", "find_by_token", "strong_memoize"]
CALLS: ["project", "project", "project", "owner", "params", "new", "trigger_requests", "build", "variables", "variables", "build", "execute", "persisted?", "success", "errors", "messages", "error"]
CALLS: ["read_secrets", "dig", "dig", "decode64", "each"]
CALLS: ["build_kubeclient!", "get_secrets", "as_json", "error_code"]
CALLS: ["trace_sections", "empty?", "table_name", "extract_sections", "bulk_insert"]
CALLS: ["trace", "extract_sections", "delete", "find_or_create_name", "id", "project", "id", "id", "merge", "map"]
CALLS: ["project", "build_trace_section_names", "find_or_create_by!", "project", "build_trace_section_names", "find_by!"]
CALLS: ["stage_id", "present?", "invalid?", "ensure_stage", "stage_id", "id", "block_given?", "tap"]
CALLS: ["find_stage", "create_stage"]
CALLS: ["stage", "pipeline", "project", "create!"]
CALLS: ["pipeline", "stages", "stage", "find_by"]
CALLS: ["new", "params", "params", "params", "params", "project", "current_user", "new", "pipeline", "new", "schedule_head_pipeline_update", "complete?", "project", "auto_cancel_pending_pipelines?", "cancel_pending_pipelines", "pipeline_created_counter", "increment", "process!", "build!", "pipeline"]
CALLS: ["related_merge_requests", "id", "perform_async", "each"]
CALLS: ["pipeline", "project", "source_of_merge_requests", "opened", "pipeline", "ref", "where"]
CALLS: ["counter"]
CALLS: ["auto_cancelable_pipelines", "pipeline", "auto_cancel_running", "find_each", "retry_lock"]
CALLS: ["project", "pipelines", "pipeline", "ref", "where", "where", "pipeline", "id", "not", "where", "project", "pipeline", "ref", "commit", "try", "not", "created_or_pending"]
CALLS: ["", "where"]
CALLS: ["update", "auto_canceled_by", "cancel_running"]
CALLS: ["project", "pipeline_schedules", "pipeline_schedule_params", "create"]
CALLS: ["params", "current_user", "merge"]
CALLS: ["new", "projects_list", "project_id", "projects_get_billing_info", "billing_enabled", "select"]
CALLS: ["find_chat_name", "update_last_used_at"]
CALLS: ["find_by"]
CALLS: ["new", "execute"]
CALLS: ["update_last_used_at?", "id", "to_i", "new", "try_obtain", "touch"]
CALLS: ["last_used_at", "nil?", "last_used_at", "ago"]
CALLS: ["chat_name_params", "values", "all?", "request_token", "new_profile_chat_name_url"]
CALLS: ["chat_name_token", "chat_name_params", "store!"]
CALLS: ["board", "position", "params", "movable?", "valid_move?", "reorder_intermediate_lists", "update_list_position", "with_lock"]
CALLS: ["new_position", "update_attribute"]
CALLS: ["old_position", "new_position", "decrement_intermediate_lists", "increment_intermediate_lists"]
CALLS: ["board", "lists", "movable", "new_position", "where", "old_position", "where", "update_all"]
CALLS: ["board", "lists", "movable", "old_position", "where", "new_position", "where", "update_all"]
CALLS: ["new_position", "present?", "new_position", "old_position", "new_position", "new_position", "board", "lists", "movable", "size"]
CALLS: ["lists", "backlog", "exists?", "lists", "create", "lists"]
CALLS: ["lists", "movable", "empty?", "transaction_begin", "label_params", "create_list", "each", "transaction_end", "transaction"]
CALLS: ["find_or_create_label", "parent", "current_user", "id", "new", "execute"]
CALLS: ["lists", "create"]
CALLS: ["destroyable?", "board", "decrement_higher_lists", "remove_list", "with_lock"]
CALLS: ["destroy"]
CALLS: ["board", "lists", "movable", "position", "where", "update_all"]
CALLS: ["label?"]
CALLS: ["transaction_begin", "available_labels_for", "params", "find", "next_position", "create_list", "transaction_end", "transaction"]
CALLS: ["lists", "movable", "maximum", "nil?", "succ"]
CALLS: ["group_board?", "parent", "id", "merge!", "parent", "id", "current_user", "new", "execute"]
CALLS: ["parent", "boards", "empty?", "create_board!", "boards"]
CALLS: ["parent", "current_user", "new", "execute"]
CALLS: ["parent", "boards", "params", "create", "persisted?", "lists", "create", "lists", "create"]
CALLS: ["current_user", "can?", "issue_params", "empty?", "update"]
CALLS: ["set_parent", "set_state", "set_scope", "params"]
CALLS: ["params", "board", "group_board?"]
CALLS: ["params", "list", "list", "closed?"]
CALLS: ["params", "key?", "board", "lists", "params", "find"]
CALLS: ["board", "lists", "params", "delete", "find"]
CALLS: ["ls_files", "json", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["root_ref", "raw_repository", "ls_files"]
CALLS: ["parent", "is_a?", "params", "parent", "id", "params", "parent", "id"]
CALLS: ["current_user", "filter_params", "new", "execute", "movable_list?", "closed_list?", "without_board_labels", "movable_list?", "with_list_label", "order_by_position_and_priority"]
CALLS: ["where", "list", "label_id", "where", "limit", "arel", "exists", "where"]
CALLS: ["board_label_ids", "any?", "where", "issues_label_links", "limit", "arel", "exists", "not"]
CALLS: ["where", "board_label_ids", "where"]
CALLS: ["board", "lists", "movable", "pluck"]
CALLS: ["list", "present?", "list", "closed?"]
CALLS: ["list", "present?", "list", "movable?"]
CALLS: ["order_labels_priority", "nulls_last_order", "nulls_last_order", "reorder"]
CALLS: ["params", "list", "label_id", "merge", "create_issue"]
CALLS: ["project", "current_user", "new", "execute"]
CALLS: ["can_create_board?", "create_board!"]
CALLS: ["parent", "boards", "size"]
CALLS: ["params", "present?", "params", "update_attributes"]
CALLS: ["params", "new", "execute", "save", "tap"]
CALLS: ["is_a?", "params", "merge", "new", "params", "merge", "new"]
CALLS: ["registry", "enabled", "error", "scope", "current_user", "project", "error", "scope", "authorized_token", "encoded"]
CALLS: ["registry", "key", "new", "issuer", "registry", "issuer", "audience", "params", "subject", "current_user", "try", "expire_time", "class", "token_expire_at", "compact", "tap"]
CALLS: ["create"]
CALLS: ["update"]
CALLS: ["stop_environments"]
CALLS: ["project", "current_user", "new", "branch_name", "execute"]
CALLS: ["request", "project"]
CALLS: ["request", "project"]
CALLS: ["request", "project"]
CALLS: ["build", "project"]
CALLS: ["job", "project"]
CALLS: []
CALLS: ["valid?", "errors", "wiki", "error_message", "add", "wiki", "page_title_and_dir", "wiki", "wiki", "page", "set_attributes", "errors", "blank?"]
CALLS: ["attributes", "url_path", "attributes", "title", "attributes", "format"]
CALLS: ["invalidate_issue_cache_counts", "invalidate_merge_request_cache_counts", "invalidate_todos_done_count", "invalidate_todos_pending_count", "invalidate_personal_projects_count"]
CALLS: ["cache", "id", "delete"]
CALLS: ["cache", "id", "delete"]
CALLS: ["cache", "id", "delete"]
CALLS: ["cache", "id", "delete"]
CALLS: []
CALLS: ["supported_events", "include?", "username", "password", "ref_name", "build_url", "build_type", "post"]
CALLS: ["teamcity_url", "join", "to_s"]
CALLS: ["bamboo_url", "join", "to_s"]
CALLS: ["supported_events", "include?", "ref_name", "blank_ref?", "blank_ref?", "api_key", "user_key", "device", "priority", "project", "full_name", "project", "full_name", "sound", "sound", "post"]
CALLS: ["supported_events", "include?", "allowed_branch?", "to_json", "token", "post", "each"]
CALLS: ["present?", "restrict_to_branch", "present?", "ref_name", "restrict_to_branch", "split", "map", "present?", "include?"]
CALLS: ["supported_events", "include?", "should_pipeline_be_notified?", "retrieve_recipients", "any?", "new", "perform"]
CALLS: ["recipients", "to_s", "split", "reject"]
CALLS: ["notify_only_broken_pipelines?"]
CALLS: ["notify_only_broken_pipelines?"]
CALLS: ["notify_for_ref?", "notify_for_pipeline?"]
CALLS: ["notify_only_broken_pipelines?"]
CALLS: ["dig", "notify_only_default_branch?", "ref_name", "dig", "project", "default_branch"]
CALLS: ["supported_events", "include?", "service_hook", "execute"]
CALLS: []
CALLS: ["supported_events", "include?", "type", "project_url", "project_url", "head", "type", "code", "project_url", "type", "project_url", "message", "logger", "info"]
CALLS: ["supported_events", "include?", "project_id", "channels", "colorize_messages", "settings", "perform_async"]
CALLS: ["server_host", "present?", "server_host", "server_port", "present?", "server_port"]
CALLS: ["cache", "ssh_algorithms_hashes", "host", "gitlab_pages", "gitlab_ci", "deep_symbolize_keys", "fetch"]
CALLS: ["gitlab_ci", "to_h", "artifacts", "max_size", "megabytes", "megabytes", "merge"]
CALLS: ["pages", "to_h", "pages", "host", "resolv_dns", "merge"]
CALLS: ["getaddress"]
CALLS: ["ssh_algorithm_hashes", "map", "compact"]
CALLS: ["ssh_algorithm_file_content", "present?", "ssh_algorithm_md5", "ssh_algorithm_sha256"]
CALLS: ["hexdigest"]
CALLS: ["hexdigest", "scan", "join"]
CALLS: ["ssh_algorithm_file", "exist?", "read"]
CALLS: ["downcase", "join"]
CALLS: ["supported_events", "include?", "create_message", "present?", "gate", "room", "message_options", "send"]
CALLS: ["create_push_message", "update?", "create_issue_message", "update?", "create_merge_request_message", "create_note_message", "should_pipeline_be_notified?", "create_pipeline_message"]
CALLS: ["project_url", "escape", "project_url", "project_link", "humanized_status"]
CALLS: ["new", "new", "new", "truncate_sha", "format_title", "new", "format_title", "new", "format_title", "new", "format_title", "project_link", "markdown"]
CALLS: ["new", "render_line", "project_url", "project_link", "markdown"]
CALLS: ["new", "render_line", "project_link", "markdown"]
CALLS: ["tag_ref?", "ref_name", "blank_ref?", "project_url", "escape", "project_link", "blank_ref?", "project", "web_url", "project_name", "project", "web_url", "escape", "project", "web_url", "project", "full_name", "gsub!", "project", "web_url", "take", "render_line", "each", "count", "count"]
CALLS: ["notify", "present?", "notify", "to_boolean", "message_color"]
CALLS: ["pipeline_status_color", "color"]
CALLS: []
CALLS: ["api_version", "present?", "api_version", "server", "blank?", "server", "token", "new"]
CALLS: ["supported_events", "include?", "token", "api_key", "project", "repository", "path_to_repo", "execute"]
CALLS: ["supported_events", "include?", "token", "project", "repository", "config", "gitlab", "url", "project", "full_path", "config", "gitlab", "url", "project", "full_path", "config", "gitlab", "url", "project", "full_path", "post"]
CALLS: ["properties", "get"]
CALLS: ["supported_events", "include?", "project_id", "recipients", "send_from_committer_email?", "disable_diffs?", "perform_async"]
CALLS: ["disable_diffs", "to_boolean"]
CALLS: ["push_valid?", "service_hook", "execute", "merge_request_valid?", "service_hook", "execute", "tag_push_valid?", "service_hook", "execute"]
CALLS: []
CALLS: ["project", "merge_requests", "opened", "project", "id", "ref_name", "where", "empty?", "blank_ref?"]
CALLS: ["blank_ref?"]
CALLS: ["supported_events", "include?", "webhook", "present?", "custom_data", "get_message", "get_channel_field", "presence", "channel", "username", "username", "notify"]
CALLS: ["custom_data", "merge"]
CALLS: ["event_channel_name", "public_send"]
CALLS: []
CALLS: ["notify_for_ref?", "new", "update?", "new", "update?", "new", "new", "should_pipeline_be_notified?", "new", "new"]
CALLS: ["project_url", "project_name", "merge"]
CALLS: ["supported_events", "include?", "build_message", "room", "auth", "speak"]
CALLS: ["ref_name", "project", "full_name", "blank_ref?", "blank_ref?", "project", "web_url"]
CALLS: ["rooms", "find", "base_uri", "merge", "post", "code"]
CALLS: ["base_uri", "get", "code"]
CALLS: ["subdomain"]
CALLS: ["token"]
CALLS: ["params", "project", "actor", "auth_params", "new", "authentication_abilities", "execute"]
CALLS: ["params", "permit"]
CALLS: ["supported_events", "include?", "service_hook", "execute"]
CALLS: ["supported_events", "include?", "build_key", "get_path"]
CALLS: ["build_url", "username", "password", "get"]
CALLS: ["build_url", "username", "blank?", "password", "blank?", "get", "username", "password", "get"]
CALLS: ["supported_events", "include?", "subdomain", "token", "to_json", "post"]
CALLS: ["supported_events", "include?", "ref_name", "restrict_to_branch", "to_s", "length", "index", "nil?", "project", "full_name", "check_commit", "each"]
CALLS: ["scan", "client", "find_by_id", "add_comment", "update", "logger", "message", "error", "each"]
CALLS: ["new", "refresh_cache", "each"]
CALLS: ["hooks", "hooks_for", "to_s", "async_execute", "each", "new", "execute_hooks", "run_after_commit_or_now"]
CALLS: ["merge_request", "target_project"]
CALLS: ["target_project", "new", "refresh_cache"]
CALLS: ["target_project"]
CALLS: ["assignee"]
CALLS: ["source"]
CALLS: ["project", "new", "refresh_cache"]
CALLS: ["new", "execute"]
CALLS: ["new", "execute"]
CALLS: []
CALLS: ["current_page", "join_lateral_supported?", "relation_with_join_lateral", "relation_without_join_lateral", "with_associations", "to_a"]
CALLS: ["", "includes"]
CALLS: ["projects", "select", "to_sql", "filtered_events", "limit_for_join_lateral", "limit", "where", "to_sql", "base_relation", "from", "table_name", "joins", "paginate_events"]
CALLS: []
CALLS: ["unscoped", "recent"]
CALLS: ["limit", "offset"]
CALLS: ["base_relation", "apply_filter", "base_relation"]
CALLS: ["filtered_events", "projects", "in_projects", "paginate_events"]
CALLS: ["", "includes", "preload"]
CALLS: ["projects", "first"]
CALLS: ["author", "detect_mentionable_changes", "empty?", "create_cross_references!"]
CALLS: ["changes", "present?", "changes", "previous_changes", "dup", "class", "mentionable_attrs", "map", "include?", "select"]
CALLS: ["pipeline_data", "project", "execute_hooks", "project", "execute_services"]
CALLS: ["build"]
CALLS: ["project", "build", "project", "dup", "execute_hooks", "project", "dup", "execute_services", "new", "execute", "project", "running_or_pending_build_count"]
CALLS: ["cache", "id", "builds", "running_or_pending", "count", "fetch"]
CALLS: ["", "where"]
CALLS: ["all", "order_id_desc", "by_username", "by_search", "by_blocked", "by_active", "by_external_identity", "by_external", "by_2fa", "by_created_at", "by_custom_attributes"]
CALLS: ["params", "with_two_factor", "without_two_factor"]
CALLS: ["current_user", "admin?", "where", "not", "params", "external"]
CALLS: ["current_user", "admin?", "params", "params", "joins", "params", "params", "with_extern_uid", "merge"]
CALLS: ["", "normalize_uid", "iwhere", "with_provider"]
CALLS: ["ldap_provider?", "normalize_dn", "to_s"]
CALLS: ["", "where"]
CALLS: ["params", "active"]
CALLS: ["params", "blocked"]
CALLS: ["params", "present?", "params", "search"]
CALLS: ["params", "params", "where"]
CALLS: ["params", "params", "params", "present?", "params", "search"]
CALLS: ["params", "present?", "joins", "params", "where"]
CALLS: ["search", "search", "full_search"]
CALLS: ["fuzzy_search"]
CALLS: ["params", "is_a?", "current_user", "allowed?", "reflect_on_association", "klass", "arel_table", "model", "arel_table", "klass", "select", "foreign_key", "association_primary_key", "eq", "where", "params", "where", "where", "inject"]
CALLS: ["params", "present?", "params", "created_before", "params", "present?", "params", "created_after"]
CALLS: ["", "scoped_table", "gteq", "where"]
CALLS: ["arel_table", "table_name", "alias"]
CALLS: ["arel_table", "table_name", "alias"]
CALLS: ["", "scoped_table", "lteq", "where"]
CALLS: ["params", "recent_events", "joins", "with_associations", "params", "limit_recent"]
CALLS: ["recent", "limit", "offset"]
CALLS: ["sql", "from"]
CALLS: ["project?", "params", "find", "pending_delete?", "current_user", "allowed?"]
CALLS: ["current_user", "todos", "by_action_id", "by_action", "by_author", "by_state", "by_type", "by_project", "sort"]
CALLS: ["type?", "type", "where"]
CALLS: ["type", "present?", "type", "include?"]
CALLS: ["params", "to_s", "done", "pending"]
CALLS: ["", "with_state"]
CALLS: ["project?", "project", "where", "current_user", "public_or_visible_to_user", "joins", "merge"]
CALLS: ["project_authorizations", "select", "where", "levels_for_user", "id", "where", "public_to_user"]
CALLS: ["authorizations_for_projects", "levels_for_user", "where", "public_to_user"]
CALLS: ["author?", "author", "try", "where"]
CALLS: ["action_id?", "action_id", "where"]
CALLS: ["params"]
CALLS: ["action_id", "present?", "action_id", "to_i", "key?"]
CALLS: ["action?", "to_action_id", "where"]
CALLS: ["params", "params", "id", "where"]
CALLS: ["active", "inactive"]
CALLS: ["", "where"]
CALLS: ["", "where"]
CALLS: ["params", "filter_by_state"]
CALLS: ["closed", "active"]
CALLS: ["", "with_state"]
CALLS: ["", "with_state"]
CALLS: ["author", "author", "id", "where", "no_author?", "where", "author_id?", "author_username?", "none"]
CALLS: ["params", "params"]
CALLS: ["project?", "projects", "of_projects", "references_project", "projects", "projects", "reorder", "merge", "join_project", "none"]
CALLS: ["", "references"]
CALLS: ["", "references"]
CALLS: ["params", "to_s", "closed", "respond_to?", "merged", "closed", "opened"]
CALLS: ["params", "params", "where"]
CALLS: ["sort", "tags_sorted_by", "filter_by_name"]
CALLS: ["tags", "name", "sort", "tags", "name", "rsort", "tags_sorted_by_committed_date", "reverse", "tags_sorted_by_committed_date", "tags"]
CALLS: ["tags", "dereferenced_target", "committed_date", "now", "sort_by"]
CALLS: ["search", "name", "search", "include?", "select"]
CALLS: ["search", "name", "upcase", "search", "upcase", "include?", "select"]
CALLS: ["init_collection", "by_author", "by_visibility", "fresh"]
CALLS: ["params", "visibility_from_scope", "where"]
CALLS: ["params", "to_s"]
CALLS: ["project", "present?", "authorized_snippets_from_project", "authorized_snippets"]
CALLS: ["feature_available_projects", "not_project_related", "or", "where", "current_user", "public_or_visible_to_user"]
CALLS: ["table", "eq"]
CALLS: ["arel_table"]
CALLS: ["current_user", "allowed?", "table", "eq", "current_user", "with_feature_available_for_user", "projects_for_user", "select", "to_sql", "new", "table", "in"]
CALLS: ["current_user", "public_to_user", "current_user", "full_private_access?", "all", "current_user", "authorizations_for_projects", "where", "current_user", "levels_for_user", "where", "select", "select", "new", "to_sql", "table_name", "from"]
CALLS: ["current_user", "project", "can?", "project", "team", "current_user", "member?", "project", "snippets", "project", "snippets", "current_user", "public_to_user", "none"]
CALLS: ["current_user", "collection_with_user", "collection_without_user"]
CALLS: ["private_only?", "owned_projects?", "none", "public_to_user"]
CALLS: ["params", "present?"]
CALLS: ["params", "present?"]
CALLS: ["owned_projects?", "current_user", "owned_projects", "private_only?", "current_user", "authorized_projects", "current_user", "public_or_visible_to_user"]
CALLS: ["owned_projects_union", "to_sql", "from"]
CALLS: ["namespace", "where", "joins", "namespace", "id", "where", "id", "where", "new"]
CALLS: ["include_subgroups?", "group", "self_and_descendants", "select", "where", "group", "projects"]
CALLS: ["class", "id", "where", "new", "base_and_descendants"]
CALLS: ["options", "fetch"]
CALLS: ["only_shared?", "shared_projects", "public_only", "only_owned?", "owned_projects", "public_only", "shared_projects", "public_only", "owned_projects", "public_only"]
CALLS: ["options", "fetch"]
CALLS: ["options", "fetch"]
CALLS: ["group", "users", "current_user", "include?", "only_shared?", "shared_projects", "only_owned?", "owned_projects", "shared_projects", "owned_projects", "only_shared?", "shared_projects", "current_user", "public_or_visible_to_user", "only_owned?", "owned_projects", "current_user", "public_or_visible_to_user", "owned_projects", "current_user", "public_or_visible_to_user", "shared_projects", "current_user", "public_or_visible_to_user"]
CALLS: ["target", "notes_on_target", "target_type", "notes_of_target_type", "notes_of_any_type"]
CALLS: ["target", "respond_to?", "target", "related_notes", "target", "notes"]
CALLS: ["commit_shas", "take", "except", "source_project_id", "target_project_id", "where", "for_commit_id", "notes", "new", "to_sql", "table_name", "from", "includes"]
CALLS: ["notes_for_type", "map", "search", "map!", "new", "includes", "find_union"]
CALLS: ["allowed?", "notes", "where", "none", "noteables_for_type", "notes", "base_class", "name", "reorder", "where"]
CALLS: ["target_type", "notes_for_type", "search"]
CALLS: ["public_only?", "public_only", "with_confidentiality_access_check"]
CALLS: ["params", "fetch"]
CALLS: ["user_can_see_all_confidential_issues?", "all", "user_cannot_see_confidential_issues?", "where", "current_user", "id", "current_user", "authorized_projects", "select", "where"]
CALLS: ["user_can_see_all_confidential_issues?", "current_user", "blank?"]
CALLS: ["current_user", "blank?", "current_user", "full_private_access?", "project?", "project", "project", "team", "current_user", "id", "max_member_access"]
CALLS: ["klass", "all"]
CALLS: ["current_user", "collection_with_user", "collection_without_user", "union"]
CALLS: ["builds", "by_status"]
CALLS: ["params", "include?", "params", "where"]
CALLS: ["params", "include?", "params", "where"]
CALLS: ["params", "delete", "new", "current_user", "execute", "init_collection", "by_ids", "by_personal", "by_starred", "by_trending", "by_visibilty_level", "by_tags", "by_search", "by_archived", "by_custom_attributes", "sort"]
CALLS: ["params", "non_archived", "params", "key?", "params", "archived", "params", "to_boolean", "non_archived"]
CALLS: ["params", "present?", "params", "tagged_with"]
CALLS: ["params", "present?", "params", "where"]
CALLS: ["params", "present?", "trending"]
CALLS: ["joins", "reorder"]
CALLS: ["params", "params", "load_projects", "html", "view_to_html_string", "json", "respond_to", "dashboard_projects_path", "current_user", "cookies", "blank?", "current_user", "hide_project_limit", "current_user", "can_create_project?", "current_user", "projects_limit", "profile_path", "icon", "icon", "dashboard_projects_path", "root_path", "dashboard_projects_path", "nav_link", "starred_dashboard_projects_path", "starred_dashboard_projects_path", "nav_link", "explore_root_path", "trending_explore_projects_path", "starred_explore_projects_path", "explore_projects_path", "explore_root_path", "nav_link", "sort_value_latest_activity", "projects_sort_options_hash", "dropdown_toggle", "projects_sort_options_hash", "filter_projects_path", "each", "filter_projects_path", "params", "present?", "filter_projects_path", "params", "to_boolean", "filter_projects_path", "params", "current_user", "filter_projects_path", "params", "present?", "filter_projects_path", "params", "present?", "shared_projects", "present?", "filter_projects_path", "params", "present?", "filter_projects_path", "params", "filter_projects_path", "params", "current_user", "can_create_project?", "new_project_path", "trending_explore_projects_path", "explore_root_path", "trending_explore_projects_path", "nav_link", "starred_explore_projects_path", "starred_explore_projects_path", "nav_link", "explore_projects_path", "explore_projects_path", "nav_link", "current_user", "sort_value_latest_activity", "projects_sort_options_hash", "dropdown_toggle", "projects_sort_options_hash", "filter_projects_path", "each", "filter_projects_path", "params", "present?", "filter_projects_path", "params", "to_boolean", "filter_projects_path", "params", "current_user", "filter_projects_path", "params", "present?", "filter_projects_path", "params", "present?", "shared_projects", "present?", "filter_projects_path", "params", "present?", "filter_projects_path", "params", "filter_projects_path", "params", "projects", "current_user", "current_user", "explore_root_path"]
CALLS: ["params", "present?", "current_user", "current_user", "starred_by"]
CALLS: ["", "joins", "id", "where"]
CALLS: ["params", "present?", "current_user", "current_user", "personal"]
CALLS: ["", "namespace_id", "where"]
CALLS: ["project_ids_relation", "project_ids_relation", "where"]
CALLS: ["params", "present?", "current_user", "personal"]
CALLS: ["params", "archived", "params", "blank?", "non_archived"]
CALLS: ["params", "present?", "params", "where"]
CALLS: ["pipelines", "by_scope", "by_status", "by_ref", "by_name", "by_username", "by_yaml_errors", "sort_items"]
CALLS: ["params", "include?", "params", "params", "params", "order"]
CALLS: ["params", "to_boolean", "where", "where"]
CALLS: ["params", "present?", "joins", "params", "where"]
CALLS: ["params", "present?", "params", "where"]
CALLS: ["params", "running", "pending", "finished", "branches", "ids_for_ref", "from_ids", "tags", "ids_for_ref", "from_ids"]
CALLS: ["pipelines", "unscoped", "where"]
CALLS: ["pipelines", "where", "group", "select"]
CALLS: ["current_user_related?", "current_user", "none", "params", "current_user", "id", "where", "current_user", "assigned_to"]
CALLS: ["", "id", "where"]
CALLS: ["", "id", "where"]
CALLS: ["params", "present?", "params", "search"]
CALLS: ["pipeline_schedules", "active", "pipeline_schedules", "inactive", "pipeline_schedules", "order"]
CALLS: ["all_projects", "find_union", "includes", "order_id_desc"]
CALLS: ["all", "by_user", "by_impersonation", "by_state"]
CALLS: ["with_impersonation", "without_impersonation"]
CALLS: ["", "where"]
CALLS: ["", "where"]
CALLS: ["where"]
CALLS: ["init_collection", "since_fetch_at", "fresh"]
CALLS: ["fetch", "to_i", "at", "updated_after"]
CALLS: ["", "where"]
CALLS: ["", "scoped_table", "gteq", "where"]
CALLS: ["projects_where_can_admin_issues", "present?", "search", "excluding_project", "order_id_desc", "present?", "where", "limit", "includes"]
CALLS: ["authorized_projects", "non_archived", "with_issues_enabled"]
CALLS: ["", "with_feature_enabled"]
CALLS: ["", "where", "not"]
CALLS: ["project_ids", "empty?", "group_ids", "empty?", "none", "all", "by_groups_and_projects", "by_title", "by_state", "order"]
CALLS: ["joins", "where", "select"]
CALLS: ["params", "params", "where"]
CALLS: ["project_ids", "group_ids", "for_projects_and_groups"]
CALLS: ["fork_network", "fork_network", "projects", "current_user", "public_or_visible_to_user", "non_archived", "current_user", "with_feature_available_for_user", "source_project", "where"]
CALLS: ["project", "project_members", "current_user", "project", "can?", "non_invite", "group", "group", "new", "execute", "non_invite", "new", "distinct_on", "includes", "table_name", "from"]
CALLS: ["postgresql?"]
CALLS: ["project?", "params", "find", "authorized_to_read_labels?"]
CALLS: ["skip_authorization", "current_user", "allowed?"]
CALLS: ["project?", "project", "project", "group", "present?", "arel_table", "project", "group", "group_ids_for", "eq", "in", "and", "eq", "project", "id", "eq", "and", "or", "where", "project", "labels", "group?", "params", "find", "group_ids_for", "where", "projects", "group_ids", "where", "only_group_labels?", "projects", "select", "where"]
CALLS: ["params"]
CALLS: ["groups_to_include", "groups_user_can_read_labels", "map", "strong_memoize"]
CALLS: ["authorized_to_read_labels?", "select", "user_scope"]
CALLS: ["include_ancestor_groups?", "ancestors", "include_descendant_groups?", "descendants"]
CALLS: ["params"]
CALLS: ["params"]
CALLS: ["label_ids", "find_union", "none", "with_title", "sort"]
CALLS: ["", "where"]
CALLS: ["title", "nil?", "title", "blank?", "none", "title", "where"]
CALLS: ["all_groups", "find_union", "order_id_desc"]
CALLS: ["params", "find", "current_user", "klass", "to_ability_name", "allowed?"]
CALLS: ["init_collection", "filter_items", "by_project", "sort"]
CALLS: ["by_source_branch", "by_target_branch"]
CALLS: ["target_branch", "target_branch", "where"]
CALLS: ["source_branch", "source_branch", "where"]
CALLS: ["by_due_date"]
CALLS: ["due_date?", "filter_by_no_due_date?", "without_due_date", "filter_by_overdue?", "today", "due_before", "filter_by_due_this_week?", "today", "beginning_of_week", "today", "end_of_week", "due_between", "filter_by_due_this_month?", "today", "beginning_of_month", "today", "end_of_month", "due_between"]
CALLS: ["", "where", "where"]
CALLS: ["", "where"]
CALLS: ["", "where"]
CALLS: ["params", "present?"]
CALLS: ["due_date?", "params", "name"]
CALLS: ["due_date?", "params", "name"]
CALLS: ["due_date?", "params", "name"]
CALLS: ["due_date?", "params", "name"]
CALLS: ["by_scope", "by_created_at", "by_updated_at", "by_state", "by_group", "by_search", "by_assignee", "by_author", "by_non_archived", "by_iids", "by_milestone", "by_label", "by_my_reaction_emoji"]
CALLS: ["", "where"]
CALLS: ["assignee", "assignee", "assigned_to", "no_assignee?", "unassigned", "assignee_id?", "assignee_username?", "none"]
CALLS: ["", "where"]
CALLS: ["", "where"]
CALLS: ["params", "params"]
CALLS: ["params", "present?", "non_archived"]
CALLS: ["params", "present?", "current_user", "current_user", "params", "awarded"]
CALLS: ["id", "name", "where"]
CALLS: ["labels?", "filter_by_no_label?", "without_label", "label_names", "params", "with_label"]
CALLS: ["is_a?", "size", "joins", "where", "grouping_columns", "group", "size", "having", "joins", "where"]
CALLS: ["arel_table", "include?", "arel_table"]
CALLS: ["", "name", "table_name", "joins", "where"]
CALLS: ["milestones?", "filter_by_no_milestone?", "left_joins_milestones", "where", "filter_by_upcoming_milestone?", "projects", "upcoming_ids_by_projects", "left_joins_milestones", "where", "filter_by_started_milestone?", "left_joins_milestones", "where", "params", "with_milestone"]
CALLS: ["unscoped", "of_projects", "active", "now", "where", "postgresql?", "order", "select", "group", "having", "pluck", "map"]
CALLS: ["", "left_joins_milestones", "where"]
CALLS: ["params", "name"]
CALLS: ["params", "name"]
CALLS: ["milestones?", "params", "title"]
CALLS: ["assignee", "assignee", "id", "where", "no_assignee?", "where", "assignee_id?", "assignee_username?", "none"]
CALLS: ["params", "present?", "params", "where"]
CALLS: []
CALLS: ["params", "present?", "params", "updated_after", "params", "present?", "params", "updated_before"]
CALLS: ["", "scoped_table", "lteq", "where"]
CALLS: ["all_groups", "by_parent", "by_custom_attributes", "map", "find_union", "with_route", "order_id_desc"]
CALLS: ["params", "params", "where"]
CALLS: ["members", "parent", "non_request", "ancestors", "select", "where", "where", "users", "select", "not", "select", "to_sql", "select", "to_sql", "join", "where"]
CALLS: ["find_by", "can?"]
CALLS: ["children", "params", "ancestors_of_filtered_subgroups", "ancestors_of_filtered_projects", "size", "paginator", "total_count", "max", "paginate_array"]
CALLS: ["subgroups", "ancestors_of_groups", "params", "with_selects_for_list"]
CALLS: ["except", "select", "where", "new", "parent_group", "id", "base_and_ancestors"]
CALLS: ["projects", "where", "parent_group", "not", "select", "where", "ancestors_of_groups", "params", "with_selects_for_list"]
CALLS: ["source", "events", "by_current_user_access", "by_action", "by_target_type", "by_created_at_before", "by_created_at_after"]
CALLS: ["params", "params", "end_of_day", "where"]
CALLS: ["params", "params", "beginning_of_day", "where"]
CALLS: ["params", "params", "where"]
CALLS: ["current_user", "new", "execute", "merge", "joins"]
CALLS: ["project", "deployments", "ref", "params", "ref", "to_s", "where", "commit", "commit", "sha", "where", "none", "group", "select", "project", "environments", "available", "where", "order_by_last_deployed_at", "to_a", "current_user", "allowed?", "select!", "ref", "commit", "commit", "includes_commit?", "select!", "ref", "params", "ref", "recently_updated_on_branch?", "select!"]
CALLS: ["last_deployment", "last_deployment", "includes_commit?"]
CALLS: ["to_s", "last_deployment", "try"]
CALLS: ["", "arel_table", "maximum", "select", "arel_table", "arel_table", "eq", "where", "to_sql", "nulls_first_order", "order"]
CALLS: ["project", "repository", "id", "sha", "ancestor?"]
CALLS: ["all_projects", "find_union", "includes", "order_id_desc"]
CALLS: ["find_check", "should_skip_cross_project_check", "can_read_cross_project?", "should_run?", "model", "none"]
CALLS: ["current_user", "allowed?"]
CALLS: ["project", "clusters", "filter_by_scope"]
CALLS: ["scope", "to_sym", "disabled", "enabled", "scope"]
CALLS: ["", "where"]
CALLS: ["", "where"]
CALLS: ["sort", "branches_sorted_by", "filter_by_name"]
CALLS: ["raw_repository", "local_branches"]
CALLS: ["raw_repository", "local_branches"]
CALLS: ["find_users", "active", "reorder", "search", "present?", "search", "search", "skip_users", "present?", "where", "skip_users", "not", "limit", "params", "present?", "current_user", "current_user", "id", "params", "todo_authors", "search", "blank?", "params", "present?", "current_user", "current_user", "uniq", "author_id", "present?", "current_user", "author_id", "find_by_id", "uniq"]
CALLS: ["", "where", "select", "where"]
CALLS: ["project", "users_from_project", "group", "group", "users_with_parents", "current_user", "all", "none"]
CALLS: ["members_with_parents", "select", "where", "reorder"]
CALLS: ["author_id", "present?", "project", "authorized_users", "author_id", "where", "new", "to_sql", "table_name", "from", "project", "authorized_users"]
CALLS: ["without_deleted", "with_statistics", "by_namespace_id", "by_visibilty_level", "by_with_push", "by_abandoned", "by_last_repository_check_failed", "by_archived", "by_personal", "by_name", "includes", "sort", "params", "page"]
CALLS: ["params", "present?", "where"]
CALLS: ["params", "present?", "abandoned"]
CALLS: ["", "months", "ago", "where"]
CALLS: ["params", "present?", "with_push"]
CALLS: ["params", "present?", "params", "in_namespace"]
CALLS: ["execute!"]
CALLS: ["new", "snippets_path", "page_specific_javascript_tag", "url", "form_errors", "label", "text_field", "visibility_level", "visibility_level", "local_assigns", "fetch", "icon", "help_page_path", "label", "can_change_visibility_level", "form_model", "values", "form_model", "disallowed_visibility_level?", "restricted_visibility_levels", "include?", "form", "model_method", "form", "model_method", "selected_level", "radio_button", "visibility_level_icon", "visibility_level_label", "form_model", "visibility_level_description", "restricted_visibility_level_description", "form_model", "disallowed_visibility_level_description", "label", "each", "form_model", "render", "visibility_level_icon", "visibility_level_label", "form_model", "visibility_level_description", "label", "text_field", "content", "hidden_field", "params", "params", "each_with_index", "new_record?", "submit", "submit", "project_id", "project_snippets_path", "snippets_path", "snippets_path", "current_user"]
CALLS: ["asset_path"]
CALLS: []
CALLS: ["set_minimum_password_length", "available_servers"]
CALLS: ["new_user_session_path", "redirect_to"]
CALLS: ["params", "params", "find_by", "current_user", "can?", "access_denied!", "id", "new", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["snippets", "build", "project_snippets_path", "project_snippets_path", "page_specific_javascript_tag", "url", "form_errors", "label", "text_field", "visibility_level", "visibility_level", "local_assigns", "fetch", "icon", "help_page_path", "label", "can_change_visibility_level", "form_model", "values", "form_model", "disallowed_visibility_level?", "restricted_visibility_levels", "include?", "form", "model_method", "form", "model_method", "selected_level", "radio_button", "visibility_level_icon", "visibility_level_label", "form_model", "visibility_level_description", "restricted_visibility_level_description", "form_model", "disallowed_visibility_level_description", "label", "each", "form_model", "render", "visibility_level_icon", "visibility_level_label", "form_model", "visibility_level_description", "label", "text_field", "content", "hidden_field", "params", "params", "each_with_index", "new_record?", "submit", "submit", "project_id", "project_snippets_path", "snippets_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project", "pipelines", "default_branch", "new", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project", "pipeline_schedules", "new", "namespace", "namespace_project_pipeline_schedules_path", "_", "project_pipelines_path", "add_to_breadcrumbs", "_", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["push"]
CALLS: ["pages_domains", "new", "project_pages_path", "namespace", "becomes", "errors", "any?", "errors", "full_messages", "each", "label", "persisted?", "text_field", "config", "pages", "external_https", "label", "text_area", "label", "text_area", "submit", "_", "project_pages_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["milestones", "new", "respond_with", "container_class", "namespace", "becomes", "form_errors", "label", "text_field", "label", "preview_markdown_path", "preview_markdown_path", "label", "text_field", "label", "text_field", "new_record?", "submit", "project_milestones_path", "submit", "project_milestone_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["define_new_vars", "allow_n_plus_1_calls", "can_be_created", "params", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["custom_icon", "empty?", "config", "mattermost", "host", "config", "mattermost", "host", "project_mattermost_path", "one?", "one?", "first", "mattermost_teams_options", "options_for_select", "one?", "select", "one?", "hidden_field", "one?", "config", "mattermost", "host", "icon", "path", "text_field", "path", "full_path", "icon", "edit_project_service_path", "submit", "form_for", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["map"]
CALLS: ["labels", "new", "container_class", "project_labels_path", "project_labels_path", "url", "form_errors", "label", "text_field", "label", "text_field", "label", "text_field", "suggested_colors", "each", "persisted?", "submit", "submit", "back_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: []
CALLS: ["params", "new", "issue_params", "params", "params", "merge", "project", "current_user", "new", "execute", "merge_request_to_resolve_discussions_of", "params", "discussions_to_resolve", "first", "respond_with", "namespace", "becomes", "local_assigns", "fetch", "local_assigns", "issuable", "form_errors", "issuable", "class", "model_name", "human", "downcase", "namespace", "becomes", "issuable", "polymorphic_path", "label", "issuable", "issuable", "detect", "issuable", "issuable", "respond_to?", "check_box", "label", "issuable", "local_assigns", "fetch", "is_a?", "closed_without_fork?", "current_user", "can_remove_source_branch?", "current_user", "can_remove_source_branch?", "force_remove_source_branch?", "local_assigns", "fetch", "local_assigns", "fetch", "is_a?", "for_fork?", "current_user", "source_project", "can?", "_", "current_user", "can_allow_maintainer_to_push?", "check_box", "_", "help_page_path", "allow_maintainer_push_unavailable_reason", "label", "icon", "current_user", "discussions_can_be_resolved_by?", "iid", "id", "link_to_discussions_to_resolve", "link_to_discussions_to_resolve", "is_a?", "new_record?", "new_record?", "namespace", "becomes", "class", "polymorphic_path", "current_user", "to_ability_name", "can?", "namespace", "becomes", "polymorphic_path", "human_class_name", "namespace", "becomes", "polymorphic_path", "new_record?", "class", "model_name", "human", "downcase", "submit", "submit", "persisted?", "project", "empty_repo?", "project", "present", "contribution_guide_path", "link_to", "hidden_field", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project", "repository", "contribution_guide", "project", "project", "default_branch", "name", "tree_join", "project_blob_path"]
CALLS: ["file_on_head"]
CALLS: ["join"]
CALLS: ["discussions_to_be_resolved", "can_resolve?", "all?"]
CALLS: ["current_user", "can_allow_maintainer_to_push?", "target_project", "visibility_level", "source_project", "visibility_level", "min", "_", "source_project", "source_branch", "protected?", "_"]
CALLS: ["to_reference", "first_note", "id", "first_note", "build", "project", "project_merge_request_path"]
CALLS: ["import_failed?", "project_import_path", "local_assigns", "fetch", "_", "label", "text_field", "_", "html_safe", "_", "html_safe", "import_will_timeout_message", "import_svn_message", "submit", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["import_status"]
CALLS: ["_", "help_page_path", "_", "html_safe"]
CALLS: ["config", "gitlab_shell", "git_timeout", "time_interval_in_words", "_"]
CALLS: ["to_i", "pluralize", "pluralize", "pluralize"]
CALLS: ["parse_repo_path"]
CALLS: ["current_user", "manageable_namespaces", "namespace", "delete", "present?", "each", "icon", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["namespace", "manageable_groups"]
CALLS: ["owned_groups", "select", "masters_groups", "select", "new", "to_sql", "where", "new", "base_and_descendants"]
CALLS: ["project", "environments", "new", "container_class", "help_page_path", "namespace", "becomes", "form_errors", "label", "text_field", "label", "url_field", "submit", "project_environments_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["redirect_to_repository_settings", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["_", "s_", "s_", "_", "help_page_path", "link_to", "s_", "html_safe", "s_", "s_", "s_", "namespace", "gcp_new_namespace_project_clusters_path", "s_", "s_", "namespace", "user_new_namespace_project_clusters_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["new", "build_platform_kubernetes", "tap", "_", "s_", "s_", "_", "help_page_path", "link_to", "s_", "html_safe", "s_", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["new", "build_provider_gcp", "tap", "_", "s_", "s_", "_", "help_page_path", "link_to", "s_", "html_safe", "s_", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["empty?", "commit", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["params", "params", "params", "params", "params", "join", "pending_delete?", "find_routable!"]
CALLS: ["profile_password_path", "form_errors", "password_automatically_set?", "label", "password_field", "label", "password_field", "label", "password_field", "submit", "header_title", "profile_path"]
CALLS: ["profile_chat_names_path", "token", "deny_profile_chat_names_path", "token", "header_title", "profile_path"]
CALLS: ["pre_auth", "authorizable?", "skip_authorization?", "matching_token?", "authorization", "authorize", "session", "delete", "redirect_uri", "client", "name", "redirect_uri", "current_user", "admin?", "icon", "client", "name", "client", "name", "redirect_uri", "client", "application", "owner", "name", "user_path", "scopes", "scopes", "each", "oauth_authorization_path", "client", "uid", "redirect_uri", "state", "response_type", "scope", "nonce", "oauth_authorization_path", "client", "uid", "redirect_uri", "state", "response_type", "scope", "nonce", "error_response", "body", "header_title", "profile_path"]
CALLS: []
CALLS: ["project_params", "find", "current_user", "can?", "render_404", "project_params"]
CALLS: ["logged_in_with_provider?", "go_to_provider_for_permissions", "session", "access_token_key", "status_import_url", "has_ci_cd_only_params?", "_", "_", "root_path", "import_github_title", "github_import_configured?", "import_github_authorize_message", "_", "params", "status_import_github_path", "import_github_personal_access_token_message", "personal_access_token_import_github_path", "_", "_", "github_import_configured?", "import_configure_github_admin_message"]
CALLS: ["help_page_path", "current_user", "admin?", "_", "html_safe", "_", "html_safe"]
CALLS: ["_", "github_import_configured?", "_", "html_safe", "_", "html_safe"]
CALLS: ["_"]
CALLS: ["current_user", "identities", "provider", "exists?"]
CALLS: ["provider", "extra_import_params", "public_send"]
CALLS: []
CALLS: ["client", "callback_import_url", "authorize_url"]
CALLS: ["provider", "extra_import_params", "public_send"]
CALLS: []
CALLS: ["enabled?"]
CALLS: ["session", "access_token_key", "present?", "session", "host_key", "present?", "status_import_url", "root_path", "custom_icon", "personal_access_token_import_gitea_path"]
CALLS: ["root_path", "callback_import_fogbugz_path"]
CALLS: ["params", "permit", "new", "dashboard_groups_path", "dashboard_groups_path", "form_errors", "label", "_", "_", "file_field", "_", "default_group_visibility", "default_group_visibility", "local_assigns", "fetch", "icon", "help_page_path", "label", "can_change_visibility_level", "form_model", "values", "form_model", "disallowed_visibility_level?", "restricted_visibility_levels", "include?", "form", "model_method", "form", "model_method", "selected_level", "radio_button", "visibility_level_icon", "visibility_level_label", "form_model", "visibility_level_description", "restricted_visibility_level_description", "form_model", "disallowed_visibility_level_description", "label", "each", "form_model", "render", "visibility_level_icon", "visibility_level_label", "form_model", "visibility_level_description", "config", "mattermost", "enabled", "custom_icon", "label", "check_box", "label", "mattermost", "host", "submit", "dashboard_groups_path", "name", "page_description", "description", "header_title", "group_title", "current_user"]
CALLS: ["new", "form_errors", "label", "text_field", "label", "group_preview_markdown_path", "group_preview_markdown_path", "label", "text_field", "label", "text_field", "new_record?", "submit", "group_milestones_path", "submit", "group_milestone_path", "name", "page_description", "description", "header_title", "group_title", "current_user"]
CALLS: ["labels", "new", "previous_labels_path", "group_labels_path", "url", "form_errors", "label", "text_field", "label", "text_field", "label", "text_field", "suggested_colors", "each", "persisted?", "submit", "submit", "back_path", "name", "page_description", "description", "header_title", "group_title", "current_user"]
CALLS: ["session", "fallback_path", "fetch"]
CALLS: ["group_labels_path"]
CALLS: ["merge"]
CALLS: ["set_sort_order_from_cookie", "set_default_state", "params", "dup", "except", "default_sort_order", "id", "id", "finder_type", "valid_params", "permit"]
CALLS: ["scalar_params", "array_params"]
CALLS: []
CALLS: []
CALLS: []
CALLS: ["params", "sort_value_created_date", "sort_value_recently_updated", "sort_value_created_date"]
CALLS: ["params", "present?", "cookies", "params", "cookies", "cookies", "update_cookie_value", "params", "cookies"]
CALLS: ["sort_value_oldest_created", "sort_value_recently_created", "sort_value_created_date", "sort_value_created_date", "sort_value_due_date", "sort_value_due_date", "sort_value_milestone", "sort_value_milestone", "sort_value_popularity", "sort_value_popularity"]
CALLS: ["params", "blank?", "params"]
CALLS: ["board", "group_board?", "issue_params", "find", "board_parent"]
CALLS: ["params", "params", "params", "merge", "nil?", "reject"]
CALLS: ["new", "form_errors", "label", "text_field", "label", "text_field", "label", "text_field", "new_record?", "label", "label", "object", "force_random_password", "password_field", "label", "object", "force_random_password", "password_field", "label", "number_field", "label", "check_box", "label", "current_user", "radio_button", "radio_button", "label", "check_box", "label", "file_field", "label", "text_field", "label", "text_field", "label", "text_field", "label", "text_field", "new_record?", "submit", "admin_users_path", "submit", "admin_user_path", "admin_root_path"]
CALLS: ["params", "params", "join", "find_by_full_path", "render_404"]
CALLS: ["params", "params", "join", "find_by_full_path", "render_404"]
CALLS: ["new", "form_errors", "label", "text_field", "label", "text_field", "label", "text_field", "suggested_colors", "each", "submit", "admin_labels_path", "admin_root_path"]
CALLS: ["new", "form_errors", "label", "providers", "label_for", "map", "select", "label", "text_field", "submit", "admin_root_path"]
CALLS: ["new", "default_group_visibility", "form_errors", "label", "_", "_", "file_field", "_", "visibility_level", "can_change_group_visibility_level?", "visibility_level", "local_assigns", "fetch", "icon", "help_page_path", "label", "can_change_visibility_level", "form_model", "values", "form_model", "disallowed_visibility_level?", "restricted_visibility_levels", "include?", "form", "model_method", "form", "model_method", "selected_level", "radio_button", "visibility_level_icon", "visibility_level_label", "form_model", "visibility_level_description", "restricted_visibility_level_description", "form_model", "disallowed_visibility_level_description", "label", "each", "form_model", "render", "visibility_level_icon", "visibility_level_label", "form_model", "visibility_level_description", "form", "form", "check_box", "label", "current_user", "admin?", "label", "lfs_enabled?", "check_box", "icon", "help_page_path", "label", "current_user", "label", "check_box", "icon", "help_page_path", "label", "text_field", "new_record?", "submit", "admin_groups_path", "submit", "admin_group_path", "admin_root_path"]
CALLS: ["deploy_keys", "new", "local_assigns", "fetch", "local_assigns", "fetch", "deploy_keys_project_for", "form_errors", "label", "text_field", "new_record?", "label", "help_page_path", "text_area", "label", "text_field", "present?", "check_box", "label", "fields_for", "submit", "admin_deploy_keys_path", "admin_root_path"]
CALLS: ["new", "admin_applications_path", "application", "form_errors", "label", "text_field", "application", "label", "text_area", "application", "configuration", "native_redirect_uri", "configuration", "native_redirect_uri", "label", "check_box", "label", "application", "submit", "admin_applications_path", "admin_root_path"]
CALLS: ["new", "user_id", "id", "params", "fetch", "form_errors", "hidden_field", "label", "user", "name", "user", "username", "label", "sanitize", "text_area", "submit"]
CALLS: ["runner", "update", "runner", "tick_runner_queue", "tap"]
CALLS: ["project", "current_user", "issue_params", "new", "execute"]
CALLS: ["delete", "last_commit_sha", "update_attributes", "title_changed?", "title", "wiki", "find_page", "present?", "url_path", "url_path", "wiki", "content", "format", "title", "update_page", "save"]
CALLS: ["title", "commit_details", "wiki", "path", "name", "to_sym", "update_page", "update_project_activity"]
CALLS: ["repo_created?", "after_create", "branch_created?", "after_create_branch", "newrev"]
CALLS: ["full_path", "initialize_raw_repository"]
CALLS: ["project", "repository_storage", "disk_path", "project", "is_wiki", "gl_repository", "new"]
CALLS: ["notes", "map", "where", "fresh", "to_a", "class", "memoized_values", "clear_memoization", "each"]
CALLS: ["params", "presence"]
CALLS: ["snippet_params", "spammable_params", "merge", "current_user", "new", "execute", "recaptcha_check_with_fallback", "snippets_path", "current_user"]
CALLS: ["current_user", "project_params", "new", "execute", "repository", "flash", "_", "name", "edit_project_path", "redirect_to", "html", "flash", "html", "js", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["_", "s_", "s_", "current_user", "can?", "render", "params", "find_page", "current_user", "wiki_params", "new", "execute", "valid?", "project_wiki_path", "redirect_to", "fluid_layout", "_", "title", "capitalize", "_", "wiki_page_errors", "icon", "persisted?", "title", "capitalize", "project_wiki_path", "title", "capitalize", "persisted?", "s_", "s_", "current_user", "can?", "s_", "persisted?", "project_wiki_history_path", "s_", "current_user", "can?", "project_wiki_path", "s_", "_", "persisted?", "s_", "s_", "title", "namespace", "becomes", "persisted?", "form_errors", "persisted?", "last_commit_sha", "hidden_field", "label", "title", "text_field", "persisted?", "icon", "s_", "icon", "help_page_path", "label", "format", "options_for_select", "select", "label", "slug", "project_wiki_preview_markdown_path", "s_", "slug", "project_wiki_preview_markdown_path", "s_", "html_safe", "s_", "help_page_path", "s_", "html_safe", "label", "text_field", "persisted?", "_", "submit", "_", "project_wiki_path", "s_", "submit", "_", "project_wiki_path", "fluid_layout", "_", "title", "capitalize", "_", "wiki_page_errors", "icon", "persisted?", "title", "capitalize", "project_wiki_path", "title", "capitalize", "persisted?", "s_", "s_", "current_user", "can?", "s_", "persisted?", "project_wiki_history_path", "s_", "current_user", "can?", "project_wiki_path", "s_", "_", "persisted?", "s_", "s_", "title", "namespace", "becomes", "persisted?", "form_errors", "persisted?", "last_commit_sha", "hidden_field", "label", "title", "text_field", "persisted?", "icon", "s_", "icon", "help_page_path", "label", "format", "options_for_select", "select", "label", "slug", "project_wiki_preview_markdown_path", "s_", "slug", "project_wiki_preview_markdown_path", "s_", "html_safe", "s_", "help_page_path", "s_", "html_safe", "label", "text_field", "persisted?", "_", "submit", "_", "project_wiki_path", "s_", "submit", "_", "project_wiki_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["variables_params", "update", "render_variables", "json", "respond_to", "render_error", "json", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["params", "variable_params_attributes", "permit"]
CALLS: []
CALLS: []
CALLS: ["new", "variables", "represent", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["trigger", "trigger_params", "update", "project_settings_ci_cd_path", "help_page_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["snippet_params", "spammable_params", "merge", "project", "current_user", "new", "execute", "recaptcha_check_with_fallback", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project", "current_user", "update_params", "new", "execute", "flash", "name", "run_autodevops_pipeline", "project_settings_ci_cd_path", "fluid_layout", "env", "test?", "errors", "empty?", "s_", "_", "_", "s_", "s_", "help_page_path", "shared_runners_text", "present?", "current_application_settings", "markdown_field", "shared_runners_enabled?", "toggle_shared_runners_project_runners_path", "toggle_shared_runners_project_runners_path", "zero?", "dom_id", "runner_status_icon", "include?", "short_sha", "runner_path", "locked?", "icon", "edit_project_runner_path", "short_sha", "include?", "active?", "pause_project_runner_path", "resume_project_runner_path", "belongs_to_one_project?", "runner_path", "runner_projects", "find_by", "project_runner_project_path", "specific?", "namespace", "becomes", "runner_projects", "new", "id", "hidden_field", "submit", "description", "present?", "description", "tag_list", "present?", "tag_list", "sort", "each", "each", "_", "icon", "help_page_path", "_", "project_variables_path", "help_page_path", "any?", "each", "tap"]
CALLS: ["shared?"]
CALLS: ["runner_projects", "count"]
CALLS: ["status", "contacted_at", "time_ago_in_words"]
CALLS: ["project_runner_path"]
CALLS: ["run_auto_devops_pipeline?", "empty_repo?", "flash", "project", "id", "current_user", "id", "project", "default_branch", "perform_async", "flash", "project_pipelines_path", "html_safe"]
CALLS: ["project", "repository", "gitlab_ci_yml", "project", "auto_devops", "previous_changes", "include?", "project", "auto_devops", "enabled?", "project", "auto_devops", "enabled", "nil?", "auto_devops_enabled?"]
CALLS: ["file_on_head"]
CALLS: ["params", "require", "permit"]
CALLS: ["params", "require", "permit"]
CALLS: ["params", "require", "permit"]
CALLS: ["cluster", "managed?", "params", "require", "permit", "params", "require", "permit"]
CALLS: ["user?"]
CALLS: ["params", "require", "permit"]
CALLS: ["attributes", "service_params", "save", "project_settings_integrations_path", "success_message", "redirect_to", "title", "edit_project_path", "add_to_breadcrumbs", "deprecation_message", "deprecation_message", "title", "activated?", "description", "respond_to?", "detailed_description", "to_param", "project_service_path", "can_test?", "test_project_service_path", "editable?", "service_save_button", "project_settings_integrations_path", "form_for", "lookup_context", "to_param", "template_exists?", "to_param", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: []
CALLS: []
CALLS: []
CALLS: ["project", "pipelines", "any?"]
CALLS: []
CALLS: []
CALLS: []
CALLS: ["_", "deprecated_message_content", "url_helpers", "project", "project_clusters_path", "html_safe"]
CALLS: ["active?", "_", "_"]
CALLS: []
CALLS: ["deprecated?", "icon", "content_tag", "button_tag"]
CALLS: []
CALLS: ["active"]
CALLS: ["active?", "title", "title"]
CALLS: ["event_channel_names", "event_names", "params", "permit", "is_a?", "blank?", "delete", "each"]
CALLS: ["supported_events", "map"]
CALLS: []
CALLS: ["supported_events", "event_channel_name", "map"]
CALLS: ["new", "runner_params", "update", "runner_path", "description", "id", "runner_path", "runner", "runner_form_url", "runner", "form_errors", "check_box", "check_box", "check_box", "check_box", "text_field", "text_field", "text_field", "text_field", "runner", "tag_list", "sort", "join", "text_field", "submit", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["params", "require", "permit"]
CALLS: ["params", "require", "permit"]
CALLS: ["release_params", "present?", "release", "release_params", "update_attributes", "release", "destroy", "name", "project_tag_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["params", "require", "permit"]
CALLS: ["releases", "name", "find_or_initialize_by"]
CALLS: ["update_service_class", "current_user", "protected_ref_params", "new", "execute", "valid?", "errors", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["service_namespace"]
CALLS: ["schedule", "schedule_params", "update", "project_pipeline_schedules_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["update_params", "update", "project_pages_path", "project_pages_path", "domain", "domain", "domain", "namespace", "becomes", "errors", "any?", "errors", "full_messages", "each", "label", "persisted?", "text_field", "config", "pages", "external_https", "label", "text_area", "label", "text_area", "submit", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["current_user", "project_params", "new", "execute", "flash", "flash", "project_pages_path", "html", "respond_to"]
CALLS: ["project", "current_user", "milestone_params", "new", "milestone", "execute", "js", "valid?", "project_milestone_path", "html", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project", "current_user", "merge_request_params", "new", "execute", "valid?", "target_project", "namespace", "becomes", "target_project", "redirect_to", "define_edit_vars", "html", "to_json", "json", "respond_to", "request", "format", "html?", "define_edit_vars", "render_conflict_response", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["source_project", "target_project", "target_project", "repository", "branch_names"]
CALLS: ["label_params", "new", "execute", "valid?", "project_labels_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["hook", "hook_params", "update_attributes", "flash", "project_settings_integrations_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project_group_links", "params", "find", "group_link_params", "update_attributes"]
CALLS: ["params", "require", "permit"]
CALLS: ["environment_params", "update", "project", "project_environment_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["deploy_key", "update_params", "update_attributes", "flash", "redirect_to_repository_settings", "namespace", "becomes", "local_assigns", "fetch", "local_assigns", "fetch", "deploy_keys_project_for", "form_errors", "label", "text_field", "new_record?", "label", "help_page_path", "text_area", "label", "text_field", "present?", "check_box", "label", "fields_for", "submit", "project_settings_repository_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["params", "find"]
CALLS: ["deploy_keys", "params", "find"]
CALLS: ["project", "current_user", "update_params", "new", "cluster", "execute", "cluster", "valid?", "json", "flash", "_", "project", "cluster", "project_cluster_path", "html", "respond_to", "json", "html", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["params", "present?", "params", "after_edit_path", "project_blob_path", "create_commit", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["current_user", "id", "new", "params", "find_by", "target_project", "diffs_project_merge_request_path", "hexdigest", "join", "project_blob_path"]
CALLS: ["current_user", "user_params", "merge", "new", "execute", "redirect_back_or_default", "html", "json", "redirect_back_or_default", "html", "json", "respond_to", "header_title", "profile_path"]
CALLS: ["current_user", "preferences_params", "user", "merge", "new", "execute", "flash", "flash", "flash", "message", "profile_preferences_path", "html", "js", "respond_to", "header_title", "profile_path"]
CALLS: ["params", "require", "permit"]
CALLS: ["user_params", "to_s", "include?", "select", "password_automatically_set", "user_params", "valid_password?", "edit_profile_password_path", "current_user", "merge", "new", "execute", "flash", "new_user_session_path", "reload", "fluid_layout", "page_title", "password_automatically_set?", "profile_password_path", "form_errors", "password_automatically_set?", "label", "password_field", "label", "password_field", "label", "password_field", "submit", "password_automatically_set?", "reset_profile_password_path", "header_title", "profile_path"]
CALLS: ["current_user", "user_params", "current_user", "merge", "new", "execute", "flash", "flash", "profile_notifications_path", "redirect_back_or_default", "header_title", "profile_path"]
CALLS: ["valid?", "password_automatically_set?", "update_attribute"]
CALLS: ["current_user", "notification_settings", "params", "find", "notification_setting_params", "update_attributes", "render_response"]
CALLS: ["current_user", "group_params", "new", "execute", "edit_group_path", "name", "restore_path!", "form_errors", "group_icon", "avatar?", "_", "_", "file_field", "_", "avatar?", "_", "to_param", "group_avatar_path", "_", "visibility_level", "can_change_group_visibility_level?", "visibility_level", "local_assigns", "fetch", "icon", "help_page_path", "label", "can_change_visibility_level", "form_model", "values", "form_model", "disallowed_visibility_level?", "restricted_visibility_levels", "include?", "form", "model_method", "form", "model_method", "selected_level", "radio_button", "visibility_level_icon", "visibility_level_label", "form_model", "visibility_level_description", "restricted_visibility_level_description", "form_model", "disallowed_visibility_level_description", "label", "each", "form_model", "render", "visibility_level_icon", "visibility_level_label", "form_model", "visibility_level_description", "form", "form", "check_box", "label", "s_", "can_change_share_with_group_lock?", "check_box", "name", "group_path", "s_", "html_safe", "share_with_group_lock_help_text", "label", "current_user", "admin?", "label", "lfs_enabled?", "check_box", "icon", "help_page_path", "label", "current_user", "label", "check_box", "icon", "help_page_path", "label", "text_field", "submit", "remove_group_message", "form_tag", "supports_nested_groups?", "transfer_group_path", "parent_group_options", "dropdown_tag", "submit", "path", "name", "page_description", "description", "header_title", "group_title", "current_user"]
CALLS: ["current_user", "owned_groups", "sort_by", "id", "human_name", "map", "id", "delete_if", "to_json"]
CALLS: ["parent", "share_with_group_lock?", "default_help", "share_with_group_lock?", "current_user", "parent", "can?", "ancestor_locked_but_you_can_override", "ancestor_locked_so_ask_the_owner", "ancestor_locked_and_has_been_overridden"]
CALLS: ["s_", "html_safe", "ancestor_group"]
CALLS: ["oldest_consecutively_locked_ancestor", "current_user", "can?", "name", "group_path", "name"]
CALLS: ["ancestors", "has_parent?", "parent", "share_with_group_lock?", "find"]
CALLS: ["s_", "html_safe", "ancestor_group", "remove_the_share_with_group_lock_from_ancestor"]
CALLS: ["oldest_consecutively_locked_ancestor", "s_", "name", "current_user", "can?", "edit_group_path"]
CALLS: ["s_", "html_safe", "ancestor_group", "remove_the_share_with_group_lock_from_ancestor"]
CALLS: ["s_"]
CALLS: ["_", "name"]
CALLS: ["current_user", "can?"]
CALLS: ["key?", "key?", "merge", "dropdown_toggle", "key?", "key?", "dropdown_title", "key?", "dropdown_filter", "key?", "key?", "capture", "content_tag", "capture", "content_tag", "dropdown_loading", "html_safe", "content_tag", "html_safe"]
CALLS: ["group_variables_params", "update", "render_group_variables", "json", "respond_to", "render_error", "json", "respond_to"]
CALLS: ["params", "variable_params_attributes", "permit"]
CALLS: ["new", "variables", "represent"]
CALLS: ["legacy_group_milestone?", "milestone_params", "select", "milestones", "milestone_params", "parent", "current_user", "new", "execute", "each", "milestone_path", "name", "page_description", "description", "header_title", "group_title", "current_user"]
CALLS: ["label_params", "new", "execute", "valid?", "redirect_back_or_group_labels_path", "name", "page_description", "description", "header_title", "group_title", "current_user"]
CALLS: ["previous_labels_path"]
CALLS: ["project", "current_user", "note_params", "new", "note", "execute", "is_a?", "current_user", "new", "execute", "note_json", "json", "redirect_back_or_default", "html", "respond_to"]
CALLS: ["params", "root_params_key", "require", "permit", "membershipable", "members_and_requesters", "params", "find", "current_user", "new", "execute", "current_user", "present", "js", "respond_to"]
CALLS: ["membershipable", "membershipable"]
CALLS: ["update_service", "issuable", "execute", "recaptcha_check_if_spammable", "html", "render_entity_json", "recaptcha_check_if_spammable", "json", "respond_to", "render_conflict_response"]
CALLS: ["issue_params", "spammable_params", "merge", "project", "current_user", "new"]
CALLS: []
CALLS: ["valid?", "serializer", "represent", "errors", "full_messages"]
CALLS: ["issuable", "is_a?", "recaptcha_check_with_fallback"]
CALLS: ["board", "lists", "movable", "params", "find", "board_parent", "current_user", "move_params", "new", "execute"]
CALLS: ["params", "require", "permit"]
CALLS: ["params", "permit"]
CALLS: ["board_parent", "current_user", "move_params", "new", "issue", "execute"]
CALLS: ["user_params", "dup", "params", "present?", "params", "params", "changing_own_password?", "now", "merge!", "current_user", "user", "merge", "new", "skip_reconfirmation!", "execute", "user", "html", "json", "user", "username", "params", "name", "form_errors", "label", "text_field", "label", "text_field", "label", "text_field", "new_record?", "label", "label", "object", "force_random_password", "password_field", "label", "object", "force_random_password", "password_field", "label", "number_field", "label", "check_box", "label", "current_user", "radio_button", "radio_button", "label", "check_box", "label", "file_field", "label", "text_field", "label", "text_field", "label", "text_field", "label", "text_field", "new_record?", "submit", "admin_users_path", "submit", "admin_user_path", "html", "json", "respond_to", "admin_root_path"]
CALLS: ["user", "current_user"]
CALLS: ["service", "service_params", "update_attributes", "service", "active?", "service", "id", "perform_async", "admin_application_settings_services_path", "admin_root_path"]
CALLS: ["new", "runner_params", "update", "js", "admin_runner_path", "html", "respond_to", "assign_builds_and_projects", "shared?", "_", "admin_runners_path", "id", "shared?", "admin_runner_path", "runner", "runner_form_url", "runner", "form_errors", "check_box", "check_box", "check_box", "check_box", "text_field", "text_field", "text_field", "text_field", "runner", "tag_list", "sort", "join", "text_field", "submit", "projects", "any?", "runner_projects", "project", "full_name", "namespace", "becomes", "each", "admin_runner_path", "params", "full_name", "namespace", "becomes", "runner_projects", "new", "id", "hidden_field", "submit", "each", "project", "project_job_path", "current_user", "detailed_status", "detailed_status", "full_name", "pipeline", "pipeline_path", "pipeline", "short_sha", "finished_at", "each", "admin_root_path"]
CALLS: ["stage", "request", "current_user", "detailed_status"]
CALLS: ["pipeline", "request", "current_user", "detailed_status"]
CALLS: ["group", "request", "current_user", "detailed_status"]
CALLS: ["build", "request", "current_user", "detailed_status"]
CALLS: ["subject", "user", "detailed_status"]
CALLS: ["new", "fabricate!"]
CALLS: ["new", "fabricate!"]
CALLS: ["new", "fabricate!"]
CALLS: ["new", "fabricate!"]
CALLS: ["jobs", "one?", "jobs", "first", "detailed_status", "new", "fabricate!"]
CALLS: ["new", "fabricate!"]
CALLS: ["runner", "builds", "order", "first", "params", "present?", "params", "search", "all", "runner", "projects", "any?", "where", "runner", "projects", "select", "not", "params", "page", "per"]
CALLS: ["label_params", "new", "execute", "valid?", "admin_labels_path", "admin_root_path"]
CALLS: ["identity_params", "update_attributes", "new", "execute", "admin_user_identities_path", "admin_root_path"]
CALLS: ["hook", "hook_params", "update_attributes", "flash", "admin_hooks_path", "admin_root_path"]
CALLS: ["group_params", "update_attributes", "name", "visibility_level", "form_errors", "label", "_", "_", "file_field", "_", "visibility_level", "can_change_group_visibility_level?", "visibility_level", "local_assigns", "fetch", "icon", "help_page_path", "label", "can_change_visibility_level", "form_model", "values", "form_model", "disallowed_visibility_level?", "restricted_visibility_levels", "include?", "form", "model_method", "form", "model_method", "selected_level", "radio_button", "visibility_level_icon", "visibility_level_label", "form_model", "visibility_level_description", "restricted_visibility_level_description", "form_model", "disallowed_visibility_level_description", "label", "each", "form_model", "render", "visibility_level_icon", "visibility_level_label", "form_model", "visibility_level_description", "form", "form", "check_box", "label", "current_user", "admin?", "label", "lfs_enabled?", "check_box", "icon", "help_page_path", "label", "current_user", "label", "check_box", "icon", "help_page_path", "label", "text_field", "new_record?", "submit", "admin_groups_path", "submit", "admin_group_path", "admin_root_path"]
CALLS: ["deploy_key", "update_params", "update_attributes", "flash", "admin_deploy_keys_path", "local_assigns", "fetch", "local_assigns", "fetch", "deploy_keys_project_for", "form_errors", "label", "text_field", "new_record?", "label", "help_page_path", "text_area", "label", "text_field", "present?", "check_box", "label", "fields_for", "submit", "admin_deploy_keys_path", "admin_root_path"]
CALLS: ["broadcast_message_params", "update", "admin_broadcast_messages_path", "admin_root_path"]
CALLS: ["application_params", "update", "admin_application_path", "admin_root_path"]
CALLS: ["current_user", "application_setting_params", "new", "execute", "admin_application_settings_path", "admin_root_path"]
CALLS: ["params", "params", "key?", "params", "delete", "delete", "params", "button_based_providers", "map", "params", "delete", "params", "delete", "params", "params", "delete", "params", "require", "visible_application_setting_attributes", "permit"]
CALLS: ["auth_providers", "form_based_provider?", "reject"]
CALLS: ["to_s", "any?"]
CALLS: ["providers"]
CALLS: ["visible_attributes"]
CALLS: []
CALLS: ["appearance_params", "update", "admin_appearances_path", "admin_appearances_path", "form_errors", "label", "header_logo?", "header_logo_url", "persisted?", "header_logos_admin_appearances_path", "hidden_field", "file_field", "label", "text_field", "label", "text_area", "label", "logo?", "logo_url", "persisted?", "logo_admin_appearances_path", "hidden_field", "file_field", "label", "text_area", "submit", "persisted?", "preview_sign_in_admin_appearances_path", "new_project_path", "updated_at", "admin_root_path"]
CALLS: ["current_user", "can_be_merged_by?", "access_denied!", "merge!", "merge_error", "merge_error", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["register_failure", "log_error", "allow_failure", "latest?", "description", "drop", "delete_artifact!"]
CALLS: []
CALLS: ["error", "merge"]
CALLS: []
CALLS: []
CALLS: ["page", "version", "to_s"]
CALLS: ["version", "try"]
CALLS: ["user_combined_name", "action", "wiki_page_link", "project_link", "title"]
CALLS: ["new_branch?", "new_branch_message", "removed_branch?", "removed_branch_message", "push_message"]
CALLS: ["user_combined_name", "ref_type", "branch_link", "project_link", "compare_link"]
CALLS: ["user_combined_name", "ref_type", "ref", "project_link"]
CALLS: ["user_combined_name", "ref_type", "branch_link", "project_link"]
CALLS: ["project_link", "pipeline_link", "ref_type", "branch_link", "user_combined_name", "humanized_status", "duration", "pretty_duration"]
CALLS: ["user_combined_name", "target", "note_url", "link", "project_link", "formatted_title"]
CALLS: ["merge_request_message"]
CALLS: ["user_combined_name", "state", "merge_request_link", "project_link", "title"]
CALLS: ["opened_issue?", "project_link", "state", "user_combined_name", "project_link", "issue_link", "state", "user_combined_name"]
CALLS: []
CALLS: ["response_status"]
CALLS: ["to_s"]
CALLS: ["first_note", "context_noteable", "discussion_id"]
CALLS: []
CALLS: ["raw", "id"]
CALLS: ["status", "to_s"]
CALLS: ["path", "hexdigest"]
CALLS: ["success?", "upload", "id", "error", "message"]
CALLS: ["flat_map", "flat_map"]
CALLS: []
CALLS: ["path"]
CALLS: ["api_url", "present?", "api_url", "url"]
CALLS: ["to_s"]
CALLS: ["id"]
CALLS: ["project", "full_path", "name", "select", "join", "downcase"]
CALLS: []
CALLS: ["sha_from", "notation", "sha_to"]
CALLS: ["default_options", "deep_symbolize_keys"]
CALLS: ["start_date", "current_user"]
CALLS: ["start_date", "first", "start_date", "all?", "first", "start_date"]
CALLS: ["days", "ago", "days", "ago", "days", "ago"]
CALLS: ["", "where", "not"]
CALLS: ["user", "delete_async"]
CALLS: ["block", "id", "id", "perform_async"]
CALLS: ["user", "delete_async"]
CALLS: ["skip_cross_project_check"]
CALLS: ["model", "find"]
CALLS: ["current_user", "can?", "access_denied!", "destroy", "snippets_path", "snippets_path", "current_user"]
CALLS: ["current_user", "username", "request", "remote_ip", "info", "flash"]
CALLS: ["destroy_confirmation_valid?", "current_user", "current_user", "delete_async", "session", "try", "new_user_session_path", "s_", "profile_account_path", "destroy_confirmation_failure_message"]
CALLS: ["current_user", "confirm_deletion_with_password?", "s_", "s_"]
CALLS: ["password_automatically_set?", "allow_password_authentication?"]
CALLS: ["allow_password_authentication_for_web?", "allow_password_authentication_for_git?"]
CALLS: ["password_authentication_enabled_for_git?", "ldap_user?"]
CALLS: ["password_authentication_enabled_for_web?", "ldap_user?"]
CALLS: ["current_user", "confirm_deletion_with_password?", "current_user", "params", "valid_password?", "current_user", "username", "params"]
CALLS: ["current_user", "can?", "access_denied!", "current_user", "new", "async_execute", "flash", "_", "full_name", "dashboard_projects_path", "edit_project_path", "message", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["params", "find_page", "current_user", "new", "execute", "project_wiki_path", "fluid_layout", "_", "title", "capitalize", "_", "wiki_page_errors", "icon", "persisted?", "title", "capitalize", "project_wiki_path", "title", "capitalize", "persisted?", "s_", "s_", "current_user", "can?", "s_", "persisted?", "project_wiki_history_path", "s_", "current_user", "can?", "project_wiki_path", "s_", "_", "persisted?", "s_", "s_", "title", "namespace", "becomes", "persisted?", "form_errors", "persisted?", "last_commit_sha", "hidden_field", "label", "title", "text_field", "persisted?", "icon", "s_", "icon", "help_page_path", "label", "format", "options_for_select", "select", "label", "slug", "project_wiki_preview_markdown_path", "s_", "slug", "project_wiki_preview_markdown_path", "s_", "html_safe", "s_", "help_page_path", "s_", "html_safe", "label", "text_field", "persisted?", "_", "submit", "_", "project_wiki_path", "s_", "submit", "_", "project_wiki_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["trigger", "destroy", "flash", "flash", "project_settings_ci_cd_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project", "current_user", "new", "params", "execute", "project_tags_path", "html", "js", "project_tags_path", "html", "js", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["current_user", "can?", "access_denied!", "destroy", "project_snippets_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project", "only_for?", "destroy", "runners_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["projects"]
CALLS: ["project", "runner_projects", "params", "find", "destroy", "project", "runners_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["tag", "delete", "json", "respond_to", "json", "respond_to"]
CALLS: ["image", "destroy", "json", "respond_to", "json", "respond_to"]
CALLS: ["destroy_service_class", "current_user", "new", "execute", "redirect_to_repository_settings", "html", "js", "respond_to"]
CALLS: ["service_namespace"]
CALLS: ["schedule", "destroy", "pipeline_schedules_path", "pipeline_schedules_path", "_"]
CALLS: ["destroy", "project_pages_path", "html", "js", "respond_to"]
CALLS: ["project", "remove_pages", "project", "pages_domains", "destroy_all", "project_pages_path", "html", "respond_to"]
CALLS: ["namespace", "new", "execute", "path", "hex", "new", "path", "namespace", "full_path", "rename_project", "minutes", "namespace", "full_path", "perform_in"]
CALLS: ["current_user", "can?", "access_denied!", "project", "current_user", "new", "milestone", "execute", "namespace_project_milestones_path", "html", "js", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["destroy", "find_labels", "project_labels_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["extract_references", "current_user", "project", "id", "split", "new", "execute"]
CALLS: ["project", "current_user", "new", "current_user", "analyze", "references"]
CALLS: ["current_user", "id", "params", "new", "execute"]
CALLS: ["hook", "destroy", "project_settings_integrations_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project", "project_group_links", "params", "find", "project", "current_user", "new", "execute", "project", "project_project_members_path", "html", "js", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["cluster", "destroy", "flash", "_", "project", "project_clusters_path", "flash", "_", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["params", "unescape", "project", "current_user", "new", "execute", "flash", "project_branches_path", "html", "js", "json", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project_tree_path", "project_blob_path", "create_commit", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["remove_avatar!", "save", "edit_project_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["current_user", "u2f_registrations", "params", "find", "destroy", "profile_two_factor_auth_path"]
CALLS: ["current_user", "disable_two_factor!", "profile_account_path", "header_title", "profile_path"]
CALLS: ["transaction_begin", "update_attributes", "u2f_registrations", "destroy_all", "transaction_end", "transaction"]
CALLS: ["current_user", "keys", "params", "find", "destroy", "profile_keys_url", "html", "js", "respond_to", "header_title", "profile_path"]
CALLS: ["destroy", "profile_gpg_keys_url", "html", "js", "respond_to"]
CALLS: ["current_user", "current_user", "new", "execute", "profile_emails_url", "html", "js", "respond_to", "header_title", "profile_path"]
CALLS: ["chat_names", "params", "find", "destroy", "flash", "chat_name", "flash", "chat_name", "profile_chat_names_path"]
CALLS: ["current_user", "current_user", "new", "remove_avatar!", "execute", "profile_path", "header_title", "profile_path"]
CALLS: ["params", "present?", "current_resource_owner", "oauth_authorized_tokens", "params", "find", "revoke", "params", "current_resource_owner", "revoke_all_for", "applications_profile_url", "t"]
CALLS: ["with_key_and_subkeys", "where", "verification_statuses", "not", "verification_statuses", "zone", "now", "update_all", "destroy"]
CALLS: ["subkeys", "pluck", "arel_table", "id", "eq", "arel_table", "in", "or", "where"]
CALLS: ["deploy_tokens", "params", "find", "revoke!", "project", "project_settings_repository_path"]
CALLS: ["update!"]
CALLS: ["update!"]
CALLS: ["finder", "params", "find", "revoke!", "flash", "name", "flash", "name", "profile_personal_access_tokens_path"]
CALLS: ["revoke", "profile_gpg_keys_url", "html", "js", "respond_to"]
CALLS: ["finder", "params", "find", "revoke!", "flash", "name", "flash", "name", "admin_user_impersonation_tokens_path"]
CALLS: ["current_user", "new", "async_execute", "root_path", "name", "name", "page_description", "description", "header_title", "group_title", "current_user"]
CALLS: ["destroy", "group_labels_path", "name", "html", "js", "respond_to"]
CALLS: ["remove_avatar!", "save", "edit_group_path", "name", "page_description", "description", "header_title", "group_title", "current_user"]
CALLS: ["new", "params", "current_user", "mark_todos_as_done_by_ids", "dashboard_todos_path", "html", "js", "todos_counts", "json", "respond_to", "header_title", "root_path"]
CALLS: ["note", "editable?", "project", "current_user", "new", "note", "execute", "js", "respond_to"]
CALLS: ["membershipable", "members_and_requesters", "params", "find", "current_user", "new", "execute", "source_type", "members_page_url", "html", "js", "respond_to"]
CALLS: ["issuable", "project", "current_user", "new", "issuable", "execute", "issuable", "human_class_name", "flash", "parent", "issuable", "class", "polymorphic_path", "html", "json", "respond_to"]
CALLS: ["board", "lists", "destroyable", "params", "find", "board_parent", "current_user", "new", "execute"]
CALLS: ["", "list_types", "where"]
CALLS: ["user", "current_user", "params", "permit", "delete_async", "admin_users_path", "html", "json", "respond_to", "admin_root_path"]
CALLS: ["params", "find", "params", "current_user", "remove_user", "admin_spam_logs_path", "user", "username", "destroy", "admin_root_path"]
CALLS: ["destroy", "admin_runners_path", "admin_root_path"]
CALLS: ["params", "find", "runner", "destroy", "admin_runner_path", "admin_root_path"]
CALLS: ["destroy", "templates", "admin_labels_path", "html", "js", "respond_to", "admin_root_path"]
CALLS: ["user", "keys", "params", "find", "destroy", "user", "keys_admin_user_path", "html", "user", "keys_admin_user_path", "html", "respond_to", "admin_root_path"]
CALLS: ["current_user", "warden", "impersonator", "set_user", "impersonator", "username", "username", "info", "session", "admin_user_path", "admin_root_path"]
CALLS: ["session", "session", "find"]
CALLS: ["destroy", "new", "execute", "admin_user_identities_path", "admin_user_identities_path", "admin_root_path"]
CALLS: ["hook", "destroy", "admin_hooks_path", "admin_root_path"]
CALLS: ["current_user", "new", "async_execute", "admin_groups_path", "name", "admin_root_path"]
CALLS: ["deploy_key", "destroy", "admin_deploy_keys_path", "html", "json", "respond_to", "admin_root_path"]
CALLS: ["destroy", "redirect_back_or_default", "html", "js", "respond_to", "admin_root_path"]
CALLS: ["destroy", "admin_applications_url", "admin_root_path"]
END
THE SIZE OF TOUCHED METHODS: 6856 ["destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "find", "find", "remove_user", "remove_user", "current_user", "request", "request", "options", "options", "options", "to_s", "path", "path", "username", "to_s", "client_url", "path", "to_s", "parse", "to_s", "to_s", "id", "success?", "id", "id", "id", "id", "success?", "message", "message", "message", "message", "message", "message", "message", "message", "id", "error", "error", "error", "error", "error", "error", "error", "success?", "success?", "message", "merge", "merge", "merge", "author_id", "created_at", "version", "persisted?", "persisted?", "persisted?", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "target_branch", "update", "raw_repository", "with_cache_hooks", "update", "update", "update", "update", "new", "new", "new", "new", "new", "new", "project", "project", "new", "filter_params", "project", "filter_params", "filter_params", "new", "new", "new", "new", "new", "new", "new", "new", "new", "new", "new", "project", "new", "new", "new", "new", "new", "new", "new", "project", "new", "new", "new", "new", "new", "new", "new", "new", "new", "new", "new", "new", "new", "project", "new", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "project", "execute", "execute", "label_ids", "project", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "project", "execute", "execute", "execute_hooks", "execute_hooks", "create_new_cross_references!", "project", "to_a", "project", "execute", "execute", "update_project_counter_caches", "project", "assignees", "project", "update_project_counter_caches", "project", "execute_hooks", "update_project_counter_caches", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "invalidate_cache_counts", "save", "project", "project", "project", "project", "project", "project", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "filter_params", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "filter_params", "process_label_ids", "before_update", "after_update", "labels_changing?", "has_title_or_description_changed?", "change_state", "change_subscription", "change_todo", "toggle_award", "associations_before_update", "invalidate_cache_counts", "handle_changes", "execute_hooks", "update_project_counter_caches?", "execute_hooks", "update_project_counter_caches?", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "before_update", "handle_changes", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute_hooks", "filter_params", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "handle_changes", "after_update", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "project", "project", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "project", "execute", "execute_hooks", "execute", "execute", "execute", "project", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "assign_attributes", "execute", "execute", "execute", "execute_hooks", "execute", "execute", "execute", "execute", "uploader", "move", "move", "update_markdown", "uploader", "schedule_background_upload", "schedule_background_upload", "record_upload", "model", "file", "file", "model", "exists?", "exists?", "upload_path", "build_upload", "exists?", "build_upload", "build_upload", "exists?", "upload_path", "uploads", "build_upload", "size", "size", "size", "size", "size", "size", "data", "data", "data", "data", "snippet", "snippet", "snippet", "content", "find_by", "find_by", "skip_cross_project_check", "snippets", "view_to_html_string", "load_snippets", "user", "user", "user", "user", "user", "user", "user", "user", "user", "user", "ghost", "name", "name", "name", "unique_internal", "create_unique_internal", "build", "cancel", "build", "cancel", "string", "build", "build", "build", "find_by_username", "cancel", "cancel_merge_when_pipeline_succeeds", "success", "open?", "reset_merge_when_pipeline_succeeds", "success", "success", "success", "success", "success", "reset_merge_when_pipeline_succeeds", "success", "cancel_merge_when_pipeline_succeeds", "success", "success", "create_note", "create_note", "create_note", "create_note", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "note", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "note", "create", "create", "note", "create", "create", "create", "metadata?", "create", "create", "spammable", "access_levels", "access_levels", "access_levels", "verify_params!", "ce_style_access_level", "type", "type", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "after_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "delete", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "handle_quick_actions_on_create", "create_issuable", "after_create", "before_create", "before_create", "before_create", "before_create", "after_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "after_create", "handle_quick_actions_on_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "handle_wip_event", "title", "title", "title", "title", "wipless_title", "wip_title", "title", "title", "title", "title", "title", "title", "title", "title", "title", "title", "title", "title", "title", "title", "title", "title", "title", "title", "title", "title", "title", "title", "title", "title", "title", "title", "title", "title", "title", "title", "title", "title", "title", "title", "unhyphenize", "label", "label", "humanize", "access_level", "access_level", "access_level", "max_member_access_for_user", "members_with_parents", "active_without_invites_and_requests", "self_and_ancestors", "non_request", "left_join_users", "access_level_attribute", "model_name", "model_name", "model_name", "model_name", "labels", "labels", "labels", "labels", "labels", "labels", "labels", "each", "as_json", "as_json", "as_json", "each", "as_json", "enabled_keys", "available_project_keys", "available_public_keys", "represent", "represent", "represent", "represent", "represent", "represent", "represent", "represent", "represent", "paginated?", "paginated?", "paginator", "projects", "projects", "projects", "projects", "projects", "subgroups", "projects", "projects", "projects", "projects", "with_route", "projects", "projects", "projects", "projects", "projects", "group", "group", "group", "group", "full_path", "group", "inside_path", "group", "full_path", "inside_path", "full_path", "group", "group", "can?", "can?", "can?", "can?", "can?", "allowed?", "policy_for", "user_scope", "user_scope", "active?", "active?", "active?", "active?", "active?", "active?", "active?", "active?", "active?", "active?", "expired?", "expired?", "expired?", "expired?", "expired?", "domain", "find_by!", "find_by!", "x509", "action", "action", "action", "create?", "remove?", "revision_after", "revision_before", "environment_options", "job", "job", "builds", "builds", "pipeline", "pipeline", "pipeline", "actual_head_pipeline", "diff_head_sha", "sha", "sha", "commit", "commit", "commit", "commit", "commit", "commit", "commit", "commit", "commit", "commit", "commit", "commit", "commit", "commit", "commit", "repository", "merge_request", "merge_request", "repository", "merge_request", "merge_request", "repository", "repository", "merge_request", "merge_commit_message", "repository", "repository", "repository", "log_info", "log_info", "merge_request", "merge_request", "merge_request", "log_info", "source", "repository", "merge_request_info", "to_reference", "to_reference", "to_reference", "to_reference", "to_reference", "to_reference", "to_reference", "to_reference", "to_reference", "to_reference", "to_reference", "to_reference", "to_reference", "reference_prefix", "reference_prefix", "reference_prefix", "reference_prefix", "reference_prefix", "reference_prefix", "reference_prefix", "reference_prefix", "reference_prefix", "reference_prefix", "reference_prefix", "cross_namespace_reference?", "cross_project_reference?", "milestone_format_reference", "group_milestone?", "iid", "group_milestone?", "label_format_reference", "reference_link_text", "reference_link_text", "reference_link_text", "reference_link_text", "reference_link_text", "short_id", "commit_reference", "merge_request_params", "merge_request_params", "issue", "ref", "issue", "issue", "ref", "issue", "branch_name", "issue", "issue", "branch_name", "ref", "ref", "ref", "default_branch", "default_branch", "wiki", "wiki", "repository_storage", "disk_path", "gl_repository", "create_repo!", "disk_path", "disk_path", "base_dir", "disk_hash", "base_dir", "base_dir", "base_dir", "disk_hash", "base_dir", "base_dir", "model_path_segment", "model_path_segment", "model_path_segment", "hashed_storage?", "hashed_storage?", "hexdigest", "hexdigest", "project_id", "project_id", "project_id", "hexdigest", "hexdigest", "hexdigest", "object_store", "object_store", "store_serialization_column", "serialization_column", "create_repository", "create_repository", "forked?", "fork_network", "repository_storages", "owner", "root_ref", "to_branch_name", "confidential?", "noteable", "noteable", "noteable", "for_commit?", "commit_id", "for_commit?", "for_commit?", "target_type", "notes_finder", "target", "target", "target", "target", "target", "noteables_for_type", "finder_params", "finder_params", "last_fetched_at", "get_issue", "issue_iid", "target_project", "source_branch", "external_issue_reference_pattern", "external_issue_tracker", "services", "cache_has_external_issue_tracker", "external_issue_trackers", "active", "active", "active", "active", "active", "active", "active", "issue_trackers", "active", "without_defaults", "active", "non_internal", "internal_attributes", "order", "reference_pattern", "reference_pattern", "reference_pattern", "reference_pattern", "reference_pattern", "reference_pattern", "reference_pattern", "reference_pattern", "reference_pattern", "reference_pattern", "reference_pattern", "issues_enabled?", "reference_pattern", "reference_pattern", "reference_pattern", "reference_pattern", "union", "union", "find_union", "ref_name", "issue?", "render_404", "issues", "render_404", "issues", "render_404", "notes", "notes", "notes", "issues", "issues", "of_milestones", "milestoneish_ids", "milestoneish_ids", "milestones", "milestones", "milestones", "milestones", "milestones", "milestones", "project?", "milestones?", "project?", "project?", "project?", "search_params", "search_params", "page_description", "header_title", "project_title", "description", "full_name", "description", "description", "description", "description", "description", "description", "description", "description", "description", "description", "description", "description", "description", "description", "description", "description", "description", "description", "description", "description", "description", "description", "description", "description", "description", "description", "description", "description", "description", "description", "description", "description", "build_full_name", "update_route", "prepare_route", "read_only?", "synced?", "sync_profile_from_provider?", "provider", "provider", "provider", "provider", "build_full_path", "parent", "parent", "parent", "parent", "parent", "parent", "parent", "commit_by", "commit_by", "find_commit", "group?", "group?", "human_name", "human_name", "full_title", "project_path", "project_icon", "simple_sanitize", "breadcrumb_list_item", "group_title", "avatar_url", "avatar_url", "avatar_url", "content_tag", "avatar_in_git", "url_helpers", "avatar", "file_on_head", "tree", "blobs", "head_commit", "head_commit", "head_commit", "head_tree", "head_commit_sha", "head_commit_sha", "last_commit_sha", "last_commit_sha", "last_version", "versions", "commit_shas", "commit_shas", "merge_request_diff", "empty?", "empty?", "raw_size", "stored_externally?", "external_size", "external_storage_error?", "external_storage", "external_storage", "lfs_enabled?", "lfs_enabled?", "lfs_enabled?", "enabled", "enabled", "enabled", "config", "avatar_path", "gitlab_config", "gitlab_config", "local_url", "dynamic_segment", "dynamic_segment", "filename", "dynamic_segment", "filename", "dynamic_segment", "dynamic_segment", "dynamic_segment", "filename", "dynamic_segment", "filename", "oid", "secret", "generate_secret", "add_to_breadcrumb_dropdown", "group_title_link", "ancestors", "group_icon", "group_icon_url", "find_by_full_path", "find_by_full_path", "for_user", "where_full_path_in", "sprite_icon", "sprite_icon_path", "url", "project_identicon", "values", "values", "values", "chart_values_file", "root", "root", "root", "root", "content_values", "specification", "ensure_runner", "gitlab_url", "runner", "create_and_assign_runner", "group_projects", "sort", "sort", "sort", "sort", "sort", "sort", "sort", "sort", "build_collection", "build_collection", "build_collection", "build_collection", "due_date", "discussion_id", "discussion_id", "discussion_class", "override_discussion_id", "discussion_class", "discussion_class", "discussion_class", "override_discussion_id", "build_discussion_id", "build_discussion_id", "base_discussion_id", "sort_by_attribute", "order_id_desc", "sort_by_attribute", "sort_by_attribute", "sort_by_attribute", "sort_by_attribute", "sort_by_attribute", "sort_by_attribute", "sort_by_attribute", "order_by", "order_by", "order_recent_sign_in", "order_oldest_sign_in", "order_recent_sign_in", "order_oldest_sign_in", "order_id_asc", "order_created_desc", "order_created_asc", "order_updated_desc", "order_updated_asc", "order_name_asc", "order_name_desc", "order_name_asc", "order_name_desc", "order_by_labels_priority", "highest_label_priority", "left_join_priorities", "order_due_date_asc", "order_due_date_desc", "order_upvotes_desc", "order_downvotes_desc", "order_milestone_due_desc", "order_milestone_due_asc", "order_due_date_and_labels_priority", "order_labels_priority", "project_foreign_key", "project_foreign_key", "left_joins_milestones", "order_votes_desc", "label_names", "label_names", "labels?", "for_commit_id", "issuables_collection", "collection_type", "non_archived", "non_archived", "join_project", "join_project", "join_project", "create_event", "create_event", "create_event", "create_event", "event_service", "event_service", "reopen_mr", "reopen", "merge_request_metrics_service", "reopen_mr", "reopen_resource_email", "build_recipients", "mailer", "notification_recipients", "notification_recipients", "priority", "priority", "build!", "filter!", "recipients", "build!", "build!", "filter!", "recipients", "build!", "author", "author", "author", "for_project_noteable?", "add_participants", "add_mentions", "add_custom_notifications", "add_project_watchers", "add_subscribed_users", "add_participants", "add_mentions", "add_custom_notifications", "add_project_watchers", "add_subscribed_users", "subscribers", "add_recipients", "add_recipients", "make_recipient", "make_recipient", "acting_user", "custom_action", "acting_user", "custom_action", "acting_user", "custom_action", "subscriptions_available", "project_watchers", "project_watchers", "user_ids_notifiable_on", "select_project_members_ids", "select_group_members_ids", "user_ids_with_global_level_watch", "user_ids_notifiable_on", "select_project_members_ids", "select_group_members_ids", "user_ids_with_global_level_watch", "settings_with_global_level_of", "settings_with_global_level_of", "user_ids_with_global_level_custom", "user_ids_with_global_level_custom", "mentioned_users", "users", "all_references", "skip_project_check?", "extractors", "skip_project_check?", "skip_project_check?", "participants", "participants", "participants", "participants", "all_participants", "raw_participants", "users_that_can_read_project", "users_that_can_read_personal_snippet", "tabs_json", "milestone_redirect_path", "safe_title", "safe_title", "for_personal_snippet?", "find_by_any_email", "by_any_email", "author?", "author_id?", "author_username?", "assignee", "add_labels_subscribers", "add_labels_subscribers", "assignee_id?", "assignee_username?", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "newest_first", "pipelines", "pipelines", "pipelines", "sort_value_recently_updated", "latest_successful_for_refs", "pipelines", "all_pipelines", "count", "cache", "cache_key", "cache", "uncached_count", "cache_key", "cache_options", "cache_key", "cache_key", "cache_key_name", "cache_key_name", "cache_key_name", "cache_key_name", "raw?", "raw?", "relation_for_count", "relation_for_count", "relation_for_count", "relation_for_count", "keys", "nav_link", "blocked?", "blocked?", "internal?", "status", "status", "status", "status", "status", "status", "status", "status", "status", "status", "status", "status", "status", "status", "status_sql", "failed_but_allowed", "exclude_ignored", "created", "running", "pending", "canceled", "skipped", "manual", "pending", "all_state_names", "latest_status_per_commit", "online?", "contact_time_deadline", "statuses", "latest", "commit_statuses", "jobs", "jobs", "jobs", "jobs", "jobs", "to_json", "represent_status", "represent_status", "represent_status", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "client", "valid?", "client", "valid?", "valid?", "client", "valid?", "client", "valid?", "valid?", "client", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "client", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "client", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "project_url", "project_url", "new_issue_url", "project_url", "issues_url", "new_issue_url", "web_url", "web_url", "web_url", "enforce_namespace_to_lower_case", "enforce_namespace_to_lower_case", "get_channels", "map_recipients", "activated?", "format_channel", "consider_uri", "source_type", "membershipable", "service", "service", "service", "service", "kubeclient", "kubeclient", "kubeclient", "kubeclient", "cluster", "cluster", "cluster", "cluster", "cluster", "present", "attributes", "html_fields", "markdown_fields", "html_field", "build_kubeclient!", "build_kubeclient!", "build_kubeclient!", "kubeclient_ssl_options", "join_api_url", "kubeclient_ssl_options", "join_api_url", "join_api_url", "kubeclient_ssl_options", "actual_namespace", "kubeclient_auth_options", "actual_namespace", "kubeclient_auth_options", "default_namespace", "default_namespace", "find_or_initialize_service", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "find_or_initialize_services", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "reply_key", "reply_key", "find_service", "available_services_names", "build_from_template", "sha_to", "sha_start", "exclude_start?", "sha_from", "two_factor_grace_period", "variables", "variables", "to_h", "markdown_link", "markdown_name", "secure_url", "secure_url", "image_or_video?", "image_or_video?", "video?", "image?", "video?", "extension_match?", "extension", "dangerous?", "scoped_variables", "persisted_variables", "persisted_environment_variables", "persisted_environment", "predefined_variables", "environment_url", "predefined_variables", "predefined_variables", "predefined_variables", "predefined_variables", "predefined_variables", "predefined_variables", "predefined_variables", "predefined_variables", "environment_url", "kubeconfig", "kubeconfig", "instance_domain", "has_domain?", "full_path_slug", "container_registry_variables", "auto_devops_variables", "auto_devops_enabled?", "enabled?", "container_registry_enabled?", "registry", "container_registry_url", "registry", "full_access_token", "token_expire_at", "slug", "slug", "format", "format", "format", "format", "generate_slug", "random_suffix", "tag_list", "tag_path", "ci_yaml_file_path", "external_url", "external_link?", "pages_group_url", "pages", "pages_subdomain", "pages", "get_project_wiki_path", "icon", "container_class", "group_by_directory", "directory", "page_title_and_dir", "fluid_layout", "blank_container", "external_wiki", "cache_has_external_wiki", "external_wikis", "pages_config", "pages_config", "pages_https_only?", "pages_domains_config", "https?", "enabled_pages_domains", "stage", "action?", "action?", "ref_slug", "legacy_variables", "licensed_features", "before_sha", "when", "build_attributes_from_config", "config_processor", "ci_yaml_file", "ci_yaml_from_repo", "implied_ci_yaml_file", "gitlab_ci_yml_for", "blob_data_at", "load_all_data!", "load_all_data!", "blob_at", "decorate", "decorate", "decorate", "to_action_id", "not_found", "legacy_stage", "statuses_count", "expanded_environment_name", "has_environment?", "environment", "environment", "environment", "environments", "environments", "simple_variables", "repo_url", "http_url_to_repo", "http_url_to_repo", "yaml_variables", "user_variables", "secret_group_variables", "secret_project_variables", "job_variables", "user_variables", "deployment_variables", "deployment_platform", "deployment_platform", "find_deployment_platform", "find_cluster_platform_kubernetes", "find_kubernetes_service_integration", "build_cluster_and_deployment_platform", "kubernetes_service_template", "cluster_attributes_from_service_template", "platform_kubernetes_attributes_from_service_template", "find_by_template", "deployment", "deployment", "default_environment", "secret_variables_for", "secret_variables_for", "unprotected", "unprotected", "protected_for?", "protected?", "protected?", "branch_exists?", "tag_exists?", "matching", "matching", "matches?", "exact_match?", "wildcard_match?", "wildcard?", "wildcard_regex", "empty_repo?", "default_branch_protected?", "set_default_values", "set_default_values", "set_default_values", "validation_message", "validation_message", "blob", "prepare!", "prepare!", "blob", "prepare!", "prepare!", "blob", "diff_file", "diff_file", "diff_file", "diff", "project_repository", "diff", "diff", "binary?", "binary?", "binary?", "apply_diff_view_cookie!", "highlight", "project_tree_path", "client_options", "access_token_key", "client_options", "host_key", "has_ci_cd_only_params?", "import_github_title", "custom_icon", "credentials", "credentials", "active_nav_link?", "current_controller?", "current_action?", "current_path?", "action_name", "action_name", "push?", "merged?", "closed?", "joined?", "left?", "destroyed?", "commented?", "created_project?", "push_action_name", "created_project_action_name", "closed?", "push?", "state", "external_import?", "import_url", "import_data", "gitlab_project_import?", "expire_content_cache", "has_importer?", "importer", "importer_class", "importer_class", "importer_class", "importer_class", "importer_class", "importer_class", "expire_tags_cache", "expire_branches_cache", "expire_statistics_caches", "expire_root_ref_cache", "expire_emptiness_caches", "expire_exists_cache", "new_ref?", "rm_ref?", "created?", "created?", "status_name", "merge_requests", "merge_requests", "merge_requests", "merge_requests", "merge_requests", "opened", "merge_requests", "merge_requests", "merge_requests", "merge_requests", "by_commit_sha", "by_commit_sha", "merge_request_path", "sorted_merge_requests", "query", "query", "query", "query", "query", "public_only", "can_query?", "with_reactive_cache", "can_query?", "full_reactive_cache_key", "alive_reactive_cache_key", "within_reactive_cache_lifetime", "prometheus_client", "prometheus_client", "prometheus_client", "service_name", "service_port", "kube_client", "source_project", "all_commit_shas", "source_project", "all_commits", "recent", "recent", "recent", "recent", "active_when", "subject_snippets_path", "are_public", "member?", "team", "member?", "are_internal", "are_private", "are_public", "public_and_internal", "max_member_access", "max_member_access_for_user_ids", "max_member_access_for_resource_ids", "merge!", "max_member_access_for_resource_key", "merge_params", "merge_when_pipeline_succeeds_active?", "merge_params", "merge_async", "mergeable?", "check_if_can_be_merged", "check_if_can_be_merged", "mergeable_state?", "should_be_rebased?", "ff_merge_possible?", "ff_merge_must_be_possible?", "target_branch_sha", "ancestor?", "target_branch_head", "target_branch_ref", "work_in_progress?", "work_in_progress?", "mergeable_discussions_state?", "broken?", "mergeable_ci_state?", "branch_missing?", "has_no_commits?", "has_commits?", "commits_count", "commits_count", "source_branch_exists?", "target_branch_exists?", "source_branch_exists?", "target_branch_exists?", "discussions_to_be_resolved?", "discussions_resolvable?", "discussions_resolved?", "resolvable_discussions", "discussions", "discussion_notes", "discussion_notes", "discussions", "resolvable", "discussions", "fresh", "fresh", "fresh", "potentially_resolvable", "inc_relations_for_view", "non_diff_notes", "discussion_serializer", "prepare_notes_for_rendering", "issuable", "cross_reference_not_visible_for?", "issuable", "cross_reference?", "has_referenced_mentionables?", "cross_reference?", "cross_reference_note_prefix", "referenced_mentionables", "commits", "commits", "commits", "local_reference", "matches_cross_reference_regex?", "commits", "commits", "commits", "commits", "author_name", "commits_between", "load_commits", "from_hash", "to_hash", "to_hash", "raw", "raw", "raw", "raw", "raw", "send_upload", "trace", "raw_send_params", "raw_redirect_params", "trace_artifact_file", "trace", "complete?", "complete?", "closed_items_count", "total_items_count", "total_issues_count", "memoize_per_user", "memoized_users", "count_issues_by_state", "issues_visible_to_user", "issues_finder_params", "issues_finder_params", "issues_finder_params", "issues_finder_params", "closed_and_merged", "inspect", "inspect", "inspect", "inspect", "file_storage?", "proxy_download_enabled?", "file_storage?", "storage", "storage", "storage_for", "object_store_enabled?", "object_store_options", "send_artifacts_entry", "convert_line_endings", "sanitized_file_name", "file_name", "default_issues_tracker?", "prepare_commits_for_rendering", "with_pipeline_status", "set_status_for_ref", "force_cross_reference_regex_check?", "preload_max_access_for_authors", "preload_noteable_for_regular_notes", "preload_first_time_contribution_for_authors", "first_contribution?", "first_contribution?", "specialize_for_first_contribution!", "merged", "merge_params_ee", "merge_params_attributes", "tags", "tags", "tags", "tags", "tags", "with_pagination", "with_pagination", "manifest", "image", "image", "image", "redirect_to_repository_settings", "present_members", "search", "search", "search", "search", "sort_value_name", "search", "search", "search", "search", "search", "search", "search", "personal?", "search", "search", "namespace_id", "search", "milestones_filter_path", "milestone_counts", "milestone_class_for_state", "for_projects", "for_projects", "references", "discussion", "discussion", "part_of_discussion?", "individual_note?", "individual_note?", "to_discussion", "find_discussion", "find_discussion", "noteable_without_project?", "new_issuable_address", "merge_request_source_project_for_project", "new_issuable_address", "fork_of", "find_fork_of", "find_forks_in", "render_json", "build_payload", "error_payload", "prioritized", "unprioritized", "represent_appearance", "relevant", "finished", "project_issues", "rss_url_options", "safe_params", "available", "stopped", "within_folders", "represent_concise", "create_mr_button?", "create_mr_path", "dropdown_content", "dropdown_loading", "fetch_branches_by_mode", "diverging_commit_counts", "respond_with_boards", "respond_with", "serialize_as_json", "serialize_as_json", "serialize_as_json", "serialize_as_json", "serialize_as_json", "board", "board", "group_board?", "board", "board", "board", "boards", "finder", "finder", "set_index_vars", "finder", "set_index_vars", "finder", "set_index_vars", "incoming_email_token_enabled?", "clipboard_button", "form_errors", "page_title", "scopes", "rss_token", "submit", "text", "akismet_client", "akismet_enabled?", "push", "cache_last_push_event", "user_cache_key", "project_cache_key", "set_key", "redis_getdel", "redis_shared_state_key", "oauth_authorized_tokens", "issuable_finder_for", "finder_type", "finder_type", "finder_type", "finder_type", "finder_type", "with_subkeys", "fingerprint", "emails_with_verified_status", "fingerprint", "user_infos", "verified_email?", "confirmed", "primary_email_verified?", "temp_oauth_email?", "chat_names", "metrics_service", "metrics_text", "prometheus_metrics_text", "health_metrics_text", "formatter", "multiprocess_metrics_path", "koding_project_url", "support_url", "markdown", "markdown_field", "version_status_badge", "markdown", "truncate", "truncate_team", "prepare_for_rendering", "banzai_render_context", "banzai_render_context", "for_display", "for_display", "for_display", "banzai_render_context", "markdown_engine", "latest_cached_markdown_version", "markdown_unsafe", "promo_url", "promo_host", "states_count", "group_milestones_states_count", "legacy_group_milestone_states_count", "count_by_state", "count_by_state", "dropdown_toggle", "filter_group_project_member_path", "users_select_tag", "member_sort_options_hash", "non_invite", "access_level_roles", "access_level_roles", "access_level_roles", "member", "member", "find_by_invite_token", "sort_title_access_level_asc", "sort_title_access_level_desc", "sort_title_last_joined", "sort_title_name_asc", "sort_title_name_desc", "sort_title_oldest_joined", "sort_title_oldest_signin", "sort_title_recently_signin", "sort_value_access_level_asc", "sort_value_access_level_desc", "sort_value_last_joined", "sort_value_name_desc", "sort_value_oldest_signin", "sort_value_oldest_joined", "sort_value_recently_signin", "users_select_data_attributes", "setup_children", "expand_hierarchy", "load_projects", "load_projects", "load_projects", "shared_projects", "filter_projects_path", "projects_sort_options_hash", "sort_value_latest_activity", "can_create_project?", "projects_limit_left", "personal_projects_count", "sort_title_largest_repo", "sort_title_latest_activity", "sort_title_name", "sort_title_oldest_activity", "sort_title_oldest_created", "sort_title_recently_created", "sort_value_largest_repo", "sort_value_oldest_activity", "sort_value_oldest_created", "sort_value_recently_created", "request_path_with_options", "prepare_projects_for_rendering", "preload_max_member_access_for_collection", "filter_groups_path", "groups_sort_options_hash", "can_create_group?", "can_create_group?", "subgroup?", "has_parent?", "sort_title_oldest_updated", "sort_title_recently_updated", "sort_value_oldest_updated", "redirect_out_of_range", "redirect_out_of_range", "todo_params", "todos_pending_count", "current_page", "todos_pending_count", "load_events", "load_events", "load_events", "load_events", "load_events", "show_projects?", "any_projects?", "event_filter", "authorized_projects", "render_group_tree", "with_selects_for_list", "with_counts", "project_count_sql", "subgroup_count_sql", "member_count_sql", "note_json", "note_serializer", "use_note_serializer?", "discussions_rendered_on_frontend?", "discussions_rendered_on_frontend?", "note_html", "diff_discussion_html", "discussion_html", "diff_discussion?", "resolvable?", "resolvable?", "diff_discussion?", "potentially_resolvable?", "supports_resolvable_notes?", "base_class_name", "on_image?", "on_image?", "on_image?", "board_parent", "make_sure_position_is_set", "move_to_end", "max_relative_position", "position_between", "parent_ids", "sort_options_hash", "admins", "blocked", "external", "without_projects", "with_two_factor", "without_two_factor", "filter", "search_with_secondary_emails", "sort_title_created_date", "sort_title_downvotes", "sort_title_due_date", "sort_title_due_date_later", "sort_title_due_date_soon", "sort_title_label_priority", "sort_title_largest_group", "sort_title_milestone", "sort_title_milestone_later", "sort_title_milestone_soon", "sort_title_popularity", "sort_title_priority", "sort_title_upvotes", "sort_value_created_date", "sort_value_downvotes", "sort_value_due_date", "sort_value_due_date_later", "sort_value_due_date_soon", "sort_value_label_priority", "sort_value_largest_group", "sort_value_milestone", "sort_value_milestone_later", "sort_value_milestone_soon", "sort_value_popularity", "sort_value_priority", "sort_value_upvotes", "services_templates", "online", "dropdown_title", "dropdown_filter", "kind", "templates", "admin_groups_sort_options_hash", "with_statistics", "with_statistics", "boolean_to_icon", "projects_with_write_access", "with_write_access", "without_deleted", "usage_ping_enabled", "usage_ping_can_be_configured?", "broadcast_message", "broadcast_message_status", "ended?", "broadcast_message_style", "render_broadcast_message", "color", "metrics", "metrics", "metrics", "metrics", "metrics", "metrics", "prometheus_adapter", "has_metrics?", "prometheus_adapter", "has_metrics?", "prometheus_adapter", "prometheus_adapter", "service_prometheus_adapter", "cluster_prometheus_adapter", "available?", "available?", "create_record_event", "create_merge_event", "merge_mr", "merge_mr", "close_resource_email", "close_mr", "close", "close", "close_mr", "todo_service", "commit_status_merge_requests", "merge_request_build_retried", "mark_pending_todos_as_done", "update_todos_count_cache", "attributes_for_target", "pending_todos", "todos_done_count", "todos_done_count", "merge_requests_for", "preload_for_collection", "render_events", "cycle_analytics", "events_params", "issues_finder", "merge_request_params_attributes", "closes_issues", "closes_issues", "closes_issues", "committer", "merge_request?", "wiki?", "parse_repo_path", "ff_merge", "lazy", "lazy", "batch", "commits_by", "for", "render_lfs_not_found", "objects", "download_request?", "upload_request?", "download_request?", "download_request?", "upload_request?", "download_objects!", "upload_objects!", "download_request?", "upload_request?", "download_request?", "upload_request?", "existing_oids", "upload_actions", "all_lfs_objects", "lfs_storage_project", "fork_source", "download_actions", "upload_pack?", "git_command", "blobs_at", "source_branch_head", "source_branch_ref", "render_show", "render_show", "define_protected_refs", "define_deploy_token", "expand_deploy_tokens_section?", "expires?", "expires_soon?", "expires_at", "expires_at", "branches", "load_gon_index", "branches", "access_levels_options", "protectable_tags_for_dropdown", "protectable_branches_for_dropdown", "hash", "hash", "protectable_ref_names", "ref_names", "non_wildcard_protected_ref_names", "ref_names", "protections", "refs", "refs", "refs", "levels_for_dropdown", "branch_names_contains", "tag_names_contains", "job_from_id", "job_from_ref", "latest_successful_builds_for", "with_artifacts_archive", "latest_successful_for", "archive", "archive", "access_denied!", "archive!", "git_not_found!", "current", "current", "current", "current_and_future_messages", "cache_expires_in", "ensure_cache_setup", "diff_refs", "diff_refs", "diff_line", "diff_line", "diff_line", "find_noteable_diff", "diff_refs", "diff_refs", "start_commit_sha", "base_commit_sha", "start_commit", "start_commit", "merge_base_commit", "merge_base", "diff_start_sha", "diff_base_sha", "branch_merge_base_commit", "source_branch_sha", "max_diff_options", "raw_diffs", "raw_diffs", "raw_diffs", "raw_diffs", "diffs", "diffs", "diffs", "diffs", "diffs", "compare", "load_diffs", "safe_start_commit_sha", "diff_options", "environments_for", "diff_head_commit", "diffs_expanded?", "hide_whitespace?", "first_note", "supported?", "supported?", "has_complete_diff_refs?", "started?", "started?", "started_at", "subject", "subject", "raise_error", "raise_error", "raise_error", "uncached_full_path", "full_path_key", "find_routable!", "handle_not_found_or_authorized", "routable_authorized?", "ensure_canonical_path", "build_canonical_path", "build_canonical_path", "build_canonical_path", "build_canonical_path", "build_canonical_path", "route_not_found", "authenticate_user!", "authenticate_user!", "allow_signup?", "for_milestones", "projects?", "in_namespace", "current_user_related?", "klass", "item_project_ids", "klass", "item_project_ids", "with_feature_available_for_user", "with_project_feature", "with_feature_enabled", "with_feature_access_level", "quoted_access_level_column", "authorizations_for_projects", "direct_child_projects", "projects_matching_filter", "hierarchy_for_parent", "direct_child_groups", "subgroups_matching_filter", "supports_nested_groups?", "supports_nested_groups?", "all_visible_descendant_groups", "exists", "descendants", "find_by_path_or_name", "visibility_level_icon", "remove_project_message", "storage_counter", "visibility_level_color", "archived", "sorted_by_activity", "projects_finder", "joined", "represent_hierarchies", "hierarchy", "build_hierarchy", "represent_hierarchy", "expand_hierarchy_for_child", "ancestors_upto", "ancestors_upto", "itemized?", "itemize", "folder", "entity_class", "project_deploy_keys", "in_projects", "in_projects", "in_projects", "in_projects", "deploy_keys", "members", "members", "fetch_members", "filter_by_no_label?", "cache_merge_request_closes_issues!", "update_merge_requests_head_pipeline", "new_merge_request", "new_merge_request", "new_issuable", "create_assignment_todo", "create_mention_todos", "create_todos", "attributes_for_todo", "filter_mentioned_users", "filter_directly_addressed_users", "directly_addressed_users", "filter_todo_users", "reject_users_without_access", "to_ability_name", "for_issue?", "for_merge_request?", "to_ability_name", "select_users", "new_resource_email", "head_pipeline_for", "resolve_discussions_with_issue", "user_agent_detail_service", "new_issue", "new_issue", "merge_request_to_resolve_discussions_of", "discussions_to_resolve", "discussions_to_be_resolved", "spam_check", "when_recaptcha_verified", "check", "check", "check", "create_wiki", "wiki_enabled?", "git_fsck", "has_pushes?", "with_push", "keyed_verification_code", "log_error", "log_error", "txt_records", "log_error", "check_for_spam?", "check_for_spam?", "check_for_spam?", "spam?", "akismet", "akismet", "check_for_spam?", "create_spam_log", "spam_title", "spam_description", "spammable_owner_id", "spammable_text", "spammable_owner", "title_changed?", "update_attributes", "process_title", "deep_title_squish", "merge_quick_actions_into_params!", "delete_page", "commit_details", "update_project_activity", "touch", "touch", "touch", "touch_noteable", "scope", "scope", "scope", "scope", "process_scope", "process_registry_access", "process_repository_access", "ensure_container_repository!", "can_access?", "build_can_pull?", "user_can_admin?", "user_can_pull?", "deploy_token_can_pull?", "build_can_push?", "user_can_push?", "has_authentication_ability?", "can_user?", "has_authentication_ability?", "has_access_to?", "has_access_to?", "deploy_keys_project_for", "create_from_path!", "build_from_path", "default_message", "delete_conflicting_redirects", "conflicting_redirects", "matching_path_and_descendants", "repository_event", "reset_project_activity", "set_last_repository_updated_at", "track_user_interacted_projects", "set_last_repository_updated_at", "track", "cached_exists?", "recent_update?", "check_repository_absence!", "set_last_activity_at", "ensure_storage_path_exists", "ensure_storage_path_exists", "repository_storage_path", "repository_storage_path", "repository_with_same_path_already_exists?", "update_daemon", "sync_share_with_group_lock_with_parent", "save_git_content", "keep_around_commits", "keep_around_commits", "ensure_commit_shas", "save_diffs", "save_commits", "keep_around_commits", "keep_around", "kept_around?", "keep_around_ref_name", "ref_exists?", "create_bulk", "create_merge_request_diff_files", "find_base_sha", "ensure_merge_request_diff", "create_merge_request_diff", "reload_merge_request_diff", "fetch_ref!", "ref_path", "ref_path", "ref_path", "fetch_source_branch!", "post_create_hook", "post_create_hook", "create_notification_setting", "send_invite", "send_request", "post_create_hook", "send_invite", "post_create_hook", "send_invite", "post_create_hook", "notification_service", "owner?", "notification_service", "notification_service", "notification_service", "new_project_member", "member_access_granted_email", "real_source_type", "notifiable?", "real_source_type", "notifiable?", "notifiable?", "notifiable?", "suitable_notification_level?", "unsubscribed?", "own_activity?", "has_access?", "read_ability", "notification_level", "custom_enabled?", "action_excluded?", "excluded_watcher_action?", "excluded_participating_action?", "notification_setting", "notification_setting", "event_enabled?", "find_notification_setting", "notification_settings_for", "global_notification_setting", "notifiable_options", "notifiable_options", "notifiable_options", "member_source", "invite_project_member", "member_invited_email", "new_group_member", "invite_group_member", "system_hook_service", "system_hook_service", "system_hook_service", "system_hook_service", "execute_hooks_for", "build_event_data", "full_path_was", "full_path_was", "build_event_name", "project_data", "project_member_data", "group_data", "group_member_data", "user_data", "human_access", "access_options", "visibility_levels", "new_access_request", "owners_and_masters", "deliver_access_request_email", "fallback_to_group_owners_masters?", "member_access_requested_email", "find_or_create_for", "update_two_factor_requirement", "update_two_factor_requirement", "expanded_groups_requiring_two_factor_authentication", "all_expanded_groups", "groups", "all_groups", "all_groups", "groups", "groups", "authorized_groups", "ordered", "ordered", "visible_to_user", "visible_to_user", "groups_for_ancestors", "groups_for_descendants", "owned_groups", "include_public_groups?", "full_private_access?", "load_groups", "prepare_groups_for_rendering", "set_diff", "find_diff", "diff_for_line_code", "diff_file_hash", "refresh_user_cache", "refresh_cache", "refresh_cache", "count_stored?", "global_count", "count_service", "global_count", "count_service", "global_count", "count_service", "project_ids", "project_ids", "project_ids", "project_ids", "generate_subkeys", "primary_keyid", "before_create_do_block", "before_create_do_block", "finished_at", "failure_reason", "add_root_as_member", "create_ref", "invalidate_cache", "create_ref", "expire_etag_cache", "expire_etag_cache", "expire_etag_cache", "expire_etag_cache", "etag_key", "etag_cache_key", "awardable", "refresh_markdown_cache", "ensure_metadata", "create_page", "note?", "ensure_callout", "feature_name", "recaptcha_check_with_fallback", "spammable_params", "snippet_params", "snippet_params", "move_temporary_files", "ensure_spam_config_loaded!", "spammable_path", "render_recaptcha?", "spammable_path", "spammable_path", "spammable_path", "log_audit_event", "log_user_activity", "log_audit_event", "log_user_activity", "authentication_method", "user_params", "user_params", "user_params", "user_params", "user_params", "user_params_ce", "login_counter", "counter", "counter", "counter", "counter_name", "counter_description", "counter_name", "counter_description", "counter_name", "counter_description", "counter_name", "counter_description", "counter_name", "counter_description", "for_authentication", "security_event", "resource_name", "resource_name", "project_params", "project_params", "project_params", "custom_import_params", "active_new_project_tab", "saved?", "project_params_attributes", "wiki_params", "build_page", "wiki_page_errors", "build_page", "build_page", "build_page", "build_page", "build_page", "build_page", "trigger_params", "mark_todo", "preview_markdown_path", "runners_path", "assign_to", "shared?", "protected_ref_params", "create_service_class", "protected_ref_params", "access_level_attributes", "service_namespace", "service_namespace", "create_params", "create_params", "create_params", "create_params", "create_params", "create_params", "create_params", "project_pipeline_path", "project_pipeline_path", "schedule_params", "pipeline_schedules_path", "milestone_params", "milestone_params", "define_new_vars", "set_pipeline_variables", "configure_params", "configure", "command", "command", "bitmaps_enabled?", "git", "service_trigger_url", "label_params", "label_params", "label_params", "messages", "label_params", "repo", "issue_params", "issue_params", "issue_params", "issue_params", "issue_params_with_info_from_discussions", "whitelisted_issue_params", "title_from_merge_request", "description_for_discussions", "items_for_discussions", "item_for_discussion", "first_note_to_resolve", "move_between_lists?", "issue_state", "add_label_ids", "remove_label_ids", "move_between_ids", "on_group_boards", "on_project_boards", "movable?", "moving_from_list", "moving_to_list", "with_lists_and_board", "movable", "issue_params_attributes", "import_schedule", "import?", "bare_repository_import?", "fail", "mark_import_as_failed", "hook_params", "hook_params", "group_link_create_params", "continue_params", "import_in_progress?", "import_started?", "import_scheduled?", "environment_params", "token_in_session", "yaml_processor_options", "url_to_autodeploy_setup", "autodeploy_flash_notice", "new_issue_branch", "link_to_autodeploy_doc", "create_commit", "user_access", "update_flash_notice", "final_success_path", "branch_name_or_ref", "next_branch", "new_merge_request_path", "existing_merge_request_path", "merge_request_exists?", "create_merge_request?", "different_project?", "build_qr_code", "setup_u2f_registration", "execute!", "execute!", "can_see_access_requests?", "u2f_app_id", "account_string", "issuer_host", "host", "personal_access_token_params", "redis_store!", "key_params", "key_params", "gpg_key_params", "email_params", "delete_chat_name_token", "chat_name_params", "chat_name_params", "chat_name_token", "chat_name_token", "create_application_params", "application_params", "resource", "can_read?", "render_response", "notification_setting_params", "resource", "sign_up_params", "redirect_back_or_default", "file_is_valid?", "find_or_create_namespace", "access_params", "access_params", "extra_project_attrs", "user_map", "user_map", "group_params", "group_params", "visibility_level_description", "restricted_visibility_level_description", "disallowed_visibility_level_description", "visibility_level_label", "restricted_visibility_levels", "disallowed_visibility_level?", "visibility_level_allowed?", "visibility_level_allowed?", "visibility_level_allowed_as_fork?", "visibility_level_allowed_by_group?", "visibility_level_allowed_by_parent?", "visibility_level_allowed_by_projects?", "visibility_level_allowed_by_sub_groups?", "children", "disallowed_project_visibility_level_description", "disallowed_group_visibility_level_description", "visibility_level_errors_for_group", "project_visibility_level_description", "group_visibility_level_description", "snippet_visibility_level_description", "group_params_attributes", "group_params_ce", "milestone_path", "milestone_path", "project_milestone?", "project_milestone?", "legacy_group_milestone?", "legacy_group_milestone?", "uploader_class", "uploader_class", "uploader_class", "uploader_class", "uploader_class", "uploader_class", "uploader_class", "note_params", "note_project", "note_params", "members_page_url", "list_params", "impersonation_token_params", "identity_params", "can_change_group_visibility_level?", "add_owner", "add_user", "add_user", "add_user", "retrieve_member", "retrieve_access_level", "can_update_member?", "request?", "can_update_member?", "created_by", "retrieve_user", "broadcast_message_params", "appearance_params", "allowed_appearance_params", "report_params", "notify", "notify", "notify", "notify", "notify", "notify", "verification_enabled?", "activity", "activity", "activity", "project_name", "pretext", "attachments", "activity", "attachments", "activity", "attachments", "activity", "attachments", "activity", "pretext", "attachments", "activity", "attachments", "activity", "attachments", "activity", "project_name", "project_name", "user_avatar", "user_combined_name", "project_link", "project_link", "project_link", "project_link", "project_link", "project_link", "wiki_page_link", "project_link", "link", "user_avatar_without_link", "tag", "tag", "user_avatar_url_for", "placeholder_image", "tag", "avatar_icon_for_email", "avatar_icon_for_user", "gravatar_icon", "default_avatar", "find_tag", "description_message", "description_message", "description_message", "attachment_color", "attachment_color", "attachment_color", "issue_url", "issue_title", "issue_url", "issue_url", "new_branch?", "removed_branch?", "compare_link", "ref_type", "compare_url", "compare_url", "truncate_sha", "truncate_sha", "truncate_sha", "commit_messages", "commit_message_attachments", "compose_commit_message", "duration", "pretty_duration", "humanized_status", "branch_link", "pipeline_link", "branch_link", "humanized_status", "branch_url", "branch_url", "pipeline_url", "pipeline_url", "calculate_duration", "note_url", "formatted_title", "format_title", "format_title", "format_title", "render_line", "merge_request_link", "merge_request_url", "merge_request_title", "merge_request_url", "issue_link", "opened_issue?", "pager_json", "event_filter_visible", "comments_visible?", "spinner", "feature_available?", "feature_available?", "guest?", "get_permission", "fallback", "fallback", "deliverable?", "change_status", "gfm_reference", "delete_artifact!", "erase_artifacts!", "has_expiring_artifacts?", "remove_artifacts_file!", "remove_artifacts_metadata!", "merge_requests_for_source_branch", "merge_when_pipeline_succeeds", "serialize_widget", "can_cancel_merge_when_pipeline_succeeds?", "can_be_merged_by?", "serializer", "serializer", "serializer", "iwhere", "of_projects", "of_projects", "of_projects", "base_string", "increment_counter!", "cancel_running", "project_pipelines_path", "respond_422", "build_path", "cancelable?", "cancelable?", "cancelable?", "cancelable?", "project_job_path", "build_from_id", "build_from_ref", "application_name", "entry", "artifacts_metadata_entry", "artifacts_metadata", "use_file", "with_exclusive_lease", "unsafe_use_file", "exclusive_lease_key", "store_dir", "store_dir", "store_dir", "store_dir", "store_dir", "store_dir", "store_dirs", "store_dirs", "store_dirs", "store_dirs", "identifier", "identifier", "identifier", "identifier", "render_blob_json", "conditionally_expand_blob", "copy_file_path_button", "copy_blob_source_button", "open_raw_blob_button", "path_breadcrumbs", "simple_viewer", "rich_viewer", "mode", "mode", "rich_viewer_class", "viewer_class_from", "can_render?", "can_render?", "can_render_blob?", "file_type", "simple_viewer_class", "raw_binary?", "blob_raw_path", "blob_raw_url", "rendered_as_text?", "render_error", "render_error", "render_error", "render_error", "render_error", "render_error", "render_error", "render_error", "render_error", "render_error", "render_error", "too_large?", "too_large?", "has_home_page?", "find_page", "license", "license", "license_key", "license_short_name", "collapsed?", "collapsed?", "collapsed?", "collapsed?", "resolved?", "resolved?", "expanded?", "expanded?", "expand!", "blob_json", "auxiliary_viewer", "auxiliary_viewer_class", "find_model", "find_model", "find_model", "find_model", "upload_model_class", "upload_model_class", "upload_model_class", "schedule_background_upload?", "background_upload_enabled?", "background_upload", "background_upload", "revert", "revert", "temp_file_uploader", "revert", "temp_file_path", "file_path", "retrieve_from_store!", "retrieve_from_store!", "current_upload_satisfies?", "current_upload_satisfies?", "sti_name", "create_new_branch?", "successful_change_path", "failed_change_path", "assign_change_commit_vars", "revert_branch_name", "change_type_title", "merged_merge_request?", "merged_merge_request", "merged_merge_request_no_cache", "merge_commit?", "parents", "parents", "referenced_merge_request_url", "render_conflict_response", "render_issue_json", "can_move?", "can_move?", "moved?", "human_class_name", "upload_mount", "uploader_mounted?", "build_uploader_from_upload", "build_uploader_from_params", "build_uploader", "build_uploader", "build_uploader", "build_uploader", "build_uploader", "mount_point", "model_valid?", "model_valid?", "upload_paths", "execute_services", "async_execute", "async_execute", "async_execute", "async_execute", "async_execute", "async_execute", "hook", "hook", "hook", "hook", "supported_events", "supported_events", "supported_events", "supported_events", "supported_events", "supported_events", "supported_events", "supported_events", "supported_events", "supported_events", "supported_events", "supported_events", "supported_events", "supported_events", "supported_events", "supported_events", "supported_events", "supported_events", "supported_events", "supported_events", "supported_events", "supported_events", "supported_events", "code", "code", "parsed_url", "make_request", "make_request_with_auth", "log_execution", "build_headers", "format_response_headers", "safe_response_body", "body", "verify_domain!", "unverify_domain!", "disable_domain!", "dns_record_present?", "verification_domain", "open", "cached_size", "verified?", "verified?", "unverified?", "validate", "include_any_scope?", "read_only_attributes", "notify_success", "notify_success", "notify_new_user", "new_user", "new_user_email", "execute_without_lease", "update_authorizations", "fresh_access_levels_per_project", "current_authorizations_per_project", "current_authorizations", "fresh_authorizations", "insert_authorizations", "remove_project_authorizations", "block", "migrate_records_in_transaction", "migrate_records", "migrate_issues", "migrate_merge_requests", "migrate_notes", "migrate_abuse_reports", "migrate_award_emojis", "redirect_back_or_admin_user", "update_user", "default_route", "prepare_for_destroy", "legacy_storage?", "solo_owned_groups", "run_callbacks", "active_external_issue_tracker?", "active_external_wiki?", "issue_tracker?", "category", "owners", "owners", "old_repository_storage_paths", "repository_storage_paths", "all_projects", "all_projects", "all_projects", "contributed_projects", "contributed_projects", "contributions", "generate_reset_token", "recently_sent_password_reset?", "generate", "generate", "generate", "increment_and_save!", "lookup", "create_record", "maximum_iid", "usage_value", "can_create_user?", "build_user_params", "admin_create_params", "signup_params", "skip_user_confirmation_email_from_setting", "record_activity", "record", "bulk_perform_and_wait", "bulk_perform_async", "bulk_perform_and_wait", "bulk_perform_inline", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "calculate_checksum!", "calculate_checksum!", "calculate_checksum!", "absolute_path", "checksummable?", "absolute_path", "absolute_path", "absolute_path", "checksummable?", "absolute_path", "checksummable?", "exist?", "local?", "exist?", "local?", "exist?", "local?", "relative_path?", "relative_path?", "relative_path?", "cast_data", "latest?", "latest?", "latest?", "latest?", "latest?", "log_error_message_for", "latest_sha", "cleanup", "cleanup", "historical?", "refresh!", "refresh!", "apply_current_state!", "stuck_merge_requests", "mark_projects_without_jid_as_failed!", "mark_projects_with_jid_as_failed!", "enqueued_projects_with_jid", "error_message", "enqueued_projects", "enqueued_projects_without_jid", "try_obtain_lease", "try_obtain_lease", "try_obtain_lease", "try_obtain_lease", "try_obtain_lease", "try_obtain_lease", "remove_lease", "lease_key", "lease_key", "migrate_to_hashed_storage!", "build_relation", "repo_reference_count", "wiki_reference_count", "reference_counter", "update_status", "update_status", "skip", "run", "drop", "two_factor_grace_period_expired?", "latest_builds_status", "run_pipeline_schedule", "after_import", "after_import", "async?", "start_import", "fail_import", "start", "refresh_markdown_cache!", "after_create_default_branch", "remove_import_jid", "change_head", "reload_default_branch", "before_change_head", "after_change_head", "copy_gitattributes", "expire_branch_cache", "expire", "fork_repository", "start_fork", "current_settings", "destroy_unreferenced", "destroy_all", "destroy_all", "todos_counts", "mark_todos_as_done", "update_todos_state", "expired", "propagate", "try_obtain_lease_for", "try_obtain_lease_for", "try_obtain_lease_for", "propagate_projects_with_template", "bulk_create_from_template", "project_ids_batch", "bulk_insert_services", "service_hash", "lease_for", "lease_for", "cancel_lease_for", "refresh_method_caches", "update_statistics", "process_commit_message", "update_issue_metrics", "build_commit", "commit_exists_in_upstream?", "create_cross_references!", "close_issues", "close_issues", "updatable_by_user", "close_issue", "close_issue", "close_issue", "close_issue", "close_issue", "close_issue", "jira_tracker?", "issues_tracker", "issues_tracker", "default_issue_tracker", "transition_issue", "add_issue_solved_comment", "has_resolution?", "build_entity_url", "jira_request", "send_message", "build_remote_link_props", "find_remote_link", "assignee_or_author?", "assignee_or_author?", "projects_with_reporter_access_limited_to", "cross_reference_exists?", "cross_reference", "cross_reference_exists?", "system", "notes_for_mentioner", "cross_reference_note_content", "create_cross_reference_note", "cross_reference_disallowed?", "jira_tracker_active?", "can_cross_reference?", "add_comment", "resource_url", "noteable_name", "comment_exists?", "process_project_changes", "process_wiki_changes", "log", "after_project_changes_hooks", "trigger", "trigger", "trigger", "trigger", "pipeline_merge_requests", "merge_request_became_unmergeable", "create_unmergeable_todo", "valid_token?", "valid_token?", "valid_token?", "valid_token?", "find_chat_user", "authorize_chat_name_url", "health_check_access_token", "deactivate!", "schedule_next_run!", "pipeline_finished", "notifiable_users", "notifiable_users", "update_metrics_for_active_pipeline", "update_metrics_for_succeeded_pipeline", "needs_verification", "migrate!", "unsafe_migrate!", "persist_object_store!", "store!", "direct_upload_enabled?", "persist_object_store?", "report!", "sanity_check!", "args_check!", "migrate", "build_uploaders", "failures", "header", "failures", "pipeline_path", "failed", "can_create_notification?", "new_note", "new_note", "handle_note", "can_create_todo?", "for_snippet?", "for_snippet?", "build_new_note_recipients", "open_mr", "objects_found?", "set_user", "set_user", "set_user", "set_issuable", "issuable_class", "issuable_class", "open_issue", "unlink_fork", "from_project", "due_tomorrow", "issue_due", "close_connection", "refresh_import_jid_expiration", "find_project", "find_project", "perform_in_the_future", "find_project", "import_started", "wait_for_jobs", "path_to_repo", "renew_lease", "cancel_lease", "get_lease_uuid", "gitaly_call", "flush_ref_caches", "gitaly_migrate", "after_create_branch", "commit_pipelines_path", "new_merge_request_pipelines_path", "each_pipelines_merge_request_path", "all_merge_requests", "with_expired_artifacts", "pending_delete", "send_email", "repository_push_email", "sender", "add_project_headers", "send_from_committer_email?", "default_sender_address", "can_send_from_user_email?", "display_name", "short_sha", "short_sha", "short_sha", "short_sha", "allowed_email_domains", "handle_failure", "rejection", "message_id", "signature", "gpg_commit", "try_import", "try_import", "import", "import", "import", "import", "import", "import", "import", "import", "import", "report_import_time", "histogram", "representation_class", "representation_class", "representation_class", "representation_class", "representation_class", "invite?", "notify_waiter", "find_application", "get_session_token", "get_billing_state", "set_billing_state", "update_billing_change_counter", "billing_changed_counter", "state_transition", "redis_shared_state_key_for", "get_redis_session_key", "parse_trace_sections!", "create_deployment", "update_coverage", "coverage_regex", "perform_and_ttl", "always_perform?", "refresh_authorized_projects", "max_attachment_size", "max_attachment_size", "deny_visibility_level", "filter_spam_check_params", "rm_tag", "build_push_data", "build_push_data", "build_push_data", "build_push_data", "before_remove_tag", "after_remove_tag", "add_tag", "hooks_for", "store_metrics", "increment!", "increment_pushes_since_gc", "pushes_since_gc_redis_shared_state_key", "clean_up_old_archives", "clean_up_empty_directories", "ldap_hard_blocked?", "ldap_user?", "extract_commands", "extractor", "extract_updates", "commit_title", "commit_count", "commit_title", "commit_from_id", "commit_to_id", "commit_count", "trimmed_ref", "commit_from_id", "delete_redundant_access_levels", "authorized?", "protected_branch", "rename_repo", "rename_repo", "rename_repo", "valid_visibility_level_change?", "renaming_project_with_container_registry_tags?", "changing_default_branch?", "enabling_wiki?", "ensure_wiki_exists", "update_pages_config", "changing_pages_https_only?", "has_container_registry_tags?", "has_root_container_repository_tags?", "has_tags?", "has_tags?", "has_tags?", "build_root_repository", "mv_repository", "expire_caches_before_rename", "after_rename_repo", "rename_repo_notify!", "expires_full_path_cache", "send_move_instructions", "project_was_moved", "project_was_moved_email", "write_repository_config", "rename_project", "write_repository_config", "before_delete", "expire_all_method_caches", "artifacts?", "create_status", "extract_archive!", "deploy_page!", "tmp_path", "register_attempt", "enqueue!", "pages_deployments_total_counter", "pages_path", "pages_path", "pages_path", "public_path", "previous_public_path", "artifacts", "extract_zip_archive!", "artifacts", "artifacts_file", "artifacts_file", "total_size", "artifacts_metadata?", "max_size", "artifacts_expired?", "update_file", "reload_daemon", "pages_config_file", "update_file", "remove", "pages_update_file", "multi_action", "refresh_forks_count", "refresh_forks_count", "refresh_forks_count", "transfer", "transfer", "transfer", "invalidate_personal_projects_count", "transfer", "allowed_transfer?", "attempt_transfer_transaction", "update_namespace_and_visibility", "refresh_permissions", "rollback_side_effects", "execute_system_hooks", "move_project_folders", "move_project_uploads", "move_repo_folder", "rollback_folder_move", "rollback_folder_move", "move_repository", "user_ids_for_project_authorizations", "user_ids_for_project_authorizations", "noteable_owner", "participants_in_noteable", "sorted", "all_members", "move_before_destroy_relationships", "destroy_old_project", "attempt_restore_repositories", "attempt_repositories_rollback", "repo_path", "wiki_path", "removal_path", "flush_caches", "delete_cache", "add_source_project_to_fork_network", "move_project_members", "remove_remaining_members", "prepare_relation", "non_existent_members", "move_group_links", "remove_remaining_project_group_links", "non_existent_group_links", "group_links_in_target_project", "move_project_authorizations", "remove_remaining_authorizations", "non_existent_authorization", "move_notification_settings", "remove_remaining_notification_settings", "non_existent_notifications", "users_in_target_project", "move_lfs_objects_projects", "remove_remaining_lfs_objects_project", "non_existent_lfs_objects_projects", "move_forked_project_links", "move_fork_network_members", "update_root_project", "move_deploy_keys_projects", "remove_remaining_deploy_keys_projects", "non_existent_deploy_keys_projects", "refresh_project_authorizations", "refresh_project_authorizations", "refresh_members_authorized_projects", "add_repository_to_project", "repository_exists?", "repository_exists?", "validate!", "validate!", "validate!", "validate!", "import_repository", "unknown_url?", "ensure_repository", "ensure_repository", "fetch_as_mirror", "fetch_remote", "file_has_changed?", "validate_file_status!", "different_branch?", "validate_permissions!", "validate_on_branch!", "validate_branch_existance!", "validate_new_branch_name!", "import_export_shared", "execute_after_export_action", "save_all!", "save_services", "cleanup_and_notify_error!", "cleanup_and_notify_error", "export_path", "notify_error", "project_not_exported", "project_was_not_exported_email", "version_saver", "avatar_saver", "project_tree_saver", "uploads_saver", "repo_saver", "wiki_repo_saver", "lfs_saver", "execute_gitlab_shell_gc", "pushes_since_gc", "reset_pushes_since_gc", "pushes_since_gc", "task", "gc_period", "full_repack_period", "move_folder!", "absolute_base_dir", "import_upload_path", "tmp_filename", "overwrite_project?", "project_with_same_full_path?", "current_namespace", "link_existing_project", "fork_new_project", "link_fork_network", "target_namespace", "allowed_visibility_level", "accessible_keys", "accessible_deploy_keys", "valid_url?", "valid_url?", "valid_url?", "default_options", "valid_uri?", "valid_protocol?", "http?", "valid_domain?", "attempt_rollback", "attempt_destroy_transaction", "trash_repositories!", "remove_legacy_registry_tags", "delete_tags!", "remove_repository", "deny_namespace", "allowed_fork?", "allowed_namespace?", "after_create_actions", "save_project_and_import_data", "set_project_name_from_path", "create_or_update_import_data", "create_labels", "create_services_from_active_templates", "create_project", "setup_authorizations", "skip_wiki?", "add_master", "add_master", "explain_quick_actions", "find_user_references", "find_commands_target", "commands_target_type", "explain", "explain_commands", "commands_target_id", "editable?", "editable?", "editable?", "update_note", "prometheus_installed?", "template?", "template?", "noteable_update_service", "leave_note", "execute_note_hooks", "hook_data", "hook_data", "hook_data", "to_hook_data", "hook_attrs", "total_time_spent", "hook_attrs", "hook_attrs", "hook_attrs", "hook_attrs", "hook_attrs", "hook_attrs", "hook_attrs", "hook_attrs", "hook_attrs", "ssh_url_to_repo", "ssh_url_to_repo", "url_to_repo", "url_to_repo", "repo_changes", "raw_deltas", "new_file", "lfs_file?", "create_lfs_object!", "link_lfs_object!", "cached_attributes", "cached_attributes", "cache_attribute_key", "destroy_target", "reply_attributes", "reply_attributes", "reply_attributes", "reply_attributes", "reply_attributes", "reopen_milestone", "move_children_to_group_milestone", "check_project_milestone!", "clone_project_milestone", "destroy_old_milestones", "milestone_ids_for_merge", "group_project_ids", "update_children", "for_milestone_id", "destroy_milestone", "open_milestone", "close_milestone", "has_changes?", "create_assignee_note", "create_assignee_note", "create_branch_change_note", "new_mentions_in_merge_request", "reassigned_merge_request", "relabeled_merge_request", "update_merge_request", "reassigned_merge_request", "update_issuable", "toggling_tasks?", "updated_tasks", "tasks?", "tasks", "summary", "get_updated_tasks", "get_tasks", "relabeled_resource_email", "reassign_resource_email", "previous_record", "new_mentions_in_resource_email", "change_branch", "change_assignee", "change_issue_assignees", "closed_without_fork?", "merge_from_quick_action", "mergeable_with_quick_action?", "source_project_missing?", "for_fork?", "in_fork_network_of?", "forked_from?", "resolve_all_discussions", "resolve_all_discussions", "resolved_all_discussions_email", "setup_merge_request_mail", "merge_request_thread_options", "mail_answer_thread", "mail_thread", "add_unsubscription_headers_and_links", "unsubscribable?", "recipient", "reload_diff", "update_diff_discussion_positions", "new_diff_notes", "close_upon_missing_source_branch_ref", "post_merge_manually_merged", "reload_merge_requests", "mark_pending_todos_done", "comment_mr_branch_presence_changed", "notify_about_push", "mark_mr_as_wip_from_commits", "execute_mr_web_hooks", "cache_merge_requests_closing_issues", "branch_added?", "branch_removed?", "add_merge_request_wip_from_commit", "push_to_merge_request", "add_commits", "commits_list", "diff_comparison_url", "new_commit_summary", "existing_commit_summary", "target_project_namespace", "change_branch_presence", "merge_request_push", "by_source_or_target_branch", "force_push?", "filter_merge_requests", "rebase", "rebase", "rebase", "rebase_in_progress?", "merge_merge_request", "in_locked_state", "error_check!", "after_merge", "clean_merge_jid", "handle_merge_error", "branch_deletion_user", "delete_source_branch?", "can_remove_source_branch?", "force_remove_source_branch?", "root_ref?", "opened_merge_requests_from_source_branches", "get_branches", "url_for_new_merge_request", "url_for_existing_merge_request", "merge_requests_enabled?", "from_source_branches", "set_projects!", "resolve", "resolve", "render_json_with_notes_serializer", "serialize_notes?", "resolve!", "resolve!", "resolve_without_save", "has_vue_discussions_cookie?", "render_discussion", "render_json_with_discussions_serializer", "render_json_with_html", "close_merge_request", "find_source_project", "find_target_project", "find_target_branch", "branches_valid?", "compare_branches", "assign_title_and_description", "append_closes_description", "assign_title_and_description_from_single_commit", "assign_title_from_issue", "validate_branches", "source_branch_specified?", "target_branch_specified?", "validate_branches", "add_error", "branches_present?", "same_source_and_target?", "default_merge_request_target", "can_allow_maintainer_to_push?", "maintainer_push_possible?", "assignable_issues", "merge_request_build_failed", "create_build_failed_todo", "after_execute", "action_member_permission", "update_member_permission", "update_member_permission", "update_member_permission", "update_member_permission", "override_member_permission", "can_request_access?", "last_owner?", "can_destroy_member?", "decline_access_request", "member_access_denied_email", "member_source_class", "destroy_member_permission", "destroy_member_permission", "destroy_member_permission", "destroy_member_permission", "add_users", "add_users", "add_users", "user_limit", "parse_users_list", "accept_request", "can_update_access_requester?", "after_accept_request", "mattermost_team_params", "unlock_file", "can_be_unlocked_by?", "lock", "find_locks", "current_lock", "create_lock!", "convert_color_name_to_hex", "labels_to_transfer", "group_labels_applied_to_issues", "group_labels_applied_to_merge_requests", "find_or_create_label!", "update_label_links", "update_label_priorities", "subscribe_users", "label_ids_for_merge", "update_issuables", "update_issue_board_lists", "update_priorities", "update_project_labels", "clone_label_to_group_label", "find_or_create_label", "find_or_create_label", "available_labels", "available_labels", "parent_type", "parent_is_group?", "update?", "update?", "update?", "redis_lease", "new_key", "new_key", "new_ssh_key_email", "create_confidentiality_note", "new_mentions_in_issue", "reassigned_issue", "relabeled_issue", "update_issue", "reassigned_issue", "change_issue_confidentiality", "handle_move_between_ids", "change_issue_duplicate", "move_issue_to_new_project", "move_between", "get_issue_if_allowed", "move_after", "move_before", "prev_relative_position", "shift_before?", "next_relative_position", "shift_after?", "reopen_issue", "reopen_issue", "update_new_issue", "update_old_issue", "create_new_issue", "notify_participants", "issue_moved", "issue_moved_email", "setup_issue_mail", "issue_thread_options", "serializable_hash", "assignee_ids", "cloneable_label_ids", "cloneable_milestone_id", "rewrite_content", "milestone", "milestone", "milestone", "milestone", "milestone?", "add_note_moved_to", "mark_as_moved", "noteable_moved", "rewrite_notes", "rewrite_issue_award_emoji", "add_note_moved_from", "rewrite_award_emoji", "notes_with_associations", "notes_with_associations", "notes_with_associations", "authors_loaded?", "award_emojis_loaded?", "referenced_merge_requests", "referenced_merge_requests", "closed_by_merge_requests", "merge_requests_readable_by_user", "apply_filters_if_needed", "close_service", "create_issue_duplicate_note", "create_issue_canonical_note", "close_service", "mark_canonical_issue_of_duplicate", "mark_duplicate_issue", "filter_resolve_discussion_params", "toggle_award_emoji", "toggle_award_emoji", "new_award_emoji", "awarded_emoji?", "create_award_emoji", "remove_award_emoji", "emoji_awardable?", "normalize_name", "emoji_awardable?", "to_todoable", "user_can_award?", "awardable_by_user?", "awardable_votes?", "user_authored?", "mark_todos_as_done_by_ids", "todos_by_ids", "unsubscribe", "subscribe", "unsubscribe", "unsubscribe_from_other_levels", "find_or_initialize_subscription", "unsubscribe_and_redirect", "issue_path", "issue_path", "issue_path", "reopen_service", "reopen_service", "filter_assignee", "filter_milestone", "filter_labels", "filter_assignee", "assignee_can_read?", "filter_labels_in_param", "find_or_create_label_ids", "for_projects_and_groups", "handle_time_tracking_note", "handle_description_change_note", "create_labels_note", "create_title_change_note", "create_milestone_note", "create_discussion_lock_note", "discussion_lock", "change_milestone", "wipless_title_changed", "wipless_title_changed", "create_wip_note", "change_title", "handle_merge_request_wip", "change_label", "create_description_change_note", "create_task_status_note", "change_task_status", "change_description", "create_time_estimate_note", "create_time_spent_note", "change_time_spent", "change_time_estimate", "permitted_attrs", "clean_up_export_files", "reject_parent_id!", "valid_share_with_group_lock_change?", "changing_share_with_group_lock?", "proceed_to_transfer", "ensure_allowed_transfer", "group_is_already_root?", "same_parent?", "valid_policies?", "namespace_with_same_path?", "raise_transfer_error", "update_group_attributes", "update_children_and_projects_visibility", "create_group_path", "namespace_or_group", "remove_mattermost_team", "create_chat_team?", "can_use_visibility_level?", "gravatar_url", "gravatar_config", "new_gpg_key", "new_gpg_key_email", "before_push_tag", "build_system_push_data", "after_push_commit", "after_remove_branch", "update_gitattributes", "update_caches", "update_signatures", "process_commit_messages", "execute_related_hooks", "perform_housekeeping", "process_default_branch", "push_to_existing_branch?", "push_to_new_branch?", "push_remove_branch?", "default_branch?", "commit_count_for_ref", "needed?", "period_match?", "housekeeping_enabled?", "repack_period", "render_notes", "render_options", "update_secondary_emails!", "update_secondary_emails!", "set_notification_email", "set_public_email", "all_emails", "resend_confirmation_instructions", "tracer", "diff_discussion_outdated", "version_params_for", "viewable", "merge_request_diff_for", "viewable_diffs", "resolve_discussion", "can_resolve?", "follow_up_issue", "discussion_continued_in_issue", "merge_request_branch_names", "origin_merge_requests", "find_branch", "rm_branch", "before_remove_branch", "executable?", "deploy", "expanded_environment_url", "deploy", "on_stop", "add_branch", "create_master_branch", "create_file", "compare_source_branch", "create_commit!", "create_commit!", "create_commit!", "create_commit!", "create_commit!", "create_commit!", "create_commit!", "create_commit!", "actions_after_lfs_transformation", "commit_actions!", "delete_file", "create_transformed_commit", "create_dir", "create_dir", "commit_change", "cohorts", "running_totals", "counts_by_month", "column_to_date", "continue_creation", "finalize_creation", "request_operation", "elapsed_time_from_creation", "get_operation_id", "api_client", "configure_provider", "configure_kubernetes", "request_kubernetes_token", "gke_cluster", "create_cluster", "can_create_cluster?", "cluster_params", "application_class", "application_class", "install_command", "install_command", "install_command", "install_command", "helm_api", "install_command", "chart", "chart", "chart", "on_success", "on_failed", "check_timeout", "installation_phase", "timeouted?", "remove_installation_pod", "installation_errors", "ingress_ip", "shared", "can_pick?", "tick_runner_queue", "shared_runners_enabled?", "with_shared_runners", "runner_queue_key", "assignable_for?", "accepting_tags?", "ref_protected?", "stop_action?", "stop_action?", "stop_with_action!", "play", "play", "play", "stop_action", "manual_actions", "manual_actions", "schedule", "playable?", "playable?", "playable?", "playable?", "process!", "reprocess!", "close_all", "retried", "retried", "mark_as_processable_after_stage", "after_stage", "matches_tag_ids", "with_any_tags", "builds_for_shared_runner", "builds_for_specific_runner", "register_failure", "register_success", "register_failure", "pages_deployments_failed_total_counter", "jobs_running_for_project", "attempt_counter", "job_queue_duration_seconds", "failed_attempt_counter", "with_builds_enabled", "new_builds", "unstarted", "ref_protected", "running_builds_for_shared_runners", "process_stage", "stage_indexes_of_created_builds", "update_retried", "created_builds", "process_build", "status_for_prior_stages", "created_builds_in_stage", "valid_statuses_for_when", "retry", "retry", "retry", "retry", "retry", "retry_failed", "retryable?", "retryable?", "retryable?", "retryable?", "failed?", "hook_log", "set_hook_execution_notice", "hook_log", "create_pipeline_from_trigger", "trigger_from_token", "read_secrets", "extract_sections", "find_or_create_name", "ensure_stage", "find_stage", "create_stage", "cancel_pending_pipelines", "pipeline_created_counter", "schedule_head_pipeline_update", "related_merge_requests", "auto_cancel_running", "auto_cancelable_pipelines", "created_or_pending", "pipeline_schedule_params", "update_last_used_at", "update_last_used_at", "find_chat_name", "update_last_used_at?", "request_token", "valid_move?", "reorder_intermediate_lists", "update_list_position", "decrement_intermediate_lists", "increment_intermediate_lists", "create_list", "create_list", "destroyable?", "decrement_higher_lists", "remove_list", "available_labels_for", "next_position", "create_board!", "create_board!", "set_parent", "set_state", "set_scope", "list", "list", "list", "ls_files", "order_by_position_and_priority", "movable_list?", "closed_list?", "without_board_labels", "with_list_label", "board_label_ids", "issues_label_links", "create_issue", "can_create_board?", "authorized_token", "stop_environments", "set_attributes", "invalidate_issue_cache_counts", "invalidate_merge_request_cache_counts", "invalidate_todos_done_count", "invalidate_todos_pending_count", "build_url", "build_url", "allowed_branch?", "should_pipeline_be_notified?", "should_pipeline_be_notified?", "should_pipeline_be_notified?", "retrieve_recipients", "notify_for_ref?", "notify_for_pipeline?", "settings", "settings", "ssh_algorithms_hashes", "gitlab_pages", "gitlab_ci", "resolv_dns", "ssh_algorithm_hashes", "ssh_algorithm_file_content", "ssh_algorithm_md5", "ssh_algorithm_sha256", "ssh_algorithm_file", "gate", "message_options", "create_message", "create_push_message", "create_issue_message", "create_merge_request_message", "create_note_message", "create_pipeline_message", "message_color", "pipeline_status_color", "disable_diffs?", "tag_push_valid?", "push_valid?", "merge_request_valid?", "custom_data", "get_message", "get_channel_field", "custom_data", "event_channel_name", "auth", "auth", "speak", "build_message", "base_uri", "rooms", "auth_params", "get_path", "get_path", "check_commit", "with_associations", "relation_without_join_lateral", "relation_with_join_lateral", "with_associations", "filtered_events", "paginate_events", "base_relation", "limit_for_join_lateral", "detect_mentionable_changes", "pipeline_data", "running_or_pending_build_count", "running_or_pending", "by_created_at", "by_custom_attributes", "by_search", "by_username", "by_search", "by_username", "by_search", "by_blocked", "by_active", "by_external_identity", "by_external", "by_2fa", "with_extern_uid", "with_provider", "normalize_uid", "full_search", "created_before", "created_after", "scoped_table", "scoped_table", "recent_events", "limit_recent", "by_action", "by_state", "by_project", "by_author", "by_state", "by_state", "by_author", "by_action", "by_action_id", "by_author", "by_project", "by_state", "by_type", "type?", "done", "public_or_visible_to_user", "public_or_visible_to_user", "action_id?", "action_id", "inactive", "inactive", "filter_by_state", "closed", "closed", "no_author?", "references_project", "references_project", "filter_by_name", "filter_by_name", "tags_sorted_by", "tags_sorted_by_committed_date", "init_collection", "init_collection", "init_collection", "init_collection", "init_collection", "init_collection", "by_visibility", "visibility_from_scope", "authorized_snippets_from_project", "authorized_snippets", "feature_available_projects", "not_project_related", "table", "projects_for_user", "collection_with_user", "collection_without_user", "collection_with_user", "collection_without_user", "owned_projects?", "private_only?", "owned_projects", "owned_projects", "owned_projects_union", "include_subgroups?", "self_and_descendants", "only_owned?", "only_shared?", "notes_of_target_type", "notes_of_any_type", "notes_on_target", "related_notes", "notes_for_type", "with_confidentiality_access_check", "public_only?", "user_can_see_all_confidential_issues?", "user_cannot_see_confidential_issues?", "by_status", "by_status", "by_visibilty_level", "by_archived", "by_personal", "by_ids", "by_personal", "by_starred", "by_trending", "by_visibilty_level", "by_tags", "by_archived", "trending", "trending", "starred_by", "personal", "by_name", "by_scope", "by_scope", "by_ref", "by_name", "by_yaml_errors", "sort_items", "ids_for_ref", "from_ids", "assigned_to", "assigned_to", "by_user", "by_impersonation", "with_impersonation", "without_impersonation", "since_fetch_at", "updated_after", "updated_after", "excluding_project", "projects_where_can_admin_issues", "with_issues_enabled", "by_groups_and_projects", "by_title", "group_ids", "distinct_on", "authorized_to_read_labels?", "group_ids_for", "only_group_labels?", "groups_to_include", "groups_user_can_read_labels", "include_ancestor_groups?", "include_descendant_groups?", "with_title", "with_title", "filter_items", "filter_items", "filter_items", "by_source_branch", "by_target_branch", "by_due_date", "filter_by_no_due_date?", "filter_by_overdue?", "filter_by_due_this_week?", "filter_by_due_this_month?", "due_date?", "without_due_date", "due_before", "due_between", "by_updated_at", "by_group", "by_iids", "by_assignee", "by_milestone", "by_label", "by_my_reaction_emoji", "by_non_archived", "by_assignee", "by_milestone", "no_assignee?", "unassigned", "unassigned", "awarded", "without_label", "with_label", "grouping_columns", "filter_by_no_milestone?", "filter_by_upcoming_milestone?", "filter_by_started_milestone?", "with_milestone", "upcoming_ids_by_projects", "updated_before", "by_parent", "ancestors_of_filtered_projects", "ancestors_of_filtered_subgroups", "ancestors_of_groups", "by_current_user_access", "by_target_type", "by_created_at_before", "by_created_at_after", "includes_commit?", "order_by_last_deployed_at", "recently_updated_on_branch?", "includes_commit?", "can_read_cross_project?", "filter_by_scope", "disabled", "disabled", "branches_sorted_by", "local_branches", "find_users", "todo_authors", "users_from_project", "users_with_parents", "by_namespace_id", "by_with_push", "by_abandoned", "by_last_repository_check_failed", "abandoned", "page_specific_javascript_tag", "add_to_breadcrumbs", "mattermost_teams_options", "suggested_colors", "link_to_discussions_to_resolve", "allow_maintainer_push_unavailable_reason", "discussions_can_be_resolved_by?", "contribution_guide_path", "tree_join", "contribution_guide", "import_will_timeout_message", "import_svn_message", "import_failed?", "time_interval_in_words", "manageable_namespaces", "manageable_groups", "github_import_configured?", "logged_in_with_provider?", "go_to_provider_for_permissions", "status_import_url", "logged_in_with_provider?", "import_github_authorize_message", "import_github_personal_access_token_message", "import_configure_github_admin_message", "extra_import_params", "callback_import_url", "previous_labels_path", "fallback_path", "set_default_state", "set_sort_order_from_cookie", "default_sort_order", "valid_params", "scalar_params", "array_params", "scalar_params", "update_cookie_value", "update_page", "initialize_raw_repository", "render_variables", "variables_params", "variable_params_attributes", "variable_params_attributes", "update_params", "update_params", "update_params", "update_params", "update_params", "run_autodevops_pipeline", "runner_path", "runner_status_icon", "belongs_to_one_project?", "specific?", "run_auto_devops_pipeline?", "gitlab_ci_yml", "managed?", "service_params", "success_message", "service_save_button", "can_test?", "deprecation_message", "can_test?", "can_test?", "can_test?", "can_test?", "can_test?", "can_test?", "deprecation_message", "deprecated_message_content", "deprecated?", "deprecated?", "event_channel_names", "event_channel_names", "event_names", "runner_params", "runner_params", "release", "release_params", "update_service_class", "define_edit_vars", "group_link_params", "deploy_key", "deploy_key", "after_edit_path", "preferences_params", "dropdown_tag", "can_change_share_with_group_lock?", "remove_group_message", "share_with_group_lock_help_text", "parent_group_options", "default_help", "ancestor_locked_but_you_can_override", "ancestor_locked_so_ask_the_owner", "ancestor_locked_and_has_been_overridden", "ancestor_group", "oldest_consecutively_locked_ancestor", "remove_the_share_with_group_lock_from_ancestor", "render_group_variables", "group_variables_params", "redirect_back_or_group_labels_path", "root_params_key", "recaptcha_check_if_spammable", "render_entity_json", "update_service", "update_service", "move_params", "move_params", "changing_own_password?", "assign_builds_and_projects", "detailed_status", "detailed_status", "detailed_status", "detailed_status", "detailed_status", "detailed_status", "detailed_status", "detailed_status", "detailed_status", "detailed_status", "detailed_status", "application_setting_params", "visible_application_setting_attributes", "button_based_providers", "auth_providers", "form_based_provider?", "visible_attributes", "new_branch_message", "removed_branch_message", "push_message", "merge_request_message", "start_date", "start_date", "delete_async", "destroy_confirmation_valid?", "destroy_confirmation_failure_message", "confirm_deletion_with_password?", "allow_password_authentication?", "allow_password_authentication_for_web?", "allow_password_authentication_for_git?", "only_for?", "destroy_service_class", "remove_pages", "find_labels", "find_labels", "extract_references", "disable_two_factor!", "revoke", "revoke", "revoke", "revoke", "revoke", "with_key_and_subkeys", "revoke!", "revoke!", "destroyable", "impersonator"]
CLASSES: ["IssuableActions", "MembershipActions", "NotesActions", "FinderMethods", "FinderWithCrossProjectAccess", "AbuseReport", "SpamLog", "BuildDetailsEntity", "Member", "RequestAwareEntity", "CycleAnalyticsParams", "JiraService", "CommitRange", "BlobLike", "ContainerRepository", "DeployToken", "ExternalIssue", "ProjectWiki", "Projects::HousekeepingService::LeaseTaken", "VerifyPagesDomainService", "ObjectStorage::MigrateUploadsWorker::MigrationResult", "ObjectStorage::MigrateUploadsWorker::Report::MigrationFailures", "Ci::ArtifactBlob", "Ci::LegacyStage", "Commit", "Discussion", "WebHookLog", "ChatMessage::BaseMessage", "ChatMessage::IssueMessage", "ChatMessage::MergeMessage", "ChatMessage::NoteMessage", "ChatMessage::PipelineMessage", "ChatMessage::PushMessage", "ChatMessage::WikiPageMessage", "WikiPage", "Auth::ContainerRegistryAuthenticationService", "BaseService", "DeleteBranchService", "Lfs::LockFileService", "Projects::UpdatePagesService", "Tags::DestroyService", "TestHooks::BaseService", "Repository", "MergeRequestMetricsService", "Milestone", "MergeRequestsFinder", "ResolvableDiscussion", "Boards::Issues::MoveService", "Ci::UpdateRunnerService", "IssuableBaseService", "IssuableCollections", "MergeRequestsAction", "AccessRequestsFinder", "Admin::ProjectsFinder", "AutocompleteUsersFinder", "BranchesFinder", "ClustersFinder", "ContributedProjectsFinder", "EnvironmentsFinder", "EventsFinder", "GroupDescendantsFinder", "GroupFinder", "GroupMembersFinder", "GroupsFinder", "IssuableFinder", "JoinedGroupsFinder", "LabelsFinder", "MembersFinder", "MergeRequestTargetProjectFinder", "MilestonesFinder", "MoveToProjectFinder", "NotesFinder", "PersonalAccessTokensFinder", "PersonalProjectsFinder", "PipelineSchedulesFinder", "PipelinesFinder", "ProjectsFinder", "RunnerJobsFinder", "SnippetsFinder", "TagsFinder", "TodosFinder", "UserRecentEventsFinder", "UsersFinder", "Ci::Build", "Ci::Pipeline", "Mentionable::ClassMethods", "EventCollection", "ServiceHook", "WebHook", "Issue", "ProjectMember", "MergeRequest", "MergeRequestDiff", "Project", "AsanaService", "AssemblaService", "BambooService", "BuildkiteService", "CampfireService", "ChatNotificationService", "DroneCiService", "EmailsOnPushService", "ExternalWikiService", "FlowdockService", "GemnasiumService", "HipchatService", "IrkerService", "IssueTrackerService", "PackagistService", "PipelinesEmailService", "PivotaltrackerService", "PushoverService", "TeamcityService", "Service", "User", "ProjectPolicy", "BuildArtifactEntity", "ContainerRepositoryEntity", "ContainerTagEntity", "RunnerEntity", "AfterBranchDeleteService", "ApplicationSettings::UpdateService", "Applications::CreateService", "Badges::BuildService", "Badges::CreateService", "Badges::UpdateService", "Boards::CreateService", "Boards::Issues::CreateService", "Boards::Issues::ListService", "Boards::ListService", "Boards::Lists::CreateService", "Boards::Lists::DestroyService", "Boards::Lists::GenerateService", "Boards::Lists::ListService", "Boards::Lists::MoveService", "ChatNames::AuthorizeUserService", "ChatNames::FindUserService", "CheckGcpProjectBillingService", "Ci::CreatePipelineScheduleService", "Ci::CreatePipelineService", "Ci::EnsureStageService", "Ci::ExtractSectionsFromBuildTraceService", "Ci::FetchKubernetesTokenService", "Ci::PipelineTriggerService", "Ci::PlayBuildService", "Ci::ProcessPipelineService", "Ci::RegisterJobService", "Ci::RetryBuildService", "Ci::RetryPipelineService", "Ci::StopEnvironmentsService", "Ci::UpdateBuildQueueService", "Clusters::Applications::CheckIngressIpAddressService", "Clusters::Applications::CheckInstallationProgressService", "Clusters::Applications::InstallService", "Clusters::Applications::ScheduleInstallationService", "Clusters::CreateService", "Clusters::Gcp::FetchOperationService", "Clusters::Gcp::FinalizeCreationService", "Clusters::Gcp::ProvisionService", "Clusters::Gcp::VerifyProvisionStatusService", "Clusters::UpdateService", "CohortsService", "Commits::CreateService", "CompareService", "CreateBranchService", "CreateDeploymentService", "CreateReleaseService", "CreateSnippetService", "DeleteMergedBranchesService", "DeployKeys::CreateService", "DeployTokens::CreateService", "Discussions::ResolveService", "Discussions::UpdateDiffPositionService", "Emails::ConfirmService", "Emails::CreateService", "Emails::DestroyService", "Events::RenderService", "GitPushService", "GitTagPushService", "GpgKeys::CreateService", "GravatarService", "Groups::CreateService", "Groups::DestroyService", "Groups::NestedCreateService", "Groups::TransferService", "Groups::UpdateService", "ImportExportCleanUpService", "Issuable::BulkUpdateService", "Issuable::CommonSystemNotesService", "Issuable::DestroyService", "Issues::BaseService", "Issues::BuildService", "Issues::CloseService", "Issues::CreateService", "Issues::DuplicateService", "Issues::FetchReferencedMergeRequestsService", "Issues::MoveService", "Issues::ReopenService", "Issues::UpdateService", "Keys::CreateService", "Keys::LastUsedService", "Labels::CreateService", "Labels::FindOrCreateService", "Labels::PromoteService", "Labels::TransferService", "Labels::UpdateService", "Lfs::LocksFinderService", "Lfs::UnlockFileService", "Mattermost::CreateTeamService", "Members::ApproveAccessRequestService", "Members::CreateService", "Members::DestroyService", "Members::RequestAccessService", "Members::UpdateService", "MergeRequests::AddTodoWhenBuildFailsService", "MergeRequests::AssignIssuesService", "MergeRequests::BaseService", "MergeRequests::BuildService", "MergeRequests::CloseService", "MergeRequests::Conflicts::ResolveService", "MergeRequests::CreateFromIssueService", "MergeRequests::CreateService", "MergeRequests::GetUrlsService", "MergeRequests::MergeRequestDiffCacheService", "MergeRequests::MergeService", "MergeRequests::MergeWhenPipelineSucceedsService", "MergeRequests::PostMergeService", "MergeRequests::RebaseService", "MergeRequests::RefreshService", "MergeRequests::ReopenService", "MergeRequests::ResolvedDiscussionNotificationService", "MergeRequests::UpdateService", "Milestones::CloseService", "Milestones::CreateService", "Milestones::DestroyService", "Milestones::PromoteService", "Milestones::ReopenService", "Milestones::UpdateService", "Notes::BuildService", "Notes::CreateService", "Notes::DestroyService", "Notes::PostProcessService", "Notes::QuickActionsService", "Notes::RenderService", "Notes::UpdateService", "NotificationRecipientService::Builder::Base", "NotificationRecipientService::Builder::NewNote", "PagesService", "PreviewMarkdownService", "Projects::AfterImportService", "Projects::BaseMoveRelationsService", "Projects::CreateFromTemplateService", "Projects::CreateService", "Projects::DestroyService", "Projects::DownloadService", "Projects::EnableDeployKeyService", "Projects::ForkService", "Projects::GitlabProjectsImportService", "Projects::GroupLinks::CreateService", "Projects::GroupLinks::DestroyService", "Projects::HashedStorage::MigrateAttachmentsService", "Projects::HashedStorage::MigrateRepositoryService", "Projects::HashedStorageMigrationService", "Projects::ImportExport::ExportService", "Projects::ImportService", "Projects::MoveAccessService", "Projects::MoveDeployKeysProjectsService", "Projects::MoveForksService", "Projects::MoveLfsObjectsProjectsService", "Projects::MoveNotificationSettingsService", "Projects::MoveProjectAuthorizationsService", "Projects::MoveProjectGroupLinksService", "Projects::MoveProjectMembersService", "Projects::MoveUsersStarProjectsService", "Projects::OverwriteProjectService", "Projects::ParticipantsService", "Projects::TransferService", "Projects::UnlinkForkService", "Projects::UpdatePagesConfigurationService", "Projects::UpdateService", "ProtectedBranches::CreateService", "ProtectedBranches::DestroyService", "ProtectedBranches::LegacyApiCreateService", "ProtectedBranches::LegacyApiUpdateService", "ProtectedBranches::UpdateService", "ProtectedTags::CreateService", "ProtectedTags::DestroyService", "ProtectedTags::UpdateService", "PushEventPayloadService", "QuickActions::InterpretService", "RepairLdapBlockedUserService", "RepositoryArchiveCleanUpService", "ResetProjectCacheService", "Search::GlobalService", "Search::ProjectService", "Search::SnippetService", "SearchService", "SubmitUsagePingService", "SystemHooksService", "Tags::CreateService", "TestHooks::ProjectService", "UpdateReleaseService", "UpdateSnippetService", "UploadService", "UserProjectAccessChangedService", "Users::ActivityService", "Users::BuildService", "Users::CreateService", "Users::DestroyService", "Users::MigrateToGhostUserService", "Users::RefreshAuthorizedProjectsService", "Users::UpdateService", "ValidateNewBranchService", "WebHookService::InternalErrorResponse", "WikiPages::BaseService", "WikiPages::CreateService", "WikiPages::DestroyService", "WikiPages::UpdateService", "FileMover", "UploadsActions", "ObjectStorage::Extension::RecordsUploads", "ObjectStorage::Concern", "RecordsUploads::Concern", "AvatarUploader", "FileUploader", "GitlabUploader", "SnippetBlob", "Blob", "DeployKey", "Note::SpecialRole", "Clusters::Concerns::ApplicationCore", "Uniquify", "GlobalMilestone", "GroupMilestone", "HasStatus", "Issuable::ClassMethods", "SystemNoteService", "Event", "NoteSummary", "ProtectedBranches::ApiService", "UserAgentDetailService", "SpammableActions", "GroupMember", "ProtectedBranches::AccessLevelParams", "GroupChildEntity", "AuthenticatesWithTwoFactor", "BoardsResponses", "ChecksCollaboration", "ContinueParams", "CreatesCommit", "DiffForPath", "EnforcesTwoFactorAuthentication", "GroupTree", "HooksExecution", "IssuesAction", "LfsRequest", "MembersPresentation", "MilestoneActions", "OauthApplications", "ParamsBackwardCompatibility", "PreviewMarkdown", "RendersBlob", "RendersCommits", "RendersMemberAccess", "RendersNotes", "RepositorySettingsRedirect", "RequiresWhitelistedMonitoringClient", "RoutableActions", "SendFileUpload", "ServiceParams", "SnippetsActions", "ToggleAwardEmoji", "ToggleSubscriptionAction", "WithPerformanceBar", "WorkhorseRequest", "CreatedAtFilter", "CustomAttributesFilter", "ForkProjectsFinder", "GroupProjectsFinder", "IssuesFinder", "UnionFinder", "AccountsHelper", "AppearancesHelper", "ApplicationHelper", "ApplicationSettingsHelper", "AuthHelper", "AutoDevopsHelper", "AvatarsHelper", "AwardEmojiHelper", "BlameHelper", "BlobHelper", "BoardsHelper", "BranchesHelper", "BreadcrumbsHelper", "BroadcastMessagesHelper", "BuildsHelper", "ButtonHelper", "CiStatusHelper", "ClustersHelper", "CommitsHelper", "CompareHelper", "ComponentsHelper", "ConversationalDevelopmentIndexHelper", "DashboardHelper", "DeferScriptTagHelper", "DeployTokensHelper", "DiffHelper", "DropdownsHelper", "EmailsHelper", "EmojiHelper", "EnvironmentHelper", "EnvironmentsHelper", "EventsHelper", "ExploreHelper", "ExternalWikiHelper", "FormHelper", "GitHelper", "GitlabRoutingHelper", "GraphHelper", "GroupsHelper", "HooksHelper", "IconsHelper", "ImportHelper", "InstanceConfigurationHelper", "IssuablesHelper", "IssuesHelper", "JavascriptHelper", "KerberosSpnegoHelper", "LabelsHelper", "LazyImageTagHelper", "MarkupHelper", "MattermostHelper", "MembersHelper", "MergeRequestsHelper", "MilestonesHelper", "MilestonesRoutingHelper", "NamespacesHelper", "NavHelper", "NotesHelper", "NotificationsHelper", "NumbersHelper", "PageLayoutHelper", "PaginationHelper", "PerformanceBarHelper", "PipelineSchedulesHelper", "PreferencesHelper", "ProfilesHelper", "ProjectsHelper", "RssHelper", "RunnersHelper", "SafeParamsHelper", "SearchHelper", "SelectsHelper", "SentryHelper", "ServicesHelper", "SidekiqHelper", "SnippetsHelper", "SortingHelper", "StorageHealthHelper", "StorageHelper", "SubmoduleHelper", "SystemNoteHelper", "TabHelper", "TagsHelper", "TimeHelper", "TodosHelper", "TreeHelper", "TriggersHelper", "UserCalloutsHelper", "UsersHelper", "VersionCheckHelper", "VisibilityLevelHelper", "WebpackHelper", "WikiHelper", "WorkhorseHelper", "AbuseReportMailer", "BaseMailer", "DeviseMailer", "EmailRejectionMailer", "Emails::Issues", "Emails::Members", "Emails::MergeRequests", "Emails::Notes", "Emails::PagesDomains", "Emails::Pipelines", "Emails::Profile", "Emails::Projects", "Notify", "RepositoryCheckMailer", "Ability", "Appearance", "ApplicationSetting", "AuditEvent", "AwardEmoji", "Badge", "GroupBadge", "ProjectBadge", "BlobViewer::Auxiliary", "BlobViewer::Balsamiq", "BlobViewer::Base", "BlobViewer::BinarySTL", "BlobViewer::Cartfile", "BlobViewer::Changelog", "BlobViewer::ClientSide", "BlobViewer::ComposerJson", "BlobViewer::Contributing", "BlobViewer::DependencyManager", "BlobViewer::Download", "BlobViewer::Empty", "BlobViewer::Gemfile", "BlobViewer::Gemspec", "BlobViewer::GitlabCiYml", "BlobViewer::GodepsJson", "BlobViewer::Image", "BlobViewer::License", "BlobViewer::Markup", "BlobViewer::Notebook", "BlobViewer::PackageJson", "BlobViewer::PDF", "BlobViewer::Podfile", "BlobViewer::Podspec", "BlobViewer::PodspecJson", "BlobViewer::Readme", "BlobViewer::RequirementsTxt", "BlobViewer::Rich", "BlobViewer::RouteMap", "BlobViewer::ServerSide", "BlobViewer::Simple", "BlobViewer::Sketch", "BlobViewer::Static", "BlobViewer::SVG", "BlobViewer::Text", "BlobViewer::TextSTL", "BlobViewer::Video", "BlobViewer::YarnLock", "Board", "BroadcastMessage", "ChatName", "ChatTeam", "Ci::BuildMetadata", "Ci::BuildTraceSection", "Ci::BuildTraceSectionName", "Ci::Group", "Ci::GroupVariable", "Ci::JobArtifact", "Ci::PipelineSchedule", "Ci::PipelineScheduleVariable", "Ci::PipelineVariable", "Ci::Runner", "Ci::RunnerProject", "Ci::Stage", "Ci::Trigger", "Ci::TriggerRequest", "Ci::Variable", "Clusters::Applications::Helm", "Clusters::Applications::Ingress", "Clusters::Applications::Prometheus", "Clusters::Applications::Runner", "Clusters::Cluster", "Clusters::Concerns::ApplicationData", "Clusters::Concerns::ApplicationStatus", "Clusters::Platforms::Kubernetes", "Clusters::Project", "Clusters::Providers::Gcp", "CommitCollection", "CommitStatus", "Compare", "AccessRequestable", "ArtifactMigratable", "AtomicInternalId::ClassMethods", "Avatarable::ShadowMethods", "Awardable::ClassMethods", "BlocksJsonSerialization", "BulkMemberAccessLoad", "CacheMarkdownField::FieldData", "CaseSensitivity::ClassMethods", "ChronicDurationAttribute", "CreatedAtFilterable", "DeploymentPlatform", "DiscussionOnDiff", "EachBatch::ClassMethods", "Editable", "Expirable", "FasterCacheKeys", "FeatureGate", "GhostUser", "GroupDescendant", "HasVariable", "IgnorableColumn::ClassMethods", "Importable", "LoadedInGroupList::ClassMethods", "ManualInverseAssociation::ClassMethods", "Mentionable::ReferenceRegexes", "Milestoneish", "NoteOnDiff", "Noteable", "Participable::ClassMethods", "Presentable", "ProjectFeaturesCompatibility", "PrometheusAdapter", "ProtectedBranchAccess", "ProtectedRef", "ProtectedRefAccess", "ProtectedTagAccess", "ReactiveCaching", "ReactiveService", "RedisCacheable", "Referable::ClassMethods", "RelativePositioning", "ResolvableNote::ClassMethods", "Routable", "SelectForProjectAuthorization::ClassMethods", "ShaAttribute::ClassMethods", "Sortable::ClassMethods", "Spammable::ClassMethods", "Storage::LegacyNamespace", "Storage::LegacyProjectWiki", "Storage::LegacyRepository", "StripAttribute::ClassMethods", "Subscribable", "Taskable", "ThrottledTouch", "TimeTrackable", "TokenAuthenticatable", "TriggerableHooks", "UpdatedAtFilterable", "ValidAttribute", "ConversationalDevelopmentIndex::Card", "ConversationalDevelopmentIndex::IdeaToProductionStep", "ConversationalDevelopmentIndex::Metric", "CycleAnalytics", "DashboardMilestone", "DeployKeysProject", "Deployment", "DiffDiscussion", "DiffNote", "DiffViewer::Added", "DiffViewer::Base", "DiffViewer::ClientSide", "DiffViewer::Deleted", "DiffViewer::Image", "DiffViewer::ModeChanged", "DiffViewer::NoPreview", "DiffViewer::NotDiffable", "DiffViewer::Renamed", "DiffViewer::Rich", "DiffViewer::ServerSide", "DiffViewer::Simple", "DiffViewer::Static", "DiffViewer::Text", "DirectlyAddressedUser", "DiscussionNote", "Email", "Environment", "Epic", "ForkNetwork", "ForkNetworkMember", "ForkedProjectLink", "GenericCommitStatus", "GlobalLabel", "GpgKey", "GpgKeySubkey", "GpgSignature", "Group", "GroupCustomAttribute", "GroupLabel", "Guest", "ProjectHook", "SystemHook", "Identity", "IndividualNoteDiscussion", "InstanceConfiguration", "InternalId::InternalIdGenerator", "Issue::Metrics", "IssueAssignee", "IssueCollection", "Key", "Label", "LabelLink", "LabelPriority", "LegacyDiffDiscussion", "LegacyDiffNote", "LfsFileLock", "LfsObject", "LfsObjectsProject", "List", "MergeRequest::Metrics", "MergeRequestDiffCommit", "MergeRequestDiffFile", "MergeRequestsClosingIssues", "Namespace", "Network::Commit", "Network::Graph", "NotificationReason", "NotificationRecipient", "NotificationSetting", "OauthAccessGrant", "OauthAccessToken", "OutOfContextDiscussion", "PagesDomain", "PersonalAccessToken", "PersonalSnippet", "ProjectAuthorization", "ProjectAutoDevops", "ProjectCustomAttribute", "ProjectDeployToken", "ProjectFeature", "ProjectGroupLink", "ProjectImportData", "ProjectLabel", "BugzillaService", "BuildsEmailService", "CiService", "CustomIssueTrackerService", "DeploymentService", "Flowdock::Git::Builder", "GitlabIssueTrackerService", "KubernetesService", "MattermostService", "MattermostSlashCommandsService", "MicrosoftTeamsService", "MockCiService", "MockDeploymentService", "MockMonitoringService", "MonitoringService", "PrometheusService", "RedmineService", "SlackService", "SlackSlashCommandsService", "SlashCommandsService", "ProjectSnippet", "ProjectStatistics", "ProjectTeam", "ProtectableDropdown", "ProtectedBranch::MergeAccessLevel", "ProtectedBranch::PushAccessLevel", "ProtectedBranch", "ProtectedRefMatcher", "ProtectedTag::CreateAccessLevel", "ProtectedTag", "PushEvent", "PushEventPayload", "ReadmeBlob", "RedirectRoute", "Release", "Route", "SecurityEvent", "SentNotification", "Snippet", "Storage::HashedProject", "Storage::LegacyProject", "Subscription", "SystemNoteMetadata", "Timelog", "Todo", "Tree", "TrendingProject", "U2fRegistration", "Upload", "UserAgentDetail", "UserCallout", "UserCustomAttribute", "UserInteractedProject", "UserSyncedAttributesMetadata", "UsersStarProject", "WikiDirectory", "BasePolicy", "Ci::BuildPolicy", "Ci::PipelinePolicy", "Ci::PipelineSchedulePolicy", "Ci::RunnerPolicy", "Ci::TriggerPolicy", "Clusters::ClusterPolicy", "CommitStatusPolicy", "DeployKeyPolicy", "DeployTokenPolicy", "DeploymentPolicy", "EnvironmentPolicy", "ExternalIssuePolicy", "GlobalPolicy", "GroupLabelPolicy", "GroupMemberPolicy", "GroupPolicy", "IssuablePolicy", "IssuePolicy", "MergeRequestPolicy", "NamespacePolicy", "NilPolicy", "NotePolicy", "PersonalSnippetPolicy", "ProjectLabelPolicy", "ProjectMemberPolicy", "ProjectPolicy::ClassMethods", "ProjectSnippetPolicy", "ProtectedBranchPolicy", "UserPolicy", "Ci::BuildMetadataPresenter", "Ci::BuildPresenter", "Ci::GroupVariablePresenter", "Ci::PipelinePresenter", "Ci::VariablePresenter", "Clusters::ClusterPresenter", "ConversationalDevelopmentIndex::MetricPresenter", "GroupMemberPresenter", "MemberPresenter", "MembersPresenter", "MergeRequestPresenter", "ProjectMemberPresenter", "ProjectPresenter", "Projects::Settings::DeployKeysPresenter", "AnalyticsBuildEntity", "AnalyticsBuildSerializer", "AnalyticsCommitEntity", "AnalyticsCommitSerializer", "AnalyticsGenericSerializer", "AnalyticsIssueEntity", "AnalyticsIssueSerializer", "AnalyticsMergeRequestEntity", "AnalyticsMergeRequestSerializer", "AnalyticsStageEntity", "AnalyticsStageSerializer", "AnalyticsSummaryEntity", "AnalyticsSummarySerializer", "AwardEmojiEntity", "BaseSerializer", "BlobEntity", "BuildActionEntity", "BuildMetadataEntity", "BuildSerializer", "ClusterApplicationEntity", "ClusterEntity", "ClusterSerializer", "CohortActivityMonthEntity", "CohortEntity", "CohortsEntity", "CohortsSerializer", "CommitEntity", "WithPagination", "ContainerRepositoriesSerializer", "ContainerTagsSerializer", "DeployKeyEntity", "DeployKeySerializer", "DeployKeysProjectEntity", "DeploymentEntity", "DeploymentSerializer", "DiffFileEntity", "DiscussionEntity", "DiscussionSerializer", "EntityDateHelper", "EntityRequest", "EnvironmentEntity", "EnvironmentSerializer", "GroupChildSerializer", "GroupEntity", "GroupSerializer", "GroupVariableEntity", "GroupVariableSerializer", "IssuableEntity", "IssuableSidebarEntity", "IssueEntity", "IssueSerializer", "IssueSidebarEntity", "JobEntity", "JobGroupEntity", "LabelEntity", "LabelSerializer", "LfsFileLockEntity", "LfsFileLockSerializer", "MergeRequestBasicEntity", "MergeRequestBasicSerializer", "MergeRequestCreateEntity", "MergeRequestCreateSerializer", "MergeRequestMetricsEntity", "MergeRequestSerializer", "MergeRequestWidgetEntity", "NoteAttachmentEntity", "NoteEntity", "NoteUserEntity", "PipelineDetailsEntity", "PipelineEntity", "PipelineSerializer", "ProjectEntity", "ProjectNoteEntity", "ProjectNoteSerializer", "ProjectSerializer", "StageEntity", "StatusEntity", "SubmoduleEntity", "TimeTrackableEntity", "TreeEntity", "TreeRootEntity", "TreeSerializer", "UserEntity", "UserSerializer", "VariableEntity", "VariableSerializer", "AccessTokenValidationService", "AkismetService", "ApplicationSettings::BaseService", "AuditEventService", "Badges::BaseService", "BaseCountService", "BaseRenderer", "Boards::BaseService", "Clusters::Applications::BaseHelmService", "Commits::ChangeService", "Commits::CherryPickService", "Commits::RevertService", "Issues::ResolveDiscussions", "UpdateVisibilityLevel", "Users::NewUserNotifier", "Discussions::BaseService", "Emails::BaseService", "EventCreateService", "Files::BaseService", "Files::CreateDirService", "Files::CreateService", "Files::DeleteService", "Files::MultiService", "Files::UpdateService", "Groups::BaseService", "HamService", "Keys::BaseService", "Labels::BaseService", "Lfs::FileTransformer::Result", "Members::BaseService", "MergeRequests::Conflicts::BaseService", "MergeRequests::Conflicts::ListService", "MergeRequests::FfMergeService", "MergeRequests::WorkingCopyBaseService", "MetricsService", "Milestones::BaseService", "NotificationRecipientService::Builder::Default", "NotificationService", "Projects::AutocompleteService", "Projects::BatchCountService", "Projects::BatchForksCountService", "Projects::BatchOpenIssuesCountService", "Projects::CountService", "Projects::ForksCountService", "Projects::OpenIssuesCountService", "Projects::OpenMergeRequestsCountService", "Projects::PropagateServiceTemplate", "Prometheus::AdapterService", "Search::GroupService", "SpamCheckService", "SpamService", "TestHooks::SystemService", "TodoService", "Users::KeysCountService", "Users::LastPushEventService", "AttachmentUploader", "JobArtifactUploader", "LegacyArtifactUploader", "LfsObjectUploader", "NamespaceFileUploader", "ObjectStorage::Store", "ObjectStorage::BackgroundMove", "PersonalFileUploader", "UploaderHelper", "Workhorse::UploadPath", "AbstractPathValidator", "AddressableUrlValidator", "CertificateFingerprintValidator", "CertificateKeyValidator", "CertificateValidator", "ClusterNameValidator", "ColorValidator", "CronTimezoneValidator", "CronValidator", "DurationValidator", "EmailValidator", "ImportableUrlValidator", "KeyRestrictionValidator", "LineCodeValidator", "NamespaceNameValidator", "NamespacePathValidator", "ProjectPathValidator", "TopLevelGroupValidator", "UrlPlaceholderValidator", "UrlValidator", "VariableDuplicatesValidator", "AdminEmailWorker", "ArchiveTraceWorker", "AuthorizedProjectsWorker", "BackgroundMigrationWorker", "BuildCoverageWorker", "BuildFinishedWorker", "BuildHooksWorker", "BuildQueueWorker", "BuildSuccessWorker", "BuildTraceSectionsWorker", "CheckGcpProjectBillingWorker", "ClusterInstallAppWorker", "ClusterProvisionWorker", "ClusterWaitForAppInstallationWorker", "ClusterWaitForIngressIpAddressWorker", "ApplicationWorker::ClassMethods", "ClusterApplications", "ClusterQueue", "CronjobQueue", "ExceptionBacktrace", "Gitlab::GithubImport::NotifyUponDeath", "Gitlab::GithubImport::ObjectImporter", "Gitlab::GithubImport::Queue", "Gitlab::GithubImport::ReschedulingMethods", "Gitlab::GithubImport::StageMethods", "MailSchedulerQueue", "NewIssuable", "ObjectStorageQueue", "PipelineBackgroundQueue", "PipelineQueue", "ProjectImportOptions", "ProjectStartImport", "RepositoryCheckQueue", "WaitableWorker::ClassMethods", "CreateGpgSignatureWorker", "CreatePipelineWorker", "DeleteMergedBranchesWorker", "DeleteUserWorker", "EmailReceiverWorker", "EmailsOnPushWorker", "ExpireBuildArtifactsWorker", "ExpireBuildInstanceArtifactsWorker", "ExpireJobCacheWorker", "ExpirePipelineCacheWorker", "GitGarbageCollectWorker", "Gitlab::GithubImport::AdvanceStageWorker", "Gitlab::GithubImport::ImportDiffNoteWorker", "Gitlab::GithubImport::ImportIssueWorker", "Gitlab::GithubImport::ImportNoteWorker", "Gitlab::GithubImport::ImportPullRequestWorker", "Gitlab::GithubImport::RefreshImportJidWorker", "Gitlab::GithubImport::Stage::FinishImportWorker", "Gitlab::GithubImport::Stage::ImportBaseDataWorker", "Gitlab::GithubImport::Stage::ImportIssuesAndDiffNotesWorker", "Gitlab::GithubImport::Stage::ImportNotesWorker", "Gitlab::GithubImport::Stage::ImportPullRequestsWorker", "Gitlab::GithubImport::Stage::ImportRepositoryWorker", "GitlabShellWorker", "GitlabUsagePingWorker", "GroupDestroyWorker", "ImportExportProjectCleanupWorker", "InvalidGpgSignatureUpdateWorker", "IrkerWorker", "IssueDueSchedulerWorker", "MailScheduler::IssueDueWorker", "MergeWorker", "NamespacelessProjectDestroyWorker", "NewIssueWorker", "NewMergeRequestWorker", "NewNoteWorker", "ObjectStorage::BackgroundMoveWorker", "ObjectStorage::MigrateUploadsWorker::Upload", "ObjectStorageUploadWorker", "PagesDomainVerificationCronWorker", "PagesDomainVerificationWorker", "PagesWorker", "PipelineHooksWorker", "PipelineMetricsWorker", "PipelineNotificationWorker", "PipelineProcessWorker", "PipelineScheduleWorker", "PipelineSuccessWorker", "PipelineUpdateWorker", "PluginWorker", "PostReceive", "ProcessCommitWorker", "ProjectCacheWorker", "ProjectDestroyWorker", "ProjectExportWorker", "ProjectMigrateHashedStorageWorker", "ProjectServiceWorker", "PropagateServiceTemplateWorker", "PruneOldEventsWorker", "ReactiveCachingWorker", "RebaseWorker", "RemoveExpiredGroupLinksWorker", "RemoveExpiredMembersWorker", "RemoveOldWebHookLogsWorker", "RemoveUnreferencedLfsObjectsWorker", "RepositoryArchiveCacheWorker", "RepositoryCheck::BatchWorker", "RepositoryCheck::ClearWorker", "RepositoryCheck::SingleRepositoryWorker", "RepositoryForkWorker", "RepositoryImportWorker", "RequestsProfilesWorker", "RunPipelineScheduleWorker", "ScheduleUpdateUserActivityWorker", "StageUpdateWorker", "StorageMigratorWorker", "StuckCiJobsWorker", "StuckImportJobsWorker", "StuckMergeJobsWorker", "SystemHookPushWorker", "TrendingProjectsWorker", "UpdateHeadPipelineForMergeRequestWorker", "UpdateMergeRequestsWorker", "UpdateUserActivityWorker", "UploadChecksumWorker", "WaitForClusterCreationWorker", "WebHookWorker", "CiCommit", "CiJob", "CiProject", "CiSession", "CiTagging", "CiTag", "CiWebHook", "Note", "OauthApplication", "Tagging", "Tag", "Admin::AbuseReportsController"]
AAA: read_ruby_files: 1737.153567
Dataflow file: ../applications/pw-gitlab//dataflow/finders/access_requests_finder.log matches class name AccessRequestsFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/admin/projects_finder.log matches class name Admin::ProjectsFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/autocomplete_users_finder.log matches class name AutocompleteUsersFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/branches_finder.log matches class name BranchesFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/clusters_finder.log matches class name ClustersFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/concerns/created_at_filter.log matches class name CreatedAtFilter
Dataflow file: ../applications/pw-gitlab//dataflow/finders/concerns/custom_attributes_filter.log matches class name CustomAttributesFilter
Dataflow file: ../applications/pw-gitlab//dataflow/finders/concerns/finder_methods.log matches class name FinderMethods
Dataflow file: ../applications/pw-gitlab//dataflow/finders/concerns/finder_with_cross_project_access.log matches class name FinderWithCrossProjectAccess
Dataflow file: ../applications/pw-gitlab//dataflow/finders/contributed_projects_finder.log matches class name ContributedProjectsFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/environments_finder.log matches class name EnvironmentsFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/events_finder.log matches class name EventsFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/fork_projects_finder.log matches class name ForkProjectsFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/group_descendants_finder.log matches class name GroupDescendantsFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/group_finder.log matches class name GroupFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/group_members_finder.log matches class name GroupMembersFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/group_projects_finder.log matches class name GroupProjectsFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/groups_finder.log matches class name GroupsFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/issuable_finder.log matches class name IssuableFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/issues_finder.log matches class name IssuesFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/joined_groups_finder.log matches class name JoinedGroupsFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/labels_finder.log matches class name LabelsFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/members_finder.log matches class name MembersFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/merge_request_target_project_finder.log matches class name MergeRequestTargetProjectFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/merge_requests_finder.log matches class name MergeRequestsFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/milestones_finder.log matches class name MilestonesFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/move_to_project_finder.log matches class name MoveToProjectFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/notes_finder.log matches class name NotesFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/personal_access_tokens_finder.log matches class name PersonalAccessTokensFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/personal_projects_finder.log matches class name PersonalProjectsFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/pipeline_schedules_finder.log matches class name PipelineSchedulesFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/pipelines_finder.log matches class name PipelinesFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/projects_finder.log matches class name ProjectsFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/runner_jobs_finder.log matches class name RunnerJobsFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/snippets_finder.log matches class name SnippetsFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/tags_finder.log matches class name TagsFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/todos_finder.log matches class name TodosFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/union_finder.log matches class name UnionFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/user_recent_events_finder.log matches class name UserRecentEventsFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/users_finder.log matches class name UsersFinder
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/accounts_helper.log matches class name AccountsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/appearances_helper.log matches class name AppearancesHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/application_helper.log matches class name ApplicationHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/application_settings_helper.log matches class name ApplicationSettingsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/auth_helper.log matches class name AuthHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/auto_devops_helper.log matches class name AutoDevopsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/avatars_helper.log matches class name AvatarsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/award_emoji_helper.log matches class name AwardEmojiHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/blame_helper.log matches class name BlameHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/blob_helper.log matches class name BlobHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/boards_helper.log matches class name BoardsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/branches_helper.log matches class name BranchesHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/breadcrumbs_helper.log matches class name BreadcrumbsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/broadcast_messages_helper.log matches class name BroadcastMessagesHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/builds_helper.log matches class name BuildsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/button_helper.log matches class name ButtonHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/ci_status_helper.log matches class name CiStatusHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/clusters_helper.log matches class name ClustersHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/commits_helper.log matches class name CommitsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/compare_helper.log matches class name CompareHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/components_helper.log matches class name ComponentsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/conversational_development_index_helper.log matches class name ConversationalDevelopmentIndexHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/dashboard_helper.log matches class name DashboardHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/defer_script_tag_helper.log matches class name DeferScriptTagHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/deploy_tokens_helper.log matches class name DeployTokensHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/diff_helper.log matches class name DiffHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/dropdowns_helper.log matches class name DropdownsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/emails_helper.log matches class name EmailsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/emoji_helper.log matches class name EmojiHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/environment_helper.log matches class name EnvironmentHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/environments_helper.log matches class name EnvironmentsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/events_helper.log matches class name EventsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/explore_helper.log matches class name ExploreHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/external_wiki_helper.log matches class name ExternalWikiHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/form_helper.log matches class name FormHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/git_helper.log matches class name GitHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/gitlab_routing_helper.log matches class name GitlabRoutingHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/graph_helper.log matches class name GraphHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/groups_helper.log matches class name GroupsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/hooks_helper.log matches class name HooksHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/icons_helper.log matches class name IconsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/import_helper.log matches class name ImportHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/instance_configuration_helper.log matches class name InstanceConfigurationHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/issuables_helper.log matches class name IssuablesHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/issues_helper.log matches class name IssuesHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/javascript_helper.log matches class name JavascriptHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/kerberos_spnego_helper.log matches class name KerberosSpnegoHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/labels_helper.log matches class name LabelsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/lazy_image_tag_helper.log matches class name LazyImageTagHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/markup_helper.log matches class name MarkupHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/mattermost_helper.log matches class name MattermostHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/members_helper.log matches class name MembersHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/merge_requests_helper.log matches class name MergeRequestsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/milestones_helper.log matches class name MilestonesHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/milestones_routing_helper.log matches class name MilestonesRoutingHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/namespaces_helper.log matches class name NamespacesHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/nav_helper.log matches class name NavHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/notes_helper.log matches class name NotesHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/notifications_helper.log matches class name NotificationsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/numbers_helper.log matches class name NumbersHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/page_layout_helper.log matches class name PageLayoutHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/pagination_helper.log matches class name PaginationHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/performance_bar_helper.log matches class name PerformanceBarHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/pipeline_schedules_helper.log matches class name PipelineSchedulesHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/preferences_helper.log matches class name PreferencesHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/profiles_helper.log matches class name ProfilesHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/projects_helper.log matches class name ProjectsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/rss_helper.log matches class name RssHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/runners_helper.log matches class name RunnersHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/safe_params_helper.log matches class name SafeParamsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/search_helper.log matches class name SearchHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/selects_helper.log matches class name SelectsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/sentry_helper.log matches class name SentryHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/services_helper.log matches class name ServicesHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/sidekiq_helper.log matches class name SidekiqHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/snippets_helper.log matches class name SnippetsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/sorting_helper.log matches class name SortingHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/storage_health_helper.log matches class name StorageHealthHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/storage_helper.log matches class name StorageHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/submodule_helper.log matches class name SubmoduleHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/system_note_helper.log matches class name SystemNoteHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/tab_helper.log matches class name TabHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/tags_helper.log matches class name TagsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/time_helper.log matches class name TimeHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/todos_helper.log matches class name TodosHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/tree_helper.log matches class name TreeHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/triggers_helper.log matches class name TriggersHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/user_callouts_helper.log matches class name UserCalloutsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/users_helper.log matches class name UsersHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/version_check_helper.log matches class name VersionCheckHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/visibility_level_helper.log matches class name VisibilityLevelHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/webpack_helper.log matches class name WebpackHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/wiki_helper.log matches class name WikiHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/workhorse_helper.log matches class name WorkhorseHelper
Dataflow file: ../applications/pw-gitlab//dataflow/mailers/abuse_report_mailer.log matches class name AbuseReportMailer
Dataflow file: ../applications/pw-gitlab//dataflow/mailers/base_mailer.log matches class name BaseMailer
Dataflow file: ../applications/pw-gitlab//dataflow/mailers/devise_mailer.log matches class name DeviseMailer
Dataflow file: ../applications/pw-gitlab//dataflow/mailers/email_rejection_mailer.log matches class name EmailRejectionMailer
Dataflow file: ../applications/pw-gitlab//dataflow/mailers/emails/issues.log matches class name Emails::Issues
Dataflow file: ../applications/pw-gitlab//dataflow/mailers/emails/members.log matches class name Emails::Members
Dataflow file: ../applications/pw-gitlab//dataflow/mailers/emails/merge_requests.log matches class name Emails::MergeRequests
Dataflow file: ../applications/pw-gitlab//dataflow/mailers/emails/notes.log matches class name Emails::Notes
Dataflow file: ../applications/pw-gitlab//dataflow/mailers/emails/pages_domains.log matches class name Emails::PagesDomains
Dataflow file: ../applications/pw-gitlab//dataflow/mailers/emails/pipelines.log matches class name Emails::Pipelines
Dataflow file: ../applications/pw-gitlab//dataflow/mailers/emails/profile.log matches class name Emails::Profile
Dataflow file: ../applications/pw-gitlab//dataflow/mailers/emails/projects.log matches class name Emails::Projects
Dataflow file: ../applications/pw-gitlab//dataflow/mailers/notify.log matches class name Notify
Dataflow file: ../applications/pw-gitlab//dataflow/mailers/repository_check_mailer.log matches class name RepositoryCheckMailer
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/admin/abuse_reports_controller.log matches class name Admin::AbuseReportsController
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/authenticates_with_two_factor.log matches class name AuthenticatesWithTwoFactor
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/boards_responses.log matches class name BoardsResponses
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/checks_collaboration.log matches class name ChecksCollaboration
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/continue_params.log matches class name ContinueParams
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/creates_commit.log matches class name CreatesCommit
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/cycle_analytics_params.log matches class name CycleAnalyticsParams
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/diff_for_path.log matches class name DiffForPath
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/enforces_two_factor_authentication.log matches class name EnforcesTwoFactorAuthentication
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/group_tree.log matches class name GroupTree
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/hooks_execution.log matches class name HooksExecution
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/issuable_actions.log matches class name IssuableActions
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/issuable_collections.log matches class name IssuableCollections
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/issues_action.log matches class name IssuesAction
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/lfs_request.log matches class name LfsRequest
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/members_presentation.log matches class name MembersPresentation
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/membership_actions.log matches class name MembershipActions
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/merge_requests_action.log matches class name MergeRequestsAction
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/milestone_actions.log matches class name MilestoneActions
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/notes_actions.log matches class name NotesActions
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/oauth_applications.log matches class name OauthApplications
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/params_backward_compatibility.log matches class name ParamsBackwardCompatibility
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/preview_markdown.log matches class name PreviewMarkdown
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/renders_blob.log matches class name RendersBlob
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/renders_commits.log matches class name RendersCommits
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/renders_member_access.log matches class name RendersMemberAccess
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/renders_notes.log matches class name RendersNotes
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/repository_settings_redirect.log matches class name RepositorySettingsRedirect
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/requires_whitelisted_monitoring_client.log matches class name RequiresWhitelistedMonitoringClient
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/routable_actions.log matches class name RoutableActions
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/send_file_upload.log matches class name SendFileUpload
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/service_params.log matches class name ServiceParams
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/snippets_actions.log matches class name SnippetsActions
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/spammable_actions.log matches class name SpammableActions
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/toggle_award_emoji.log matches class name ToggleAwardEmoji
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/toggle_subscription_action.log matches class name ToggleSubscriptionAction
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/uploads_actions.log matches class name UploadsActions
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/with_performance_bar.log matches class name WithPerformanceBar
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/workhorse_request.log matches class name WorkhorseRequest
Dataflow file: ../applications/pw-gitlab//dataflow/models/ability.log matches class name Ability
Dataflow file: ../applications/pw-gitlab//dataflow/models/abuse_report.log matches class name AbuseReport
Dataflow file: ../applications/pw-gitlab//dataflow/models/appearance.log matches class name Appearance
Dataflow file: ../applications/pw-gitlab//dataflow/models/application_setting.log matches class name ApplicationSetting
Dataflow file: ../applications/pw-gitlab//dataflow/models/audit_event.log matches class name AuditEvent
Dataflow file: ../applications/pw-gitlab//dataflow/models/award_emoji.log matches class name AwardEmoji
Dataflow file: ../applications/pw-gitlab//dataflow/models/badge.log matches class name Badge
Dataflow file: ../applications/pw-gitlab//dataflow/models/badges/group_badge.log matches class name GroupBadge
Dataflow file: ../applications/pw-gitlab//dataflow/models/badges/project_badge.log matches class name ProjectBadge
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob.log matches class name Blob
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/auxiliary.log matches class name BlobViewer::Auxiliary
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/balsamiq.log matches class name BlobViewer::Balsamiq
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/base.log matches class name BlobViewer::Base
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/binary_stl.log matches class name BlobViewer::BinarySTL
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/cartfile.log matches class name BlobViewer::Cartfile
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/changelog.log matches class name BlobViewer::Changelog
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/client_side.log matches class name BlobViewer::ClientSide
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/composer_json.log matches class name BlobViewer::ComposerJson
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/contributing.log matches class name BlobViewer::Contributing
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/dependency_manager.log matches class name BlobViewer::DependencyManager
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/download.log matches class name BlobViewer::Download
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/empty.log matches class name BlobViewer::Empty
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/gemfile.log matches class name BlobViewer::Gemfile
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/gemspec.log matches class name BlobViewer::Gemspec
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/gitlab_ci_yml.log matches class name BlobViewer::GitlabCiYml
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/godeps_json.log matches class name BlobViewer::GodepsJson
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/image.log matches class name BlobViewer::Image
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/license.log matches class name BlobViewer::License
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/markup.log matches class name BlobViewer::Markup
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/notebook.log matches class name BlobViewer::Notebook
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/package_json.log matches class name BlobViewer::PackageJson
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/pdf.log matches class name BlobViewer::PDF
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/podfile.log matches class name BlobViewer::Podfile
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/podspec.log matches class name BlobViewer::Podspec
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/podspec_json.log matches class name BlobViewer::PodspecJson
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/readme.log matches class name BlobViewer::Readme
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/requirements_txt.log matches class name BlobViewer::RequirementsTxt
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/rich.log matches class name BlobViewer::Rich
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/route_map.log matches class name BlobViewer::RouteMap
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/server_side.log matches class name BlobViewer::ServerSide
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/simple.log matches class name BlobViewer::Simple
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/sketch.log matches class name BlobViewer::Sketch
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/static.log matches class name BlobViewer::Static
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/svg.log matches class name BlobViewer::SVG
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/text.log matches class name BlobViewer::Text
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/text_stl.log matches class name BlobViewer::TextSTL
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/video.log matches class name BlobViewer::Video
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/yarn_lock.log matches class name BlobViewer::YarnLock
Dataflow file: ../applications/pw-gitlab//dataflow/models/board.log matches class name Board
Dataflow file: ../applications/pw-gitlab//dataflow/models/broadcast_message.log matches class name BroadcastMessage
Dataflow file: ../applications/pw-gitlab//dataflow/models/chat_name.log matches class name ChatName
Dataflow file: ../applications/pw-gitlab//dataflow/models/chat_team.log matches class name ChatTeam
Dataflow file: ../applications/pw-gitlab//dataflow/models/ci/artifact_blob.log matches class name Ci::ArtifactBlob
Dataflow file: ../applications/pw-gitlab//dataflow/models/ci/build.log matches class name Ci::Build
Dataflow file: ../applications/pw-gitlab//dataflow/models/ci/build_metadata.log matches class name Ci::BuildMetadata
Dataflow file: ../applications/pw-gitlab//dataflow/models/ci/build_trace_section.log matches class name Ci::BuildTraceSection
Dataflow file: ../applications/pw-gitlab//dataflow/models/ci/build_trace_section_name.log matches class name Ci::BuildTraceSectionName
Dataflow file: ../applications/pw-gitlab//dataflow/models/ci/group.log matches class name Ci::Group
Dataflow file: ../applications/pw-gitlab//dataflow/models/ci/group_variable.log matches class name Ci::GroupVariable
Dataflow file: ../applications/pw-gitlab//dataflow/models/ci/job_artifact.log matches class name Ci::JobArtifact
Dataflow file: ../applications/pw-gitlab//dataflow/models/ci/legacy_stage.log matches class name Ci::LegacyStage
Dataflow file: ../applications/pw-gitlab//dataflow/models/ci/pipeline.log matches class name Ci::Pipeline
Dataflow file: ../applications/pw-gitlab//dataflow/models/ci/pipeline_schedule.log matches class name Ci::PipelineSchedule
Dataflow file: ../applications/pw-gitlab//dataflow/models/ci/pipeline_schedule_variable.log matches class name Ci::PipelineScheduleVariable
Dataflow file: ../applications/pw-gitlab//dataflow/models/ci/pipeline_variable.log matches class name Ci::PipelineVariable
Dataflow file: ../applications/pw-gitlab//dataflow/models/ci/runner.log matches class name Ci::Runner
Dataflow file: ../applications/pw-gitlab//dataflow/models/ci/runner_project.log matches class name Ci::RunnerProject
Dataflow file: ../applications/pw-gitlab//dataflow/models/ci/stage.log matches class name Ci::Stage
Dataflow file: ../applications/pw-gitlab//dataflow/models/ci/trigger.log matches class name Ci::Trigger
Dataflow file: ../applications/pw-gitlab//dataflow/models/ci/trigger_request.log matches class name Ci::TriggerRequest
Dataflow file: ../applications/pw-gitlab//dataflow/models/ci/variable.log matches class name Ci::Variable
Dataflow file: ../applications/pw-gitlab//dataflow/models/clusters/applications/helm.log matches class name Clusters::Applications::Helm
Dataflow file: ../applications/pw-gitlab//dataflow/models/clusters/applications/ingress.log matches class name Clusters::Applications::Ingress
Dataflow file: ../applications/pw-gitlab//dataflow/models/clusters/applications/prometheus.log matches class name Clusters::Applications::Prometheus
Dataflow file: ../applications/pw-gitlab//dataflow/models/clusters/applications/runner.log matches class name Clusters::Applications::Runner
Dataflow file: ../applications/pw-gitlab//dataflow/models/clusters/cluster.log matches class name Clusters::Cluster
Dataflow file: ../applications/pw-gitlab//dataflow/models/clusters/concerns/application_core.log matches class name Clusters::Concerns::ApplicationCore
Dataflow file: ../applications/pw-gitlab//dataflow/models/clusters/concerns/application_data.log matches class name Clusters::Concerns::ApplicationData
Dataflow file: ../applications/pw-gitlab//dataflow/models/clusters/concerns/application_status.log matches class name Clusters::Concerns::ApplicationStatus
Dataflow file: ../applications/pw-gitlab//dataflow/models/clusters/platforms/kubernetes.log matches class name Clusters::Platforms::Kubernetes
Dataflow file: ../applications/pw-gitlab//dataflow/models/clusters/project.log matches class name Clusters::Project
Dataflow file: ../applications/pw-gitlab//dataflow/models/clusters/providers/gcp.log matches class name Clusters::Providers::Gcp
Dataflow file: ../applications/pw-gitlab//dataflow/models/commit.log matches class name Commit
Dataflow file: ../applications/pw-gitlab//dataflow/models/commit_collection.log matches class name CommitCollection
Dataflow file: ../applications/pw-gitlab//dataflow/models/commit_range.log matches class name CommitRange
Dataflow file: ../applications/pw-gitlab//dataflow/models/commit_status.log matches class name CommitStatus
Dataflow file: ../applications/pw-gitlab//dataflow/models/compare.log matches class name Compare
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/access_requestable.log matches class name AccessRequestable
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/artifact_migratable.log matches class name ArtifactMigratable
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/atomic_internal_id.log matches class name AtomicInternalId::ClassMethods
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/avatarable.log matches class name Avatarable::ShadowMethods
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/awardable.log matches class name Awardable::ClassMethods
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/blob_like.log matches class name BlobLike
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/blocks_json_serialization.log matches class name BlocksJsonSerialization
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/bulk_member_access_load.log matches class name BulkMemberAccessLoad
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/cache_markdown_field.log matches class name CacheMarkdownField::FieldData
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/case_sensitivity.log matches class name CaseSensitivity::ClassMethods
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/chronic_duration_attribute.log matches class name ChronicDurationAttribute
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/created_at_filterable.log matches class name CreatedAtFilterable
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/deployment_platform.log matches class name DeploymentPlatform
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/discussion_on_diff.log matches class name DiscussionOnDiff
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/each_batch.log matches class name EachBatch::ClassMethods
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/editable.log matches class name Editable
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/expirable.log matches class name Expirable
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/faster_cache_keys.log matches class name FasterCacheKeys
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/feature_gate.log matches class name FeatureGate
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/ghost_user.log matches class name GhostUser
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/group_descendant.log matches class name GroupDescendant
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/has_status.log matches class name HasStatus
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/has_variable.log matches class name HasVariable
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/ignorable_column.log matches class name IgnorableColumn::ClassMethods
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/importable.log matches class name Importable
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/issuable.log matches class name Issuable::ClassMethods
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/loaded_in_group_list.log matches class name LoadedInGroupList::ClassMethods
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/manual_inverse_association.log matches class name ManualInverseAssociation::ClassMethods
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/mentionable/reference_regexes.log matches class name Mentionable::ReferenceRegexes
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/mentionable.log matches class name Mentionable::ClassMethods
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/milestoneish.log matches class name Milestoneish
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/note_on_diff.log matches class name NoteOnDiff
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/noteable.log matches class name Noteable
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/participable.log matches class name Participable::ClassMethods
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/presentable.log matches class name Presentable
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/project_features_compatibility.log matches class name ProjectFeaturesCompatibility
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/prometheus_adapter.log matches class name PrometheusAdapter
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/protected_branch_access.log matches class name ProtectedBranchAccess
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/protected_ref.log matches class name ProtectedRef
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/protected_ref_access.log matches class name ProtectedRefAccess
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/protected_tag_access.log matches class name ProtectedTagAccess
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/reactive_caching.log matches class name ReactiveCaching
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/reactive_service.log matches class name ReactiveService
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/redis_cacheable.log matches class name RedisCacheable
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/referable.log matches class name Referable::ClassMethods
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/relative_positioning.log matches class name RelativePositioning
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/resolvable_discussion.log matches class name ResolvableDiscussion
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/resolvable_note.log matches class name ResolvableNote::ClassMethods
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/routable.log matches class name Routable
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/select_for_project_authorization.log matches class name SelectForProjectAuthorization::ClassMethods
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/sha_attribute.log matches class name ShaAttribute::ClassMethods
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/sortable.log matches class name Sortable::ClassMethods
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/spammable.log matches class name Spammable::ClassMethods
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/storage/legacy_namespace.log matches class name Storage::LegacyNamespace
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/storage/legacy_project_wiki.log matches class name Storage::LegacyProjectWiki
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/storage/legacy_repository.log matches class name Storage::LegacyRepository
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/strip_attribute.log matches class name StripAttribute::ClassMethods
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/subscribable.log matches class name Subscribable
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/taskable.log matches class name Taskable
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/throttled_touch.log matches class name ThrottledTouch
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/time_trackable.log matches class name TimeTrackable
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/token_authenticatable.log matches class name TokenAuthenticatable
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/triggerable_hooks.log matches class name TriggerableHooks
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/uniquify.log matches class name Uniquify
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/updated_at_filterable.log matches class name UpdatedAtFilterable
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/valid_attribute.log matches class name ValidAttribute
Dataflow file: ../applications/pw-gitlab//dataflow/models/container_repository.log matches class name ContainerRepository
Dataflow file: ../applications/pw-gitlab//dataflow/models/conversational_development_index/card.log matches class name ConversationalDevelopmentIndex::Card
Dataflow file: ../applications/pw-gitlab//dataflow/models/conversational_development_index/idea_to_production_step.log matches class name ConversationalDevelopmentIndex::IdeaToProductionStep
Dataflow file: ../applications/pw-gitlab//dataflow/models/conversational_development_index/metric.log matches class name ConversationalDevelopmentIndex::Metric
Dataflow file: ../applications/pw-gitlab//dataflow/models/cycle_analytics.log matches class name CycleAnalytics
Dataflow file: ../applications/pw-gitlab//dataflow/models/dashboard_milestone.log matches class name DashboardMilestone
Dataflow file: ../applications/pw-gitlab//dataflow/models/deploy_key.log matches class name DeployKey
Dataflow file: ../applications/pw-gitlab//dataflow/models/deploy_keys_project.log matches class name DeployKeysProject
Dataflow file: ../applications/pw-gitlab//dataflow/models/deploy_token.log matches class name DeployToken
Dataflow file: ../applications/pw-gitlab//dataflow/models/deployment.log matches class name Deployment
Dataflow file: ../applications/pw-gitlab//dataflow/models/diff_discussion.log matches class name DiffDiscussion
Dataflow file: ../applications/pw-gitlab//dataflow/models/diff_note.log matches class name DiffNote
Dataflow file: ../applications/pw-gitlab//dataflow/models/diff_viewer/added.log matches class name DiffViewer::Added
Dataflow file: ../applications/pw-gitlab//dataflow/models/diff_viewer/base.log matches class name DiffViewer::Base
Dataflow file: ../applications/pw-gitlab//dataflow/models/diff_viewer/client_side.log matches class name DiffViewer::ClientSide
Dataflow file: ../applications/pw-gitlab//dataflow/models/diff_viewer/deleted.log matches class name DiffViewer::Deleted
Dataflow file: ../applications/pw-gitlab//dataflow/models/diff_viewer/image.log matches class name DiffViewer::Image
Dataflow file: ../applications/pw-gitlab//dataflow/models/diff_viewer/mode_changed.log matches class name DiffViewer::ModeChanged
Dataflow file: ../applications/pw-gitlab//dataflow/models/diff_viewer/no_preview.log matches class name DiffViewer::NoPreview
Dataflow file: ../applications/pw-gitlab//dataflow/models/diff_viewer/not_diffable.log matches class name DiffViewer::NotDiffable
Dataflow file: ../applications/pw-gitlab//dataflow/models/diff_viewer/renamed.log matches class name DiffViewer::Renamed
Dataflow file: ../applications/pw-gitlab//dataflow/models/diff_viewer/rich.log matches class name DiffViewer::Rich
Dataflow file: ../applications/pw-gitlab//dataflow/models/diff_viewer/server_side.log matches class name DiffViewer::ServerSide
Dataflow file: ../applications/pw-gitlab//dataflow/models/diff_viewer/simple.log matches class name DiffViewer::Simple
Dataflow file: ../applications/pw-gitlab//dataflow/models/diff_viewer/static.log matches class name DiffViewer::Static
Dataflow file: ../applications/pw-gitlab//dataflow/models/diff_viewer/text.log matches class name DiffViewer::Text
Dataflow file: ../applications/pw-gitlab//dataflow/models/directly_addressed_user.log matches class name DirectlyAddressedUser
Dataflow file: ../applications/pw-gitlab//dataflow/models/discussion.log matches class name Discussion
Dataflow file: ../applications/pw-gitlab//dataflow/models/discussion_note.log matches class name DiscussionNote
Dataflow file: ../applications/pw-gitlab//dataflow/models/email.log matches class name Email
Dataflow file: ../applications/pw-gitlab//dataflow/models/environment.log matches class name Environment
Dataflow file: ../applications/pw-gitlab//dataflow/models/epic.log matches class name Epic
Dataflow file: ../applications/pw-gitlab//dataflow/models/event.log matches class name Event
Dataflow file: ../applications/pw-gitlab//dataflow/models/event_collection.log matches class name EventCollection
Dataflow file: ../applications/pw-gitlab//dataflow/models/external_issue.log matches class name ExternalIssue
Dataflow file: ../applications/pw-gitlab//dataflow/models/fork_network.log matches class name ForkNetwork
Dataflow file: ../applications/pw-gitlab//dataflow/models/fork_network_member.log matches class name ForkNetworkMember
Dataflow file: ../applications/pw-gitlab//dataflow/models/forked_project_link.log matches class name ForkedProjectLink
Dataflow file: ../applications/pw-gitlab//dataflow/models/generic_commit_status.log matches class name GenericCommitStatus
Dataflow file: ../applications/pw-gitlab//dataflow/models/global_label.log matches class name GlobalLabel
Dataflow file: ../applications/pw-gitlab//dataflow/models/global_milestone.log matches class name GlobalMilestone
Dataflow file: ../applications/pw-gitlab//dataflow/models/gpg_key.log matches class name GpgKey
Dataflow file: ../applications/pw-gitlab//dataflow/models/gpg_key_subkey.log matches class name GpgKeySubkey
Dataflow file: ../applications/pw-gitlab//dataflow/models/gpg_signature.log matches class name GpgSignature
Dataflow file: ../applications/pw-gitlab//dataflow/models/group.log matches class name Group
Dataflow file: ../applications/pw-gitlab//dataflow/models/group_custom_attribute.log matches class name GroupCustomAttribute
Dataflow file: ../applications/pw-gitlab//dataflow/models/group_label.log matches class name GroupLabel
Dataflow file: ../applications/pw-gitlab//dataflow/models/group_milestone.log matches class name GroupMilestone
Dataflow file: ../applications/pw-gitlab//dataflow/models/guest.log matches class name Guest
Dataflow file: ../applications/pw-gitlab//dataflow/models/hooks/project_hook.log matches class name ProjectHook
Dataflow file: ../applications/pw-gitlab//dataflow/models/hooks/service_hook.log matches class name ServiceHook
Dataflow file: ../applications/pw-gitlab//dataflow/models/hooks/system_hook.log matches class name SystemHook
Dataflow file: ../applications/pw-gitlab//dataflow/models/hooks/web_hook.log matches class name WebHook
Dataflow file: ../applications/pw-gitlab//dataflow/models/hooks/web_hook_log.log matches class name WebHookLog
Dataflow file: ../applications/pw-gitlab//dataflow/models/identity.log matches class name Identity
Dataflow file: ../applications/pw-gitlab//dataflow/models/individual_note_discussion.log matches class name IndividualNoteDiscussion
Dataflow file: ../applications/pw-gitlab//dataflow/models/instance_configuration.log matches class name InstanceConfiguration
Dataflow file: ../applications/pw-gitlab//dataflow/models/internal_id.log matches class name InternalId::InternalIdGenerator
Dataflow file: ../applications/pw-gitlab//dataflow/models/issue/metrics.log matches class name Issue::Metrics
Dataflow file: ../applications/pw-gitlab//dataflow/models/issue.log matches class name Issue
Dataflow file: ../applications/pw-gitlab//dataflow/models/issue_assignee.log matches class name IssueAssignee
Dataflow file: ../applications/pw-gitlab//dataflow/models/issue_collection.log matches class name IssueCollection
Dataflow file: ../applications/pw-gitlab//dataflow/models/key.log matches class name Key
Dataflow file: ../applications/pw-gitlab//dataflow/models/label.log matches class name Label
Dataflow file: ../applications/pw-gitlab//dataflow/models/label_link.log matches class name LabelLink
Dataflow file: ../applications/pw-gitlab//dataflow/models/label_priority.log matches class name LabelPriority
Dataflow file: ../applications/pw-gitlab//dataflow/models/legacy_diff_discussion.log matches class name LegacyDiffDiscussion
Dataflow file: ../applications/pw-gitlab//dataflow/models/legacy_diff_note.log matches class name LegacyDiffNote
Dataflow file: ../applications/pw-gitlab//dataflow/models/lfs_file_lock.log matches class name LfsFileLock
Dataflow file: ../applications/pw-gitlab//dataflow/models/lfs_object.log matches class name LfsObject
Dataflow file: ../applications/pw-gitlab//dataflow/models/lfs_objects_project.log matches class name LfsObjectsProject
Dataflow file: ../applications/pw-gitlab//dataflow/models/list.log matches class name List
Dataflow file: ../applications/pw-gitlab//dataflow/models/member.log matches class name Member
Dataflow file: ../applications/pw-gitlab//dataflow/models/members/group_member.log matches class name GroupMember
Dataflow file: ../applications/pw-gitlab//dataflow/models/members/project_member.log matches class name ProjectMember
Dataflow file: ../applications/pw-gitlab//dataflow/models/merge_request/metrics.log matches class name MergeRequest::Metrics
Dataflow file: ../applications/pw-gitlab//dataflow/models/merge_request.log matches class name MergeRequest
Dataflow file: ../applications/pw-gitlab//dataflow/models/merge_request_diff.log matches class name MergeRequestDiff
Dataflow file: ../applications/pw-gitlab//dataflow/models/merge_request_diff_commit.log matches class name MergeRequestDiffCommit
Dataflow file: ../applications/pw-gitlab//dataflow/models/merge_request_diff_file.log matches class name MergeRequestDiffFile
Dataflow file: ../applications/pw-gitlab//dataflow/models/merge_requests_closing_issues.log matches class name MergeRequestsClosingIssues
Dataflow file: ../applications/pw-gitlab//dataflow/models/milestone.log matches class name Milestone
Dataflow file: ../applications/pw-gitlab//dataflow/models/namespace.log matches class name Namespace
Dataflow file: ../applications/pw-gitlab//dataflow/models/network/commit.log matches class name Network::Commit
Dataflow file: ../applications/pw-gitlab//dataflow/models/network/graph.log matches class name Network::Graph
Dataflow file: ../applications/pw-gitlab//dataflow/models/note.log matches class name Note::SpecialRole
Dataflow file: ../applications/pw-gitlab//dataflow/models/notification_reason.log matches class name NotificationReason
Dataflow file: ../applications/pw-gitlab//dataflow/models/notification_recipient.log matches class name NotificationRecipient
Dataflow file: ../applications/pw-gitlab//dataflow/models/notification_setting.log matches class name NotificationSetting
Dataflow file: ../applications/pw-gitlab//dataflow/models/oauth_access_grant.log matches class name OauthAccessGrant
Dataflow file: ../applications/pw-gitlab//dataflow/models/oauth_access_token.log matches class name OauthAccessToken
Dataflow file: ../applications/pw-gitlab//dataflow/models/out_of_context_discussion.log matches class name OutOfContextDiscussion
Dataflow file: ../applications/pw-gitlab//dataflow/models/pages_domain.log matches class name PagesDomain
Dataflow file: ../applications/pw-gitlab//dataflow/models/personal_access_token.log matches class name PersonalAccessToken
Dataflow file: ../applications/pw-gitlab//dataflow/models/personal_snippet.log matches class name PersonalSnippet
Dataflow file: ../applications/pw-gitlab//dataflow/models/project.log matches class name Project
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_authorization.log matches class name ProjectAuthorization
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_auto_devops.log matches class name ProjectAutoDevops
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_custom_attribute.log matches class name ProjectCustomAttribute
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_deploy_token.log matches class name ProjectDeployToken
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_feature.log matches class name ProjectFeature
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_group_link.log matches class name ProjectGroupLink
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_import_data.log matches class name ProjectImportData
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_label.log matches class name ProjectLabel
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/asana_service.log matches class name AsanaService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/assembla_service.log matches class name AssemblaService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/bamboo_service.log matches class name BambooService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/bugzilla_service.log matches class name BugzillaService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/buildkite_service.log matches class name BuildkiteService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/builds_email_service.log matches class name BuildsEmailService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/campfire_service.log matches class name CampfireService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/chat_message/base_message.log matches class name ChatMessage::BaseMessage
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/chat_message/issue_message.log matches class name ChatMessage::IssueMessage
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/chat_message/merge_message.log matches class name ChatMessage::MergeMessage
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/chat_message/note_message.log matches class name ChatMessage::NoteMessage
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/chat_message/pipeline_message.log matches class name ChatMessage::PipelineMessage
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/chat_message/push_message.log matches class name ChatMessage::PushMessage
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/chat_message/wiki_page_message.log matches class name ChatMessage::WikiPageMessage
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/chat_notification_service.log matches class name ChatNotificationService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/ci_service.log matches class name CiService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/custom_issue_tracker_service.log matches class name CustomIssueTrackerService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/deployment_service.log matches class name DeploymentService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/drone_ci_service.log matches class name DroneCiService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/emails_on_push_service.log matches class name EmailsOnPushService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/external_wiki_service.log matches class name ExternalWikiService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/flowdock_service.log matches class name Flowdock::Git::Builder
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/gemnasium_service.log matches class name GemnasiumService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/gitlab_issue_tracker_service.log matches class name GitlabIssueTrackerService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/hipchat_service.log matches class name HipchatService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/irker_service.log matches class name IrkerService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/issue_tracker_service.log matches class name IssueTrackerService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/jira_service.log matches class name JiraService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/kubernetes_service.log matches class name KubernetesService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/mattermost_service.log matches class name MattermostService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/mattermost_slash_commands_service.log matches class name MattermostSlashCommandsService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/microsoft_teams_service.log matches class name MicrosoftTeamsService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/mock_ci_service.log matches class name MockCiService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/mock_deployment_service.log matches class name MockDeploymentService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/mock_monitoring_service.log matches class name MockMonitoringService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/monitoring_service.log matches class name MonitoringService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/packagist_service.log matches class name PackagistService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/pipelines_email_service.log matches class name PipelinesEmailService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/pivotaltracker_service.log matches class name PivotaltrackerService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/prometheus_service.log matches class name PrometheusService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/pushover_service.log matches class name PushoverService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/redmine_service.log matches class name RedmineService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/slack_service.log matches class name SlackService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/slack_slash_commands_service.log matches class name SlackSlashCommandsService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/slash_commands_service.log matches class name SlashCommandsService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/teamcity_service.log matches class name TeamcityService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_snippet.log matches class name ProjectSnippet
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_statistics.log matches class name ProjectStatistics
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_team.log matches class name ProjectTeam
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_wiki.log matches class name ProjectWiki
Dataflow file: ../applications/pw-gitlab//dataflow/models/protectable_dropdown.log matches class name ProtectableDropdown
Dataflow file: ../applications/pw-gitlab//dataflow/models/protected_branch/merge_access_level.log matches class name ProtectedBranch::MergeAccessLevel
Dataflow file: ../applications/pw-gitlab//dataflow/models/protected_branch/push_access_level.log matches class name ProtectedBranch::PushAccessLevel
Dataflow file: ../applications/pw-gitlab//dataflow/models/protected_branch.log matches class name ProtectedBranch
Dataflow file: ../applications/pw-gitlab//dataflow/models/protected_ref_matcher.log matches class name ProtectedRefMatcher
Dataflow file: ../applications/pw-gitlab//dataflow/models/protected_tag/create_access_level.log matches class name ProtectedTag::CreateAccessLevel
Dataflow file: ../applications/pw-gitlab//dataflow/models/protected_tag.log matches class name ProtectedTag
Dataflow file: ../applications/pw-gitlab//dataflow/models/push_event.log matches class name PushEvent
Dataflow file: ../applications/pw-gitlab//dataflow/models/push_event_payload.log matches class name PushEventPayload
Dataflow file: ../applications/pw-gitlab//dataflow/models/readme_blob.log matches class name ReadmeBlob
Dataflow file: ../applications/pw-gitlab//dataflow/models/redirect_route.log matches class name RedirectRoute
Dataflow file: ../applications/pw-gitlab//dataflow/models/release.log matches class name Release
Dataflow file: ../applications/pw-gitlab//dataflow/models/repository.log matches class name Repository
Dataflow file: ../applications/pw-gitlab//dataflow/models/route.log matches class name Route
Dataflow file: ../applications/pw-gitlab//dataflow/models/security_event.log matches class name SecurityEvent
Dataflow file: ../applications/pw-gitlab//dataflow/models/sent_notification.log matches class name SentNotification
Dataflow file: ../applications/pw-gitlab//dataflow/models/service.log matches class name Service
Dataflow file: ../applications/pw-gitlab//dataflow/models/snippet.log matches class name Snippet
Dataflow file: ../applications/pw-gitlab//dataflow/models/snippet_blob.log matches class name SnippetBlob
Dataflow file: ../applications/pw-gitlab//dataflow/models/spam_log.log matches class name SpamLog
Dataflow file: ../applications/pw-gitlab//dataflow/models/storage/hashed_project.log matches class name Storage::HashedProject
Dataflow file: ../applications/pw-gitlab//dataflow/models/storage/legacy_project.log matches class name Storage::LegacyProject
Dataflow file: ../applications/pw-gitlab//dataflow/models/subscription.log matches class name Subscription
Dataflow file: ../applications/pw-gitlab//dataflow/models/system_note_metadata.log matches class name SystemNoteMetadata
Dataflow file: ../applications/pw-gitlab//dataflow/models/timelog.log matches class name Timelog
Dataflow file: ../applications/pw-gitlab//dataflow/models/todo.log matches class name Todo
Dataflow file: ../applications/pw-gitlab//dataflow/models/tree.log matches class name Tree
Dataflow file: ../applications/pw-gitlab//dataflow/models/trending_project.log matches class name TrendingProject
Dataflow file: ../applications/pw-gitlab//dataflow/models/u2f_registration.log matches class name U2fRegistration
Dataflow file: ../applications/pw-gitlab//dataflow/models/upload.log matches class name Upload
Dataflow file: ../applications/pw-gitlab//dataflow/models/user.log matches class name User
Dataflow file: ../applications/pw-gitlab//dataflow/models/user_agent_detail.log matches class name UserAgentDetail
Dataflow file: ../applications/pw-gitlab//dataflow/models/user_callout.log matches class name UserCallout
Dataflow file: ../applications/pw-gitlab//dataflow/models/user_custom_attribute.log matches class name UserCustomAttribute
Dataflow file: ../applications/pw-gitlab//dataflow/models/user_interacted_project.log matches class name UserInteractedProject
Dataflow file: ../applications/pw-gitlab//dataflow/models/user_synced_attributes_metadata.log matches class name UserSyncedAttributesMetadata
Dataflow file: ../applications/pw-gitlab//dataflow/models/users_star_project.log matches class name UsersStarProject
Dataflow file: ../applications/pw-gitlab//dataflow/models/wiki_directory.log matches class name WikiDirectory
Dataflow file: ../applications/pw-gitlab//dataflow/models/wiki_page.log matches class name WikiPage
Dataflow file: ../applications/pw-gitlab//dataflow/policies/base_policy.log matches class name BasePolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/ci/build_policy.log matches class name Ci::BuildPolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/ci/pipeline_policy.log matches class name Ci::PipelinePolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/ci/pipeline_schedule_policy.log matches class name Ci::PipelineSchedulePolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/ci/runner_policy.log matches class name Ci::RunnerPolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/ci/trigger_policy.log matches class name Ci::TriggerPolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/clusters/cluster_policy.log matches class name Clusters::ClusterPolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/commit_status_policy.log matches class name CommitStatusPolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/deploy_key_policy.log matches class name DeployKeyPolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/deploy_token_policy.log matches class name DeployTokenPolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/deployment_policy.log matches class name DeploymentPolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/environment_policy.log matches class name EnvironmentPolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/external_issue_policy.log matches class name ExternalIssuePolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/global_policy.log matches class name GlobalPolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/group_label_policy.log matches class name GroupLabelPolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/group_member_policy.log matches class name GroupMemberPolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/group_policy.log matches class name GroupPolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/issuable_policy.log matches class name IssuablePolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/issue_policy.log matches class name IssuePolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/merge_request_policy.log matches class name MergeRequestPolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/namespace_policy.log matches class name NamespacePolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/nil_policy.log matches class name NilPolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/note_policy.log matches class name NotePolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/personal_snippet_policy.log matches class name PersonalSnippetPolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/project_label_policy.log matches class name ProjectLabelPolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/project_member_policy.log matches class name ProjectMemberPolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/project_policy/class_methods.log matches class name ProjectPolicy::ClassMethods
Dataflow file: ../applications/pw-gitlab//dataflow/policies/project_policy.log matches class name ProjectPolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/project_snippet_policy.log matches class name ProjectSnippetPolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/protected_branch_policy.log matches class name ProtectedBranchPolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/user_policy.log matches class name UserPolicy
Dataflow file: ../applications/pw-gitlab//dataflow/presenters/ci/build_metadata_presenter.log matches class name Ci::BuildMetadataPresenter
Dataflow file: ../applications/pw-gitlab//dataflow/presenters/ci/build_presenter.log matches class name Ci::BuildPresenter
Dataflow file: ../applications/pw-gitlab//dataflow/presenters/ci/group_variable_presenter.log matches class name Ci::GroupVariablePresenter
Dataflow file: ../applications/pw-gitlab//dataflow/presenters/ci/pipeline_presenter.log matches class name Ci::PipelinePresenter
Dataflow file: ../applications/pw-gitlab//dataflow/presenters/ci/variable_presenter.log matches class name Ci::VariablePresenter
Dataflow file: ../applications/pw-gitlab//dataflow/presenters/clusters/cluster_presenter.log matches class name Clusters::ClusterPresenter
Dataflow file: ../applications/pw-gitlab//dataflow/presenters/conversational_development_index/metric_presenter.log matches class name ConversationalDevelopmentIndex::MetricPresenter
Dataflow file: ../applications/pw-gitlab//dataflow/presenters/group_member_presenter.log matches class name GroupMemberPresenter
Dataflow file: ../applications/pw-gitlab//dataflow/presenters/member_presenter.log matches class name MemberPresenter
Dataflow file: ../applications/pw-gitlab//dataflow/presenters/members_presenter.log matches class name MembersPresenter
Dataflow file: ../applications/pw-gitlab//dataflow/presenters/merge_request_presenter.log matches class name MergeRequestPresenter
Dataflow file: ../applications/pw-gitlab//dataflow/presenters/project_member_presenter.log matches class name ProjectMemberPresenter
Dataflow file: ../applications/pw-gitlab//dataflow/presenters/project_presenter.log matches class name ProjectPresenter
Dataflow file: ../applications/pw-gitlab//dataflow/presenters/projects/settings/deploy_keys_presenter.log matches class name Projects::Settings::DeployKeysPresenter
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/analytics_build_entity.log matches class name AnalyticsBuildEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/analytics_build_serializer.log matches class name AnalyticsBuildSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/analytics_commit_entity.log matches class name AnalyticsCommitEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/analytics_commit_serializer.log matches class name AnalyticsCommitSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/analytics_generic_serializer.log matches class name AnalyticsGenericSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/analytics_issue_entity.log matches class name AnalyticsIssueEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/analytics_issue_serializer.log matches class name AnalyticsIssueSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/analytics_merge_request_entity.log matches class name AnalyticsMergeRequestEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/analytics_merge_request_serializer.log matches class name AnalyticsMergeRequestSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/analytics_stage_entity.log matches class name AnalyticsStageEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/analytics_stage_serializer.log matches class name AnalyticsStageSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/analytics_summary_entity.log matches class name AnalyticsSummaryEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/analytics_summary_serializer.log matches class name AnalyticsSummarySerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/award_emoji_entity.log matches class name AwardEmojiEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/base_serializer.log matches class name BaseSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/blob_entity.log matches class name BlobEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/build_action_entity.log matches class name BuildActionEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/build_artifact_entity.log matches class name BuildArtifactEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/build_details_entity.log matches class name BuildDetailsEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/build_metadata_entity.log matches class name BuildMetadataEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/build_serializer.log matches class name BuildSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/cluster_application_entity.log matches class name ClusterApplicationEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/cluster_entity.log matches class name ClusterEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/cluster_serializer.log matches class name ClusterSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/cohort_activity_month_entity.log matches class name CohortActivityMonthEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/cohort_entity.log matches class name CohortEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/cohorts_entity.log matches class name CohortsEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/cohorts_serializer.log matches class name CohortsSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/commit_entity.log matches class name CommitEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/concerns/with_pagination.log matches class name WithPagination
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/container_repositories_serializer.log matches class name ContainerRepositoriesSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/container_repository_entity.log matches class name ContainerRepositoryEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/container_tag_entity.log matches class name ContainerTagEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/container_tags_serializer.log matches class name ContainerTagsSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/deploy_key_entity.log matches class name DeployKeyEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/deploy_key_serializer.log matches class name DeployKeySerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/deploy_keys_project_entity.log matches class name DeployKeysProjectEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/deployment_entity.log matches class name DeploymentEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/deployment_serializer.log matches class name DeploymentSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/diff_file_entity.log matches class name DiffFileEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/discussion_entity.log matches class name DiscussionEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/discussion_serializer.log matches class name DiscussionSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/entity_date_helper.log matches class name EntityDateHelper
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/entity_request.log matches class name EntityRequest
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/environment_entity.log matches class name EnvironmentEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/environment_serializer.log matches class name EnvironmentSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/group_child_entity.log matches class name GroupChildEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/group_child_serializer.log matches class name GroupChildSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/group_entity.log matches class name GroupEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/group_serializer.log matches class name GroupSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/group_variable_entity.log matches class name GroupVariableEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/group_variable_serializer.log matches class name GroupVariableSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/issuable_entity.log matches class name IssuableEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/issuable_sidebar_entity.log matches class name IssuableSidebarEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/issue_entity.log matches class name IssueEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/issue_serializer.log matches class name IssueSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/issue_sidebar_entity.log matches class name IssueSidebarEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/job_entity.log matches class name JobEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/job_group_entity.log matches class name JobGroupEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/label_entity.log matches class name LabelEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/label_serializer.log matches class name LabelSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/lfs_file_lock_entity.log matches class name LfsFileLockEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/lfs_file_lock_serializer.log matches class name LfsFileLockSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/merge_request_basic_entity.log matches class name MergeRequestBasicEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/merge_request_basic_serializer.log matches class name MergeRequestBasicSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/merge_request_create_entity.log matches class name MergeRequestCreateEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/merge_request_create_serializer.log matches class name MergeRequestCreateSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/merge_request_metrics_entity.log matches class name MergeRequestMetricsEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/merge_request_serializer.log matches class name MergeRequestSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/merge_request_widget_entity.log matches class name MergeRequestWidgetEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/note_attachment_entity.log matches class name NoteAttachmentEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/note_entity.log matches class name NoteEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/note_user_entity.log matches class name NoteUserEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/pipeline_details_entity.log matches class name PipelineDetailsEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/pipeline_entity.log matches class name PipelineEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/pipeline_serializer.log matches class name PipelineSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/project_entity.log matches class name ProjectEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/project_note_entity.log matches class name ProjectNoteEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/project_note_serializer.log matches class name ProjectNoteSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/project_serializer.log matches class name ProjectSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/request_aware_entity.log matches class name RequestAwareEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/runner_entity.log matches class name RunnerEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/stage_entity.log matches class name StageEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/status_entity.log matches class name StatusEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/submodule_entity.log matches class name SubmoduleEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/time_trackable_entity.log matches class name TimeTrackableEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/tree_entity.log matches class name TreeEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/tree_root_entity.log matches class name TreeRootEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/tree_serializer.log matches class name TreeSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/user_entity.log matches class name UserEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/user_serializer.log matches class name UserSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/variable_entity.log matches class name VariableEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/variable_serializer.log matches class name VariableSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/services/access_token_validation_service.log matches class name AccessTokenValidationService
Dataflow file: ../applications/pw-gitlab//dataflow/services/after_branch_delete_service.log matches class name AfterBranchDeleteService
Dataflow file: ../applications/pw-gitlab//dataflow/services/akismet_service.log matches class name AkismetService
Dataflow file: ../applications/pw-gitlab//dataflow/services/application_settings/base_service.log matches class name ApplicationSettings::BaseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/application_settings/update_service.log matches class name ApplicationSettings::UpdateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/applications/create_service.log matches class name Applications::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/audit_event_service.log matches class name AuditEventService
Dataflow file: ../applications/pw-gitlab//dataflow/services/auth/container_registry_authentication_service.log matches class name Auth::ContainerRegistryAuthenticationService
Dataflow file: ../applications/pw-gitlab//dataflow/services/badges/base_service.log matches class name Badges::BaseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/badges/build_service.log matches class name Badges::BuildService
Dataflow file: ../applications/pw-gitlab//dataflow/services/badges/create_service.log matches class name Badges::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/badges/update_service.log matches class name Badges::UpdateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/base_count_service.log matches class name BaseCountService
Dataflow file: ../applications/pw-gitlab//dataflow/services/base_renderer.log matches class name BaseRenderer
Dataflow file: ../applications/pw-gitlab//dataflow/services/base_service.log matches class name BaseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/boards/base_service.log matches class name Boards::BaseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/boards/create_service.log matches class name Boards::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/boards/issues/create_service.log matches class name Boards::Issues::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/boards/issues/list_service.log matches class name Boards::Issues::ListService
Dataflow file: ../applications/pw-gitlab//dataflow/services/boards/issues/move_service.log matches class name Boards::Issues::MoveService
Dataflow file: ../applications/pw-gitlab//dataflow/services/boards/list_service.log matches class name Boards::ListService
Dataflow file: ../applications/pw-gitlab//dataflow/services/boards/lists/create_service.log matches class name Boards::Lists::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/boards/lists/destroy_service.log matches class name Boards::Lists::DestroyService
Dataflow file: ../applications/pw-gitlab//dataflow/services/boards/lists/generate_service.log matches class name Boards::Lists::GenerateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/boards/lists/list_service.log matches class name Boards::Lists::ListService
Dataflow file: ../applications/pw-gitlab//dataflow/services/boards/lists/move_service.log matches class name Boards::Lists::MoveService
Dataflow file: ../applications/pw-gitlab//dataflow/services/chat_names/authorize_user_service.log matches class name ChatNames::AuthorizeUserService
Dataflow file: ../applications/pw-gitlab//dataflow/services/chat_names/find_user_service.log matches class name ChatNames::FindUserService
Dataflow file: ../applications/pw-gitlab//dataflow/services/check_gcp_project_billing_service.log matches class name CheckGcpProjectBillingService
Dataflow file: ../applications/pw-gitlab//dataflow/services/ci/create_pipeline_schedule_service.log matches class name Ci::CreatePipelineScheduleService
Dataflow file: ../applications/pw-gitlab//dataflow/services/ci/create_pipeline_service.log matches class name Ci::CreatePipelineService
Dataflow file: ../applications/pw-gitlab//dataflow/services/ci/ensure_stage_service.log matches class name Ci::EnsureStageService
Dataflow file: ../applications/pw-gitlab//dataflow/services/ci/extract_sections_from_build_trace_service.log matches class name Ci::ExtractSectionsFromBuildTraceService
Dataflow file: ../applications/pw-gitlab//dataflow/services/ci/fetch_kubernetes_token_service.log matches class name Ci::FetchKubernetesTokenService
Dataflow file: ../applications/pw-gitlab//dataflow/services/ci/pipeline_trigger_service.log matches class name Ci::PipelineTriggerService
Dataflow file: ../applications/pw-gitlab//dataflow/services/ci/play_build_service.log matches class name Ci::PlayBuildService
Dataflow file: ../applications/pw-gitlab//dataflow/services/ci/process_pipeline_service.log matches class name Ci::ProcessPipelineService
Dataflow file: ../applications/pw-gitlab//dataflow/services/ci/register_job_service.log matches class name Ci::RegisterJobService
Dataflow file: ../applications/pw-gitlab//dataflow/services/ci/retry_build_service.log matches class name Ci::RetryBuildService
Dataflow file: ../applications/pw-gitlab//dataflow/services/ci/retry_pipeline_service.log matches class name Ci::RetryPipelineService
Dataflow file: ../applications/pw-gitlab//dataflow/services/ci/stop_environments_service.log matches class name Ci::StopEnvironmentsService
Dataflow file: ../applications/pw-gitlab//dataflow/services/ci/update_build_queue_service.log matches class name Ci::UpdateBuildQueueService
Dataflow file: ../applications/pw-gitlab//dataflow/services/ci/update_runner_service.log matches class name Ci::UpdateRunnerService
Dataflow file: ../applications/pw-gitlab//dataflow/services/clusters/applications/base_helm_service.log matches class name Clusters::Applications::BaseHelmService
Dataflow file: ../applications/pw-gitlab//dataflow/services/clusters/applications/check_ingress_ip_address_service.log matches class name Clusters::Applications::CheckIngressIpAddressService
Dataflow file: ../applications/pw-gitlab//dataflow/services/clusters/applications/check_installation_progress_service.log matches class name Clusters::Applications::CheckInstallationProgressService
Dataflow file: ../applications/pw-gitlab//dataflow/services/clusters/applications/install_service.log matches class name Clusters::Applications::InstallService
Dataflow file: ../applications/pw-gitlab//dataflow/services/clusters/applications/schedule_installation_service.log matches class name Clusters::Applications::ScheduleInstallationService
Dataflow file: ../applications/pw-gitlab//dataflow/services/clusters/create_service.log matches class name Clusters::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/clusters/gcp/fetch_operation_service.log matches class name Clusters::Gcp::FetchOperationService
Dataflow file: ../applications/pw-gitlab//dataflow/services/clusters/gcp/finalize_creation_service.log matches class name Clusters::Gcp::FinalizeCreationService
Dataflow file: ../applications/pw-gitlab//dataflow/services/clusters/gcp/provision_service.log matches class name Clusters::Gcp::ProvisionService
Dataflow file: ../applications/pw-gitlab//dataflow/services/clusters/gcp/verify_provision_status_service.log matches class name Clusters::Gcp::VerifyProvisionStatusService
Dataflow file: ../applications/pw-gitlab//dataflow/services/clusters/update_service.log matches class name Clusters::UpdateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/cohorts_service.log matches class name CohortsService
Dataflow file: ../applications/pw-gitlab//dataflow/services/commits/change_service.log matches class name Commits::ChangeService
Dataflow file: ../applications/pw-gitlab//dataflow/services/commits/cherry_pick_service.log matches class name Commits::CherryPickService
Dataflow file: ../applications/pw-gitlab//dataflow/services/commits/create_service.log matches class name Commits::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/commits/revert_service.log matches class name Commits::RevertService
Dataflow file: ../applications/pw-gitlab//dataflow/services/compare_service.log matches class name CompareService
Dataflow file: ../applications/pw-gitlab//dataflow/services/concerns/issues/resolve_discussions.log matches class name Issues::ResolveDiscussions
Dataflow file: ../applications/pw-gitlab//dataflow/services/concerns/update_visibility_level.log matches class name UpdateVisibilityLevel
Dataflow file: ../applications/pw-gitlab//dataflow/services/concerns/users/new_user_notifier.log matches class name Users::NewUserNotifier
Dataflow file: ../applications/pw-gitlab//dataflow/services/create_branch_service.log matches class name CreateBranchService
Dataflow file: ../applications/pw-gitlab//dataflow/services/create_deployment_service.log matches class name CreateDeploymentService
Dataflow file: ../applications/pw-gitlab//dataflow/services/create_release_service.log matches class name CreateReleaseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/create_snippet_service.log matches class name CreateSnippetService
Dataflow file: ../applications/pw-gitlab//dataflow/services/delete_branch_service.log matches class name DeleteBranchService
Dataflow file: ../applications/pw-gitlab//dataflow/services/delete_merged_branches_service.log matches class name DeleteMergedBranchesService
Dataflow file: ../applications/pw-gitlab//dataflow/services/deploy_keys/create_service.log matches class name DeployKeys::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/deploy_tokens/create_service.log matches class name DeployTokens::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/discussions/base_service.log matches class name Discussions::BaseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/discussions/resolve_service.log matches class name Discussions::ResolveService
Dataflow file: ../applications/pw-gitlab//dataflow/services/discussions/update_diff_position_service.log matches class name Discussions::UpdateDiffPositionService
Dataflow file: ../applications/pw-gitlab//dataflow/services/emails/base_service.log matches class name Emails::BaseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/emails/confirm_service.log matches class name Emails::ConfirmService
Dataflow file: ../applications/pw-gitlab//dataflow/services/emails/create_service.log matches class name Emails::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/emails/destroy_service.log matches class name Emails::DestroyService
Dataflow file: ../applications/pw-gitlab//dataflow/services/event_create_service.log matches class name EventCreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/events/render_service.log matches class name Events::RenderService
Dataflow file: ../applications/pw-gitlab//dataflow/services/files/base_service.log matches class name Files::BaseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/files/create_dir_service.log matches class name Files::CreateDirService
Dataflow file: ../applications/pw-gitlab//dataflow/services/files/create_service.log matches class name Files::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/files/delete_service.log matches class name Files::DeleteService
Dataflow file: ../applications/pw-gitlab//dataflow/services/files/multi_service.log matches class name Files::MultiService
Dataflow file: ../applications/pw-gitlab//dataflow/services/files/update_service.log matches class name Files::UpdateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/git_push_service.log matches class name GitPushService
Dataflow file: ../applications/pw-gitlab//dataflow/services/git_tag_push_service.log matches class name GitTagPushService
Dataflow file: ../applications/pw-gitlab//dataflow/services/gpg_keys/create_service.log matches class name GpgKeys::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/gravatar_service.log matches class name GravatarService
Dataflow file: ../applications/pw-gitlab//dataflow/services/groups/base_service.log matches class name Groups::BaseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/groups/create_service.log matches class name Groups::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/groups/destroy_service.log matches class name Groups::DestroyService
Dataflow file: ../applications/pw-gitlab//dataflow/services/groups/nested_create_service.log matches class name Groups::NestedCreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/groups/transfer_service.log matches class name Groups::TransferService
Dataflow file: ../applications/pw-gitlab//dataflow/services/groups/update_service.log matches class name Groups::UpdateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/ham_service.log matches class name HamService
Dataflow file: ../applications/pw-gitlab//dataflow/services/import_export_clean_up_service.log matches class name ImportExportCleanUpService
Dataflow file: ../applications/pw-gitlab//dataflow/services/issuable/bulk_update_service.log matches class name Issuable::BulkUpdateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/issuable/common_system_notes_service.log matches class name Issuable::CommonSystemNotesService
Dataflow file: ../applications/pw-gitlab//dataflow/services/issuable/destroy_service.log matches class name Issuable::DestroyService
Dataflow file: ../applications/pw-gitlab//dataflow/services/issuable_base_service.log matches class name IssuableBaseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/issues/base_service.log matches class name Issues::BaseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/issues/build_service.log matches class name Issues::BuildService
Dataflow file: ../applications/pw-gitlab//dataflow/services/issues/close_service.log matches class name Issues::CloseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/issues/create_service.log matches class name Issues::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/issues/duplicate_service.log matches class name Issues::DuplicateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/issues/fetch_referenced_merge_requests_service.log matches class name Issues::FetchReferencedMergeRequestsService
Dataflow file: ../applications/pw-gitlab//dataflow/services/issues/move_service.log matches class name Issues::MoveService
Dataflow file: ../applications/pw-gitlab//dataflow/services/issues/reopen_service.log matches class name Issues::ReopenService
Dataflow file: ../applications/pw-gitlab//dataflow/services/issues/update_service.log matches class name Issues::UpdateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/keys/base_service.log matches class name Keys::BaseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/keys/create_service.log matches class name Keys::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/keys/last_used_service.log matches class name Keys::LastUsedService
Dataflow file: ../applications/pw-gitlab//dataflow/services/labels/base_service.log matches class name Labels::BaseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/labels/create_service.log matches class name Labels::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/labels/find_or_create_service.log matches class name Labels::FindOrCreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/labels/promote_service.log matches class name Labels::PromoteService
Dataflow file: ../applications/pw-gitlab//dataflow/services/labels/transfer_service.log matches class name Labels::TransferService
Dataflow file: ../applications/pw-gitlab//dataflow/services/labels/update_service.log matches class name Labels::UpdateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/lfs/file_transformer.log matches class name Lfs::FileTransformer::Result
Dataflow file: ../applications/pw-gitlab//dataflow/services/lfs/lock_file_service.log matches class name Lfs::LockFileService
Dataflow file: ../applications/pw-gitlab//dataflow/services/lfs/locks_finder_service.log matches class name Lfs::LocksFinderService
Dataflow file: ../applications/pw-gitlab//dataflow/services/lfs/unlock_file_service.log matches class name Lfs::UnlockFileService
Dataflow file: ../applications/pw-gitlab//dataflow/services/mattermost/create_team_service.log matches class name Mattermost::CreateTeamService
Dataflow file: ../applications/pw-gitlab//dataflow/services/members/approve_access_request_service.log matches class name Members::ApproveAccessRequestService
Dataflow file: ../applications/pw-gitlab//dataflow/services/members/base_service.log matches class name Members::BaseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/members/create_service.log matches class name Members::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/members/destroy_service.log matches class name Members::DestroyService
Dataflow file: ../applications/pw-gitlab//dataflow/services/members/request_access_service.log matches class name Members::RequestAccessService
Dataflow file: ../applications/pw-gitlab//dataflow/services/members/update_service.log matches class name Members::UpdateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/merge_request_metrics_service.log matches class name MergeRequestMetricsService
Dataflow file: ../applications/pw-gitlab//dataflow/services/merge_requests/add_todo_when_build_fails_service.log matches class name MergeRequests::AddTodoWhenBuildFailsService
Dataflow file: ../applications/pw-gitlab//dataflow/services/merge_requests/assign_issues_service.log matches class name MergeRequests::AssignIssuesService
Dataflow file: ../applications/pw-gitlab//dataflow/services/merge_requests/base_service.log matches class name MergeRequests::BaseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/merge_requests/build_service.log matches class name MergeRequests::BuildService
Dataflow file: ../applications/pw-gitlab//dataflow/services/merge_requests/close_service.log matches class name MergeRequests::CloseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/merge_requests/conflicts/base_service.log matches class name MergeRequests::Conflicts::BaseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/merge_requests/conflicts/list_service.log matches class name MergeRequests::Conflicts::ListService
Dataflow file: ../applications/pw-gitlab//dataflow/services/merge_requests/conflicts/resolve_service.log matches class name MergeRequests::Conflicts::ResolveService
Dataflow file: ../applications/pw-gitlab//dataflow/services/merge_requests/create_from_issue_service.log matches class name MergeRequests::CreateFromIssueService
Dataflow file: ../applications/pw-gitlab//dataflow/services/merge_requests/create_service.log matches class name MergeRequests::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/merge_requests/ff_merge_service.log matches class name MergeRequests::FfMergeService
Dataflow file: ../applications/pw-gitlab//dataflow/services/merge_requests/get_urls_service.log matches class name MergeRequests::GetUrlsService
Dataflow file: ../applications/pw-gitlab//dataflow/services/merge_requests/merge_request_diff_cache_service.log matches class name MergeRequests::MergeRequestDiffCacheService
Dataflow file: ../applications/pw-gitlab//dataflow/services/merge_requests/merge_service.log matches class name MergeRequests::MergeService
Dataflow file: ../applications/pw-gitlab//dataflow/services/merge_requests/merge_when_pipeline_succeeds_service.log matches class name MergeRequests::MergeWhenPipelineSucceedsService
Dataflow file: ../applications/pw-gitlab//dataflow/services/merge_requests/post_merge_service.log matches class name MergeRequests::PostMergeService
Dataflow file: ../applications/pw-gitlab//dataflow/services/merge_requests/rebase_service.log matches class name MergeRequests::RebaseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/merge_requests/refresh_service.log matches class name MergeRequests::RefreshService
Dataflow file: ../applications/pw-gitlab//dataflow/services/merge_requests/reopen_service.log matches class name MergeRequests::ReopenService
Dataflow file: ../applications/pw-gitlab//dataflow/services/merge_requests/resolved_discussion_notification_service.log matches class name MergeRequests::ResolvedDiscussionNotificationService
Dataflow file: ../applications/pw-gitlab//dataflow/services/merge_requests/update_service.log matches class name MergeRequests::UpdateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/merge_requests/working_copy_base_service.log matches class name MergeRequests::WorkingCopyBaseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/metrics_service.log matches class name MetricsService
Dataflow file: ../applications/pw-gitlab//dataflow/services/milestones/base_service.log matches class name Milestones::BaseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/milestones/close_service.log matches class name Milestones::CloseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/milestones/create_service.log matches class name Milestones::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/milestones/destroy_service.log matches class name Milestones::DestroyService
Dataflow file: ../applications/pw-gitlab//dataflow/services/milestones/promote_service.log matches class name Milestones::PromoteService
Dataflow file: ../applications/pw-gitlab//dataflow/services/milestones/reopen_service.log matches class name Milestones::ReopenService
Dataflow file: ../applications/pw-gitlab//dataflow/services/milestones/update_service.log matches class name Milestones::UpdateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/note_summary.log matches class name NoteSummary
Dataflow file: ../applications/pw-gitlab//dataflow/services/notes/build_service.log matches class name Notes::BuildService
Dataflow file: ../applications/pw-gitlab//dataflow/services/notes/create_service.log matches class name Notes::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/notes/destroy_service.log matches class name Notes::DestroyService
Dataflow file: ../applications/pw-gitlab//dataflow/services/notes/post_process_service.log matches class name Notes::PostProcessService
Dataflow file: ../applications/pw-gitlab//dataflow/services/notes/quick_actions_service.log matches class name Notes::QuickActionsService
Dataflow file: ../applications/pw-gitlab//dataflow/services/notes/render_service.log matches class name Notes::RenderService
Dataflow file: ../applications/pw-gitlab//dataflow/services/notes/update_service.log matches class name Notes::UpdateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/notification_recipient_service.log matches class name NotificationRecipientService::Builder::Base
Dataflow file: ../applications/pw-gitlab//dataflow/services/notification_service.log matches class name NotificationService
Dataflow file: ../applications/pw-gitlab//dataflow/services/pages_service.log matches class name PagesService
Dataflow file: ../applications/pw-gitlab//dataflow/services/preview_markdown_service.log matches class name PreviewMarkdownService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/after_import_service.log matches class name Projects::AfterImportService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/autocomplete_service.log matches class name Projects::AutocompleteService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/base_move_relations_service.log matches class name Projects::BaseMoveRelationsService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/batch_count_service.log matches class name Projects::BatchCountService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/batch_forks_count_service.log matches class name Projects::BatchForksCountService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/batch_open_issues_count_service.log matches class name Projects::BatchOpenIssuesCountService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/count_service.log matches class name Projects::CountService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/create_from_template_service.log matches class name Projects::CreateFromTemplateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/create_service.log matches class name Projects::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/destroy_service.log matches class name Projects::DestroyService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/download_service.log matches class name Projects::DownloadService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/enable_deploy_key_service.log matches class name Projects::EnableDeployKeyService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/fork_service.log matches class name Projects::ForkService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/forks_count_service.log matches class name Projects::ForksCountService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/gitlab_projects_import_service.log matches class name Projects::GitlabProjectsImportService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/group_links/create_service.log matches class name Projects::GroupLinks::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/group_links/destroy_service.log matches class name Projects::GroupLinks::DestroyService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/hashed_storage/migrate_attachments_service.log matches class name Projects::HashedStorage::MigrateAttachmentsService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/hashed_storage/migrate_repository_service.log matches class name Projects::HashedStorage::MigrateRepositoryService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/hashed_storage_migration_service.log matches class name Projects::HashedStorageMigrationService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/housekeeping_service.log matches class name Projects::HousekeepingService::LeaseTaken
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/import_export/export_service.log matches class name Projects::ImportExport::ExportService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/import_service.log matches class name Projects::ImportService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/move_access_service.log matches class name Projects::MoveAccessService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/move_deploy_keys_projects_service.log matches class name Projects::MoveDeployKeysProjectsService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/move_forks_service.log matches class name Projects::MoveForksService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/move_lfs_objects_projects_service.log matches class name Projects::MoveLfsObjectsProjectsService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/move_notification_settings_service.log matches class name Projects::MoveNotificationSettingsService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/move_project_authorizations_service.log matches class name Projects::MoveProjectAuthorizationsService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/move_project_group_links_service.log matches class name Projects::MoveProjectGroupLinksService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/move_project_members_service.log matches class name Projects::MoveProjectMembersService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/move_users_star_projects_service.log matches class name Projects::MoveUsersStarProjectsService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/open_issues_count_service.log matches class name Projects::OpenIssuesCountService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/open_merge_requests_count_service.log matches class name Projects::OpenMergeRequestsCountService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/overwrite_project_service.log matches class name Projects::OverwriteProjectService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/participants_service.log matches class name Projects::ParticipantsService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/propagate_service_template.log matches class name Projects::PropagateServiceTemplate
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/transfer_service.log matches class name Projects::TransferService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/unlink_fork_service.log matches class name Projects::UnlinkForkService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/update_pages_configuration_service.log matches class name Projects::UpdatePagesConfigurationService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/update_pages_service.log matches class name Projects::UpdatePagesService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/update_service.log matches class name Projects::UpdateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/prometheus/adapter_service.log matches class name Prometheus::AdapterService
Dataflow file: ../applications/pw-gitlab//dataflow/services/protected_branches/access_level_params.log matches class name ProtectedBranches::AccessLevelParams
Dataflow file: ../applications/pw-gitlab//dataflow/services/protected_branches/api_service.log matches class name ProtectedBranches::ApiService
Dataflow file: ../applications/pw-gitlab//dataflow/services/protected_branches/create_service.log matches class name ProtectedBranches::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/protected_branches/destroy_service.log matches class name ProtectedBranches::DestroyService
Dataflow file: ../applications/pw-gitlab//dataflow/services/protected_branches/legacy_api_create_service.log matches class name ProtectedBranches::LegacyApiCreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/protected_branches/legacy_api_update_service.log matches class name ProtectedBranches::LegacyApiUpdateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/protected_branches/update_service.log matches class name ProtectedBranches::UpdateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/protected_tags/create_service.log matches class name ProtectedTags::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/protected_tags/destroy_service.log matches class name ProtectedTags::DestroyService
Dataflow file: ../applications/pw-gitlab//dataflow/services/protected_tags/update_service.log matches class name ProtectedTags::UpdateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/push_event_payload_service.log matches class name PushEventPayloadService
Dataflow file: ../applications/pw-gitlab//dataflow/services/quick_actions/interpret_service.log matches class name QuickActions::InterpretService
Dataflow file: ../applications/pw-gitlab//dataflow/services/repair_ldap_blocked_user_service.log matches class name RepairLdapBlockedUserService
Dataflow file: ../applications/pw-gitlab//dataflow/services/repository_archive_clean_up_service.log matches class name RepositoryArchiveCleanUpService
Dataflow file: ../applications/pw-gitlab//dataflow/services/reset_project_cache_service.log matches class name ResetProjectCacheService
Dataflow file: ../applications/pw-gitlab//dataflow/services/search/global_service.log matches class name Search::GlobalService
Dataflow file: ../applications/pw-gitlab//dataflow/services/search/group_service.log matches class name Search::GroupService
Dataflow file: ../applications/pw-gitlab//dataflow/services/search/project_service.log matches class name Search::ProjectService
Dataflow file: ../applications/pw-gitlab//dataflow/services/search/snippet_service.log matches class name Search::SnippetService
Dataflow file: ../applications/pw-gitlab//dataflow/services/search_service.log matches class name SearchService
Dataflow file: ../applications/pw-gitlab//dataflow/services/spam_check_service.log matches class name SpamCheckService
Dataflow file: ../applications/pw-gitlab//dataflow/services/spam_service.log matches class name SpamService
Dataflow file: ../applications/pw-gitlab//dataflow/services/submit_usage_ping_service.log matches class name SubmitUsagePingService
Dataflow file: ../applications/pw-gitlab//dataflow/services/system_hooks_service.log matches class name SystemHooksService
Dataflow file: ../applications/pw-gitlab//dataflow/services/system_note_service.log matches class name SystemNoteService
Dataflow file: ../applications/pw-gitlab//dataflow/services/tags/create_service.log matches class name Tags::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/tags/destroy_service.log matches class name Tags::DestroyService
Dataflow file: ../applications/pw-gitlab//dataflow/services/test_hooks/base_service.log matches class name TestHooks::BaseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/test_hooks/project_service.log matches class name TestHooks::ProjectService
Dataflow file: ../applications/pw-gitlab//dataflow/services/test_hooks/system_service.log matches class name TestHooks::SystemService
Dataflow file: ../applications/pw-gitlab//dataflow/services/todo_service.log matches class name TodoService
Dataflow file: ../applications/pw-gitlab//dataflow/services/update_release_service.log matches class name UpdateReleaseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/update_snippet_service.log matches class name UpdateSnippetService
Dataflow file: ../applications/pw-gitlab//dataflow/services/upload_service.log matches class name UploadService
Dataflow file: ../applications/pw-gitlab//dataflow/services/user_agent_detail_service.log matches class name UserAgentDetailService
Dataflow file: ../applications/pw-gitlab//dataflow/services/user_project_access_changed_service.log matches class name UserProjectAccessChangedService
Dataflow file: ../applications/pw-gitlab//dataflow/services/users/activity_service.log matches class name Users::ActivityService
Dataflow file: ../applications/pw-gitlab//dataflow/services/users/build_service.log matches class name Users::BuildService
Dataflow file: ../applications/pw-gitlab//dataflow/services/users/create_service.log matches class name Users::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/users/destroy_service.log matches class name Users::DestroyService
Dataflow file: ../applications/pw-gitlab//dataflow/services/users/keys_count_service.log matches class name Users::KeysCountService
Dataflow file: ../applications/pw-gitlab//dataflow/services/users/last_push_event_service.log matches class name Users::LastPushEventService
Dataflow file: ../applications/pw-gitlab//dataflow/services/users/migrate_to_ghost_user_service.log matches class name Users::MigrateToGhostUserService
Dataflow file: ../applications/pw-gitlab//dataflow/services/users/refresh_authorized_projects_service.log matches class name Users::RefreshAuthorizedProjectsService
Dataflow file: ../applications/pw-gitlab//dataflow/services/users/update_service.log matches class name Users::UpdateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/validate_new_branch_service.log matches class name ValidateNewBranchService
Dataflow file: ../applications/pw-gitlab//dataflow/services/verify_pages_domain_service.log matches class name VerifyPagesDomainService
Dataflow file: ../applications/pw-gitlab//dataflow/services/web_hook_service.log matches class name WebHookService::InternalErrorResponse
Dataflow file: ../applications/pw-gitlab//dataflow/services/wiki_pages/base_service.log matches class name WikiPages::BaseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/wiki_pages/create_service.log matches class name WikiPages::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/wiki_pages/destroy_service.log matches class name WikiPages::DestroyService
Dataflow file: ../applications/pw-gitlab//dataflow/services/wiki_pages/update_service.log matches class name WikiPages::UpdateService
Dataflow file: ../applications/pw-gitlab//dataflow/uploaders/attachment_uploader.log matches class name AttachmentUploader
Dataflow file: ../applications/pw-gitlab//dataflow/uploaders/avatar_uploader.log matches class name AvatarUploader
Dataflow file: ../applications/pw-gitlab//dataflow/uploaders/file_mover.log matches class name FileMover
Dataflow file: ../applications/pw-gitlab//dataflow/uploaders/file_uploader.log matches class name FileUploader
Dataflow file: ../applications/pw-gitlab//dataflow/uploaders/gitlab_uploader.log matches class name GitlabUploader
Dataflow file: ../applications/pw-gitlab//dataflow/uploaders/job_artifact_uploader.log matches class name JobArtifactUploader
Dataflow file: ../applications/pw-gitlab//dataflow/uploaders/legacy_artifact_uploader.log matches class name LegacyArtifactUploader
Dataflow file: ../applications/pw-gitlab//dataflow/uploaders/lfs_object_uploader.log matches class name LfsObjectUploader
Dataflow file: ../applications/pw-gitlab//dataflow/uploaders/namespace_file_uploader.log matches class name NamespaceFileUploader
Dataflow file: ../applications/pw-gitlab//dataflow/uploaders/object_storage.log matches class name ObjectStorage::Store
Dataflow file: ../applications/pw-gitlab//dataflow/uploaders/personal_file_uploader.log matches class name PersonalFileUploader
Dataflow file: ../applications/pw-gitlab//dataflow/uploaders/records_uploads.log matches class name RecordsUploads::Concern
Dataflow file: ../applications/pw-gitlab//dataflow/uploaders/uploader_helper.log matches class name UploaderHelper
Dataflow file: ../applications/pw-gitlab//dataflow/uploaders/workhorse.log matches class name Workhorse::UploadPath
Dataflow file: ../applications/pw-gitlab//dataflow/validators/abstract_path_validator.log matches class name AbstractPathValidator
Dataflow file: ../applications/pw-gitlab//dataflow/validators/addressable_url_validator.log matches class name AddressableUrlValidator
Dataflow file: ../applications/pw-gitlab//dataflow/validators/certificate_fingerprint_validator.log matches class name CertificateFingerprintValidator
Dataflow file: ../applications/pw-gitlab//dataflow/validators/certificate_key_validator.log matches class name CertificateKeyValidator
Dataflow file: ../applications/pw-gitlab//dataflow/validators/certificate_validator.log matches class name CertificateValidator
Dataflow file: ../applications/pw-gitlab//dataflow/validators/cluster_name_validator.log matches class name ClusterNameValidator
Dataflow file: ../applications/pw-gitlab//dataflow/validators/color_validator.log matches class name ColorValidator
Dataflow file: ../applications/pw-gitlab//dataflow/validators/cron_timezone_validator.log matches class name CronTimezoneValidator
Dataflow file: ../applications/pw-gitlab//dataflow/validators/cron_validator.log matches class name CronValidator
Dataflow file: ../applications/pw-gitlab//dataflow/validators/duration_validator.log matches class name DurationValidator
Dataflow file: ../applications/pw-gitlab//dataflow/validators/email_validator.log matches class name EmailValidator
Dataflow file: ../applications/pw-gitlab//dataflow/validators/importable_url_validator.log matches class name ImportableUrlValidator
Dataflow file: ../applications/pw-gitlab//dataflow/validators/key_restriction_validator.log matches class name KeyRestrictionValidator
Dataflow file: ../applications/pw-gitlab//dataflow/validators/line_code_validator.log matches class name LineCodeValidator
Dataflow file: ../applications/pw-gitlab//dataflow/validators/namespace_name_validator.log matches class name NamespaceNameValidator
Dataflow file: ../applications/pw-gitlab//dataflow/validators/namespace_path_validator.log matches class name NamespacePathValidator
Dataflow file: ../applications/pw-gitlab//dataflow/validators/project_path_validator.log matches class name ProjectPathValidator
Dataflow file: ../applications/pw-gitlab//dataflow/validators/top_level_group_validator.log matches class name TopLevelGroupValidator
Dataflow file: ../applications/pw-gitlab//dataflow/validators/url_placeholder_validator.log matches class name UrlPlaceholderValidator
Dataflow file: ../applications/pw-gitlab//dataflow/validators/url_validator.log matches class name UrlValidator
Dataflow file: ../applications/pw-gitlab//dataflow/validators/variable_duplicates_validator.log matches class name VariableDuplicatesValidator
Dataflow file: ../applications/pw-gitlab//dataflow/workers/admin_email_worker.log matches class name AdminEmailWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/archive_trace_worker.log matches class name ArchiveTraceWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/authorized_projects_worker.log matches class name AuthorizedProjectsWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/background_migration_worker.log matches class name BackgroundMigrationWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/build_coverage_worker.log matches class name BuildCoverageWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/build_finished_worker.log matches class name BuildFinishedWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/build_hooks_worker.log matches class name BuildHooksWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/build_queue_worker.log matches class name BuildQueueWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/build_success_worker.log matches class name BuildSuccessWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/build_trace_sections_worker.log matches class name BuildTraceSectionsWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/check_gcp_project_billing_worker.log matches class name CheckGcpProjectBillingWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/cluster_install_app_worker.log matches class name ClusterInstallAppWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/cluster_provision_worker.log matches class name ClusterProvisionWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/cluster_wait_for_app_installation_worker.log matches class name ClusterWaitForAppInstallationWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/cluster_wait_for_ingress_ip_address_worker.log matches class name ClusterWaitForIngressIpAddressWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/concerns/application_worker.log matches class name ApplicationWorker::ClassMethods
Dataflow file: ../applications/pw-gitlab//dataflow/workers/concerns/cluster_applications.log matches class name ClusterApplications
Dataflow file: ../applications/pw-gitlab//dataflow/workers/concerns/cluster_queue.log matches class name ClusterQueue
Dataflow file: ../applications/pw-gitlab//dataflow/workers/concerns/cronjob_queue.log matches class name CronjobQueue
Dataflow file: ../applications/pw-gitlab//dataflow/workers/concerns/exception_backtrace.log matches class name ExceptionBacktrace
Dataflow file: ../applications/pw-gitlab//dataflow/workers/concerns/gitlab/github_import/notify_upon_death.log matches class name Gitlab::GithubImport::NotifyUponDeath
Dataflow file: ../applications/pw-gitlab//dataflow/workers/concerns/gitlab/github_import/object_importer.log matches class name Gitlab::GithubImport::ObjectImporter
Dataflow file: ../applications/pw-gitlab//dataflow/workers/concerns/gitlab/github_import/queue.log matches class name Gitlab::GithubImport::Queue
Dataflow file: ../applications/pw-gitlab//dataflow/workers/concerns/gitlab/github_import/rescheduling_methods.log matches class name Gitlab::GithubImport::ReschedulingMethods
Dataflow file: ../applications/pw-gitlab//dataflow/workers/concerns/gitlab/github_import/stage_methods.log matches class name Gitlab::GithubImport::StageMethods
Dataflow file: ../applications/pw-gitlab//dataflow/workers/concerns/mail_scheduler_queue.log matches class name MailSchedulerQueue
Dataflow file: ../applications/pw-gitlab//dataflow/workers/concerns/new_issuable.log matches class name NewIssuable
Dataflow file: ../applications/pw-gitlab//dataflow/workers/concerns/object_storage_queue.log matches class name ObjectStorageQueue
Dataflow file: ../applications/pw-gitlab//dataflow/workers/concerns/pipeline_background_queue.log matches class name PipelineBackgroundQueue
Dataflow file: ../applications/pw-gitlab//dataflow/workers/concerns/pipeline_queue.log matches class name PipelineQueue
Dataflow file: ../applications/pw-gitlab//dataflow/workers/concerns/project_import_options.log matches class name ProjectImportOptions
Dataflow file: ../applications/pw-gitlab//dataflow/workers/concerns/project_start_import.log matches class name ProjectStartImport
Dataflow file: ../applications/pw-gitlab//dataflow/workers/concerns/repository_check_queue.log matches class name RepositoryCheckQueue
Dataflow file: ../applications/pw-gitlab//dataflow/workers/concerns/waitable_worker.log matches class name WaitableWorker::ClassMethods
Dataflow file: ../applications/pw-gitlab//dataflow/workers/create_gpg_signature_worker.log matches class name CreateGpgSignatureWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/create_pipeline_worker.log matches class name CreatePipelineWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/delete_merged_branches_worker.log matches class name DeleteMergedBranchesWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/delete_user_worker.log matches class name DeleteUserWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/email_receiver_worker.log matches class name EmailReceiverWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/emails_on_push_worker.log matches class name EmailsOnPushWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/expire_build_artifacts_worker.log matches class name ExpireBuildArtifactsWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/expire_build_instance_artifacts_worker.log matches class name ExpireBuildInstanceArtifactsWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/expire_job_cache_worker.log matches class name ExpireJobCacheWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/expire_pipeline_cache_worker.log matches class name ExpirePipelineCacheWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/git_garbage_collect_worker.log matches class name GitGarbageCollectWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/gitlab/github_import/advance_stage_worker.log matches class name Gitlab::GithubImport::AdvanceStageWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/gitlab/github_import/import_diff_note_worker.log matches class name Gitlab::GithubImport::ImportDiffNoteWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/gitlab/github_import/import_issue_worker.log matches class name Gitlab::GithubImport::ImportIssueWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/gitlab/github_import/import_note_worker.log matches class name Gitlab::GithubImport::ImportNoteWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/gitlab/github_import/import_pull_request_worker.log matches class name Gitlab::GithubImport::ImportPullRequestWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/gitlab/github_import/refresh_import_jid_worker.log matches class name Gitlab::GithubImport::RefreshImportJidWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/gitlab/github_import/stage/finish_import_worker.log matches class name Gitlab::GithubImport::Stage::FinishImportWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/gitlab/github_import/stage/import_base_data_worker.log matches class name Gitlab::GithubImport::Stage::ImportBaseDataWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/gitlab/github_import/stage/import_issues_and_diff_notes_worker.log matches class name Gitlab::GithubImport::Stage::ImportIssuesAndDiffNotesWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/gitlab/github_import/stage/import_notes_worker.log matches class name Gitlab::GithubImport::Stage::ImportNotesWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/gitlab/github_import/stage/import_pull_requests_worker.log matches class name Gitlab::GithubImport::Stage::ImportPullRequestsWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/gitlab/github_import/stage/import_repository_worker.log matches class name Gitlab::GithubImport::Stage::ImportRepositoryWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/gitlab_shell_worker.log matches class name GitlabShellWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/gitlab_usage_ping_worker.log matches class name GitlabUsagePingWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/group_destroy_worker.log matches class name GroupDestroyWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/import_export_project_cleanup_worker.log matches class name ImportExportProjectCleanupWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/invalid_gpg_signature_update_worker.log matches class name InvalidGpgSignatureUpdateWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/irker_worker.log matches class name IrkerWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/issue_due_scheduler_worker.log matches class name IssueDueSchedulerWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/mail_scheduler/issue_due_worker.log matches class name MailScheduler::IssueDueWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/merge_worker.log matches class name MergeWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/namespaceless_project_destroy_worker.log matches class name NamespacelessProjectDestroyWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/new_issue_worker.log matches class name NewIssueWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/new_merge_request_worker.log matches class name NewMergeRequestWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/new_note_worker.log matches class name NewNoteWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/object_storage/background_move_worker.log matches class name ObjectStorage::BackgroundMoveWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/object_storage/migrate_uploads_worker.log matches class name ObjectStorage::MigrateUploadsWorker::Upload
Dataflow file: ../applications/pw-gitlab//dataflow/workers/object_storage_upload_worker.log matches class name ObjectStorageUploadWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/pages_domain_verification_cron_worker.log matches class name PagesDomainVerificationCronWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/pages_domain_verification_worker.log matches class name PagesDomainVerificationWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/pages_worker.log matches class name PagesWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/pipeline_hooks_worker.log matches class name PipelineHooksWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/pipeline_metrics_worker.log matches class name PipelineMetricsWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/pipeline_notification_worker.log matches class name PipelineNotificationWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/pipeline_process_worker.log matches class name PipelineProcessWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/pipeline_schedule_worker.log matches class name PipelineScheduleWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/pipeline_success_worker.log matches class name PipelineSuccessWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/pipeline_update_worker.log matches class name PipelineUpdateWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/plugin_worker.log matches class name PluginWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/post_receive.log matches class name PostReceive
Dataflow file: ../applications/pw-gitlab//dataflow/workers/process_commit_worker.log matches class name ProcessCommitWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/project_cache_worker.log matches class name ProjectCacheWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/project_destroy_worker.log matches class name ProjectDestroyWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/project_export_worker.log matches class name ProjectExportWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/project_migrate_hashed_storage_worker.log matches class name ProjectMigrateHashedStorageWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/project_service_worker.log matches class name ProjectServiceWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/propagate_service_template_worker.log matches class name PropagateServiceTemplateWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/prune_old_events_worker.log matches class name PruneOldEventsWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/reactive_caching_worker.log matches class name ReactiveCachingWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/rebase_worker.log matches class name RebaseWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/remove_expired_group_links_worker.log matches class name RemoveExpiredGroupLinksWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/remove_expired_members_worker.log matches class name RemoveExpiredMembersWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/remove_old_web_hook_logs_worker.log matches class name RemoveOldWebHookLogsWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/remove_unreferenced_lfs_objects_worker.log matches class name RemoveUnreferencedLfsObjectsWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/repository_archive_cache_worker.log matches class name RepositoryArchiveCacheWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/repository_check/batch_worker.log matches class name RepositoryCheck::BatchWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/repository_check/clear_worker.log matches class name RepositoryCheck::ClearWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/repository_check/single_repository_worker.log matches class name RepositoryCheck::SingleRepositoryWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/repository_fork_worker.log matches class name RepositoryForkWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/repository_import_worker.log matches class name RepositoryImportWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/requests_profiles_worker.log matches class name RequestsProfilesWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/run_pipeline_schedule_worker.log matches class name RunPipelineScheduleWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/schedule_update_user_activity_worker.log matches class name ScheduleUpdateUserActivityWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/stage_update_worker.log matches class name StageUpdateWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/storage_migrator_worker.log matches class name StorageMigratorWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/stuck_ci_jobs_worker.log matches class name StuckCiJobsWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/stuck_import_jobs_worker.log matches class name StuckImportJobsWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/stuck_merge_jobs_worker.log matches class name StuckMergeJobsWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/system_hook_push_worker.log matches class name SystemHookPushWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/trending_projects_worker.log matches class name TrendingProjectsWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/update_head_pipeline_for_merge_request_worker.log matches class name UpdateHeadPipelineForMergeRequestWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/update_merge_requests_worker.log matches class name UpdateMergeRequestsWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/update_user_activity_worker.log matches class name UpdateUserActivityWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/upload_checksum_worker.log matches class name UploadChecksumWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/wait_for_cluster_creation_worker.log matches class name WaitForClusterCreationWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/web_hook_worker.log matches class name WebHookWorker
read_dataflow: 1872.105536
	TIME-read_util_function: 0.00019
	TIME-read_repeatable_function: 6.0e-06
	TIME-Fill in the empty CFG: 0.210536
in MilestoneActions Reject ApplicationController . view_to_html_string
in RendersBlob Reject ApplicationController . view_to_html_string
in RoutableActions Reject ApplicationController . route_not_found
in AccessRequestable Reject UsersController . exists
in TokenAuthenticatable Reject UsersController . exists
in ValidAttribute Reject UsersController . exists
in ProjectFeaturesCompatibility Reject UsersController . exists
in Presentable Reject UsersController . exists
in Routable Reject UsersController . exists
in GroupDescendant Reject UsersController . exists
in DeploymentPlatform Reject UsersController . exists
in ChronicDurationAttribute Reject UsersController . exists
in RunnerJobsFinder Reject Admin::RunnersController . runner
Find caller_type = deploy_token, DeployToken, in func DeployTokensHelper.expand_deploy_tokens_section?
Find caller_type = external_wiki_service, ExternalWikiService, in func ExternalWikiHelper.get_project_wiki_path
in BlobLike Reject Projects::ArtifactsController . entry
in Ci::ArtifactBlob Reject Projects::ArtifactsController . entry
in BlobLike Reject Projects::ArtifactsController . entry
in Ci::ArtifactBlob Reject Projects::ArtifactsController . entry
in Importable Reject Admin::UsersController . block
in HasStatus Reject Admin::UsersController . block
in Ci::Stage Reject Admin::UsersController . block
in Importable Reject Profiles::TwoFactorAuthsController . skip
in HasStatus Reject Profiles::TwoFactorAuthsController . skip
in Ci::Stage Reject Profiles::TwoFactorAuthsController . skip
in Importable Reject Profiles::TwoFactorAuthsController . skip
in HasStatus Reject Profiles::TwoFactorAuthsController . skip
in Ci::Stage Reject Profiles::TwoFactorAuthsController . skip
in Clusters::Applications::Runner Reject Admin::RunnersController . runner
in HasStatus Reject Projects::PipelinesController . stage
in Importable Reject Projects::PipelinesController . stage
in AccessRequestable Reject Projects::MergeRequestsController . merge!
in TokenAuthenticatable Reject Projects::MergeRequestsController . merge!
in ValidAttribute Reject Projects::MergeRequestsController . merge!
in ProjectFeaturesCompatibility Reject Projects::MergeRequestsController . merge!
in Presentable Reject Projects::MergeRequestsController . merge!
in Routable Reject Projects::MergeRequestsController . merge!
in GroupDescendant Reject Projects::MergeRequestsController . merge!
in DeploymentPlatform Reject Projects::MergeRequestsController . merge!
in ChronicDurationAttribute Reject Projects::MergeRequestsController . merge!
in Routable Reject Projects::EnvironmentsController . folder
in AccessRequestable Reject Projects::EnvironmentsController . folder
in GroupDescendant Reject Projects::EnvironmentsController . folder
in GitlabRoutingHelper Reject Projects::PipelinesController . stage
in RequestAwareEntity Reject Projects::PipelinesController . stage
in StageEntity Reject Projects::PipelinesController . stage
Find caller_type = chat_name, ChatName, in func ChatNames::FindUserService.execute
in Ci::RegisterJobService Reject Admin::RunnersController . runner
in Ci::RegisterJobService Reject Admin::RunnersController . runner
in Ci::RegisterJobService Reject Admin::RunnersController . runner
in Ci::RegisterJobService Reject Admin::RunnersController . runner
in Ci::RegisterJobService Reject Admin::RunnersController . runner
in Ci::RegisterJobService Reject Admin::RunnersController . runner
in Ci::RegisterJobService Reject Admin::RunnersController . runner
in Ci::RegisterJobService Reject Admin::RunnersController . runner
in Ci::RegisterJobService Reject Admin::RunnersController . runner
in Ci::UpdateRunnerService Reject Admin::RunnersController . runner
in Ci::UpdateRunnerService Reject Admin::RunnersController . runner
Find caller_type = commit_status, CommitStatus, in func MergeRequests::AddTodoWhenBuildFailsService.execute
Find caller_type = protected_tag, ProtectedTag, in func ProtectedTags::DestroyService.execute
Find caller_type = protected_tag, ProtectedTag, in func ProtectedTags::UpdateService.execute
in TokenAuthenticatable Reject Admin::UsersController . block
in FeatureGate Reject Admin::UsersController . block
in CreatedAtFilterable Reject Admin::UsersController . block
in BulkMemberAccessLoad Reject Admin::UsersController . block
in BlocksJsonSerialization Reject Admin::UsersController . block
in TokenAuthenticatable Reject Admin::UsersController . block
in FeatureGate Reject Admin::UsersController . block
in CreatedAtFilterable Reject Admin::UsersController . block
in BulkMemberAccessLoad Reject Admin::UsersController . block
in BlocksJsonSerialization Reject Admin::UsersController . block
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
	TIME-ADD associates: 4.0e-06 t1: 0.002610999999999982 t2: 0.02754500000000028 t3: 0.0014209999999999791 t4: 427.94541599999815 t4_1: 105.63164900000218 t4_2: 2087.5756260000403
in MilestoneActions Reject ApplicationController . view_to_html_string
in RendersBlob Reject ApplicationController . view_to_html_string
in RoutableActions Reject ApplicationController . route_not_found
in AccessRequestable Reject UsersController . exists
in TokenAuthenticatable Reject UsersController . exists
in ValidAttribute Reject UsersController . exists
in ProjectFeaturesCompatibility Reject UsersController . exists
in Presentable Reject UsersController . exists
in Routable Reject UsersController . exists
in GroupDescendant Reject UsersController . exists
in DeploymentPlatform Reject UsersController . exists
in ChronicDurationAttribute Reject UsersController . exists
in RunnerJobsFinder Reject Admin::RunnersController . runner
in BlobLike Reject Projects::ArtifactsController . entry
in Ci::ArtifactBlob Reject Projects::ArtifactsController . entry
in BlobLike Reject Projects::ArtifactsController . entry
in Ci::ArtifactBlob Reject Projects::ArtifactsController . entry
in Importable Reject Admin::UsersController . block
in HasStatus Reject Admin::UsersController . block
in Ci::Stage Reject Admin::UsersController . block
in Importable Reject Profiles::TwoFactorAuthsController . skip
in HasStatus Reject Profiles::TwoFactorAuthsController . skip
in Ci::Stage Reject Profiles::TwoFactorAuthsController . skip
in Importable Reject Profiles::TwoFactorAuthsController . skip
in HasStatus Reject Profiles::TwoFactorAuthsController . skip
in Ci::Stage Reject Profiles::TwoFactorAuthsController . skip
in Clusters::Applications::Runner Reject Admin::RunnersController . runner
in AccessRequestable Reject Projects::MergeRequestsController . merge!
in TokenAuthenticatable Reject Projects::MergeRequestsController . merge!
in ValidAttribute Reject Projects::MergeRequestsController . merge!
in ProjectFeaturesCompatibility Reject Projects::MergeRequestsController . merge!
in Presentable Reject Projects::MergeRequestsController . merge!
in Routable Reject Projects::MergeRequestsController . merge!
in GroupDescendant Reject Projects::MergeRequestsController . merge!
in DeploymentPlatform Reject Projects::MergeRequestsController . merge!
in ChronicDurationAttribute Reject Projects::MergeRequestsController . merge!
in Routable Reject Projects::EnvironmentsController . folder
in AccessRequestable Reject Projects::EnvironmentsController . folder
in GroupDescendant Reject Projects::EnvironmentsController . folder
in GitlabRoutingHelper Reject Projects::PipelinesController . stage
in RequestAwareEntity Reject Projects::PipelinesController . stage
in StageEntity Reject Projects::PipelinesController . stage
in Ci::RegisterJobService Reject Admin::RunnersController . runner
in Ci::RegisterJobService Reject Admin::RunnersController . runner
in Ci::RegisterJobService Reject Admin::RunnersController . runner
in Ci::RegisterJobService Reject Admin::RunnersController . runner
in Ci::RegisterJobService Reject Admin::RunnersController . runner
in Ci::RegisterJobService Reject Admin::RunnersController . runner
in Ci::RegisterJobService Reject Admin::RunnersController . runner
in Ci::RegisterJobService Reject Admin::RunnersController . runner
in Ci::RegisterJobService Reject Admin::RunnersController . runner
in Ci::UpdateRunnerService Reject Admin::RunnersController . runner
in Ci::UpdateRunnerService Reject Admin::RunnersController . runner
in TokenAuthenticatable Reject Admin::UsersController . block
in FeatureGate Reject Admin::UsersController . block
in CreatedAtFilterable Reject Admin::UsersController . block
in BulkMemberAccessLoad Reject Admin::UsersController . block
in BlocksJsonSerialization Reject Admin::UsersController . block
in TokenAuthenticatable Reject Admin::UsersController . block
in FeatureGate Reject Admin::UsersController . block
in CreatedAtFilterable Reject Admin::UsersController . block
in BulkMemberAccessLoad Reject Admin::UsersController . block
in BlocksJsonSerialization Reject Admin::UsersController . block
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
in BaseService Reject Projects::PagesDomainsController . domain
in VerifyPagesDomainService Reject Projects::PagesDomainsController . domain
	TIME-second do_type_inference_cfg: 1350.869563
Set ResolvableDiscussion.can_resolve? funcname to be can_resolve_note_Project
Set LfsFileLock.can_be_unlocked_by? funcname to be can_admin_project_Project
Set DeleteBranchService.execute funcname to be can_push_code_Project
	TIME-third do_type_inference_cfg: 2.151226
do_type_inference: 3546.522994
in TokenAuthenticatable Reject Admin::UsersController . block
in FeatureGate Reject Admin::UsersController . block
in CreatedAtFilterable Reject Admin::UsersController . block
in BulkMemberAccessLoad Reject Admin::UsersController . block
in BlocksJsonSerialization Reject Admin::UsersController . block
k: [User.ldap_user?] (1.) %self[1.0]  self . identities 
complexity: 1
k: [User.ldap_user?] (1.) %self[1.0]  self . identities 
complexity: 1
k: [User.ldap_user?] (1.) %self[1.0]  identities(Identity) . find 
complexity: 1
k: [User.ldap_user?] (1.) %self[1.0]  self . identities 
complexity: 1
k: [User.ldap_user?] (1.) %self[1.0]  identities(Identity) . exists? 
complexity: 1
k: [User.ldap_user?] (1.) %self[1.0]  self . identities 
complexity: 1
k: [User.ldap_user?] (1.) %self[1.0]  self . identities 
complexity: 1
k: [User.ldap_user?] (1.) %self[1.0]  identities(Identity) . find 
complexity: 1
k: [User.ldap_user?] (1.) %self[1.0]  self . identities 
complexity: 1
k: [User.ldap_user?] (1.) %self[1.0]  identities(Identity) . exists? 
complexity: 1
k: [User.ldap_user?] (1.) %self[1.0]  self . identities 
complexity: 1
k: [User.ldap_user?] (1.) %self[1.0]  self . identities 
complexity: 1
k: [User.ldap_user?] (1.) %self[1.0]  identities(Identity) . find 
complexity: 1
k: [User.ldap_user?] (1.) %self[1.0]  self . identities 
complexity: 1
k: [User.ldap_user?] (1.) %self[1.0]  identities(Identity) . exists? 
complexity: 1
k: [ApplicationController.render_404] (1.) %self[1.0]  Rails.root . join 
complexity: 1
k: [Admin::AbuseReportsController.destroy] (2.9) %v_3[2.6] %v_5[2.8]  %v_3 -> find 
complexity: 1
k: [Admin::AbuseReportsController.destroy] (5.1) abuse_report[2.10]  abuse_report -> destroy 
complexity: 1
ppppp #<Call_instr:0x00007f7f34f96db0> [Ability.allowed?] (12.2) %v_14[12.1] %self[2.0]  %v_14 -> user_scope ["models/ability.rb", 58, 0]
ppppp #<Call_instr:0x00007f7f34f16b38> [Ability.allowed?] (13.2) %v_16[13.1] %self[2.0]  %v_16 -> subject_scope ["models/ability.rb", 60, 0]
ppppp #<Call_instr:0x00007f7f34f96db0> [Ability.allowed?] (12.2) %v_14[12.1] %self[2.0]  %v_14 -> user_scope ["models/ability.rb", 58, 0]
ppppp #<Call_instr:0x00007f7f34f16b38> [Ability.allowed?] (13.2) %v_16[13.1] %self[2.0]  %v_16 -> subject_scope ["models/ability.rb", 60, 0]
  choices = []
ALL DURATION OF ../applications/pw-gitlab/ 5522.414844
ruby main.rb -d ../applications/pw-gitlab/ -p Admin::AbuseReportsController,index
Start 2018-08-18 19:51:51 -0500
dir = ../applications/pw-gitlab/
run performance
resolve_upper_class: 0.016978
resolve_upper_class: 0.029645
ADD INDEX: AuditEvent, author_id
ADD INDEX: AuditEvent, entity_id
ADD INDEX: AuditEvent, type
ADD INDEX: Ci::Build, commit_id
ADD INDEX: Ci::Build, commit_id
ADD INDEX: Ci::Build, commit_id
ADD INDEX: Ci::Build, commit_id
ADD INDEX: Ci::Build, commit_id
ADD INDEX: Ci::Build, erased_by_id
ADD INDEX: Ci::Build, gl_project_id
ADD INDEX: Ci::Build, project_id
ADD INDEX: Ci::Build, project_id
ADD INDEX: Ci::Build, runner_id
ADD INDEX: Ci::Build, status
ADD INDEX: Ci::Build, type
read schema: class ci_commits (CiCommit) cannot be found!
INDEX:: TABLE ci_commits - CiCommit field gl_project_id cannot be found
INDEX:: TABLE ci_commits - CiCommit field gl_project_id cannot be found
INDEX:: TABLE ci_commits - CiCommit field gl_project_id cannot be found
INDEX:: TABLE ci_commits - CiCommit field project_id cannot be found
INDEX:: TABLE ci_commits - CiCommit field project_id cannot be found
INDEX:: TABLE ci_commits - CiCommit field project_id cannot be found
INDEX:: TABLE ci_commits - CiCommit field project_id cannot be found
INDEX:: TABLE ci_commits - CiCommit field sha cannot be found
INDEX:: TABLE ci_commits - CiCommit field status cannot be found
ADD INDEX: Event, created_at
ADD INDEX: Event, is_admin
ADD INDEX: Event, project_id
read schema: class ci_jobs (CiJob) cannot be found!
INDEX:: TABLE ci_jobs - CiJob field deleted_at cannot be found
INDEX:: TABLE ci_jobs - CiJob field project_id cannot be found
read schema: class ci_projects (CiProject) cannot be found!
INDEX:: TABLE ci_projects - CiProject field gitlab_id cannot be found
INDEX:: TABLE ci_projects - CiProject field shared_runners_enabled cannot be found
ADD INDEX: Ci::RunnerProject, gl_project_id
ADD INDEX: Ci::RunnerProject, runner_id
ADD INDEX: Ci::Runner, description
ADD INDEX: Ci::Runner, token
ADD INDEX: Ci::Runner, token
ADD INDEX: CiService, project_id
read schema: class ci_sessions (CiSession) cannot be found!
INDEX:: TABLE ci_sessions - CiSession field session_id cannot be found
INDEX:: TABLE ci_sessions - CiSession field updated_at cannot be found
read schema: class ci_taggings (CiTagging) cannot be found!
INDEX:: TABLE ci_taggings - CiTagging field tag_id cannot be found
INDEX:: TABLE ci_taggings - CiTagging field taggable_id cannot be found
read schema: class ci_tags (CiTag) cannot be found!
INDEX:: TABLE ci_tags - CiTag field name cannot be found
ADD INDEX: Ci::Trigger, deleted_at
ADD INDEX: Ci::Trigger, gl_project_id
ADD INDEX: Ci::Variable, gl_project_id
read schema: class ci_web_hooks (CiWebHook) cannot be found!
ADD INDEX: DeployKeysProject, project_id
ADD INDEX: Email, email
ADD INDEX: Email, user_id
ADD INDEX: Event, action
ADD INDEX: Event, author_id
ADD INDEX: Event, created_at
ADD INDEX: Event, project_id
ADD INDEX: Event, target_id
ADD INDEX: Event, target_type
ADD INDEX: ForkedProjectLink, forked_to_project_id
ADD INDEX: Identity, created_at
ADD INDEX: Identity, user_id
ADD INDEX: Issue, assignee_id
ADD INDEX: Issue, author_id
ADD INDEX: Issue, confidential
ADD INDEX: Issue, created_at
ADD INDEX: Issue, created_at
ADD INDEX: Issue, deleted_at
ADD INDEX: Issue, description
ADD INDEX: Issue, due_date
ADD INDEX: Issue, milestone_id
ADD INDEX: Issue, project_id
ADD INDEX: Issue, project_id
ADD INDEX: Issue, state
ADD INDEX: Issue, title
ADD INDEX: Issue, title
ADD INDEX: Key, created_at
ADD INDEX: Key, user_id
ADD INDEX: LabelLink, label_id
ADD INDEX: LabelLink, target_id
ADD INDEX: Label, project_id
ADD INDEX: LfsObject, oid
ADD INDEX: LfsObjectsProject, project_id
ADD INDEX: Member, access_level
ADD INDEX: Member, created_at
ADD INDEX: Member, invite_token
ADD INDEX: Member, source_id
ADD INDEX: Member, type
ADD INDEX: Member, user_id
ADD INDEX: MergeRequestDiff, merge_request_id
ADD INDEX: MergeRequest, assignee_id
ADD INDEX: MergeRequest, author_id
ADD INDEX: MergeRequest, created_at
ADD INDEX: MergeRequest, created_at
ADD INDEX: MergeRequest, deleted_at
ADD INDEX: MergeRequest, description
ADD INDEX: MergeRequest, milestone_id
ADD INDEX: MergeRequest, source_branch
ADD INDEX: MergeRequest, source_project_id
ADD INDEX: MergeRequest, target_branch
ADD INDEX: MergeRequest, target_project_id
ADD INDEX: MergeRequest, title
ADD INDEX: MergeRequest, title
ADD INDEX: Milestone, created_at
ADD INDEX: Milestone, description
ADD INDEX: Milestone, due_date
ADD INDEX: Milestone, project_id
ADD INDEX: Milestone, project_id
ADD INDEX: Milestone, title
ADD INDEX: Milestone, title
ADD INDEX: Namespace, created_at
ADD INDEX: Namespace, name
ADD INDEX: Namespace, name
ADD INDEX: Namespace, owner_id
ADD INDEX: Namespace, path
ADD INDEX: Namespace, path
ADD INDEX: Namespace, type
ADD INDEX: Namespace, visibility_level
read schema: class notes (Note) cannot be found!
INDEX:: TABLE notes - Note field author_id cannot be found
INDEX:: TABLE notes - Note field commit_id cannot be found
INDEX:: TABLE notes - Note field created_at cannot be found
INDEX:: TABLE notes - Note field created_at cannot be found
INDEX:: TABLE notes - Note field is_award cannot be found
INDEX:: TABLE notes - Note field line_code cannot be found
INDEX:: TABLE notes - Note field note cannot be found
INDEX:: TABLE notes - Note field noteable_id cannot be found
INDEX:: TABLE notes - Note field noteable_type cannot be found
INDEX:: TABLE notes - Note field project_id cannot be found
INDEX:: TABLE notes - Note field project_id cannot be found
INDEX:: TABLE notes - Note field updated_at cannot be found
ADD INDEX: NotificationSetting, source_id
ADD INDEX: NotificationSetting, user_id
ADD INDEX: OauthAccessGrant, token
ADD INDEX: OauthAccessToken, refresh_token
ADD INDEX: OauthAccessToken, resource_owner_id
ADD INDEX: OauthAccessToken, token
read schema: class oauth_applications (OauthApplication) cannot be found!
INDEX:: TABLE oauth_applications - OauthApplication field owner_id cannot be found
INDEX:: TABLE oauth_applications - OauthApplication field uid cannot be found
ADD INDEX: Project, builds_enabled
ADD INDEX: Project, builds_enabled
ADD INDEX: Project, ci_id
ADD INDEX: Project, created_at
ADD INDEX: Project, creator_id
ADD INDEX: Project, description
ADD INDEX: Project, last_activity_at
ADD INDEX: Project, last_repository_check_failed
ADD INDEX: Project, name
ADD INDEX: Project, namespace_id
ADD INDEX: Project, path
ADD INDEX: Project, path
ADD INDEX: Project, pending_delete
ADD INDEX: Project, runners_token
ADD INDEX: Project, star_count
ADD INDEX: Project, visibility_level
ADD INDEX: ProtectedBranch, project_id
ADD INDEX: Release, project_id
ADD INDEX: Release, project_id
ADD INDEX: SentNotification, reply_key
ADD INDEX: Service, category
ADD INDEX: Service, created_at
ADD INDEX: Service, default
ADD INDEX: Service, project_id
ADD INDEX: Service, template
ADD INDEX: Snippet, author_id
ADD INDEX: Snippet, created_at
ADD INDEX: Snippet, created_at
ADD INDEX: Snippet, file_name
ADD INDEX: Snippet, project_id
ADD INDEX: Snippet, title
ADD INDEX: Snippet, updated_at
ADD INDEX: Snippet, visibility_level
ADD INDEX: Subscription, subscribable_id
read schema: class taggings (Tagging) cannot be found!
INDEX:: TABLE taggings - Tagging field tag_id cannot be found
INDEX:: TABLE taggings - Tagging field taggable_id cannot be found
read schema: class tags (Tag) cannot be found!
INDEX:: TABLE tags - Tag field name cannot be found
ADD INDEX: Todo, author_id
ADD INDEX: Todo, commit_id
ADD INDEX: Todo, note_id
ADD INDEX: Todo, project_id
ADD INDEX: Todo, state
ADD INDEX: Todo, target_type
ADD INDEX: Todo, user_id
ADD INDEX: User, admin
ADD INDEX: User, authentication_token
ADD INDEX: User, confirmation_token
ADD INDEX: User, created_at
ADD INDEX: User, current_sign_in_at
ADD INDEX: User, email
ADD INDEX: User, email
ADD INDEX: User, name
ADD INDEX: User, name
ADD INDEX: User, reset_password_token
ADD INDEX: User, username
ADD INDEX: User, username
ADD INDEX: UsersStarProject, project_id
ADD INDEX: UsersStarProject, user_id
ADD INDEX: UsersStarProject, user_id
ADD INDEX: WebHook, created_at
ADD INDEX: WebHook, project_id
read_schema: 1.157367
ForkProjectsFinder.initialize, Found super ProjectsFinder
GroupProjectsFinder.initialize, Found super ProjectsFinder
DeferScriptTagHelper.javascript_include_tag, Found super 
LazyImageTagHelper.image_tag, Found super 
ApplicationSetting.default_project_visibility=, Found super ActiveRecord::Base
ApplicationSetting.default_snippet_visibility=, Found super ActiveRecord::Base
ApplicationSetting.default_group_visibility=, Found super ActiveRecord::Base
ApplicationSetting.restricted_visibility_levels=, Found super ActiveRecord::Base
ApplicationSetting.performance_bar_allowed_group_id=, Found super ActiveRecord::Base
ApplicationSetting.performance_bar_allowed_group_id=, Found super ActiveRecord::Base
ApplicationSetting.performance_bar_allowed_group_id=, Found super ActiveRecord::Base
AwardEmoji.downvotes, Found super ActiveRecord::Base
AwardEmoji.upvotes, Found super ActiveRecord::Base
Badge.order_created_at_asc, Found super ActiveRecord::Base
Blob.initialize, Found super SimpleDelegator
Blob.load_all_data!, Found super SimpleDelegator
Ci::Build.unstarted, Found super 
Ci::Build.ignore_failures, Found super 
Ci::Build.with_artifacts_archive, Found super 
Ci::Build.with_artifacts_stored_locally, Found super 
Ci::Build.with_artifacts_not_expired, Found super 
Ci::Build.with_expired_artifacts, Found super 
Ci::Build.last_month, Found super 
Ci::Build.manual_actions, Found super 
Ci::Build.ref_protected, Found super 
Ci::Build.matches_tag_ids, Found super 
Ci::Build.with_any_tags, Found super 
Ci::Build.serializable_hash, Found super 
Ci::GroupVariable.unprotected, Found super 
Ci::JobArtifact.with_files_stored_locally, Found super 
Ci::Pipeline.internal, Found super 
Ci::PipelineSchedule.active, Found super 
Ci::PipelineSchedule.inactive, Found super 
Ci::Runner.specific, Found super 
Ci::Runner.shared, Found super 
Ci::Runner.active, Found super 
Ci::Runner.paused, Found super 
Ci::Runner.online, Found super 
Ci::Runner.ordered, Found super 
Ci::Runner.owned_or_shared, Found super 
Ci::Runner.assignable_for, Found super 
Ci::Variable.unprotected, Found super 
Clusters::Cluster.enabled, Found super 
Clusters::Cluster.disabled, Found super 
Clusters::Cluster.user_provided, Found super 
Clusters::Cluster.gcp_provided, Found super 
Clusters::Cluster.gcp_installed, Found super 
Clusters::Cluster.default_environment, Found super 
Clusters::Concerns::ApplicationStatus.installed, Found super 
Commit.link_reference_pattern, Found super 
CommitRange.link_reference_pattern, Found super 
CommitStatus.failed_but_allowed, Found super ActiveRecord::Base
CommitStatus.exclude_ignored, Found super ActiveRecord::Base
CommitStatus.latest, Found super ActiveRecord::Base
CommitStatus.retried, Found super ActiveRecord::Base
CommitStatus.ordered, Found super ActiveRecord::Base
CommitStatus.latest_ordered, Found super ActiveRecord::Base
CommitStatus.retried_ordered, Found super ActiveRecord::Base
CommitStatus.after_stage, Found super ActiveRecord::Base
CreatedAtFilterable.created_before, Found super 
CreatedAtFilterable.created_after, Found super 
Expirable.expired, Found super 
HasStatus.created, Found super 
HasStatus.relevant, Found super 
HasStatus.running, Found super 
HasStatus.pending, Found super 
HasStatus.success, Found super 
HasStatus.failed, Found super 
HasStatus.canceled, Found super 
HasStatus.skipped, Found super 
HasStatus.manual, Found super 
HasStatus.alive, Found super 
HasStatus.created_or_pending, Found super 
HasStatus.running_or_pending, Found super 
HasStatus.finished, Found super 
HasStatus.failed_or_canceled, Found super 
HasStatus.cancelable, Found super 
HasVariable.order_key_asc, Found super 
HasVariable.key=, Found super 
Issuable::ClassMethods.authored, Found super 
Issuable::ClassMethods.recent, Found super 
Issuable::ClassMethods.of_projects, Found super 
Issuable::ClassMethods.of_milestones, Found super 
Issuable::ClassMethods.with_milestone, Found super 
Issuable::ClassMethods.opened, Found super 
Issuable::ClassMethods.only_opened, Found super 
Issuable::ClassMethods.closed, Found super 
Issuable::ClassMethods.left_joins_milestones, Found super 
Issuable::ClassMethods.order_milestone_due_desc, Found super 
Issuable::ClassMethods.order_milestone_due_asc, Found super 
Issuable::ClassMethods.without_label, Found super 
Issuable::ClassMethods.join_project, Found super 
Issuable::ClassMethods.inc_notes_with_associations, Found super 
Issuable::ClassMethods.references_project, Found super 
Issuable::ClassMethods.non_archived, Found super 
ManualInverseAssociation::ClassMethods.manual_inverse_association, Found super 
ProtectedRefAccess.master, Found super 
ProtectedRefAccess.developer, Found super 
ResolvableNote::ClassMethods.potentially_resolvable, Found super 
ResolvableNote::ClassMethods.resolvable, Found super 
ResolvableNote::ClassMethods.resolved, Found super 
ResolvableNote::ClassMethods.unresolved, Found super 
Routable.with_route, Found super 
Sortable::ClassMethods.order_id_desc, Found super 
Sortable::ClassMethods.order_id_asc, Found super 
Sortable::ClassMethods.order_created_desc, Found super 
Sortable::ClassMethods.order_created_asc, Found super 
Sortable::ClassMethods.order_updated_desc, Found super 
Sortable::ClassMethods.order_updated_asc, Found super 
Sortable::ClassMethods.order_name_asc, Found super 
Sortable::ClassMethods.order_name_desc, Found super 
UpdatedAtFilterable.updated_before, Found super 
UpdatedAtFilterable.updated_after, Found super 
DeployKey.in_projects, Found super Key
DeployKey.are_public, Found super Key
DeployKeysProject.without_project_deleted, Found super ActiveRecord::Base
DeployKeysProject.in_project, Found super ActiveRecord::Base
DeployKeysProject.with_write_access, Found super ActiveRecord::Base
DeployToken.active, Found super ActiveRecord::Base
Email.confirmed, Found super ActiveRecord::Base
Environment.available, Found super ActiveRecord::Base
Environment.stopped, Found super ActiveRecord::Base
Environment.order_by_last_deployed_at, Found super ActiveRecord::Base
Environment.in_review_folder, Found super ActiveRecord::Base
Event.recent, Found super ActiveRecord::Base
Event.code_push, Found super ActiveRecord::Base
Event.in_projects, Found super ActiveRecord::Base
Event.with_associations, Found super ActiveRecord::Base
Event.for_milestone_id, Found super ActiveRecord::Base
GpgKey.with_subkeys, Found super ActiveRecord::Base
GpgKey.key=, Found super ActiveRecord::Base
GroupMilestone.build_collection, Found super GlobalMilestone
GroupMilestone.build, Found super GlobalMilestone
Identity.with_provider, Found super ActiveRecord::Base
Identity.with_extern_uid, Found super ActiveRecord::Base
Issue.in_projects, Found super ActiveRecord::Base
Issue.assigned, Found super ActiveRecord::Base
Issue.unassigned, Found super ActiveRecord::Base
Issue.assigned_to, Found super ActiveRecord::Base
Issue.without_due_date, Found super ActiveRecord::Base
Issue.due_before, Found super ActiveRecord::Base
Issue.due_between, Found super ActiveRecord::Base
Issue.due_tomorrow, Found super ActiveRecord::Base
Issue.order_due_date_asc, Found super ActiveRecord::Base
Issue.order_due_date_desc, Found super ActiveRecord::Base
Issue.preload_associations, Found super ActiveRecord::Base
Issue.public_only, Found super ActiveRecord::Base
Issue.link_reference_pattern, Found super ActiveRecord::Base
Issue.as_json, Found super ActiveRecord::Base
Label.templates, Found super ActiveRecord::Base
Label.with_title, Found super ActiveRecord::Base
Label.with_lists_and_board, Found super ActiveRecord::Base
Label.on_group_boards, Found super ActiveRecord::Base
Label.on_project_boards, Found super ActiveRecord::Base
Label.as_json, Found super ActiveRecord::Base
LfsObject.with_files_stored_locally, Found super ActiveRecord::Base
List.destroyable, Found super ActiveRecord::Base
List.movable, Found super ActiveRecord::Base
List.as_json, Found super ActiveRecord::Base
Member.active, Found super ActiveRecord::Base
Member.active_without_invites_and_requests, Found super ActiveRecord::Base
Member.invite, Found super ActiveRecord::Base
Member.non_invite, Found super ActiveRecord::Base
Member.request, Found super ActiveRecord::Base
Member.non_request, Found super ActiveRecord::Base
Member.has_access, Found super ActiveRecord::Base
Member.guests, Found super ActiveRecord::Base
Member.reporters, Found super ActiveRecord::Base
Member.developers, Found super ActiveRecord::Base
Member.masters, Found super ActiveRecord::Base
Member.owners, Found super ActiveRecord::Base
Member.owners_and_masters, Found super ActiveRecord::Base
Member.order_name_asc, Found super ActiveRecord::Base
Member.order_name_desc, Found super ActiveRecord::Base
Member.order_recent_sign_in, Found super ActiveRecord::Base
Member.order_oldest_sign_in, Found super ActiveRecord::Base
ProjectMember.in_project, Found super Member
MergeRequest.by_source_or_target_branch, Found super ActiveRecord::Base
MergeRequest.by_milestone, Found super ActiveRecord::Base
MergeRequest.of_projects, Found super ActiveRecord::Base
MergeRequest.from_project, Found super ActiveRecord::Base
MergeRequest.merged, Found super ActiveRecord::Base
MergeRequest.closed_and_merged, Found super ActiveRecord::Base
MergeRequest.from_source_branches, Found super ActiveRecord::Base
MergeRequest.by_commit_sha, Found super ActiveRecord::Base
MergeRequest.join_project, Found super ActiveRecord::Base
MergeRequest.references_project, Found super ActiveRecord::Base
MergeRequest.assigned, Found super ActiveRecord::Base
MergeRequest.unassigned, Found super ActiveRecord::Base
MergeRequest.assigned_to, Found super ActiveRecord::Base
MergeRequest.link_reference_pattern, Found super ActiveRecord::Base
MergeRequestDiff.viewable, Found super ActiveRecord::Base
MergeRequestDiff.by_commit_sha, Found super ActiveRecord::Base
MergeRequestDiff.recent, Found super ActiveRecord::Base
Milestone.of_projects, Found super ActiveRecord::Base
Milestone.of_groups, Found super ActiveRecord::Base
Milestone.active, Found super ActiveRecord::Base
Milestone.closed, Found super ActiveRecord::Base
Milestone.for_projects, Found super ActiveRecord::Base
Milestone.for_projects_and_groups, Found super ActiveRecord::Base
Milestone.link_reference_pattern, Found super ActiveRecord::Base
Namespace.for_user, Found super ActiveRecord::Base
Namespace.with_statistics, Found super ActiveRecord::Base
Note::SpecialRole.for_commit_id, Found super ActiveRecord::Base
Note::SpecialRole.system, Found super ActiveRecord::Base
Note::SpecialRole.user, Found super ActiveRecord::Base
Note::SpecialRole.common, Found super ActiveRecord::Base
Note::SpecialRole.fresh, Found super ActiveRecord::Base
Note::SpecialRole.updated_after, Found super ActiveRecord::Base
Note::SpecialRole.inc_author_project, Found super ActiveRecord::Base
Note::SpecialRole.inc_author, Found super ActiveRecord::Base
Note::SpecialRole.inc_relations_for_view, Found super ActiveRecord::Base
Note::SpecialRole.diff_notes, Found super ActiveRecord::Base
Note::SpecialRole.new_diff_notes, Found super ActiveRecord::Base
Note::SpecialRole.non_diff_notes, Found super ActiveRecord::Base
Note::SpecialRole.with_associations, Found super ActiveRecord::Base
Note::SpecialRole.with_metadata, Found super ActiveRecord::Base
Note::SpecialRole.noteable_type=, Found super ActiveRecord::Base
Note::SpecialRole.discussion_id, Found super ActiveRecord::Base
NotificationSetting.for_groups, Found super ActiveRecord::Base
NotificationSetting.for_projects, Found super ActiveRecord::Base
OauthAccessToken.scopes=, Found super Doorkeeper::AccessToken
PagesDomain.enabled, Found super ActiveRecord::Base
PagesDomain.needs_verification, Found super ActiveRecord::Base
PersonalAccessToken.active, Found super ActiveRecord::Base
PersonalAccessToken.inactive, Found super ActiveRecord::Base
PersonalAccessToken.with_impersonation, Found super ActiveRecord::Base
PersonalAccessToken.without_impersonation, Found super ActiveRecord::Base
Project.pending_delete, Found super ActiveRecord::Base
Project.without_deleted, Found super ActiveRecord::Base
Project.with_storage_feature, Found super ActiveRecord::Base
Project.without_storage_feature, Found super ActiveRecord::Base
Project.with_unmigrated_storage, Found super ActiveRecord::Base
Project.sorted_by_activity, Found super ActiveRecord::Base
Project.sorted_by_stars, Found super ActiveRecord::Base
Project.in_namespace, Found super ActiveRecord::Base
Project.personal, Found super ActiveRecord::Base
Project.joined, Found super ActiveRecord::Base
Project.starred_by, Found super ActiveRecord::Base
Project.visible_to_user, Found super ActiveRecord::Base
Project.archived, Found super ActiveRecord::Base
Project.non_archived, Found super ActiveRecord::Base
Project.for_milestones, Found super ActiveRecord::Base
Project.with_push, Found super ActiveRecord::Base
Project.with_project_feature, Found super ActiveRecord::Base
Project.with_statistics, Found super ActiveRecord::Base
Project.with_shared_runners, Found super ActiveRecord::Base
Project.inside_path, Found super ActiveRecord::Base
Project.with_feature_enabled, Found super ActiveRecord::Base
Project.with_feature_access_level, Found super ActiveRecord::Base
Project.with_builds_enabled, Found super ActiveRecord::Base
Project.with_issues_enabled, Found super ActiveRecord::Base
Project.with_issues_available_for_user, Found super ActiveRecord::Base
Project.with_merge_requests_enabled, Found super ActiveRecord::Base
Project.active, Found super ActiveRecord::Base
Project.abandoned, Found super ActiveRecord::Base
Project.excluding_project, Found super ActiveRecord::Base
Project.import_started, Found super ActiveRecord::Base
Project.ci_config_path=, Found super ActiveRecord::Base
Project.import_url=, Found super ActiveRecord::Base
Project.import_url=, Found super ActiveRecord::Base
ProjectAutoDevops.enabled, Found super ActiveRecord::Base
ProjectAutoDevops.disabled, Found super ActiveRecord::Base
ProjectLabel.to_reference, Found super Label
MicrosoftTeamsService.custom_data, Found super ChatNotificationService
ProjectSnippet.fresh, Found super Snippet
ReadmeBlob.initialize, Found super SimpleDelegator
RedirectRoute.matching_path_and_descendants, Found super ActiveRecord::Base
Route.inside_path, Found super ActiveRecord::Base
SentNotification.position=, Found super ActiveRecord::Base
Service.visible, Found super ActiveRecord::Base
Service.issue_trackers, Found super ActiveRecord::Base
Service.external_wikis, Found super ActiveRecord::Base
Service.active, Found super ActiveRecord::Base
Service.without_defaults, Found super ActiveRecord::Base
Service.push_hooks, Found super ActiveRecord::Base
Service.tag_push_hooks, Found super ActiveRecord::Base
Service.issue_hooks, Found super ActiveRecord::Base
Service.confidential_issue_hooks, Found super ActiveRecord::Base
Service.merge_request_hooks, Found super ActiveRecord::Base
Service.note_hooks, Found super ActiveRecord::Base
Service.confidential_note_hooks, Found super ActiveRecord::Base
Service.job_hooks, Found super ActiveRecord::Base
Service.pipeline_hooks, Found super ActiveRecord::Base
Service.wiki_page_hooks, Found super ActiveRecord::Base
Service.external_issue_trackers, Found super ActiveRecord::Base
Service.deployment, Found super ActiveRecord::Base
Snippet.are_internal, Found super ActiveRecord::Base
Snippet.are_private, Found super ActiveRecord::Base
Snippet.are_public, Found super ActiveRecord::Base
Snippet.public_and_internal, Found super ActiveRecord::Base
Snippet.fresh, Found super ActiveRecord::Base
Snippet.link_reference_pattern, Found super ActiveRecord::Base
Todo.pending, Found super ActiveRecord::Base
Todo.done, Found super ActiveRecord::Base
Upload.with_files_stored_locally, Found super ActiveRecord::Base
User.admins, Found super ActiveRecord::Base
User.blocked, Found super ActiveRecord::Base
User.external, Found super ActiveRecord::Base
User.active, Found super ActiveRecord::Base
User.without_projects, Found super ActiveRecord::Base
User.todo_authors, Found super ActiveRecord::Base
User.order_recent_sign_in, Found super ActiveRecord::Base
User.order_oldest_sign_in, Found super ActiveRecord::Base
User.authorized_projects, Found super ActiveRecord::Base
AnalyticsGenericSerializer.represent, Found super BaseSerializer
WithPagination.represent, Found super 
WithPagination.represent, Found super 
ContainerTagsSerializer.represent, Found super BaseSerializer
EnvironmentSerializer.represent, Found super BaseSerializer
EnvironmentSerializer.represent, Found super BaseSerializer
GroupChildSerializer.represent, Found super BaseSerializer
IssueSerializer.represent, Found super BaseSerializer
MergeRequestSerializer.represent, Found super BaseSerializer
PipelineSerializer.represent, Found super BaseSerializer
PipelineSerializer.represent, Found super BaseSerializer
Boards::Issues::CreateService.initialize, Found super 
CreateBranchService.success, Found super BaseService
CreateReleaseService.success, Found super BaseService
DeleteBranchService.error, Found super BaseService
DeleteBranchService.success, Found super BaseService
MergeRequests::CreateFromIssueService.initialize, Found super 
MergeRequests::CreateFromIssueService.success, Found super 
Search::GroupService.initialize, Found super 
Tags::DestroyService.error, Found super 
Tags::DestroyService.success, Found super 
UpdateReleaseService.success, Found super BaseService
UpdateSnippetService.initialize, Found super BaseService
FileUploader.initialize, Found super GitlabUploader
GitlabUploader.initialize, Found super CarrierWave::Uploader::Base
UrlPlaceholderValidator.validate_each, Found super UrlValidator
WaitableWorker::ClassMethods.perform, Found super 
ObjectStorage::MigrateUploadsWorker::Upload.stored_locally, Found super ActiveRecord::Base
ObjectStorage::MigrateUploadsWorker::Upload.stored_remotely, Found super ActiveRecord::Base
ObjectStorage::MigrateUploadsWorker::Report::MigrationFailures.stored_locally, Found super 
ObjectStorage::MigrateUploadsWorker::Report::MigrationFailures.stored_remotely, Found super 
retrieve_func_calls: 1831.689653
CALLS: ["order", "params", "page", "includes", "present?", "admin_root_path"]
CALLS: ["nulls_last_order", "reorder", "order"]
END
THE SIZE OF TOUCHED METHODS: 2 ["index", "order"]
CLASSES: ["MilestonesFinder", "Admin::AbuseReportsController"]
AAA: read_ruby_files: 1844.76864
Dataflow file: ../applications/pw-gitlab//dataflow/finders/milestones_finder.log matches class name MilestonesFinder
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/admin/abuse_reports_controller.log matches class name Admin::AbuseReportsController
read_dataflow: 1848.823612
	TIME-read_util_function: 0.000162
	TIME-read_repeatable_function: 6.0e-06
	TIME-Fill in the empty CFG: 0.374947
	TIME-ADD associates: 4.0e-06 t1: 0.001563999999999968 t2: 0.027016000000000307 t3: 0.0010460000000000076 t4: 0.7604199999999783 t4_1: 0.18110600000004332 t4_2: 2.7234969999993006
	TIME-second do_type_inference_cfg: 1.742288
	TIME-third do_type_inference_cfg: 0.040985
do_type_inference: 5.120064
k: [User.ldap_user?] (1.) %self[1.0]  self . identities 
complexity: 1
k: [User.ldap_user?] (1.) %self[1.0]  self . identities 
complexity: 1
k: [User.ldap_user?] (1.) %self[1.0]  identities(Identity) . find 
complexity: 1
k: [User.ldap_user?] (1.) %self[1.0]  self . identities 
complexity: 1
k: [User.ldap_user?] (1.) %self[1.0]  identities(Identity) . exists? 
complexity: 1
k: [User.ldap_user?] (1.) %self[1.0]  self . identities 
complexity: 1
k: [User.ldap_user?] (1.) %self[1.0]  self . identities 
complexity: 1
k: [User.ldap_user?] (1.) %self[1.0]  identities(Identity) . find 
complexity: 1
k: [User.ldap_user?] (1.) %self[1.0]  self . identities 
complexity: 1
k: [User.ldap_user?] (1.) %self[1.0]  identities(Identity) . exists? 
complexity: 1
k: [User.ldap_user?] (1.) %self[1.0]  self . identities 
complexity: 1
k: [User.ldap_user?] (1.) %self[1.0]  self . identities 
complexity: 1
k: [User.ldap_user?] (1.) %self[1.0]  identities(Identity) . find 
complexity: 1
k: [User.ldap_user?] (1.) %self[1.0]  self . identities 
complexity: 1
k: [User.ldap_user?] (1.) %self[1.0]  identities(Identity) . exists? 
complexity: 1
k: [ApplicationController.render_404] (1.) %self[1.0]  Rails.root . join 
complexity: 1
k: [Admin::AbuseReportsController.index] (2.8) %v_3[2.6] %v_4[2.7]  %v_3 -> order 
complexity: 1
k: [Admin::AbuseReportsController.index] (2.15) %v_9[2.14]  %v_9 -> includes 
complexity: 1
k: [PageLayoutHelper.page_title] (1.) %self[1.0]  titles . any? 
complexity: 1
k: [PageLayoutHelper.page_title] (1.) %self[1.0]  titles . any? 
complexity: 1
k: [PageLayoutHelper.page_title] (1.) %self[1.0]  @page_title . last 
complexity: 1
k: [PageLayoutHelper.page_title] (1.) %self[1.0]  @page_title . join 
complexity: 1
k: [IconsHelper.sprite_icon] (1.) %self[1.0]  css_class . blank? 
complexity: 1
  choices = []
ALL DURATION OF ../applications/pw-gitlab/ 1927.21216
ruby main.rb -d ../applications/pw-gitlab/ -p Admin::AppearancesController,create
Start 2018-08-18 20:23:59 -0500
dir = ../applications/pw-gitlab/
run performance
resolve_upper_class: 0.012843
resolve_upper_class: 0.01642
ADD INDEX: AuditEvent, author_id
ADD INDEX: AuditEvent, entity_id
ADD INDEX: AuditEvent, type
ADD INDEX: Ci::Build, commit_id
ADD INDEX: Ci::Build, commit_id
ADD INDEX: Ci::Build, commit_id
ADD INDEX: Ci::Build, commit_id
ADD INDEX: Ci::Build, commit_id
ADD INDEX: Ci::Build, erased_by_id
ADD INDEX: Ci::Build, gl_project_id
ADD INDEX: Ci::Build, project_id
ADD INDEX: Ci::Build, project_id
ADD INDEX: Ci::Build, runner_id
ADD INDEX: Ci::Build, status
ADD INDEX: Ci::Build, type
read schema: class ci_commits (CiCommit) cannot be found!
INDEX:: TABLE ci_commits - CiCommit field gl_project_id cannot be found
INDEX:: TABLE ci_commits - CiCommit field gl_project_id cannot be found
INDEX:: TABLE ci_commits - CiCommit field gl_project_id cannot be found
INDEX:: TABLE ci_commits - CiCommit field project_id cannot be found
INDEX:: TABLE ci_commits - CiCommit field project_id cannot be found
INDEX:: TABLE ci_commits - CiCommit field project_id cannot be found
INDEX:: TABLE ci_commits - CiCommit field project_id cannot be found
INDEX:: TABLE ci_commits - CiCommit field sha cannot be found
INDEX:: TABLE ci_commits - CiCommit field status cannot be found
ADD INDEX: Event, created_at
ADD INDEX: Event, is_admin
ADD INDEX: Event, project_id
read schema: class ci_jobs (CiJob) cannot be found!
INDEX:: TABLE ci_jobs - CiJob field deleted_at cannot be found
INDEX:: TABLE ci_jobs - CiJob field project_id cannot be found
read schema: class ci_projects (CiProject) cannot be found!
INDEX:: TABLE ci_projects - CiProject field gitlab_id cannot be found
INDEX:: TABLE ci_projects - CiProject field shared_runners_enabled cannot be found
ADD INDEX: Ci::RunnerProject, gl_project_id
ADD INDEX: Ci::RunnerProject, runner_id
ADD INDEX: Ci::Runner, description
ADD INDEX: Ci::Runner, token
ADD INDEX: Ci::Runner, token
ADD INDEX: CiService, project_id
read schema: class ci_sessions (CiSession) cannot be found!
INDEX:: TABLE ci_sessions - CiSession field session_id cannot be found
INDEX:: TABLE ci_sessions - CiSession field updated_at cannot be found
read schema: class ci_taggings (CiTagging) cannot be found!
INDEX:: TABLE ci_taggings - CiTagging field tag_id cannot be found
INDEX:: TABLE ci_taggings - CiTagging field taggable_id cannot be found
read schema: class ci_tags (CiTag) cannot be found!
INDEX:: TABLE ci_tags - CiTag field name cannot be found
ADD INDEX: Ci::Trigger, deleted_at
ADD INDEX: Ci::Trigger, gl_project_id
ADD INDEX: Ci::Variable, gl_project_id
read schema: class ci_web_hooks (CiWebHook) cannot be found!
ADD INDEX: DeployKeysProject, project_id
ADD INDEX: Email, email
ADD INDEX: Email, user_id
ADD INDEX: Event, action
ADD INDEX: Event, author_id
ADD INDEX: Event, created_at
ADD INDEX: Event, project_id
ADD INDEX: Event, target_id
ADD INDEX: Event, target_type
ADD INDEX: ForkedProjectLink, forked_to_project_id
ADD INDEX: Identity, created_at
ADD INDEX: Identity, user_id
ADD INDEX: Issue, assignee_id
ADD INDEX: Issue, author_id
ADD INDEX: Issue, confidential
ADD INDEX: Issue, created_at
ADD INDEX: Issue, created_at
ADD INDEX: Issue, deleted_at
ADD INDEX: Issue, description
ADD INDEX: Issue, due_date
ADD INDEX: Issue, milestone_id
ADD INDEX: Issue, project_id
ADD INDEX: Issue, project_id
ADD INDEX: Issue, state
ADD INDEX: Issue, title
ADD INDEX: Issue, title
ADD INDEX: Key, created_at
ADD INDEX: Key, user_id
ADD INDEX: LabelLink, label_id
ADD INDEX: LabelLink, target_id
ADD INDEX: Label, project_id
ADD INDEX: LfsObject, oid
ADD INDEX: LfsObjectsProject, project_id
ADD INDEX: Member, access_level
ADD INDEX: Member, created_at
ADD INDEX: Member, invite_token
ADD INDEX: Member, source_id
ADD INDEX: Member, type
ADD INDEX: Member, user_id
ADD INDEX: MergeRequestDiff, merge_request_id
ADD INDEX: MergeRequest, assignee_id
ADD INDEX: MergeRequest, author_id
ADD INDEX: MergeRequest, created_at
ADD INDEX: MergeRequest, created_at
ADD INDEX: MergeRequest, deleted_at
ADD INDEX: MergeRequest, description
ADD INDEX: MergeRequest, milestone_id
ADD INDEX: MergeRequest, source_branch
ADD INDEX: MergeRequest, source_project_id
ADD INDEX: MergeRequest, target_branch
ADD INDEX: MergeRequest, target_project_id
ADD INDEX: MergeRequest, title
ADD INDEX: MergeRequest, title
ADD INDEX: Milestone, created_at
ADD INDEX: Milestone, description
ADD INDEX: Milestone, due_date
ADD INDEX: Milestone, project_id
ADD INDEX: Milestone, project_id
ADD INDEX: Milestone, title
ADD INDEX: Milestone, title
ADD INDEX: Namespace, created_at
ADD INDEX: Namespace, name
ADD INDEX: Namespace, name
ADD INDEX: Namespace, owner_id
ADD INDEX: Namespace, path
ADD INDEX: Namespace, path
ADD INDEX: Namespace, type
ADD INDEX: Namespace, visibility_level
read schema: class notes (Note) cannot be found!
INDEX:: TABLE notes - Note field author_id cannot be found
INDEX:: TABLE notes - Note field commit_id cannot be found
INDEX:: TABLE notes - Note field created_at cannot be found
INDEX:: TABLE notes - Note field created_at cannot be found
INDEX:: TABLE notes - Note field is_award cannot be found
INDEX:: TABLE notes - Note field line_code cannot be found
INDEX:: TABLE notes - Note field note cannot be found
INDEX:: TABLE notes - Note field noteable_id cannot be found
INDEX:: TABLE notes - Note field noteable_type cannot be found
INDEX:: TABLE notes - Note field project_id cannot be found
INDEX:: TABLE notes - Note field project_id cannot be found
INDEX:: TABLE notes - Note field updated_at cannot be found
ADD INDEX: NotificationSetting, source_id
ADD INDEX: NotificationSetting, user_id
ADD INDEX: OauthAccessGrant, token
ADD INDEX: OauthAccessToken, refresh_token
ADD INDEX: OauthAccessToken, resource_owner_id
ADD INDEX: OauthAccessToken, token
read schema: class oauth_applications (OauthApplication) cannot be found!
INDEX:: TABLE oauth_applications - OauthApplication field owner_id cannot be found
INDEX:: TABLE oauth_applications - OauthApplication field uid cannot be found
ADD INDEX: Project, builds_enabled
ADD INDEX: Project, builds_enabled
ADD INDEX: Project, ci_id
ADD INDEX: Project, created_at
ADD INDEX: Project, creator_id
ADD INDEX: Project, description
ADD INDEX: Project, last_activity_at
ADD INDEX: Project, last_repository_check_failed
ADD INDEX: Project, name
ADD INDEX: Project, namespace_id
ADD INDEX: Project, path
ADD INDEX: Project, path
ADD INDEX: Project, pending_delete
ADD INDEX: Project, runners_token
ADD INDEX: Project, star_count
ADD INDEX: Project, visibility_level
ADD INDEX: ProtectedBranch, project_id
ADD INDEX: Release, project_id
ADD INDEX: Release, project_id
ADD INDEX: SentNotification, reply_key
ADD INDEX: Service, category
ADD INDEX: Service, created_at
ADD INDEX: Service, default
ADD INDEX: Service, project_id
ADD INDEX: Service, template
ADD INDEX: Snippet, author_id
ADD INDEX: Snippet, created_at
ADD INDEX: Snippet, created_at
ADD INDEX: Snippet, file_name
ADD INDEX: Snippet, project_id
ADD INDEX: Snippet, title
ADD INDEX: Snippet, updated_at
ADD INDEX: Snippet, visibility_level
ADD INDEX: Subscription, subscribable_id
read schema: class taggings (Tagging) cannot be found!
INDEX:: TABLE taggings - Tagging field tag_id cannot be found
INDEX:: TABLE taggings - Tagging field taggable_id cannot be found
read schema: class tags (Tag) cannot be found!
INDEX:: TABLE tags - Tag field name cannot be found
ADD INDEX: Todo, author_id
ADD INDEX: Todo, commit_id
ADD INDEX: Todo, note_id
ADD INDEX: Todo, project_id
ADD INDEX: Todo, state
ADD INDEX: Todo, target_type
ADD INDEX: Todo, user_id
ADD INDEX: User, admin
ADD INDEX: User, authentication_token
ADD INDEX: User, confirmation_token
ADD INDEX: User, created_at
ADD INDEX: User, current_sign_in_at
ADD INDEX: User, email
ADD INDEX: User, email
ADD INDEX: User, name
ADD INDEX: User, name
ADD INDEX: User, reset_password_token
ADD INDEX: User, username
ADD INDEX: User, username
ADD INDEX: UsersStarProject, project_id
ADD INDEX: UsersStarProject, user_id
ADD INDEX: UsersStarProject, user_id
ADD INDEX: WebHook, created_at
ADD INDEX: WebHook, project_id
read_schema: 0.99724
ForkProjectsFinder.initialize, Found super ProjectsFinder
GroupProjectsFinder.initialize, Found super ProjectsFinder
DeferScriptTagHelper.javascript_include_tag, Found super 
LazyImageTagHelper.image_tag, Found super 
ApplicationSetting.default_project_visibility=, Found super ActiveRecord::Base
ApplicationSetting.default_snippet_visibility=, Found super ActiveRecord::Base
ApplicationSetting.default_group_visibility=, Found super ActiveRecord::Base
ApplicationSetting.restricted_visibility_levels=, Found super ActiveRecord::Base
ApplicationSetting.performance_bar_allowed_group_id=, Found super ActiveRecord::Base
ApplicationSetting.performance_bar_allowed_group_id=, Found super ActiveRecord::Base
ApplicationSetting.performance_bar_allowed_group_id=, Found super ActiveRecord::Base
AwardEmoji.downvotes, Found super ActiveRecord::Base
AwardEmoji.upvotes, Found super ActiveRecord::Base
Badge.order_created_at_asc, Found super ActiveRecord::Base
Blob.initialize, Found super SimpleDelegator
Blob.load_all_data!, Found super SimpleDelegator
Ci::Build.unstarted, Found super 
Ci::Build.ignore_failures, Found super 
Ci::Build.with_artifacts_archive, Found super 
Ci::Build.with_artifacts_stored_locally, Found super 
Ci::Build.with_artifacts_not_expired, Found super 
Ci::Build.with_expired_artifacts, Found super 
Ci::Build.last_month, Found super 
Ci::Build.manual_actions, Found super 
Ci::Build.ref_protected, Found super 
Ci::Build.matches_tag_ids, Found super 
Ci::Build.with_any_tags, Found super 
Ci::Build.serializable_hash, Found super 
Ci::GroupVariable.unprotected, Found super 
Ci::JobArtifact.with_files_stored_locally, Found super 
Ci::Pipeline.internal, Found super 
Ci::PipelineSchedule.active, Found super 
Ci::PipelineSchedule.inactive, Found super 
Ci::Runner.specific, Found super 
Ci::Runner.shared, Found super 
Ci::Runner.active, Found super 
Ci::Runner.paused, Found super 
Ci::Runner.online, Found super 
Ci::Runner.ordered, Found super 
Ci::Runner.owned_or_shared, Found super 
Ci::Runner.assignable_for, Found super 
Ci::Variable.unprotected, Found super 
Clusters::Cluster.enabled, Found super 
Clusters::Cluster.disabled, Found super 
Clusters::Cluster.user_provided, Found super 
Clusters::Cluster.gcp_provided, Found super 
Clusters::Cluster.gcp_installed, Found super 
Clusters::Cluster.default_environment, Found super 
Clusters::Concerns::ApplicationStatus.installed, Found super 
Commit.link_reference_pattern, Found super 
CommitRange.link_reference_pattern, Found super 
CommitStatus.failed_but_allowed, Found super ActiveRecord::Base
CommitStatus.exclude_ignored, Found super ActiveRecord::Base
CommitStatus.latest, Found super ActiveRecord::Base
CommitStatus.retried, Found super ActiveRecord::Base
CommitStatus.ordered, Found super ActiveRecord::Base
CommitStatus.latest_ordered, Found super ActiveRecord::Base
CommitStatus.retried_ordered, Found super ActiveRecord::Base
CommitStatus.after_stage, Found super ActiveRecord::Base
CreatedAtFilterable.created_before, Found super 
CreatedAtFilterable.created_after, Found super 
Expirable.expired, Found super 
HasStatus.created, Found super 
HasStatus.relevant, Found super 
HasStatus.running, Found super 
HasStatus.pending, Found super 
HasStatus.success, Found super 
HasStatus.failed, Found super 
HasStatus.canceled, Found super 
HasStatus.skipped, Found super 
HasStatus.manual, Found super 
HasStatus.alive, Found super 
HasStatus.created_or_pending, Found super 
HasStatus.running_or_pending, Found super 
HasStatus.finished, Found super 
HasStatus.failed_or_canceled, Found super 
HasStatus.cancelable, Found super 
HasVariable.order_key_asc, Found super 
HasVariable.key=, Found super 
Issuable::ClassMethods.authored, Found super 
Issuable::ClassMethods.recent, Found super 
Issuable::ClassMethods.of_projects, Found super 
Issuable::ClassMethods.of_milestones, Found super 
Issuable::ClassMethods.with_milestone, Found super 
Issuable::ClassMethods.opened, Found super 
Issuable::ClassMethods.only_opened, Found super 
Issuable::ClassMethods.closed, Found super 
Issuable::ClassMethods.left_joins_milestones, Found super 
Issuable::ClassMethods.order_milestone_due_desc, Found super 
Issuable::ClassMethods.order_milestone_due_asc, Found super 
Issuable::ClassMethods.without_label, Found super 
Issuable::ClassMethods.join_project, Found super 
Issuable::ClassMethods.inc_notes_with_associations, Found super 
Issuable::ClassMethods.references_project, Found super 
Issuable::ClassMethods.non_archived, Found super 
ManualInverseAssociation::ClassMethods.manual_inverse_association, Found super 
ProtectedRefAccess.master, Found super 
ProtectedRefAccess.developer, Found super 
ResolvableNote::ClassMethods.potentially_resolvable, Found super 
ResolvableNote::ClassMethods.resolvable, Found super 
ResolvableNote::ClassMethods.resolved, Found super 
ResolvableNote::ClassMethods.unresolved, Found super 
Routable.with_route, Found super 
Sortable::ClassMethods.order_id_desc, Found super 
Sortable::ClassMethods.order_id_asc, Found super 
Sortable::ClassMethods.order_created_desc, Found super 
Sortable::ClassMethods.order_created_asc, Found super 
Sortable::ClassMethods.order_updated_desc, Found super 
Sortable::ClassMethods.order_updated_asc, Found super 
Sortable::ClassMethods.order_name_asc, Found super 
Sortable::ClassMethods.order_name_desc, Found super 
UpdatedAtFilterable.updated_before, Found super 
UpdatedAtFilterable.updated_after, Found super 
DeployKey.in_projects, Found super Key
DeployKey.are_public, Found super Key
DeployKeysProject.without_project_deleted, Found super ActiveRecord::Base
DeployKeysProject.in_project, Found super ActiveRecord::Base
DeployKeysProject.with_write_access, Found super ActiveRecord::Base
DeployToken.active, Found super ActiveRecord::Base
Email.confirmed, Found super ActiveRecord::Base
Environment.available, Found super ActiveRecord::Base
Environment.stopped, Found super ActiveRecord::Base
Environment.order_by_last_deployed_at, Found super ActiveRecord::Base
Environment.in_review_folder, Found super ActiveRecord::Base
Event.recent, Found super ActiveRecord::Base
Event.code_push, Found super ActiveRecord::Base
Event.in_projects, Found super ActiveRecord::Base
Event.with_associations, Found super ActiveRecord::Base
Event.for_milestone_id, Found super ActiveRecord::Base
GpgKey.with_subkeys, Found super ActiveRecord::Base
GpgKey.key=, Found super ActiveRecord::Base
GroupMilestone.build_collection, Found super GlobalMilestone
GroupMilestone.build, Found super GlobalMilestone
Identity.with_provider, Found super ActiveRecord::Base
Identity.with_extern_uid, Found super ActiveRecord::Base
Issue.in_projects, Found super ActiveRecord::Base
Issue.assigned, Found super ActiveRecord::Base
Issue.unassigned, Found super ActiveRecord::Base
Issue.assigned_to, Found super ActiveRecord::Base
Issue.without_due_date, Found super ActiveRecord::Base
Issue.due_before, Found super ActiveRecord::Base
Issue.due_between, Found super ActiveRecord::Base
Issue.due_tomorrow, Found super ActiveRecord::Base
Issue.order_due_date_asc, Found super ActiveRecord::Base
Issue.order_due_date_desc, Found super ActiveRecord::Base
Issue.preload_associations, Found super ActiveRecord::Base
Issue.public_only, Found super ActiveRecord::Base
Issue.link_reference_pattern, Found super ActiveRecord::Base
Issue.as_json, Found super ActiveRecord::Base
Label.templates, Found super ActiveRecord::Base
Label.with_title, Found super ActiveRecord::Base
Label.with_lists_and_board, Found super ActiveRecord::Base
Label.on_group_boards, Found super ActiveRecord::Base
Label.on_project_boards, Found super ActiveRecord::Base
Label.as_json, Found super ActiveRecord::Base
LfsObject.with_files_stored_locally, Found super ActiveRecord::Base
List.destroyable, Found super ActiveRecord::Base
List.movable, Found super ActiveRecord::Base
List.as_json, Found super ActiveRecord::Base
Member.active, Found super ActiveRecord::Base
Member.active_without_invites_and_requests, Found super ActiveRecord::Base
Member.invite, Found super ActiveRecord::Base
Member.non_invite, Found super ActiveRecord::Base
Member.request, Found super ActiveRecord::Base
Member.non_request, Found super ActiveRecord::Base
Member.has_access, Found super ActiveRecord::Base
Member.guests, Found super ActiveRecord::Base
Member.reporters, Found super ActiveRecord::Base
Member.developers, Found super ActiveRecord::Base
Member.masters, Found super ActiveRecord::Base
Member.owners, Found super ActiveRecord::Base
Member.owners_and_masters, Found super ActiveRecord::Base
Member.order_name_asc, Found super ActiveRecord::Base
Member.order_name_desc, Found super ActiveRecord::Base
Member.order_recent_sign_in, Found super ActiveRecord::Base
Member.order_oldest_sign_in, Found super ActiveRecord::Base
ProjectMember.in_project, Found super Member
MergeRequest.by_source_or_target_branch, Found super ActiveRecord::Base
MergeRequest.by_milestone, Found super ActiveRecord::Base
MergeRequest.of_projects, Found super ActiveRecord::Base
MergeRequest.from_project, Found super ActiveRecord::Base
MergeRequest.merged, Found super ActiveRecord::Base
MergeRequest.closed_and_merged, Found super ActiveRecord::Base
MergeRequest.from_source_branches, Found super ActiveRecord::Base
MergeRequest.by_commit_sha, Found super ActiveRecord::Base
MergeRequest.join_project, Found super ActiveRecord::Base
MergeRequest.references_project, Found super ActiveRecord::Base
MergeRequest.assigned, Found super ActiveRecord::Base
MergeRequest.unassigned, Found super ActiveRecord::Base
MergeRequest.assigned_to, Found super ActiveRecord::Base
MergeRequest.link_reference_pattern, Found super ActiveRecord::Base
MergeRequestDiff.viewable, Found super ActiveRecord::Base
MergeRequestDiff.by_commit_sha, Found super ActiveRecord::Base
MergeRequestDiff.recent, Found super ActiveRecord::Base
Milestone.of_projects, Found super ActiveRecord::Base
Milestone.of_groups, Found super ActiveRecord::Base
Milestone.active, Found super ActiveRecord::Base
Milestone.closed, Found super ActiveRecord::Base
Milestone.for_projects, Found super ActiveRecord::Base
Milestone.for_projects_and_groups, Found super ActiveRecord::Base
Milestone.link_reference_pattern, Found super ActiveRecord::Base
Namespace.for_user, Found super ActiveRecord::Base
Namespace.with_statistics, Found super ActiveRecord::Base
Note::SpecialRole.for_commit_id, Found super ActiveRecord::Base
Note::SpecialRole.system, Found super ActiveRecord::Base
Note::SpecialRole.user, Found super ActiveRecord::Base
Note::SpecialRole.common, Found super ActiveRecord::Base
Note::SpecialRole.fresh, Found super ActiveRecord::Base
Note::SpecialRole.updated_after, Found super ActiveRecord::Base
Note::SpecialRole.inc_author_project, Found super ActiveRecord::Base
Note::SpecialRole.inc_author, Found super ActiveRecord::Base
Note::SpecialRole.inc_relations_for_view, Found super ActiveRecord::Base
Note::SpecialRole.diff_notes, Found super ActiveRecord::Base
Note::SpecialRole.new_diff_notes, Found super ActiveRecord::Base
Note::SpecialRole.non_diff_notes, Found super ActiveRecord::Base
Note::SpecialRole.with_associations, Found super ActiveRecord::Base
Note::SpecialRole.with_metadata, Found super ActiveRecord::Base
Note::SpecialRole.noteable_type=, Found super ActiveRecord::Base
Note::SpecialRole.discussion_id, Found super ActiveRecord::Base
NotificationSetting.for_groups, Found super ActiveRecord::Base
NotificationSetting.for_projects, Found super ActiveRecord::Base
OauthAccessToken.scopes=, Found super Doorkeeper::AccessToken
PagesDomain.enabled, Found super ActiveRecord::Base
PagesDomain.needs_verification, Found super ActiveRecord::Base
PersonalAccessToken.active, Found super ActiveRecord::Base
PersonalAccessToken.inactive, Found super ActiveRecord::Base
PersonalAccessToken.with_impersonation, Found super ActiveRecord::Base
PersonalAccessToken.without_impersonation, Found super ActiveRecord::Base
Project.pending_delete, Found super ActiveRecord::Base
Project.without_deleted, Found super ActiveRecord::Base
Project.with_storage_feature, Found super ActiveRecord::Base
Project.without_storage_feature, Found super ActiveRecord::Base
Project.with_unmigrated_storage, Found super ActiveRecord::Base
Project.sorted_by_activity, Found super ActiveRecord::Base
Project.sorted_by_stars, Found super ActiveRecord::Base
Project.in_namespace, Found super ActiveRecord::Base
Project.personal, Found super ActiveRecord::Base
Project.joined, Found super ActiveRecord::Base
Project.starred_by, Found super ActiveRecord::Base
Project.visible_to_user, Found super ActiveRecord::Base
Project.archived, Found super ActiveRecord::Base
Project.non_archived, Found super ActiveRecord::Base
Project.for_milestones, Found super ActiveRecord::Base
Project.with_push, Found super ActiveRecord::Base
Project.with_project_feature, Found super ActiveRecord::Base
Project.with_statistics, Found super ActiveRecord::Base
Project.with_shared_runners, Found super ActiveRecord::Base
Project.inside_path, Found super ActiveRecord::Base
Project.with_feature_enabled, Found super ActiveRecord::Base
Project.with_feature_access_level, Found super ActiveRecord::Base
Project.with_builds_enabled, Found super ActiveRecord::Base
Project.with_issues_enabled, Found super ActiveRecord::Base
Project.with_issues_available_for_user, Found super ActiveRecord::Base
Project.with_merge_requests_enabled, Found super ActiveRecord::Base
Project.active, Found super ActiveRecord::Base
Project.abandoned, Found super ActiveRecord::Base
Project.excluding_project, Found super ActiveRecord::Base
Project.import_started, Found super ActiveRecord::Base
Project.ci_config_path=, Found super ActiveRecord::Base
Project.import_url=, Found super ActiveRecord::Base
Project.import_url=, Found super ActiveRecord::Base
ProjectAutoDevops.enabled, Found super ActiveRecord::Base
ProjectAutoDevops.disabled, Found super ActiveRecord::Base
ProjectLabel.to_reference, Found super Label
MicrosoftTeamsService.custom_data, Found super ChatNotificationService
ProjectSnippet.fresh, Found super Snippet
ReadmeBlob.initialize, Found super SimpleDelegator
RedirectRoute.matching_path_and_descendants, Found super ActiveRecord::Base
Route.inside_path, Found super ActiveRecord::Base
SentNotification.position=, Found super ActiveRecord::Base
Service.visible, Found super ActiveRecord::Base
Service.issue_trackers, Found super ActiveRecord::Base
Service.external_wikis, Found super ActiveRecord::Base
Service.active, Found super ActiveRecord::Base
Service.without_defaults, Found super ActiveRecord::Base
Service.push_hooks, Found super ActiveRecord::Base
Service.tag_push_hooks, Found super ActiveRecord::Base
Service.issue_hooks, Found super ActiveRecord::Base
Service.confidential_issue_hooks, Found super ActiveRecord::Base
Service.merge_request_hooks, Found super ActiveRecord::Base
Service.note_hooks, Found super ActiveRecord::Base
Service.confidential_note_hooks, Found super ActiveRecord::Base
Service.job_hooks, Found super ActiveRecord::Base
Service.pipeline_hooks, Found super ActiveRecord::Base
Service.wiki_page_hooks, Found super ActiveRecord::Base
Service.external_issue_trackers, Found super ActiveRecord::Base
Service.deployment, Found super ActiveRecord::Base
Snippet.are_internal, Found super ActiveRecord::Base
Snippet.are_private, Found super ActiveRecord::Base
Snippet.are_public, Found super ActiveRecord::Base
Snippet.public_and_internal, Found super ActiveRecord::Base
Snippet.fresh, Found super ActiveRecord::Base
Snippet.link_reference_pattern, Found super ActiveRecord::Base
Todo.pending, Found super ActiveRecord::Base
Todo.done, Found super ActiveRecord::Base
Upload.with_files_stored_locally, Found super ActiveRecord::Base
User.admins, Found super ActiveRecord::Base
User.blocked, Found super ActiveRecord::Base
User.external, Found super ActiveRecord::Base
User.active, Found super ActiveRecord::Base
User.without_projects, Found super ActiveRecord::Base
User.todo_authors, Found super ActiveRecord::Base
User.order_recent_sign_in, Found super ActiveRecord::Base
User.order_oldest_sign_in, Found super ActiveRecord::Base
User.authorized_projects, Found super ActiveRecord::Base
AnalyticsGenericSerializer.represent, Found super BaseSerializer
WithPagination.represent, Found super 
WithPagination.represent, Found super 
ContainerTagsSerializer.represent, Found super BaseSerializer
EnvironmentSerializer.represent, Found super BaseSerializer
EnvironmentSerializer.represent, Found super BaseSerializer
GroupChildSerializer.represent, Found super BaseSerializer
IssueSerializer.represent, Found super BaseSerializer
MergeRequestSerializer.represent, Found super BaseSerializer
PipelineSerializer.represent, Found super BaseSerializer
PipelineSerializer.represent, Found super BaseSerializer
Boards::Issues::CreateService.initialize, Found super 
CreateBranchService.success, Found super BaseService
CreateReleaseService.success, Found super BaseService
DeleteBranchService.error, Found super BaseService
DeleteBranchService.success, Found super BaseService
MergeRequests::CreateFromIssueService.initialize, Found super 
MergeRequests::CreateFromIssueService.success, Found super 
Search::GroupService.initialize, Found super 
Tags::DestroyService.error, Found super 
Tags::DestroyService.success, Found super 
UpdateReleaseService.success, Found super BaseService
UpdateSnippetService.initialize, Found super BaseService
FileUploader.initialize, Found super GitlabUploader
GitlabUploader.initialize, Found super CarrierWave::Uploader::Base
UrlPlaceholderValidator.validate_each, Found super UrlValidator
WaitableWorker::ClassMethods.perform, Found super 
ObjectStorage::MigrateUploadsWorker::Upload.stored_locally, Found super ActiveRecord::Base
ObjectStorage::MigrateUploadsWorker::Upload.stored_remotely, Found super ActiveRecord::Base
ObjectStorage::MigrateUploadsWorker::Report::MigrationFailures.stored_locally, Found super 
ObjectStorage::MigrateUploadsWorker::Report::MigrationFailures.stored_remotely, Found super 
retrieve_func_calls: 1845.269378
CALLS: ["appearance_params", "new", "save", "admin_appearances_path", "admin_appearances_path", "form_errors", "label", "header_logo?", "header_logo_url", "persisted?", "header_logos_admin_appearances_path", "hidden_field", "file_field", "label", "text_field", "label", "text_area", "label", "logo?", "logo_url", "persisted?", "logo_admin_appearances_path", "hidden_field", "file_field", "label", "text_area", "submit", "persisted?", "preview_sign_in_admin_appearances_path", "new_project_path", "updated_at", "admin_root_path"]
CALLS: ["akismet_enabled?", "text", "owner", "name", "owner", "email", "akismet_client", "options", "options", "public_send", "logger", "error"]
CALLS: []
CALLS: ["", "merge"]
CALLS: ["author_id", "created_at", "update!"]
CALLS: ["version", "date"]
CALLS: ["persisted?", "version"]
CALLS: []
CALLS: ["raw_repository", "target_branch", "update", "merge", "with_cache_hooks"]
CALLS: ["change_state", "change_subscription", "change_todo", "toggle_award", "filter_params", "associations_before_update", "params", "label_ids", "process_label_ids", "label_ids", "labels_changing?", "params", "changed?", "params", "present?", "params", "current_user", "merge", "assign_attributes", "has_title_or_description_changed?", "now", "current_user", "assign_attributes", "before_update", "project", "update_project_counter_caches?", "save", "with_transaction_returning_status", "project", "current_user", "new", "execute", "no_touching", "handle_changes", "assignees", "to_a", "compact", "invalidate_cache_counts", "after_update", "current_user", "create_new_cross_references!", "execute_hooks", "update_project_counter_caches"]
CALLS: ["move", "update_markdown", "uploader", "record_upload", "uploader", "schedule_background_upload"]
CALLS: ["model", "file", "file", "exists?", "transaction_begin", "uploads", "upload_path", "where", "delete_all", "upload", "upload", "destroy!", "upload", "build_upload", "tap", "transaction_end", "transaction"]
CALLS: ["class", "to_s", "file", "size", "upload_path", "model", "mounted_as", "new"]
CALLS: ["success?", "upload", "id", "error", "message"]
CALLS: ["errors", "map", "join"]
CALLS: ["error", "nil?"]
CALLS: ["error", "nil?"]
CALLS: ["page", "version", "to_s"]
CALLS: ["version", "try"]
CALLS: ["user_combined_name", "action", "wiki_page_link", "project_link", "title"]
CALLS: ["create?", "remove?"]
CALLS: ["revision_after", "blank_ref?"]
CALLS: ["fetch"]
CALLS: ["revision_before", "blank_ref?"]
CALLS: ["fetch"]
CALLS: ["params", "params"]
CALLS: ["environment_options"]
CALLS: ["job", "options", "dig"]
CALLS: ["project", "builds", "params", "find"]
CALLS: ["pipeline", "builds", "name", "where"]
CALLS: ["actual_head_pipeline"]
CALLS: ["head_pipeline", "sha", "diff_head_sha", "head_pipeline"]
CALLS: ["build", "sha"]
CALLS: ["build", "group", "tap"]
CALLS: ["params", "present?", "params", "find_by", "current_user", "can?"]
CALLS: ["allowed?"]
CALLS: ["is_a?", "policy_for", "can?", "user_scope", "can?", "subject_scope", "can?"]
CALLS: ["includes"]
CALLS: ["includes"]
CALLS: ["active?", "policy_for"]
CALLS: ["revoked?", "expired?"]
CALLS: ["domain", "enabled_until", "domain", "enabled_until", "now"]
CALLS: ["pages_domains", "params", "to_s", "find_by!"]
CALLS: ["skip_cross_project_check"]
CALLS: ["should_skip_cross_project_check", "should_skip_cross_project_check"]
CALLS: ["execute", "find_by!"]
CALLS: ["x509", "new", "x509", "not_before", "x509", "not_after"]
CALLS: ["certificate", "certificate", "new"]
CALLS: ["action"]
CALLS: ["due_date", "due_date", "past?"]
CALLS: ["due_date", "first", "due_date", "all?", "first", "due_date"]
CALLS: ["expires?", "expires_at", "current"]
CALLS: ["read_attribute", "date"]
CALLS: ["due_date", "due_date", "past?", "due_date", "to_s", "due_date", "to_s"]
CALLS: ["expires_at", "present?"]
CALLS: ["cache", "cache_expires_in", "current_and_future_messages", "to_a", "fetch", "empty?", "select", "empty?", "cache", "delete", "select"]
CALLS: ["wiki", "delete_page"]
CALLS: ["wiki", "path", "title", "commit_details", "delete_page", "update_project_activity"]
CALLS: ["touch"]
CALLS: ["touch_noteable"]
CALLS: ["for_commit?", "association", "loaded?", "noteable", "scope", "select", "take", "touch"]
CALLS: ["params", "delete"]
CALLS: ["params", "delete"]
CALLS: ["params", "delete"]
CALLS: ["params", "params", "process_scope"]
CALLS: ["split", "split", "process_registry_access", "new", "process_repository_access"]
CALLS: ["valid?", "repository_project", "can_access?", "select", "present?", "ensure_container_repository!", "to_s"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["container_registry_enabled?", "build_can_pull?", "user_can_pull?", "deploy_token_can_pull?", "build_can_push?", "user_can_push?", "user_can_admin?"]
CALLS: ["has_authentication_ability?", "can_user?"]
CALLS: ["to_a", "include?"]
CALLS: ["current_user", "is_a?", "current_user", "can?"]
CALLS: ["authentication_abilities", "include?"]
CALLS: ["has_authentication_ability?", "project"]
CALLS: ["has_authentication_ability?", "current_user", "is_a?", "current_user", "has_access_to?", "current_user", "read_registry?"]
CALLS: ["active?", "project"]
CALLS: ["deploy_keys_project_for", "present?"]
CALLS: ["deploy_keys_projects", "find_by"]
CALLS: ["has_authentication_ability?", "can_user?"]
CALLS: ["has_authentication_ability?", "can_user?"]
CALLS: ["has_authentication_ability?", "project", "can_user?"]
CALLS: ["config", "registry", "enabled", "current_user", "can?"]
CALLS: ["config", "registry"]
CALLS: []
CALLS: ["", "where"]
CALLS: ["", "now", "where"]
CALLS: ["path", "full_access_token", "config", "registry", "api_url", "config", "registry", "host_port", "new"]
CALLS: ["flatten", "config", "registry", "key", "new", "issuer", "issuer", "audience", "expire_time", "token_expire_at", "map", "encoded"]
CALLS: ["now", "container_registry_token_expire_delay", "minutes"]
CALLS: ["", "where"]
CALLS: ["has_repository?", "include?", "create_from_path!"]
CALLS: ["build_from_path", "tap"]
CALLS: ["repository_project", "repository_name", "new"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["project_id", "target_id", "target_type"]
CALLS: ["id"]
CALLS: ["id"]
CALLS: ["project", "id"]
CALLS: []
CALLS: ["project"]
CALLS: ["teamcity_url", "build_type", "username", "password"]
CALLS: ["id"]
CALLS: []
CALLS: []
CALLS: []
CALLS: ["project_url", "issues_url", "new_issue_url"]
CALLS: ["url"]
CALLS: ["domain", "certificate", "present?", "domain", "domain"]
CALLS: ["url"]
CALLS: ["project", "web_url"]
CALLS: ["url_helpers", "project_wiki_url"]
CALLS: ["url_helpers"]
CALLS: ["url_helpers", "project_url"]
CALLS: ["url_helpers", "group_canonical_url"]
CALLS: ["project", "new_project_issue_url"]
CALLS: ["project", "project_issues_url"]
CALLS: ["project", "web_url"]
CALLS: ["api_key", "user_key", "priority"]
CALLS: ["index", "length"]
CALLS: ["params", "present?", "params", "find_by", "render_404", "current_user", "params", "new", "execute", "params", "page", "current_user", "dashboard_snippets_path", "explore_snippets_path", "redirect_to", "snippets_path", "current_user"]
CALLS: ["message", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["properties", "properties", "present?", "properties"]
CALLS: []
CALLS: ["s_"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["properties", "properties", "present?", "properties"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["properties", "properties", "present?", "properties"]
CALLS: []
CALLS: []
CALLS: ["properties", "properties", "present?", "properties"]
CALLS: []
CALLS: []
CALLS: []
CALLS: ["route", "route", "name", "present?", "route", "name", "persisted?", "update_route", "build_full_name"]
CALLS: ["read_only?", "prepare_route", "route", "save"]
CALLS: ["sync_profile_from_provider?", "synced?"]
CALLS: ["provider", "sync_profile_from_provider?"]
CALLS: ["gcp?", "provider_gcp"]
CALLS: []
CALLS: []
CALLS: ["config_for"]
CALLS: ["read_attribute"]
CALLS: ["route", "build_route", "route", "path", "build_full_path", "route", "name", "build_full_name"]
CALLS: ["parent", "path", "parent", "full_path", "path", "path"]
CALLS: ["project"]
CALLS: ["username"]
CALLS: ["full_path"]
CALLS: ["group", "project"]
CALLS: ["active?", "persisted?", "uncached_full_path", "full_path_key", "uncached_full_path"]
CALLS: ["class", "name", "id"]
CALLS: ["route", "route", "path", "present?", "route", "path", "persisted?", "update_route", "build_full_path"]
CALLS: ["parent_id", "project", "parent_id", "commit_by", "strong_memoize"]
CALLS: ["key?", "find_commit"]
CALLS: ["is_a?", "raw_repository", "find", "new"]
CALLS: ["repository", "commit_by"]
CALLS: ["repository"]
CALLS: ["full_path", "disk_path", "new"]
CALLS: ["project", "full_path"]
CALLS: ["disk_hash", "base_dir", "disk_hash"]
CALLS: ["options", "base_dir", "model_path_segment", "join"]
CALLS: ["class", "to_s", "underscore", "id", "to_s", "join"]
CALLS: ["id", "to_s", "join"]
CALLS: ["disk_path", "hashed_storage?", "disk_path", "full_path"]
CALLS: ["include?", "storage_version", "storage_version"]
CALLS: []
CALLS: ["options", "base_dir", "model_path_segment", "join"]
CALLS: ["model", "project_id", "to_s", "hexdigest"]
CALLS: ["file", "hexdigest"]
CALLS: ["file", "hexdigest"]
CALLS: ["file", "hexdigest"]
CALLS: ["hexdigest"]
CALLS: ["hexdigest"]
CALLS: ["options", "fetch"]
CALLS: ["class", "object_store", "base_dir"]
CALLS: ["model"]
CALLS: ["model", "store_serialization_column", "try"]
CALLS: ["serialization_column", "compact", "join", "to_sym"]
CALLS: ["class", "model", "class", "mounted_as", "serialization_column"]
CALLS: ["namespace", "full_path"]
CALLS: ["project", "id", "project", "id", "to_s", "hexdigest"]
CALLS: ["disk_hash", "disk_hash", "disk_hash"]
CALLS: ["project", "disk_path"]
CALLS: ["full_path", "disk_path", "new"]
CALLS: ["project", "repository"]
CALLS: []
CALLS: []
CALLS: ["wiki?", "project", "wiki", "repository", "project", "repository"]
CALLS: ["parse_repo_path"]
CALLS: ["params", "params", "parse"]
CALLS: ["flat_map", "flat_map"]
CALLS: ["project", "repository"]
CALLS: ["group", "project"]
CALLS: []
CALLS: []
CALLS: ["group?", "group", "project", "strong_memoize"]
CALLS: ["params", "present?"]
CALLS: ["instance_variable_defined?"]
CALLS: ["parent", "name", "parent", "human_name", "name", "name"]
CALLS: ["owner_name"]
CALLS: ["full_name"]
CALLS: ["full_title", "length", "safe_message", "safe_message", "split", "try"]
CALLS: ["safe_message", "blank?", "no_commit_message", "safe_message", "split", "first"]
CALLS: ["group", "group", "group_title", "namespace", "owner", "name", "simple_sanitize", "user_path", "link_to", "project_path", "avatar_url", "env", "test?", "name", "project_icon", "name", "simple_sanitize", "content_tag", "html_safe", "group", "breadcrumb_list_item", "html_safe"]
CALLS: ["helpers", "content_tag"]
CALLS: ["new", "email", "username", "execute"]
CALLS: ["avatar_in_git", "url_helpers", "project_avatar_url"]
CALLS: ["repository", "avatar"]
CALLS: ["file_on_head", "path", "allow_n_plus_1_calls"]
CALLS: ["tree", "blobs", "path", "type_of", "find"]
CALLS: ["select"]
CALLS: ["head_commit", "nil?", "head_tree", "head_commit", "sha", "new"]
CALLS: ["head_commit", "head_commit", "sha", "new"]
CALLS: ["root_ref", "commit"]
CALLS: ["params", "merge_request", "merge_commit_message", "merge_jid", "log_info", "repository", "current_user", "source", "merge_request", "merge", "merge_jid", "log_info", "merge_request", "update", "message", "message", "merge_request", "update"]
CALLS: ["diff_head_sha"]
CALLS: ["logger", "merge_request_info", "info"]
CALLS: ["merge_request", "to_reference"]
CALLS: ["class", "reference_prefix", "username"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["reference_prefix"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["class", "reference_prefix", "id", "project", "present?", "project", "to_reference"]
CALLS: ["to_reference"]
CALLS: ["cross_namespace_reference?", "full_path", "cross_project_reference?", "path"]
CALLS: ["is_a?"]
CALLS: ["namespace", "namespace", "namespace"]
CALLS: ["milestone_format_reference", "class", "reference_prefix", "project", "project", "to_reference"]
CALLS: ["include?", "group_milestone?", "name", "include?", "iid"]
CALLS: ["group_id", "present?"]
CALLS: ["to_s"]
CALLS: []
CALLS: ["class", "reference_prefix", "iid", "project", "to_reference"]
CALLS: ["label_format_reference", "class", "reference_prefix", "to_reference"]
CALLS: ["include?", "name", "include?", "id"]
CALLS: ["class", "reference_prefix", "iid", "project", "to_reference"]
CALLS: ["class", "reference_prefix", "full_path"]
CALLS: ["reference_link_text"]
CALLS: ["title"]
CALLS: ["id", "id", "id"]
CALLS: ["to_reference"]
CALLS: ["project", "to_reference", "ref_from", "notation", "ref_to", "present?", "class", "reference_prefix"]
CALLS: ["short_id", "commit_reference"]
CALLS: ["project", "to_reference", "present?", "class", "reference_prefix"]
CALLS: ["short_id"]
CALLS: []
CALLS: ["project", "to_reference", "present?", "class", "reference_prefix", "id", "id"]
CALLS: ["id", "commit_reference"]
CALLS: ["project", "current_user", "merge_request_params", "new", "execute"]
CALLS: ["project", "id", "branch_name", "project", "id", "ref", "issue", "milestone_id"]
CALLS: ["fetch"]
CALLS: ["build", "ref"]
CALLS: ["project", "default_branch"]
CALLS: ["wiki", "class", "default_ref"]
CALLS: ["repository", "exists?", "repository", "root_ref"]
CALLS: ["issue", "to_branch_name"]
CALLS: ["confidential?", "iid", "iid", "title", "parameterize"]
CALLS: ["noteable", "try"]
CALLS: ["current_user", "project", "id", "new", "find_by"]
CALLS: ["target_project", "issue_iid", "current_user", "get_issue"]
CALLS: ["merge_request", "target_project"]
CALLS: ["target_project", "external_issue_tracker", "source_branch", "target_project", "external_issue_reference_pattern", "match", "try", "source_branch", "match", "try", "strong_memoize"]
CALLS: ["has_external_issue_tracker", "nil?", "cache_has_external_issue_tracker", "has_external_issue_tracker?", "services", "external_issue_trackers", "first"]
CALLS: ["", "issue_trackers", "active", "without_defaults"]
CALLS: ["", "with_state", "non_internal"]
CALLS: ["internal_attributes", "map", "join", "where"]
CALLS: []
CALLS: ["", "where"]
CALLS: ["", "where"]
CALLS: ["", "where"]
CALLS: ["", "joins", "order"]
CALLS: ["nulls_last_order", "reorder", "order"]
CALLS: ["", "where"]
CALLS: ["", "with_state"]
CALLS: ["", "arel_table", "eq", "arel_table", "not_eq", "and", "arel_table", "eq", "new", "or", "left_join_users", "where", "where", "reorder"]
CALLS: ["arel_table", "arel_table", "join", "eq", "on", "join_sources", "joins"]
CALLS: ["", "where"]
CALLS: ["", "where"]
CALLS: ["", "where"]
CALLS: ["read_write?", "services", "external_issue_trackers", "any?", "update_column"]
CALLS: ["from_services"]
CALLS: ["external_issue_tracker", "class", "issues_enabled?", "reference_pattern"]
CALLS: ["reference_prefix", "escape"]
CALLS: ["reference_pattern", "reference_prefix", "escape"]
CALLS: []
CALLS: ["reference_prefix"]
CALLS: ["issues_access_level"]
CALLS: []
CALLS: ["reference_pattern", "reference_prefix", "escape"]
CALLS: ["reference_pattern", "reference_prefix", "escape"]
CALLS: ["reference_pattern", "reference_prefix", "escape"]
CALLS: ["reference_pattern", "reference_prefix", "escape"]
CALLS: ["reference_pattern"]
CALLS: ["reference_pattern"]
CALLS: ["__method__"]
CALLS: ["reference_pattern", "reference_pattern", "union"]
CALLS: ["find_union", "with_route"]
CALLS: ["", "includes"]
CALLS: ["length", "select", "map", "new", "table_name", "to_sql", "where", "first"]
CALLS: ["one?", "first", "find_union"]
CALLS: ["reference_pattern", "reference_prefix"]
CALLS: ["reference_pattern", "reference_prefix"]
CALLS: ["params", "presence"]
CALLS: ["issues_enabled?", "id", "new", "find_by", "external_issue_tracker", "new"]
CALLS: ["params", "ref_name"]
CALLS: ["push_event_payload", "ref"]
CALLS: ["issue?", "target"]
CALLS: ["note", "noteable"]
CALLS: ["note?", "target"]
CALLS: ["target", "is_a?"]
CALLS: ["snippet", "notes", "params", "find"]
CALLS: ["none"]
CALLS: ["project", "notes", "id", "for_commit_id"]
CALLS: ["", "where"]
CALLS: ["project", "notes", "sha", "for_commit_id"]
CALLS: ["params", "find_by"]
CALLS: ["params", "find_by"]
CALLS: ["snippets", "params", "find"]
CALLS: ["load_snippets", "html", "view_to_html_string", "json", "respond_to"]
CALLS: ["current_user", "user", "params", "new", "execute", "params", "page"]
CALLS: ["", "where"]
CALLS: ["ghost"]
CALLS: ["where", "bio", "name", "unique_internal"]
CALLS: ["first", "create_unique_internal"]
CALLS: ["minute", "to_i", "new", "try_obtain", "sleep", "first", "uncached", "present?", "new", "find_by_username", "string", "sprintf", "find_by_email", "string", "build", "new", "execute", "cancel"]
CALLS: ["merge_when_pipeline_succeeds?", "open?", "reset_merge_when_pipeline_succeeds", "cancel_merge_when_pipeline_succeeds", "success", "error"]
CALLS: ["success", "merge"]
CALLS: ["", "merge"]
CALLS: ["new", "create_note"]
CALLS: ["note", "merge", "create", "metadata?", "system_note_metadata", "metadata", "new"]
CALLS: ["request", "spammable", "request", "env", "request", "env", "to_s", "create_user_agent_detail"]
CALLS: ["options", "fetch"]
CALLS: ["", "where", "not"]
CALLS: ["class", "__method__"]
CALLS: ["params", "new", "params", "new", "verify_params!", "params", "access_levels", "access_levels", "new", "execute"]
CALLS: []
CALLS: ["ce_style_access_level"]
CALLS: ["params", "type"]
CALLS: ["object", "class", "name", "downcase"]
CALLS: ["params"]
CALLS: ["sym_options_with_owner"]
CALLS: ["sym_options"]
CALLS: ["metadata", "present?"]
CALLS: []
CALLS: ["handle_quick_actions_on_create", "filter_params", "params", "delete", "params", "current_user", "params", "process_label_ids", "params", "assign_attributes", "before_create", "params", "present?", "params", "create_issuable", "after_create", "execute_hooks", "assignees", "invalidate_cache_counts", "update_project_counter_caches"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["handle_wip_event"]
CALLS: ["params", "delete", "params", "title", "params", "wip_title", "wipless_title"]
CALLS: ["class", "title", "wip_title"]
CALLS: ["class", "title", "wipless_title"]
CALLS: ["todo_service", "current_user", "new_merge_request", "current_user", "cache_merge_request_closes_issues!", "update_merge_requests_head_pipeline"]
CALLS: ["new_issuable"]
CALLS: ["create_assignment_todo", "project", "create_mention_todos"]
CALLS: ["filter_directly_addressed_users", "attributes_for_todo", "create_todos", "filter_mentioned_users", "attributes_for_todo", "create_todos"]
CALLS: ["directly_addressed_users", "filter_todo_users"]
CALLS: ["reject_users_without_access", "uniq"]
CALLS: ["is_a?", "for_issue?", "for_merge_request?", "noteable", "is_a?", "to_ability_name", "select_users", "select_users"]
CALLS: ["to_sym", "can?", "select"]
CALLS: ["for_personal_snippet?", "noteable_type", "underscore"]
CALLS: ["noteable", "is_a?"]
CALLS: ["noteable_type"]
CALLS: ["noteable_type"]
CALLS: ["class", "to_ability_name"]
CALLS: ["all_references", "directly_addressed_users"]
CALLS: ["extractors", "extractors", "project", "new", "reset_memoized_values", "class", "mentionable_attrs", "__send__", "author", "skip_project_check?", "merge", "analyze", "each"]
CALLS: ["members", "current_user", "present", "each"]
CALLS: ["fetch_members"]
CALLS: ["project", "authorized_users", "where"]
CALLS: ["attributes", "new", "fabricate!"]
CALLS: ["attributes_before_markdown_cache", "delete", "cached_markdown_fields", "html_fields", "delete", "each"]
CALLS: ["markdown_fields", "html_field", "map"]
CALLS: []
CALLS: ["keys"]
CALLS: ["user", "keys", "order_id_desc", "name", "name", "blocked?", "internal?", "admin", "current_user", "can?", "impersonate_admin_user_path", "edit_admin_user_path", "admin_user_path", "nav_link", "projects_admin_user_path", "nav_link", "keys_admin_user_path", "nav_link", "admin_user_identities_path", "nav_link", "admin_user_impersonation_tokens_path", "nav_link", "admin_root_path"]
CALLS: ["class", "internal_attributes", "any?"]
CALLS: []
CALLS: ["", "reorder"]
CALLS: ["status"]
CALLS: ["all", "status_sql", "pluck", "first"]
CALLS: ["respond_to?", "exclude_ignored", "all", "respond_to?", "failed_but_allowed", "none", "select", "to_sql", "created", "select", "to_sql", "success", "select", "to_sql", "manual", "select", "to_sql", "pending", "select", "to_sql", "running", "select", "to_sql", "skipped", "select", "to_sql", "canceled", "select", "to_sql", "select", "to_sql", "presence"]
CALLS: ["", "with_state"]
CALLS: ["", "where"]
CALLS: ["", "where"]
CALLS: ["", "where"]
CALLS: ["", "where"]
CALLS: ["", "where"]
CALLS: ["", "where"]
CALLS: ["", "all_state_names", "where"]
CALLS: ["state_machines", "values", "flat_map", "map", "flat_map"]
CALLS: ["constants", "const_get", "map"]
CALLS: ["chart_values_file", "read"]
CALLS: ["root", "name"]
CALLS: ["options", "storage_path"]
CALLS: ["options", "storage_path"]
CALLS: ["options", "storage_path"]
CALLS: ["options", "storage_path", "join"]
CALLS: ["content_values", "to_yaml"]
CALLS: ["chart_values_file", "load_file", "specification", "deep_merge!"]
CALLS: ["gitlab_url", "ensure_runner", "token", "privileged"]
CALLS: ["url_helpers", "root_url"]
CALLS: ["runner", "create_and_assign_runner"]
CALLS: ["transaction_begin", "project", "runners", "create!", "id", "update!", "tap", "transaction_end", "transaction"]
CALLS: ["params", "find"]
CALLS: ["", "where"]
CALLS: ["key?", "project", "pipelines", "id", "latest_status_per_commit", "id"]
CALLS: ["project", "pipelines", "sha", "where"]
CALLS: ["arel_table", "arel_table", "alias", "eq", "eq", "and", "lt", "and", "eq", "and", "join", "on", "select", "where", "eq", "where", "join_sources", "joins", "where", "each_with_object"]
CALLS: ["all_pipelines", "response", "set_header", "new", "represent", "count", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["cache", "cache_key", "cache_options", "uncached_count", "fetch", "to_i"]
CALLS: ["user", "id"]
CALLS: ["id", "cache_key_name"]
CALLS: []
CALLS: []
CALLS: []
CALLS: ["raise"]
CALLS: ["raw?"]
CALLS: []
CALLS: []
CALLS: []
CALLS: ["relation_for_count", "count"]
CALLS: ["user", "keys"]
CALLS: ["merge_requests", "opened"]
CALLS: ["merge_requests", "map"]
CALLS: ["current_user", "project", "id", "new", "execute", "select"]
CALLS: ["milestoneish_ids", "of_milestones", "includes"]
CALLS: ["id"]
CALLS: ["milestones", "select"]
CALLS: ["id", "group", "group", "id", "new", "execute", "select"]
CALLS: ["milestones?", "project?", "project", "group", "id", "project", "id", "group", "group", "id", "params", "new", "execute", "none"]
CALLS: ["object", "is_a?"]
CALLS: ["params", "present?"]
CALLS: ["params", "present?"]
CALLS: ["params", "present?"]
CALLS: ["params", "present?"]
CALLS: ["search_params", "new", "execute"]
CALLS: ["group", "current_user", "group", "can?", "group", "params", "permit", "id", "id", "merge"]
CALLS: ["params", "permit", "group", "id", "merge"]
CALLS: ["milestones", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["search_params", "new", "execute", "group", "group_projects", "params", "build_collection", "params", "sort"]
CALLS: ["build_collection", "group", "each"]
CALLS: ["map", "new", "execute", "select", "group_by", "map", "where", "new", "map", "due_date", "sort_by"]
CALLS: ["group_by", "new", "map"]
CALLS: ["discussion_id", "group_by", "values", "build", "map"]
CALLS: ["discussion_class", "override_discussion_id", ""]
CALLS: ["discussion_id"]
CALLS: ["noteable"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["build_discussion_id", "join", "hexdigest"]
CALLS: ["base_discussion_id"]
CALLS: ["noteable_id", "commit_id", "noteable_type", "try"]
CALLS: ["commit_to", "commit_from"]
CALLS: ["base_discussion_id", "hex"]
CALLS: ["params", "params", "sort_by_attribute", "order_id_desc"]
CALLS: ["to_s", "order_recent_sign_in", "order_oldest_sign_in", "order_by"]
CALLS: ["", "nulls_last_order", "reorder"]
CALLS: ["", "nulls_last_order", "reorder"]
CALLS: ["", "left_join_users", "nulls_last_order", "reorder"]
CALLS: ["", "left_join_users", "nulls_last_order", "reorder"]
CALLS: ["to_s", "order_created_asc", "order_created_desc", "order_created_desc", "order_id_asc", "order_id_desc", "order_name_asc", "order_name_desc", "order_updated_asc", "order_updated_desc", "all"]
CALLS: ["", "left_join_users", "nulls_last_order", "reorder"]
CALLS: ["", "left_join_users", "nulls_last_order", "reorder"]
CALLS: ["", "reorder"]
CALLS: ["", "reorder"]
CALLS: ["", "reorder"]
CALLS: ["", "reorder"]
CALLS: ["", "reorder"]
CALLS: ["", "reorder"]
CALLS: ["", "reorder"]
CALLS: ["include?", "include?", "reverse!", "tap", "first", "public_send", "second", "public_send", "in?", "casecmp", "sort"]
CALLS: ["to_s", "order_by_labels_priority", "order_by", "order"]
CALLS: ["highest_label_priority", "to_sql", "table_name", "select", "nulls_last_order", "order", "order"]
CALLS: ["arel_table", "minimum", "select", "left_join_priorities", "joins", "where", "where", "reorder", "where", "where", "present?", "where", "not"]
CALLS: ["arel_table", "arel_table", "join", "eq", "on", "join_sources", "joins"]
CALLS: ["to_s", "reorder", "reorder", "reorder", "order_by"]
CALLS: ["to_s", "nulls_last_order", "reorder", "nulls_last_order", "reorder", "nulls_last_order", "reorder", "nulls_last_order", "reorder", "order_by"]
CALLS: ["to_s", "reorder", "reorder", "order_recent_sign_in", "order_oldest_sign_in", "order_created_desc", "order_created_asc", "order_by"]
CALLS: ["to_s", "order_due_date_asc", "order_due_date_asc", "order_due_date_desc"]
CALLS: ["", "reorder"]
CALLS: ["", "reorder"]
CALLS: ["reorder", "order_by"]
CALLS: ["to_s", "order_downvotes_desc", "order_labels_priority", "order_milestone_due_asc", "order_milestone_due_asc", "order_milestone_due_desc", "order_upvotes_desc", "order_due_date_and_labels_priority", "order_upvotes_desc", "order_by", "order"]
CALLS: ["name", "table_name", "table_name", "project_foreign_key", "highest_label_priority", "to_sql", "table_name", "join", "select", "arel_table", "group", "nulls_last_order", "reorder"]
CALLS: []
CALLS: []
CALLS: ["order_milestone_due_asc", "order_labels_priority", "nulls_last_order", "nulls_last_order", "reorder"]
CALLS: ["", "left_joins_milestones", "reorder"]
CALLS: ["", "table_name", "joins"]
CALLS: ["", "left_joins_milestones", "reorder"]
CALLS: ["order_votes_desc"]
CALLS: ["arel_table", "arel_table", "join", "eq", "name", "eq", "eq", "and", "and", "on", "join_sources", "joins", "group", "reorder"]
CALLS: ["order_votes_desc"]
CALLS: ["presence"]
CALLS: ["params", "present?", "params", "sort_by_attribute", "order_id_desc"]
CALLS: ["reorder"]
CALLS: ["params", "params", "label_names", "sort_by_attribute", "reorder"]
CALLS: ["labels", "order", "pluck"]
CALLS: ["current_user", "project", "id", "new", "execute", "select", "respond_to?", "labels", "pluck", "as_json", "find", "each"]
CALLS: ["new", "current_user", "enabled_keys", "represent", "available_project_keys", "represent", "available_public_keys", "represent"]
CALLS: ["are_public", "includes", "enabled_keys", "available_project_keys"]
CALLS: ["", "where"]
CALLS: ["", "where"]
CALLS: ["current_user", "project_deploy_keys", "includes", "enabled_keys"]
CALLS: ["unscoped", "authorized_projects", "pluck", "in_projects", "distinct"]
CALLS: ["", "where"]
CALLS: ["unscoped", "where", "select", "unscoped", "where", "select", "new", "to_sql", "where"]
CALLS: ["", "where"]
CALLS: ["", "except", "select", "where", "where", "recent"]
CALLS: ["", "order", "limit"]
CALLS: ["", "reorder"]
CALLS: ["", "reorder"]
CALLS: ["recent_branches"]
CALLS: ["", "joins", "where"]
CALLS: ["project", "deploy_keys", "includes"]
CALLS: ["are_public"]
CALLS: ["", "key?", "label", "board", "project", "as_json", "tap"]
CALLS: ["parent", "boards", "params", "find"]
CALLS: ["parent", "boards"]
CALLS: ["parent", "boards", "params", "find"]
CALLS: ["parent", "boards", "params", "delete", "find"]
CALLS: ["first"]
CALLS: ["params", "find"]
CALLS: ["", "try", "key?", "priority", "tap"]
CALLS: ["", "key?", "project", "url_helpers", "to_reference", "to_reference", "project", "project_issue_path", "project", "project_issue_path", "project", "toggle_subscription_project_issue_path", "merge!", "key?", "labels", "project", "as_json", "tap"]
CALLS: ["merge_when_pipeline_succeeds_active?", "mergeable?", "params", "diff_head_sha", "update", "params", "present?", "actual_head_pipeline", "actual_head_pipeline", "active?", "current_user", "merge_params", "new", "execute", "actual_head_pipeline", "success?", "current_user", "id", "params", "merge_async", "current_user", "id", "params", "merge_async"]
CALLS: ["mergeable_state?", "check_if_can_be_merged", "can_be_merged?", "should_be_rebased?"]
CALLS: ["project", "ff_merge_must_be_possible?", "ff_merge_possible?"]
CALLS: ["merge_requests_ff_only_enabled", "merge_requests_rebase_enabled"]
CALLS: ["project", "repository", "target_branch_sha", "diff_head_sha", "ancestor?"]
CALLS: ["nil?", "nil?", "raw_repository", "ancestor?"]
CALLS: ["target_branch_head", "try"]
CALLS: ["target_project", "repository", "target_branch_ref", "commit", "strong_memoize"]
CALLS: ["target_branch", "target_branch"]
CALLS: ["open?", "work_in_progress?", "broken?", "mergeable_ci_state?", "mergeable_discussions_state?"]
CALLS: ["project", "only_allow_merge_if_pipeline_succeeds?", "head_pipeline", "actual_head_pipeline", "success?", "actual_head_pipeline", "skipped?"]
CALLS: ["has_no_commits?", "branch_missing?", "cannot_be_merged?"]
CALLS: ["has_commits?"]
CALLS: ["merge_request_diff", "commits_count"]
CALLS: ["merge_request_diff_commits", "size"]
CALLS: ["persisted?", "merge_request_diff", "commits_count", "compare_commits", "compare_commits", "size"]
CALLS: ["empty?", "association", "loaded?", "latest_merge_request_diff"]
CALLS: ["source_branch_exists?", "target_branch_exists?"]
CALLS: ["target_branch", "blank?", "target_project", "target_branch", "commit"]
CALLS: ["source_branch", "blank?", "source_project", "source_branch", "commit"]
CALLS: ["merge_request", "source_project"]
CALLS: ["project"]
CALLS: ["target_project", "target_project", "repository", "target_branch", "branch_exists?"]
CALLS: ["raw_repository", "branch_names", "include?"]
CALLS: ["source_project", "source_project", "repository", "source_branch", "branch_exists?"]
CALLS: ["project", "only_allow_merge_if_all_discussions_are_resolved?", "discussions_to_be_resolved?"]
CALLS: ["discussions_resolvable?", "discussions_resolved?"]
CALLS: ["discussions_resolvable?", "resolvable_discussions", "none?"]
CALLS: ["select", "discussion_notes", "resolvable", "discussions"]
CALLS: ["all", "includes", "fresh", "build_collection"]
CALLS: ["", "order"]
CALLS: ["fresh", "order"]
CALLS: ["", "order"]
CALLS: ["", "potentially_resolvable", "user"]
CALLS: ["", "where", "where"]
CALLS: ["discussion_notes", "inc_relations_for_view", "discussions"]
CALLS: ["", "includes"]
CALLS: ["notes"]
CALLS: ["notes", "non_diff_notes"]
CALLS: ["", "where"]
CALLS: ["issuable", "notes", "inc_relations_for_view", "includes", "fresh", "prepare_notes_for_rendering", "current_user", "cross_reference_not_visible_for?", "reject", "issuable", "build_collection", "discussion_serializer", "represent"]
CALLS: ["issue", "merge_request"]
CALLS: ["cross_reference?", "has_referenced_mentionables?"]
CALLS: ["cross_reference_note_prefix"]
CALLS: []
CALLS: ["user_visible_reference_count", "present?", "user_visible_reference_count", "referenced_mentionables", "any?"]
CALLS: ["author", "matches_cross_reference_regex?", "all_references", "issues", "merge_requests", "commits", "local_reference", "reject"]
CALLS: ["current_user", "project", "id", "new", "execute", "select"]
CALLS: ["raw_repository", "length", "where", "present?", "decorate", "project", "new"]
CALLS: ["is_a?", "new"]
CALLS: ["is_a?", "new", "map"]
CALLS: ["nil?", "new"]
CALLS: ["commits_between", "sha", "sha", "message", "author_name", "author_email", "map"]
CALLS: ["raw_repository", "between", "present?", "decorate"]
CALLS: ["user", "name"]
CALLS: ["load_commits"]
CALLS: ["merge_request_diff_commits", "to_hash", "project", "from_hash", "map", "merge_request", "source_project", "merge_request", "source_branch", "new"]
CALLS: ["as_json", "diff", "merge", "with_indifferent_access"]
CALLS: ["binary?", "unpack", "first"]
CALLS: ["binary"]
CALLS: []
CALLS: ["binary"]
CALLS: ["st_diff", "respond_to?", "st_diff", "new"]
CALLS: ["apply_diff_view_cookie!", "load_all_data!", "path", "data", "highlight", "lines", "params", "new", "since", "to", "map", "bottom?", "length", "since", "join", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["snippet", "content"]
CALLS: ["text_data"]
CALLS: []
CALLS: []
CALLS: ["path"]
CALLS: ["project", "", "allow_n_plus_1_calls"]
CALLS: ["binary?", "encode"]
CALLS: ["length", "highlight"]
CALLS: ["params", "present?", "cookies", "permanent", "params", "delete"]
CALLS: ["public_send", "each_with_object"]
CALLS: ["repository", "raw", "new", "new"]
CALLS: ["trace_artifact_file", "trace_artifact_file", "raw_send_params", "raw_redirect_params", "send_upload", "build", "trace", "file?", "path", "raw", "read"]
CALLS: ["new"]
CALLS: ["build", "job_artifacts_trace", "file"]
CALLS: []
CALLS: []
CALLS: ["build", "trace", "id", "status", "complete?", "valid?", "limit", "params", "presence", "html_with_state", "to_h", "merge!", "json", "respond_to", "read", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["markdown_name", "secure_url", "markdown_link"]
CALLS: ["base_dir", "secret", "file", "filename", "join"]
CALLS: ["file", "filename"]
CALLS: ["model", "oid"]
CALLS: ["params", "to_s"]
CALLS: ["file", "filename"]
CALLS: ["class", "generate_secret"]
CALLS: ["hex"]
CALLS: ["file", "filename"]
CALLS: ["file", "filename", "join"]
CALLS: ["image_or_video?", "filename", "filename", "extname", "basename", "filename", "gsub"]
CALLS: ["image?", "video?"]
CALLS: ["extension_match?"]
CALLS: ["file", "file", "try", "file", "path", "extname", "delete", "downcase", "include?"]
CALLS: ["extension_match?"]
CALLS: ["extension", "include?"]
CALLS: ["extname", "downcase", "delete"]
CALLS: ["uploader", "uploader", "exists?", "uploader", "image_or_video?"]
CALLS: ["markdown_name", "secure_url", "image_or_video?", "dangerous?", "prepend"]
CALLS: ["extension_match?"]
CALLS: ["total_items_count", "total_items_count", "closed_items_count"]
CALLS: ["total_issues_count", "merge_requests", "size", "memoize_per_user"]
CALLS: ["memoized_users", "id"]
CALLS: ["new"]
CALLS: ["count_issues_by_state", "values", "sum"]
CALLS: ["issues_visible_to_user", "reorder", "group", "count", "memoize_per_user"]
CALLS: ["issues_finder_params", "new", "execute", "preload", "milestoneish_ids", "where", "memoize_per_user"]
CALLS: ["project_id"]
CALLS: ["group", "id"]
CALLS: []
CALLS: []
CALLS: ["count_issues_by_state", "merge_requests", "closed_and_merged", "size", "memoize_per_user"]
CALLS: ["", "with_states"]
CALLS: ["status", "include?"]
CALLS: ["inspect", "merge!", "file_storage?", "path", "class", "proxy_download_enabled?", "headers", "url", "send_url", "store", "url"]
CALLS: ["storage", "is_a?"]
CALLS: ["object_store", "storage_for"]
CALLS: ["class", "object_store_enabled?", "new", "new"]
CALLS: ["object_store_options", "enabled"]
CALLS: ["options", "object_store"]
CALLS: ["hashed_storage?", "new", "new"]
CALLS: ["object_store_options", "proxy_download"]
CALLS: ["storage"]
CALLS: ["class", "merge_request", "to_reference"]
CALLS: ["class", "name"]
CALLS: []
CALLS: ["class", "name", "id", "commit_id", "path"]
CALLS: ["project", "job", "raw_project_job_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project", "job", "params", "raw_project_job_artifacts_path"]
CALLS: ["params", "new", "build", "send_artifacts_entry"]
CALLS: ["headers", "send_artifacts_entry", "store"]
CALLS: ["params", "content", "convert_line_endings", "sanitized_file_name", "send_data"]
CALLS: ["file_name", "gsub"]
CALLS: ["to_s"]
CALLS: ["params", "gsub"]
CALLS: ["persisted?", "merge_request_diff", "commits", "compare_commits", "compare_commits", "reverse"]
CALLS: ["milestoneish_ids", "of_milestones", "includes"]
CALLS: ["project", "project", "default_issues_tracker?", "class", "mentionable_attrs", "__send__", "any?"]
CALLS: ["external_issue_tracker"]
CALLS: []
CALLS: ["commits", "project", "decorate"]
CALLS: ["commits", "with_pipeline_status", "prepare_commits_for_rendering", "view_to_html_string", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project", "pipelines", "map", "ref", "latest_status_per_commit", "ref", "id", "set_status_for_ref", "each"]
CALLS: []
CALLS: ["current_user", "render"]
CALLS: ["full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["issues", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["issuables_collection", "non_archived", "params", "page", "collection_type", "issuable_meta_data", "html", "atom", "respond_to"]
CALLS: ["", "where"]
CALLS: ["", "join_project", "where"]
CALLS: ["create_event"]
CALLS: ["transaction_begin", "event_service", "current_user", "reopen_mr", "merge_request_metrics_service", "reopen", "transaction_end", "transaction"]
CALLS: ["reopen_resource_email"]
CALLS: ["build_recipients", "mailer", "user", "id", "id", "id", "reason", "send", "deliver_later", "each"]
CALLS: []
CALLS: ["new", "notification_recipients"]
CALLS: ["build!", "filter!", "recipients", "reason", "priority", "sort_by", "uniq", "freeze"]
CALLS: ["delete", "build!"]
CALLS: []
CALLS: ["recipients", "select!"]
CALLS: ["note", "author", "add_participants", "note", "author", "note", "add_mentions", "note", "for_project_noteable?", "add_project_watchers", "add_custom_notifications", "add_subscribed_users"]
CALLS: ["target", "respond_to?", "target", "project", "subscribers", "add_recipients"]
CALLS: ["is_a?", "includes", "compact", "recipients", "make_recipient", "map", "concat"]
CALLS: ["project", "custom_action", "target", "acting_user", "new"]
CALLS: []
CALLS: ["note", "author"]
CALLS: ["action", "target", "class", "model_name", "name", "underscore", "to_sym"]
CALLS: ["new"]
CALLS: ["new"]
CALLS: ["new"]
CALLS: ["new"]
CALLS: ["skip_current_user", "current_user"]
CALLS: []
CALLS: ["current_user"]
CALLS: ["project", "custom_action", "target", "acting_user", "new"]
CALLS: ["is_a?", "includes", "compact", "recipients", "make_recipient", "map", "concat"]
CALLS: ["subscriptions_available", "where", "map"]
CALLS: ["arel_table", "subscriptions", "eq", "try", "eq", "or", "where"]
CALLS: ["project_watchers", "add_recipients"]
CALLS: ["project", "user_ids_notifiable_on", "project", "user_ids_notifiable_on", "project", "group", "user_ids_notifiable_on", "uniq", "user_ids_with_global_level_watch", "select_project_members_ids", "project", "group", "select_group_members_ids", "user_scope", "concat", "uniq", "where"]
CALLS: ["settings_with_global_level_of", "pluck"]
CALLS: ["levels", "where"]
CALLS: ["levels", "where"]
CALLS: ["user_ids_notifiable_on"]
CALLS: ["project", "user_ids_notifiable_on"]
CALLS: ["notification_settings", "levels", "where", "pluck"]
CALLS: ["settings_with_global_level_of", "pluck"]
CALLS: ["user_ids_notifiable_on"]
CALLS: ["project", "user_ids_notifiable_on"]
CALLS: ["notification_settings", "levels", "where", "pluck"]
CALLS: ["project", "user_ids_notifiable_on", "project", "user_ids_notifiable_on", "project", "group", "user_ids_notifiable_on", "uniq", "user_ids_with_global_level_watch", "select_project_members_ids", "project", "group", "select_group_members_ids", "user_scope", "concat", "uniq", "where"]
CALLS: ["project", "user_ids_notifiable_on", "project", "group", "user_ids_notifiable_on", "project", "user_ids_notifiable_on", "project", "group", "user_ids_notifiable_on", "concat", "custom_action", "user_ids_with_global_level_custom", "user_scope", "where", "add_recipients"]
CALLS: ["settings_with_global_level_of", "pluck"]
CALLS: ["settings_with_global_level_of", "pluck"]
CALLS: ["respond_to?", "mentioned_users", "add_recipients"]
CALLS: ["all_references", "users"]
CALLS: ["params", "current_user", "new", "execute", "new", "represent"]
CALLS: ["target", "respond_to?", "target", "participants", "add_recipients"]
CALLS: ["joins", "id", "where", "uniq"]
CALLS: ["milestones", "map", "flatten", "uniq"]
CALLS: ["all_participants"]
CALLS: ["raw_participants", "new"]
CALLS: ["author", "project", "new", "new", "empty?", "pop", "class", "participant_attrs", "respond_to?", "instance_exec", "__send__", "each", "reverse_each", "users", "merge", "to_a", "users_that_can_read_personal_snippet", "to_a", "project", "users_that_can_read_project"]
CALLS: ["allowed?", "select", "subject_scope"]
CALLS: ["allowed?", "select", "subject_scope"]
CALLS: ["milestone_redirect_path", "html", "participants", "tabs_json", "json", "respond_to"]
CALLS: ["project_milestone_path", "safe_title", "title", "group_milestone_path", "safe_title", "title", "dashboard_milestone_path"]
CALLS: ["title", "to_slug", "normalize", "to_s"]
CALLS: ["to_slug", "normalize", "to_s"]
CALLS: ["view_to_html_string"]
CALLS: ["target", "respond_to?", "target", "project", "subscribers", "add_recipients"]
CALLS: ["project_watchers", "add_recipients"]
CALLS: ["project", "user_ids_notifiable_on", "project", "group", "user_ids_notifiable_on", "project", "user_ids_notifiable_on", "project", "group", "user_ids_notifiable_on", "concat", "custom_action", "user_ids_with_global_level_custom", "user_scope", "where", "add_recipients"]
CALLS: ["respond_to?", "mentioned_users", "add_recipients"]
CALLS: ["target", "respond_to?", "target", "participants", "add_recipients"]
CALLS: ["for_personal_snippet?"]
CALLS: ["current_user", "add_participants", "add_project_watchers", "add_custom_notifications", "custom_action", "previous_assignee", "add_recipients", "target", "assignee", "add_recipients", "previous_assignee", "add_recipients", "target", "assignees", "add_recipients", "add_subscribed_users", "custom_action", "include?", "current_user", "target", "add_mentions", "custom_action", "target", "assignees", "target", "assignee", "add_recipients", "add_labels_subscribers"]
CALLS: ["target", "respond_to?", "target", "labels", "project", "subscribers", "add_recipients", "each"]
CALLS: ["target", "respond_to?", "target", "labels", "project", "subscribers", "add_recipients", "each"]
CALLS: ["assignee_id?", "params", "find_by", "assignee_username?", "params", "find_by"]
CALLS: ["params", "present?", "params"]
CALLS: ["params", "present?", "params"]
CALLS: []
CALLS: ["recipients", "select!"]
CALLS: []
CALLS: ["build!", "filter!", "recipients", "reason", "priority", "sort_by", "uniq", "freeze"]
CALLS: ["metrics", "new"]
CALLS: ["merge_requests", "where"]
CALLS: ["root", "read", "parse"]
CALLS: ["has_metrics?", "prometheus_adapter", "query"]
CALLS: ["service_prometheus_adapter", "can_query?", "service_prometheus_adapter", "cluster_prometheus_adapter"]
CALLS: ["deployment_platform", "respond_to?", "deployment_platform", "cluster", "application_prometheus", "installed?", "application_prometheus"]
CALLS: ["provider", "cluster"]
CALLS: ["params"]
CALLS: ["app", "cluster"]
CALLS: ["project", "name", "deployment_platform"]
CALLS: ["find_deployment_platform"]
CALLS: ["find_cluster_platform_kubernetes", "find_kubernetes_service_integration", "build_cluster_and_deployment_platform"]
CALLS: ["kubernetes_service_template", "cluster_attributes_from_service_template", "create", "persisted?", "platform_kubernetes"]
CALLS: ["platform_kubernetes_attributes_from_service_template"]
CALLS: ["kubernetes_service_template", "api_url", "kubernetes_service_template", "ca_pem", "kubernetes_service_template", "token", "kubernetes_service_template", "namespace"]
CALLS: ["active", "find_by_template"]
CALLS: ["find_by"]
CALLS: ["services", "deployment", "reorder", "find_by"]
CALLS: ["", "where"]
CALLS: ["environment", "deployments", "params", "find_by"]
CALLS: ["job", "persisted_environment"]
CALLS: ["has_environment?", "expanded_environment_name", "project", "find_by", "strong_memoize"]
CALLS: ["environment", "present?"]
CALLS: ["has_environment?", "environment", "simple_variables", "expand", "strong_memoize"]
CALLS: ["scoped_variables", "to_runner_variables", "strong_memoize"]
CALLS: ["expanded_environment_name", "new", "predefined_variables", "concat", "project", "predefined_variables", "concat", "pipeline", "predefined_variables", "concat", "runner", "runner", "predefined_variables", "concat", "project", "deployment_variables", "concat", "yaml_variables", "concat", "user_variables", "concat", "secret_group_variables", "concat", "secret_project_variables", "concat", "trigger_request", "trigger_request", "user_variables", "concat", "pipeline", "variables", "concat", "pipeline", "pipeline_schedule", "pipeline", "pipeline_schedule", "job_variables", "concat", "tap"]
CALLS: ["params", "to_h", "map"]
CALLS: ["kubeconfig", "dump", "new", "api_url", "append", "token", "append", "actual_namespace", "append", "append", "ca_pem", "present?", "ca_pem", "append", "ca_pem", "append", "tap"]
CALLS: ["api_url", "actual_namespace", "token", "ca_pem", "to_kubeconfig"]
CALLS: ["namespace", "present?", "namespace", "default_namespace"]
CALLS: ["project", "project", "path", "project", "id", "downcase", "gsub", "gsub"]
CALLS: ["project", "project", "path", "project", "id", "downcase", "gsub", "gsub"]
CALLS: ["api_url", "actual_namespace", "token", "ca_pem", "to_kubeconfig"]
CALLS: ["namespace", "present?", "namespace", "default_namespace"]
CALLS: []
CALLS: ["new", "has_domain?", "domain", "presence", "instance_domain", "append", "tap"]
CALLS: ["domain", "present?", "instance_domain", "present?"]
CALLS: ["auto_devops_domain"]
CALLS: ["deployment_platform", "predefined_variables"]
CALLS: ["visibility_level", "string_level", "new", "id", "to_s", "append", "path", "append", "full_path", "append", "full_path_slug", "append", "namespace", "full_path", "append", "web_url", "append", "append", "container_registry_variables", "concat", "auto_devops_variables", "concat"]
CALLS: ["auto_devops_enabled?", "auto_devops", "build_auto_devops", "predefined_variables"]
CALLS: ["auto_devops", "enabled", "nil?", "auto_devops_enabled?", "auto_devops", "enabled?"]
CALLS: ["pages_domain_verification_enabled?", "enabled_until", "present?"]
CALLS: ["new", "config", "registry", "enabled", "config", "registry", "host_port", "append", "container_registry_enabled?", "container_registry_url", "append", "tap"]
CALLS: ["config", "registry", "enabled", "config", "registry", "host_port", "full_path", "downcase"]
CALLS: ["full_path", "to_s", "slugify"]
CALLS: ["new", "name", "append", "slug", "append"]
CALLS: ["present?", "wiki", "wiki", "title", "format", "preview_slug"]
CALLS: []
CALLS: ["format"]
CALLS: ["format"]
CALLS: ["format"]
CALLS: ["presence", "generate_slug"]
CALLS: ["name", "to_s", "downcase", "gsub", "cover?", "gsub!", "end_with?", "chop!", "name", "end_with?", "random_suffix", "slug"]
CALLS: ["sample", "map", "join"]
CALLS: ["kubeconfig", "dump", "new", "api_url", "append", "token", "append", "actual_namespace", "append", "append", "ca_pem", "present?", "ca_pem", "append", "ca_pem", "append", "tap"]
CALLS: ["variables", "variables", "map"]
CALLS: ["new", "id", "to_s", "append", "description", "append", "tag_list", "to_s", "append"]
CALLS: ["tag_list", "tag_path", "link_to", "each", "html_safe"]
CALLS: []
CALLS: ["variables", "map"]
CALLS: ["new", "id", "to_s", "append", "ci_yaml_file_path", "append", "source", "to_s", "append"]
CALLS: ["project", "ci_config_path", "blank?", "project", "ci_config_path"]
CALLS: ["new", "append", "append", "project", "licensed_features", "join", "append", "append", "append", "append", "name", "append", "stage", "append", "sha", "append", "ref", "append", "ref_slug", "append", "tag?", "ref", "append", "trigger_request", "append", "action?", "append", "legacy_variables", "concat", "tap"]
CALLS: []
CALLS: ["new", "sha", "append", "before_sha", "append", "ref", "append", "ref_slug", "append", "name", "append", "stage", "append", "tag?", "ref", "append", "trigger_request", "append", "action?", "append", "tap"]
CALLS: ["pipeline", "before_sha"]
CALLS: ["ref", "to_s", "slugify"]
CALLS: ["when"]
CALLS: ["read_attribute", "build_attributes_from_config"]
CALLS: ["pipeline", "config_processor", "pipeline", "config_processor", "name", "build_attributes"]
CALLS: ["ci_yaml_file", "ci_yaml_file", "new", "yaml_errors", "message", "yaml_errors"]
CALLS: ["auto_devops_source?", "implied_ci_yaml_file", "ci_yaml_from_repo", "yaml_errors", "sha"]
CALLS: ["project", "project", "auto_devops_enabled?", "find", "content"]
CALLS: ["project", "sha", "project", "repository", "sha", "ci_yaml_file_path", "gitlab_ci_yml_for"]
CALLS: ["blob_data_at"]
CALLS: ["blob_at", "load_all_data!", "data"]
CALLS: ["raw_repository", "blob_at", "project", "decorate"]
CALLS: ["action", "present?", "to_action_id"]
CALLS: ["action", "to_sym", "key"]
CALLS: ["pipeline", "params", "legacy_stage", "not_found", "view_to_html_string", "json", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["new", "statuses_count", "zero?"]
CALLS: ["statuses", "count"]
CALLS: ["pipeline", "statuses", "name", "where"]
CALLS: ["render_404"]
CALLS: ["persisted_environment", "project", "ref", "secret_variables_for"]
CALLS: ["protected_for?", "variables", "variables", "unprotected"]
CALLS: ["repository", "branch_exists?", "protected?", "repository", "tag_exists?", "protected?"]
CALLS: ["raw_repository", "tag_names", "include?"]
CALLS: ["protected_tags", "select", "matching", "present?"]
CALLS: ["name", "matches?", "select"]
CALLS: ["name", "blank?", "exact_match?", "wildcard_match?"]
CALLS: ["wildcard?", "wildcard_regex"]
CALLS: ["name", "gsub", "quote", "gsub"]
CALLS: ["name", "name", "include?"]
CALLS: ["name"]
CALLS: ["matching"]
CALLS: ["empty_repo?", "default_branch_protected?", "protected_branches", "select", "matching", "present?"]
CALLS: ["default_branch_protection", "default_branch_protection"]
CALLS: ["repository", "empty?"]
CALLS: ["", "where"]
CALLS: ["", "where"]
CALLS: ["ancestors", "where", "protected_for?", "unprotected", "group_by", "reverse", "id", "map", "compact", "flatten"]
CALLS: ["parent_id", "class", "none", "class", "parent_id", "where", "new", "base_and_ancestors"]
CALLS: ["project", "group", "project", "group", "ref", "project", "secret_variables_for"]
CALLS: ["new", "user", "blank?", "user", "id", "to_s", "append", "user", "email", "append", "user", "username", "append", "user", "name", "append", "tap"]
CALLS: ["read_attribute", "build_attributes_from_config"]
CALLS: ["new", "persisted_variables", "concat", "scoped_variables", "concat", "persisted_environment_variables", "concat", "to_runner_variables"]
CALLS: ["new", "persisted?", "persisted_environment", "present?", "persisted_environment", "predefined_variables", "concat", "environment_url", "environment_url", "append", "tap"]
CALLS: ["environment_options"]
CALLS: ["options", "dig", "persisted_environment", "external_url"]
CALLS: ["external_link?", "full_path", "partition", "last", "id", "path", "join", "pages_group_url"]
CALLS: ["config", "pages", "url", "pages_subdomain", "sub", "downcase"]
CALLS: ["wiki", "pages", "new", "map"]
CALLS: ["full_path", "partition", "first"]
CALLS: ["pages", "paginate_array", "params", "page", "group_by_directory", "get_project_wiki_path", "s_", "s_", "_", "container_class", "s_", "project_wikis_git_access_path", "icon", "_", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["blank?", "directory", "slug", "sort_by", "group_by", "present?", "new", "map", "flatten"]
CALLS: ["wiki", "slug", "page_title_and_dir", "last", "to_s"]
CALLS: ["split", "pop", "join"]
CALLS: ["fluid_layout", "blank_container"]
CALLS: ["nil?"]
CALLS: ["current_user", "current_user", "layout"]
CALLS: ["keys", "empty?", "include?", "fa_stacked_icon", "fa_icon"]
CALLS: ["external_wiki", "properties", "project_wiki_path"]
CALLS: ["has_external_wiki", "nil?", "cache_has_external_wiki", "has_external_wiki", "services", "external_wikis", "first"]
CALLS: ["", "where", "active"]
CALLS: ["read_write?", "services", "external_wikis", "any?", "update_column"]
CALLS: ["pages_config", "enabled", "pages_config", "artifacts_server", "name", "extname", "include?", "project", "public?"]
CALLS: ["pages_domains_config", "project", "pages_https_only?"]
CALLS: ["enabled_pages_domains", "domain", "certificate", "key", "project", "pages_https_only?", "https?", "map"]
CALLS: ["pages_domain_verification_enabled?", "project", "pages_domains", "enabled", "project", "pages_domains"]
CALLS: ["certificate", "present?"]
CALLS: ["config", "pages", "external_https"]
CALLS: ["config", "pages"]
CALLS: ["new", "persisted?", "id", "to_s", "append", "token", "append", "id", "to_s", "append", "token", "append", "append", "token", "append", "repo_url", "append", "tap"]
CALLS: ["ensure_token!", "project", "http_url_to_repo", "sub"]
CALLS: ["config", "gitlab", "url", "full_path"]
CALLS: ["web_url"]
CALLS: ["project", "environments", "params", "find"]
CALLS: ["project", "current_user", "new", "execute"]
CALLS: ["builds", "where", "not", "success", "pluck", "uniq"]
CALLS: ["project", "environments", "params", "find"]
CALLS: ["clusters", "enabled", "default_environment", "last", "platform_kubernetes"]
CALLS: ["", "where"]
CALLS: ["project", "clusters", "params", "find", "current_user", "present"]
CALLS: ["project", "clusters", "params", "find", "render_404"]
CALLS: ["project", "find_or_initialize_service"]
CALLS: ["find_or_initialize_services", "to_param", "find"]
CALLS: ["username"]
CALLS: []
CALLS: ["reply_key"]
CALLS: ["hex"]
CALLS: ["reply_key"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["where", "available_services_names", "services", "find_service", "find_service", "nil?", "public_send", "id", "build_from_template", "map"]
CALLS: ["dup", "valid?", "active", "template", "project_id"]
CALLS: ["env", "development?", "sort_by"]
CALLS: ["to_param", "find"]
CALLS: ["persisted?", "errors", "include?", "path_was", "path"]
CALLS: ["domain"]
CALLS: ["full_path"]
CALLS: ["iid", "to_s"]
CALLS: ["sha_start", "sha_to"]
CALLS: ["sha_from", "exclude_start?", "sha_from", "sha_from"]
CALLS: ["id"]
CALLS: []
CALLS: ["id"]
CALLS: ["name"]
CALLS: []
CALLS: ["prometheus_client", "present?"]
CALLS: ["api_url", "manual_configuration?", "active?", "api_url", "new"]
CALLS: []
CALLS: ["kube_client", "kube_client", "service_name", "service_port", "proxy_url", "kube_client", "rest_client", "options", "kube_client", "headers", "merge", "new"]
CALLS: ["cluster", "kubeclient"]
CALLS: ["cluster", "kubeclient"]
CALLS: ["build_kubeclient!"]
CALLS: ["api_url", "username", "password", "join_api_url", "username", "password", "kubeclient_ssl_options", "new"]
CALLS: ["ca_pem", "present?", "new", "ca_pem", "new", "add_cert"]
CALLS: ["api_url", "parse", "path", "sub", "path", "join", "to_s"]
CALLS: ["api_url", "parse", "path", "sub", "path", "join", "to_s"]
CALLS: ["ca_pem", "present?", "new", "ca_pem", "new", "add_cert"]
CALLS: ["api_url", "parse", "path", "sub", "path", "join", "to_s"]
CALLS: ["ca_pem", "present?", "new", "ca_pem", "new", "add_cert"]
CALLS: ["api_url", "actual_namespace", "token", "join_api_url", "kubeclient_auth_options", "kubeclient_ssl_options", "new"]
CALLS: ["token"]
CALLS: ["token"]
CALLS: ["api_url", "actual_namespace", "username", "password", "token", "join_api_url", "kubeclient_auth_options", "kubeclient_ssl_options", "new"]
CALLS: ["build_kubeclient!"]
CALLS: ["kubernetes?", "platform_kubernetes", "kubeclient"]
CALLS: []
CALLS: []
CALLS: ["opened", "public_only", "where"]
CALLS: ["", "where"]
CALLS: ["where"]
CALLS: ["raise"]
CALLS: []
CALLS: ["project", "deployment_platform", "new", "prometheus_adapter"]
CALLS: ["prometheus_adapter", "can_query?", "available?", "last_deployment", "present?"]
CALLS: ["current_version"]
CALLS: ["current_version"]
CALLS: ["environment", "prometheus_adapter"]
CALLS: ["prometheus_adapter", "can_query?"]
CALLS: ["can_query?", "to_s", "classify", "const_get", "map!", "name", "method", "with_reactive_cache"]
CALLS: ["cache", "full_reactive_cache_key", "read", "present?", "within_reactive_cache_lifetime", "cache", "alive_reactive_cache_key", "class", "reactive_cache_lifetime", "write", "class", "id", "perform_async"]
CALLS: ["cache", "alive_reactive_cache_key", "read"]
CALLS: ["full_reactive_cache_key"]
CALLS: ["class", "reactive_cache_key", "respond_to?", "call", "flatten", "join"]
CALLS: ["project", "new", "prometheus_adapter"]
CALLS: ["has_metrics?", "prometheus_adapter", "query", "created_at", "to_i", "merge"]
CALLS: ["environment", "metrics", "html", "any?", "json", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["deployment", "has_metrics?", "render_404", "deployment", "metrics", "any?", "render_404", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["update!"]
CALLS: ["create_record_event"]
CALLS: ["project", "id", "class", "name", "create_event"]
CALLS: ["new"]
CALLS: ["new"]
CALLS: ["transaction_begin", "current_user", "create_merge_event", "merge_request_metrics_service", "merge", "transaction_end", "transaction"]
CALLS: ["new", "merge_mr"]
CALLS: ["merge_when_pipeline_succeeds?", "close_resource_email"]
CALLS: ["build_recipients", "mailer", "user", "id", "id", "id", "reason", "send", "deliver_later", "each"]
CALLS: ["create_record_event"]
CALLS: ["transaction_begin", "event_service", "current_user", "close_mr", "merge_request_metrics_service", "close", "transaction_end", "transaction"]
CALLS: ["close_resource_email"]
CALLS: ["todo_service", "merge_request_build_retried", "commit_status_merge_requests"]
CALLS: ["author", "mark_pending_todos_as_done", "merge_when_pipeline_succeeds?", "merge_user", "mark_pending_todos_as_done"]
CALLS: ["attributes_for_target", "pending_todos", "update_all", "update_todos_count_cache"]
CALLS: ["todos", "pending", "slice", "where"]
CALLS: ["project", "id", "id", "class", "name", "is_a?", "id", "merge!"]
CALLS: ["todos_done_count", "todos_pending_count"]
CALLS: ["cache", "id", "minutes", "new", "execute", "count", "fetch"]
CALLS: ["cache", "id", "minutes", "new", "execute", "count", "fetch"]
CALLS: ["current_user", "todos_done_count"]
CALLS: ["current_user", "todos_pending_count"]
CALLS: ["ref", "merge_requests_for", "head_pipeline", "sha", "sha", "each"]
CALLS: ["with_state", "id", "where", "preload", "select"]
CALLS: ["author_id", "created_at", "update!"]
CALLS: ["create_record_event"]
CALLS: ["id", "reverse_merge!", "create!"]
CALLS: ["", "joins"]
CALLS: ["", "joins"]
CALLS: ["finder"]
CALLS: ["current_user", "merge", "new"]
CALLS: ["finder_type", "issuable_finder_for", "strong_memoize"]
CALLS: []
CALLS: []
CALLS: []
CALLS: ["action_name"]
CALLS: ["action"]
CALLS: ["push?", "push_action_name", "closed?", "merged?", "joined?", "left?", "expired?", "destroyed?", "commented?", "created_project?", "created_project_action_name"]
CALLS: []
CALLS: ["state"]
CALLS: ["milestones", "state", "each"]
CALLS: ["project", "external_import?"]
CALLS: ["import_url", "present?"]
CALLS: ["import_data", "present?", "import_data", "credentials", "new", "full_url"]
CALLS: ["has_importer?", "project", "gitlab_project_import?", "project", "repository", "expire_content_cache", "importer", "execute"]
CALLS: ["importer_class", "project", "new"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["project", "import_type", "importer"]
CALLS: ["importer_names", "project", "import_type", "include?"]
CALLS: ["expire_tags_cache", "expire_branches_cache", "expire_root_ref_cache", "expire_emptiness_caches", "expire_exists_cache", "expire_statistics_caches"]
CALLS: ["expire_method_caches"]
CALLS: ["empty?", "expire_method_caches", "raw_repository", "expire_has_local_branches_cache"]
CALLS: ["expire_method_caches"]
CALLS: ["expire_method_caches"]
CALLS: ["expire_method_caches"]
CALLS: ["expire_method_caches"]
CALLS: ["import_type"]
CALLS: ["new", "create!"]
CALLS: ["session", "session", "session", "session"]
CALLS: ["new_ref?", "rm_ref?"]
CALLS: ["push_event_payload", "removed?"]
CALLS: ["push_event_payload", "created?"]
CALLS: ["action"]
CALLS: ["status_name"]
CALLS: ["provider", "provider", "status_name"]
CALLS: ["created?", "target", "target_type", "nil?"]
CALLS: ["action"]
CALLS: ["action"]
CALLS: ["action"]
CALLS: ["action"]
CALLS: ["action"]
CALLS: ["action"]
CALLS: []
CALLS: ["action_name"]
CALLS: ["current_user", "filter_params", "new"]
CALLS: ["user", "merge", "new"]
CALLS: ["params", "find"]
CALLS: ["finder", "execute", "preload_for_collection", "preload"]
CALLS: ["collection_type"]
CALLS: ["system?", "force_cross_reference_regex_check?", "matches_cross_reference_regex?", "note", "cross_reference?"]
CALLS: ["system?", "system_note_metadata", "action", "include?"]
CALLS: ["params", "current_user", "id", "new", "params", "find", "current_user", "id", "new", "params", "find"]
CALLS: ["preload_noteable_for_regular_notes", "preload_max_access_for_authors", "preload_first_time_contribution_for_authors", "current_user", "new", "execute"]
CALLS: ["is_a?", "first_contribution?", "specialize_for_first_contribution!", "each"]
CALLS: ["author_id", "author_id", "special_role"]
CALLS: ["project", "team", "author_id", "max_member_access", "project", "merge_requests", "merged", "author_id", "where", "empty?"]
CALLS: ["max_member_access_for_user_ids"]
CALLS: ["project", "id", "project", "project_authorizations", "where", "group", "maximum", "max_member_access_for_resource_ids"]
CALLS: ["id", "block_given?", "uniq", "max_member_access_for_resource_key", "active?", "store", "store", "keys", "empty?", "merge!", "keys", "each"]
CALLS: ["name", "underscore", "pluralize"]
CALLS: ["new"]
CALLS: ["", "with_state"]
CALLS: []
CALLS: ["new", "reject", "preload"]
CALLS: ["map", "team", "max_member_access_for_user_ids"]
CALLS: ["project", "issuable", "current_user", "new"]
CALLS: ["resolvable_discussions", "any?"]
CALLS: ["class", "title", "work_in_progress?"]
CALLS: ["title"]
CALLS: ["unchecked?", "read_write?", "broken?", "project", "repository", "diff_head_sha", "target_branch", "can_be_merged?", "mark_as_mergeable", "mark_as_unmergeable"]
CALLS: ["check_if_can_be_merged"]
CALLS: ["id", "perform_async", "update_column"]
CALLS: ["diff_head_sha", "merge_params_ee", "merge"]
CALLS: []
CALLS: ["params", "present?", "head_pipeline", "head_pipeline", "active?"]
CALLS: ["params", "merge_params_attributes", "permit"]
CALLS: []
CALLS: ["milestones", "includes", "map", "flatten", "build_collection", "sort_by!"]
CALLS: ["labels?", "filter_by_no_label?", "current_user", "projects", "label_names", "new", "execute", "none"]
CALLS: ["group", "none", "group", "full_path", "inside_path"]
CALLS: ["", "sanitize_sql_like", "where"]
CALLS: ["", "joins", "sanitize_sql_like", "where"]
CALLS: ["current_user", "new", "execute"]
CALLS: ["user", "authorized_projects"]
CALLS: ["milestoneish_ids", "for_milestones"]
CALLS: ["", "joins", "where", "distinct"]
CALLS: ["except"]
CALLS: ["target_user", "project_interactions", "joins", "current_user", "where", "select", "target_user", "project_interactions", "where", "select", "new", "to_sql"]
CALLS: ["skip_authorization", "all", "current_user", "new", "execute", "group?", "params", "in_namespace", "projects?", "params", "where", "reorder"]
CALLS: ["", "where"]
CALLS: ["params"]
CALLS: ["labels?", "params", "title", "include?"]
CALLS: ["params", "present?"]
CALLS: ["project?", "project", "current_user", "params", "presence", "current_user_related?", "current_user", "authorized_projects", "group", "params", "group", "current_user", "new", "execute", "current_user", "item_project_ids", "new", "execute", "klass", "current_user", "with_feature_available_for_user", "reorder"]
CALLS: ["admin?", "with_feature_enabled", "quoted_access_level_column", "with_project_feature", "authorizations_for_projects", "where", "with_feature_access_level"]
CALLS: ["project_authorizations", "select", "where"]
CALLS: ["connection", "access_level_attribute", "quote_column_name", "connection", "table_name", "quote_table_name"]
CALLS: ["respond_to?", "model_name", "plural", "to_sym", "include?", "to_sym"]
CALLS: ["", "access_level_attribute", "with_project_feature", "where"]
CALLS: ["", "access_level_attribute", "with_project_feature", "where"]
CALLS: ["", "joins"]
CALLS: ["reorder", "select"]
CALLS: []
CALLS: ["reorder", "select"]
CALLS: ["includes"]
CALLS: ["params", "params", "params"]
CALLS: ["params", "projects_matching_filter", "direct_child_projects", "with_route", "sort", "order_by"]
CALLS: ["hierarchy_for_parent", "base_and_descendants", "select", "where", "params", "params", "merge", "current_user", "new", "execute"]
CALLS: ["parent_group", "id", "where", "new"]
CALLS: ["parent_group", "current_user", "params", "new", "execute"]
CALLS: ["load_projects", "html", "view_to_html_string", "json", "respond_to"]
CALLS: ["user", "new", "current_user", "execute", "params", "page", "prepare_projects_for_rendering"]
CALLS: ["preload_max_member_access_for_collection"]
CALLS: ["current_user", "blank?", "name", "underscore", "current_user", "ids", "public_send"]
CALLS: ["current_user", "params", "new", "execute", "includes", "params", "page", "without_count", "prepare_projects_for_rendering"]
CALLS: ["current_user", "new", "execute", "includes", "prepare_projects_for_rendering"]
CALLS: ["projects", "with_statistics", "params", "page", "name", "current_user", "id", "new_project_path", "visibility_level", "visibility_level_color", "visibility_level", "visibility_level_icon", "full_name", "archived", "statistics", "storage_size", "storage_counter", "project_project_members_path", "dom_id", "edit_project_path", "dom_id", "remove_project_message", "each", "blank?", "name", "page_description", "description", "header_title", "group_title", "current_user"]
CALLS: ["", "includes"]
CALLS: ["", "where"]
CALLS: ["", "joins", "group", "select"]
CALLS: []
CALLS: ["megabyte", "number_to_human_size"]
CALLS: ["_", "full_name"]
CALLS: ["icon"]
CALLS: ["current_user", "authorized_projects", "sorted_by_activity", "non_archived"]
CALLS: ["", "reorder"]
CALLS: ["params", "find_by_id", "projects_finder", "params", "params", "execute", "to_json"]
CALLS: ["class", "name"]
CALLS: ["current_user", "new"]
CALLS: ["user", "personal_projects", "user", "projects", "joined", "admin_root_path"]
CALLS: ["", "namespace_id", "where"]
CALLS: ["namespace", "try"]
CALLS: ["target", "labels", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["projects", "select", "current_user", "new", "execute", "build_collection"]
CALLS: ["milestone_redirect_path", "html", "labels", "tabs_json", "json", "respond_to"]
CALLS: ["current_user", "id", "new", "execute"]
CALLS: ["labels?", "params", "is_a?", "params", "split", "params"]
CALLS: ["params", "fetch"]
CALLS: ["presence"]
CALLS: ["params", "fetch", "sort_by_attribute"]
CALLS: ["group", "current_user", "new", "execute"]
CALLS: ["params", "build_collection"]
CALLS: ["", "where"]
CALLS: ["projects", "where"]
CALLS: ["", "with_state"]
CALLS: ["project", "merge_requests", "sha", "by_commit_sha"]
CALLS: ["", "joins", "where", "reorder"]
CALLS: ["", "select", "where", "by_commit_sha", "where", "reorder"]
CALLS: ["merge_requests", "iid", "merge_request_path", "title", "map", "to_json", "json", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project", "project_merge_request_path"]
CALLS: ["merge_requests", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["milestone_redirect_path", "html", "sorted_merge_requests", "tabs_json", "json", "respond_to"]
CALLS: ["merge_requests", "sort_by_attribute"]
CALLS: ["issuables_collection", "params", "page", "collection_type", "issuable_meta_data"]
CALLS: ["class", "id", "query"]
CALLS: ["raise"]
CALLS: ["class", "table_name", "id", "read_attribute_before_type_cast"]
CALLS: ["is_a?", "preload", "paginated?", "represent", "represent"]
CALLS: ["present?"]
CALLS: ["paginator", "present?"]
CALLS: ["subgroups", "projects", "with_route", "params", "new"]
CALLS: ["supports_nested_groups?", "none", "params", "subgroups_matching_filter", "direct_child_groups", "params", "with_selects_for_list", "sort", "order_by"]
CALLS: ["postgresql?"]
CALLS: ["with_route", "with_counts"]
CALLS: ["project_count_sql", "to_sql", "member_count_sql", "to_sql", "subgroup_count_sql", "to_sql", "select"]
CALLS: ["arel_table", "arel_table", "star", "count", "as", "project", "name", "eq", "where", "eq", "where", "eq", "where"]
CALLS: ["arel_table", "alias", "star", "count", "as", "project", "from", "eq", "where"]
CALLS: ["arel_table", "arel_table", "star", "count", "as", "project", "eq", "where", "eq", "where", "to_boolean", "not_eq", "where"]
CALLS: ["supports_nested_groups?"]
CALLS: ["all_visible_descendant_groups", "params", "search"]
CALLS: ["where", "ago", "where", "includes", "limit", "to_a", "empty?", "each", "loop"]
CALLS: ["blank?", "none", "downcase", "fuzzy_arel_match", "fuzzy_arel_match", "or", "arel_table", "eq", "or", "where", "connection", "quote", "reorder"]
CALLS: ["fuzzy_search"]
CALLS: ["fuzzy_search"]
CALLS: ["fuzzy_search"]
CALLS: ["fuzzy_search"]
CALLS: ["fuzzy_search"]
CALLS: ["joins", "search", "merge"]
CALLS: ["fuzzy_search"]
CALLS: ["fuzzy_search"]
CALLS: ["presence"]
CALLS: ["search"]
CALLS: ["params", "presence"]
CALLS: ["arel_table", "current_user", "levels_for_user", "in", "current_user", "current_user", "new", "execute", "as", "project", "from", "eq", "where", "exists", "or", "hierarchy_for_parent", "descendants", "where"]
CALLS: ["class", "id", "where", "new", "base_and_descendants"]
CALLS: ["params", "find_by_path_or_name"]
CALLS: ["downcase", "find_by"]
CALLS: ["presence"]
CALLS: ["current_user", "parent_group", "new", "execute"]
CALLS: ["represent"]
CALLS: ["represent"]
CALLS: ["should_expand_hierarchy", "paginated?", "paginator", "paginate", "represent_hierarchies", "represent"]
CALLS: ["is_a?", "hierarchy_root", "hierarchy", "represent_hierarchy", "first", "hierarchy_root", "build_hierarchy", "wrap", "represent_hierarchy"]
CALLS: ["class", "params", "new", "is_a?", "represent", "represent_hierarchy", "wrap", "merge", "map", "is_a?", "represent_hierarchy", "flat_map", "represent"]
CALLS: ["wrap", "uniq", "empty?", "is_a?", "all?", "new", "hierarchy", "map", "merge"]
CALLS: ["ancestors_upto", "expand_hierarchy_for_child"]
CALLS: ["namespace_id", "where", "new", "base_and_ancestors"]
CALLS: ["class", "id", "where", "new", "ancestors"]
CALLS: ["parent_id", "id", "is_a?", "id", "parent_id", "detect", "nil?", "parent_id", "nil?", "parent", "new", "map", "track_exception", "nil?", "present?", "new", "expand_hierarchy_for_child"]
CALLS: ["itemized?", "itemize", "name", "size", "represent", "map", "represent"]
CALLS: ["order", "group", "select", "paginated?", "paginate", "map", "where", "index_by", "folder", "size", "last_id", "new", "map"]
CALLS: ["project", "environments", "params", "where", "params", "with_state", "order", "params", "html", "new", "request", "response", "with_pagination", "represent", "available", "count", "stopped", "count", "json", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["new", "tap"]
CALLS: ["paginator", "new", "tap"]
CALLS: ["", "with_state"]
CALLS: ["", "with_state"]
CALLS: []
CALLS: ["paginated?", "paginate", "represent"]
CALLS: ["paginated?", "respond_to?", "", ""]
CALLS: ["class", "entity_class", "merge", "represent", "as_json"]
CALLS: []
CALLS: ["symbolize_keys!", "represent"]
CALLS: ["source_project", "none", "source_project", "pipelines", "all_commit_shas", "source_branch", "where", "order"]
CALLS: ["persisted?", "commit_shas", "all_commits", "pluck", "uniq"]
CALLS: ["merge_request_diff_commits", "map"]
CALLS: ["postgresql?", "merge_request_diffs", "recent", "merge_request_diffs", "where", "limit"]
CALLS: ["persisted?", "merge_request_diff", "commit_shas", "compare_commits", "compare_commits", "to_a", "reverse", "map", "diff_head_sha"]
CALLS: ["all_pipelines", "response", "set_header", "new", "represent", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["pipelines", "order", "params", "params", "where", "html", "response", "set_header", "new", "represent", "count", "json", "respond_to", "title", "short_id", "id", "project_commit_path", "size", "nav_link", "current_user", "can?", "id", "pipelines_project_commit_path", "pipelines", "size", "nav_link", "id", "pipelines_project_commit_path", "id", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["contacted_at", "nil?", "active?", "online?"]
CALLS: ["contacted_at", "contacted_at", "class", "contact_time_deadline"]
CALLS: ["ago"]
CALLS: ["statuses", "latest", "status"]
CALLS: ["", "where"]
CALLS: ["commit_statuses", "status"]
CALLS: ["jobs", "map", "where"]
CALLS: ["current_user", "created_projects", "where", "to_json"]
CALLS: ["current_user", "created_projects", "where", "to_json"]
CALLS: ["current_user", "created_projects", "provider", "where", "to_json"]
CALLS: ["current_user", "created_projects", "where", "to_json"]
CALLS: ["current_user", "created_projects", "where", "to_json"]
CALLS: ["new", "represent_status", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["present?", "represent", "dig"]
CALLS: ["represent"]
CALLS: ["represent", "fetch"]
CALLS: ["new", "represent_status", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["response", "set_header", "new", "represent_status", "json", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["client", "valid?", "new_import_google_code_path", "client", "repos", "client", "incompatible_repos", "current_user", "created_projects", "where", "pluck", "name", "include?", "reject!"]
CALLS: ["options", "new"]
CALLS: ["api_key", "authentication", "new"]
CALLS: ["session", "new"]
CALLS: ["session", "new"]
CALLS: ["session", "access_token_key", "client_options", "new"]
CALLS: []
CALLS: ["provider"]
CALLS: ["session", "host_key"]
CALLS: ["provider"]
CALLS: ["session", "session", "new"]
CALLS: ["provider", "app_id", "provider", "app_secret", "options", "new"]
CALLS: ["client", "projects", "current_user", "created_projects", "where", "pluck", "to_a", "include?", "reject"]
CALLS: ["client", "repos", "current_user", "created_projects", "provider", "where", "pluck", "full_name", "include?", "reject!", "has_ci_cd_only_params?", "_", "_", "root_path", "import_github_title"]
CALLS: ["_"]
CALLS: []
CALLS: ["session", "host_key", "root_path", "custom_icon"]
CALLS: []
CALLS: ["client", "valid?", "new_import_fogbugz_path", "client", "repos", "current_user", "created_projects", "where", "pluck", "name", "include?", "reject!"]
CALLS: ["credentials", "new", "repos", "valid?", "partition", "current_user", "created_projects", "where", "pluck", "to_a", "full_name", "include?", "reject!"]
CALLS: ["active_nav_link?", "delete", "strip!", "block_given?", "capture", "content_tag", "content_tag"]
CALLS: ["delete", "respond_to?", "current_path?", "any?", "delete", "respond_to?", "current_page?", "any?", "delete", "delete", "current_controller?", "current_action?", "current_controller?", "current_action?"]
CALLS: ["split", "current_controller?", "current_action?"]
CALLS: ["to_s", "downcase", "action_name", "any?"]
CALLS: ["to_s", "downcase", "controller", "controller_name", "to_s", "downcase", "controller", "controller_path", "any?"]
CALLS: ["current_user", "new", "target", "execute", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["for_project_noteable?"]
CALLS: []
CALLS: []
CALLS: []
CALLS: ["commits", "each"]
CALLS: ["author_email", "downcase", "find_by_any_email"]
CALLS: ["by_any_email", "take"]
CALLS: ["where", "joins", "where", "new", "to_sql", "table_name", "from"]
CALLS: ["author?", "params", "params", "find"]
CALLS: ["params", "present?"]
CALLS: ["author_id?", "params", "find_by", "author_username?", "params", "find_by"]
CALLS: ["params", "present?", "params"]
CALLS: ["params", "present?", "params"]
CALLS: ["mentioned_users", "filter_todo_users"]
CALLS: ["attributes_for_target", "id", "id", "merge!"]
CALLS: ["pending_todos", "exists?", "id", "merge", "create", "update_todos_count_cache", "map"]
CALLS: ["assignees", "any?", "assignees", "project", "attributes_for_todo", "create_todos"]
CALLS: ["new_resource_email"]
CALLS: ["author", "build_recipients", "mailer", "user", "id", "id", "reason", "send", "deliver_later", "each"]
CALLS: ["head_pipeline_for", "id", "update"]
CALLS: ["source_project", "source_branch_sha", "source_project", "pipelines", "source_branch", "where", "order", "first"]
CALLS: ["source_branch_head", "try"]
CALLS: ["source_project", "source_branch_ref", "source_project", "repository", "source_branch_ref", "commit", "strong_memoize"]
CALLS: ["source_branch", "source_branch"]
CALLS: ["new"]
CALLS: ["project", "issues_enabled?", "transaction_begin", "merge_requests_closing_issues", "delete_all", "closes_issues", "is_a?", "merge_requests_closing_issues", "create!", "each", "transaction_end", "transaction"]
CALLS: ["params", "merge_request", "current_user", "closes_issues"]
CALLS: ["author", "target_branch", "project", "default_branch", "title", "description", "merge_request_diff", "commits", "map", "concat", "project", "new", "join", "closed_by_message"]
CALLS: ["committer", "project", "new", "safe_message", "closed_by_message"]
CALLS: ["committer_email", "downcase", "find_by_any_email"]
CALLS: ["current_user", "id", "id", "perform_async", "run_after_commit"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["todo_service", "current_user", "new_issue", "user_agent_detail_service", "create", "resolve_discussions_with_issue"]
CALLS: ["new_issuable"]
CALLS: ["new_resource_email"]
CALLS: ["new"]
CALLS: ["discussions_to_resolve", "empty?", "project", "current_user", "merge_request_to_resolve_discussions_of", "new", "discussions_to_resolve", "execute"]
CALLS: ["merge_request_to_resolve_discussions_of", "discussion_to_resolve_id", "merge_request_to_resolve_discussions_of", "discussion_to_resolve_id", "find_discussion", "merge_request_to_resolve_discussions_of", "discussions_to_be_resolved"]
CALLS: ["project", "project", "notes", "find_discussion", "find_discussion", "noteable", "noteable_without_project?"]
CALLS: ["is_a?", "current_user", "can?"]
CALLS: ["where", "fresh", "to_a", "empty?", "build"]
CALLS: ["resolvable_discussions", "select"]
CALLS: ["current_user", "project", "id", "new", "execute", "merge_request_to_resolve_discussions_of_iid", "find_by", "strong_memoize"]
CALLS: ["current_user", "spam_check", "move_to_end", "current_user", "id", "id", "perform_async", "run_after_commit"]
CALLS: ["new", "spam_logs", "find_by", "update!", "when_recaptcha_verified"]
CALLS: ["spammable", "spam", "check", "spammable", "spam_log", "spam_log"]
CALLS: ["has_pushes?", "repository", "git_fsck", "wiki_enabled?", "create_wiki", "wiki", "repository", "git_fsck"]
CALLS: ["with_push", "id", "exists?"]
CALLS: ["", "joins", "where"]
CALLS: ["exists?", "raw_repository", "fsck", "message", "error"]
CALLS: ["wiki_access_level"]
CALLS: ["owner", "new", "wiki", "errors", "add"]
CALLS: ["txt_records", "parse", "domain", "keyed_verification_code", "domain", "verification_code", "any?", "domain", "domain", "log_error"]
CALLS: ["logger", "class", "error"]
CALLS: ["getresources"]
CALLS: ["class", "name", "merge_request", "to_reference", "error", "merge_request", "update"]
CALLS: ["error"]
CALLS: ["verification_code", "present?", "verification_code"]
CALLS: ["request", "check_for_spam?", "akismet", "spam?", "create_spam_log"]
CALLS: ["spammable_owner_id", "spammable", "spam_title", "spammable", "spam_description", "options", "options", "spammable", "class", "to_s", "create!"]
CALLS: ["spammable", "respond_to?", "spammable", "author_id", "spammable", "respond_to?", "spammable", "creator_id"]
CALLS: ["class", "spammable_attrs", "fetch", "find", "first", "to_sym", "respond_to?", "first", "public_send"]
CALLS: ["class", "spammable_attrs", "fetch", "find", "first", "to_sym", "respond_to?", "first", "public_send"]
CALLS: ["spammable", "check_for_spam?"]
CALLS: ["spammable_owner", "spammable", "spammable_text", "options", "new"]
CALLS: ["spammable_owner_id", "find"]
CALLS: ["class", "spammable_attrs", "first", "public_send", "map", "reject", "join"]
CALLS: ["spam_log", "user", "spam_log", "text", "spam_log", "source_ip", "spam_log", "user_agent", "new"]
CALLS: ["akismet_enabled?", "text", "now", "owner", "name", "owner", "email", "options", "akismet_client", "options", "options", "check", "logger", "error"]
CALLS: ["visibility_level_changed?", "public?", "title_changed?", "content_changed?"]
CALLS: ["title", "present?", "class", "url_path", "unhyphenize", "title"]
CALLS: ["gsub"]
CALLS: ["project", "public?", "title_changed?", "description_changed?"]
CALLS: []
CALLS: ["relative_position", "max_relative_position", "position_between"]
CALLS: ["sort"]
CALLS: ["class", "parent_ids", "in_parents", "maximum"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["save", "update_attributes", "with_transaction_returning_status"]
CALLS: ["present?", "process_title", "slice!", "merge!"]
CALLS: ["blank?", "deep_title_squish", "dirname", "present?", "directory", "presence", "compact", "join"]
CALLS: ["split", "map", "join"]
CALLS: ["merge_quick_actions_into_params!"]
CALLS: ["params", "description", "fetch", "project", "current_user", "new", "execute", "params", "params", "merge!"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["delete_conflicting_redirects"]
CALLS: ["conflicting_redirects", "delete_all"]
CALLS: ["path", "matching_path_and_descendants"]
CALLS: ["", "postgresql?", "sanitize_sql_like", "where"]
CALLS: ["expire_exists_cache", "expire_root_ref_cache", "expire_emptiness_caches", "repository_event"]
CALLS: ["full_path", "merge", "add_event"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["track_user_interacted_projects", "set_last_repository_updated_at", "reset_project_activity"]
CALLS: ["created_at", "update_column"]
CALLS: ["available?", "track"]
CALLS: ["project_id", "project_id", "author_id", "transaction_begin", "where", "select", "first", "create!", "transaction_end", "transaction", "cached_exists?"]
CALLS: ["cache", "fetch"]
CALLS: ["unscoped", "project_id", "where", "created_at", "update_all"]
CALLS: ["project", "recent_update?", "unscoped", "project_id", "where", "ago", "where", "created_at", "update_all"]
CALLS: ["project", "last_activity_at", "ago"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["create_project_feature", "set_last_activity_at", "set_last_repository_updated_at", "check_repository_absence!", "ensure_storage_path_exists"]
CALLS: ["namespace", "gitlab_shell", "repository_storage_path", "base_dir", "add_namespace"]
CALLS: ["repository_storage_path"]
CALLS: ["config", "repositories", "storages", "repository_storage", "legacy_disk_path"]
CALLS: ["repository_storages", "first"]
CALLS: ["read_attribute"]
CALLS: ["gitlab_shell", "repository_storage_path", "base_dir", "add_namespace"]
CALLS: ["created_at", "update_column"]
CALLS: ["skip_disk_validation", "repository_storage_path", "blank?", "repository_with_same_path_already_exists?", "errors", "add"]
CALLS: ["gitlab_shell", "repository_storage_path", "disk_path", "exists?"]
CALLS: []
CALLS: []
CALLS: ["update_daemon"]
CALLS: ["project", "new", "execute"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["sync_share_with_group_lock_with_parent"]
CALLS: ["parent", "share_with_group_lock?", "share_with_group_lock"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["save_git_content"]
CALLS: ["merge_request_id", "id", "where", "id", "update_all", "ensure_commit_shas", "save_commits", "save_diffs", "save", "keep_around_commits"]
CALLS: ["repository", "merge_request", "source_project", "repository", "uniq", "start_commit_sha", "keep_around", "head_commit_sha", "keep_around", "base_commit_sha", "keep_around", "each"]
CALLS: ["present?", "commit_by", "kept_around?", "raw_repository", "keep_around_ref_name", "write_ref", "logger", "path", "error"]
CALLS: []
CALLS: ["keep_around_ref_name", "ref_exists?"]
CALLS: ["raw_repository", "ref_exists?"]
CALLS: ["persisted?", "nil?", "last_commit_sha"]
CALLS: ["last_version", "sha"]
CALLS: ["versions", "first"]
CALLS: ["persisted?", "wiki", "wiki", "path", "page_versions"]
CALLS: ["commit_shas", "first"]
CALLS: ["commit", "sha"]
CALLS: ["start_commit", "head_commit", "project", "start_commit", "id", "head_commit", "id", "merge_base_commit", "sha", "strong_memoize"]
CALLS: ["repository", "merge_base", "commit_by"]
CALLS: ["commit", "try", "commit", "try", "raw_repository", "merge_base"]
CALLS: ["start_commit_sha", "project", "start_commit_sha", "commit_by"]
CALLS: ["base", "project", "new", "strong_memoize"]
CALLS: ["start_commit", "sha"]
CALLS: ["id", "compare", "commits", "reverse", "create_bulk", "merge_request_diff_commits", "commits_count", "size"]
CALLS: ["new", "map", "to_hash", "except", "delete", "serialize", "sanitize_timestamp", "sanitize_timestamp", "merge", "with_index", "table_name", "bulk_insert"]
CALLS: ["repository", "raw_repository", "safe_start_commit_sha", "head_commit_sha", "new"]
CALLS: ["start_commit_sha", "merge_request", "target_branch_sha"]
CALLS: ["compare", "commits", "size", "zero?", "compare", "max_diff_options", "diffs", "real_size", "any?", "create_merge_request_diff_files", "overflow?", "assign_attributes"]
CALLS: ["map", "to_hash", "id", "merge", "encoding", "ascii_only?", "pack", "tap", "with_index", "bulk_insert"]
CALLS: ["new"]
CALLS: ["compare", "compare", "merge", "diffs", "merge_request_diff", "diffs"]
CALLS: ["project", "diff_refs", "new"]
CALLS: ["start_commit_sha", "base_commit_sha", "base_commit_sha", "start_commit_sha", "head_commit_sha", "new"]
CALLS: ["persisted?", "merge_request_diff", "diff_refs", "diff_base_sha", "diff_start_sha", "diff_head_sha", "new"]
CALLS: ["persisted?", "merge_request_diff", "base_commit_sha", "branch_merge_base_commit", "try"]
CALLS: ["target_branch_sha", "source_branch_sha", "target_project", "merge_base_commit"]
CALLS: ["persisted?", "merge_request_diff", "start_commit_sha", "target_branch_head", "try"]
CALLS: ["start_commit_sha", "base_commit_sha", "start_commit_sha", "head_commit_sha", "new"]
CALLS: ["parent_id", "sha", "new"]
CALLS: ["new"]
CALLS: []
CALLS: ["can_be_created", "diff_options", "diffs", "current_user", "environments_for", "last", "view_to_html_string", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["diff_head_commit", "target_project", "target_branch", "diff_head_commit", "new", "execute", "source_project", "source_project", "source_branch", "diff_head_commit", "new", "execute", "concat", "uniq", "new"]
CALLS: ["persisted?", "merge_request_diff", "head_commit", "source_branch_head"]
CALLS: ["hide_whitespace?", "diffs_expanded?", "action_name", "params", "values_at"]
CALLS: ["params"]
CALLS: ["params", "present?"]
CALLS: ["start_commit_sha", "merge_request", "target_branch_sha", "head_commit_sha", "merge_request", "source_branch_sha", "base_commit_sha", "find_base_sha"]
CALLS: ["head_commit_sha", "start_commit_sha", "project", "head_commit_sha", "start_commit_sha", "merge_base_commit", "try"]
CALLS: ["project", "repository", "original_position", "base_sha", "keep_around", "project", "repository", "original_position", "start_sha", "keep_around", "project", "repository", "original_position", "head_sha", "keep_around", "position", "original_position", "project", "repository", "position", "base_sha", "keep_around", "project", "repository", "position", "start_sha", "keep_around", "project", "repository", "position", "head_sha", "keep_around"]
CALLS: ["project", "project", "repository", "sha", "keep_around", "project", "repository", "before_sha", "keep_around"]
CALLS: ["ensure_merge_request_diff"]
CALLS: ["merge_request_diff", "create_merge_request_diff"]
CALLS: ["fetch_ref!", "merge_request_diffs", "create", "reload_merge_request_diff", "allow_n_plus_1_calls"]
CALLS: ["target_project", "repository", "source_project", "repository", "source_branch", "ref_path", "fetch_source_branch!"]
CALLS: ["raw_repository", "raw_repository", "fetch_source_branch!"]
CALLS: ["iid"]
CALLS: ["slug"]
CALLS: ["environment", "ref_path", "iid", "to_s", "join"]
CALLS: ["merge_request_diff"]
CALLS: []
CALLS: ["post_create_hook", "create_notification_setting", "send_request", "send_invite"]
CALLS: ["owner?", "event_service", "project", "user", "join_project", "notification_service", "new_project_member"]
CALLS: ["notifiable?", "mailer", "real_source_type", "id", "member_access_granted_email", "deliver_later"]
CALLS: ["notifiable?"]
CALLS: ["new", "notifiable?"]
CALLS: ["has_access?", "own_activity?", "unsubscribed?", "suitable_notification_level?", "unsubscribed?"]
CALLS: ["user", "can?", "user", "can?", "user", "can?", "read_ability", "has_policy?", "user", "read_ability", "can?", "subject_scope"]
CALLS: ["instance_variable_defined?", "to_ability_name", "class", "model_name", "name", "underscore"]
CALLS: ["user", "notified_of_own_activity?"]
CALLS: ["respond_to?", "subscriptions", "id", "find_by_user_id", "subscribed"]
CALLS: ["notification_level", "custom_enabled?", "include?", "action_excluded?"]
CALLS: ["excluded_watcher_action?", "excluded_participating_action?"]
CALLS: ["notification_level", "include?"]
CALLS: ["notification_level", "include?"]
CALLS: ["notification_setting", "event_enabled?"]
CALLS: ["respond_to?", "public_send"]
CALLS: ["find_notification_setting"]
CALLS: ["user", "notification_settings_for", "nil?", "global?", "user", "notification_settings_for", "nil?", "global?", "user", "global_notification_setting"]
CALLS: ["notification_settings", "find_or_initialize_by", "persisted?", "levels", "update_attributes"]
CALLS: ["notification_settings", "loaded?", "notification_settings", "source", "find", "notification_settings", "find_or_initialize_by"]
CALLS: ["user", "source", "notification_settings_for"]
CALLS: ["notification_setting", "level", "to_sym"]
CALLS: []
CALLS: ["user", "blank?", "user", "notifiable_options", "merge", "notifiable?"]
CALLS: ["project"]
CALLS: ["group"]
CALLS: []
CALLS: ["source_type"]
CALLS: ["membershipable", "class", "to_s", "humanize"]
CALLS: ["access_level"]
CALLS: ["nil?", "max_member_access_for_user"]
CALLS: ["admin?", "members_with_parents", "where", "reorder", "first", "access_level"]
CALLS: ["parent_id", "self_and_ancestors", "reorder", "select", "id", "active_without_invites_and_requests", "where"]
CALLS: ["parent_id", "class", "id", "where", "class", "id", "where", "new", "base_and_ancestors"]
CALLS: ["", "left_join_users", "where", "non_request", "reorder"]
CALLS: ["", "where"]
CALLS: ["admin?"]
CALLS: ["access_level_attribute", "public_send"]
CALLS: []
CALLS: ["member", "user", "notification_email", "member_source", "human_name", "member_source", "model_name", "singular", "subject", "mail"]
CALLS: ["x509", "x509", "subject", "to_s"]
CALLS: ["name", "present?", "join", "config", "gitlab", "email_subject_suffix", "present?", "config", "gitlab", "email_subject_suffix"]
CALLS: ["member", "source"]
CALLS: ["find"]
CALLS: ["params", "find_by_invite_token", "render_404"]
CALLS: ["token_generator", "digest", "find_by"]
CALLS: ["new"]
CALLS: ["new"]
CALLS: ["new"]
CALLS: ["project", "owner", "user"]
CALLS: ["new"]
CALLS: ["notification_service", "invite_project_member"]
CALLS: ["notifiable?", "mailer", "real_source_type", "id", "member_invited_email", "deliver_later"]
CALLS: ["member", "invite_email", "member_source", "human_name", "member_source", "model_name", "singular", "subject", "mail"]
CALLS: ["notification_service", "new_group_member"]
CALLS: ["notifiable?", "mailer", "real_source_type", "id", "member_access_granted_email", "deliver_later"]
CALLS: ["notification_service", "invite_group_member"]
CALLS: ["mailer", "real_source_type", "id", "member_invited_email", "deliver_later"]
CALLS: ["system_hook_service", "execute_hooks_for"]
CALLS: ["build_event_data", "new", "execute_hooks", "run_after_commit_or_now"]
CALLS: ["build_event_name", "created_at", "xmlschema", "updated_at", "xmlschema", "key", "id", "merge!", "user", "user", "username", "project_data", "merge!", "old_path_with_namespace", "user_data", "merge!", "username_was", "state", "project_member_data", "merge!", "group_data", "merge!", "path_was", "full_path_was", "merge!", "group_member_data", "merge!"]
CALLS: ["name", "email", "id", "username"]
CALLS: ["group", "name", "group", "path", "group", "id", "user", "username", "user", "name", "user", "email", "user", "id", "human_access"]
CALLS: ["class", "access_options", "group_access", "key"]
CALLS: ["options"]
CALLS: ["owner", "name", "path", "full_path", "id", "try", "try"]
CALLS: ["project", "unscoped", "source_id", "find", "name", "path", "full_path", "id", "user", "username", "user", "name", "user", "email", "user", "id", "human_access", "visibility_levels", "visibility_level_value", "key", "downcase"]
CALLS: ["options"]
CALLS: ["owner", "name", "path", "full_path", "id", "name", "respond_to?", "email", "visibility", "downcase"]
CALLS: ["class", "name", "downcase"]
CALLS: ["namespace", "full_path", "previous_changes", "first", "join"]
CALLS: ["parent_id_was", "nil?", "path_was", "parent_id_was", "find_by", "full_path", "path_was"]
CALLS: ["new"]
CALLS: ["new"]
CALLS: ["new"]
CALLS: ["new"]
CALLS: ["notification_service", "new_access_request"]
CALLS: ["notifiable?", "source", "members", "active_without_invites_and_requests", "owners_and_masters", "fallback_to_group_owners_masters?", "source", "group", "members", "active_without_invites_and_requests", "owners_and_masters", "deliver_access_request_email", "each"]
CALLS: ["present?", "source", "respond_to?", "source", "group"]
CALLS: ["mailer", "real_source_type", "id", "user", "notification_email", "member_access_requested_email", "deliver_later"]
CALLS: ["member_source", "human_name", "member_source", "model_name", "singular", "subject", "mail"]
CALLS: ["", "active", "where"]
CALLS: []
CALLS: ["user", "notification_settings", "source", "find_or_create_for"]
CALLS: ["find_or_initialize_by", "persisted?", "save"]
CALLS: ["new", "execute_hooks_for"]
CALLS: ["name", "info", "system_hook_service", "execute_hooks_for"]
CALLS: ["post_create_hook", "create_notification_setting", "send_request", "send_invite", "update_two_factor_requirement"]
CALLS: ["expanded_groups_requiring_two_factor_authentication", "pluck", "require_two_factor_authentication_from_group", "any?", "two_factor_grace_period", "min", "column_defaults", "save"]
CALLS: ["all_expanded_groups", "where"]
CALLS: ["groups", "new", "all_groups"]
CALLS: ["current_user", "authorized_groups", "sort_by", "users", "count", "full_path", "full_name", "avatar_url", "map"]
CALLS: ["groups", "select", "authorized_projects", "select", "new", "to_sql", "where"]
CALLS: ["statuses", "ordered", "latest", "sort_by", "group_by", "new", "map"]
CALLS: ["", "order"]
CALLS: ["", "order"]
CALLS: ["authorized_groups", "visible_to_user", "authorized_groups", "public_to_user"]
CALLS: ["", "authorized_projects", "select", "reorder", "where"]
CALLS: ["authorized_groups", "select", "reorder", "where"]
CALLS: ["params", "owned_groups", "current_user", "full_private_access?", "all", "current_user", "groups_for_ancestors", "groups_for_descendants", "new", "all_groups", "include_public_groups?", "unscoped", "current_user", "public_to_user", "empty?", "none"]
CALLS: ["admin?"]
CALLS: ["current_user", "nil?", "params", "fetch"]
CALLS: ["current_user", "owned_groups", "none"]
CALLS: ["current_user", "groups"]
CALLS: ["current_user", "authorized_groups"]
CALLS: ["load_groups", "html", "view_to_html_string", "json", "respond_to"]
CALLS: ["user", "new", "current_user", "execute", "prepare_groups_for_rendering"]
CALLS: ["preload_max_member_access_for_collection"]
CALLS: ["two_factor_grace_period", "current_user", "try", "current_user", "two_factor_grace_period", "min"]
CALLS: ["require_two_factor_authentication_changed?", "two_factor_grace_period_changed?", "users", "find_each"]
CALLS: ["send_invite", "send_request", "create_notification_setting", "post_create_hook"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["set_diff"]
CALLS: ["for_merge_request?", "diff_for_line_code", "find_diff", "st_diff", "to_hash"]
CALLS: ["noteable_type", "line_code", "for_commit?", "commit_id", "noteable_id", "class", "where", "last", "try"]
CALLS: ["noteable", "noteable", "max_diff_options", "raw_diffs", "new_path", "new_path", "hexdigest", "diff_file_hash", "find"]
CALLS: ["compare", "diffs", "load_diffs"]
CALLS: ["merge_request_diff_files", "map", "include?", "include?", "select", "new"]
CALLS: ["merge_request_diff", "merge_request_diff", "raw_diffs", "compare", "raw_diffs"]
CALLS: ["line_code", "line_code", "split"]
CALLS: ["diffs"]
CALLS: ["raw", "diffs"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["post_create_hook", "refresh_user_cache"]
CALLS: ["user", "user", "new", "refresh_cache"]
CALLS: ["count_service", "new", "count_stored?", "global_count", "id", "to_i", "refresh_cache", "each"]
CALLS: []
CALLS: ["count_service", "project_ids", "query", "group", "count"]
CALLS: ["hours", "ago", "where", "limit", "pluck", "month", "ago", "where", "reorder", "limit", "pluck"]
CALLS: ["map"]
CALLS: ["collection", "map", "uniq"]
CALLS: ["except", "select", "mysql?", "except", "select", "to_sql", "from"]
CALLS: []
CALLS: ["count_service", "project_ids", "query", "group", "count"]
CALLS: []
CALLS: []
CALLS: ["cache", "cache_key", "read", "present?"]
CALLS: ["cache", "cache_key", "block_given?", "uncached_count", "raw?", "write"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["sync_share_with_group_lock_with_parent", "post_create_hook"]
CALLS: []
CALLS: []
CALLS: ["generate_subkeys"]
CALLS: ["key", "subkeys_from_key", "primary_keyid", "subkeys", "create!", "each"]
CALLS: ["upcase"]
CALLS: []
CALLS: []
CALLS: ["before_create_do_block"]
CALLS: ["project", "user", "new", "id", "perform_async", "run_after_commit", "execute", "queued_at", "now", "started_at", "now", "any", "finished_at", "now", "any", "args", "first", "failure_reason", "project", "loopback?", "pipeline_id", "complete?", "manual?", "pipeline_id", "perform_async", "pipeline_id", "perform_async", "stage_id", "perform_async", "id", "perform_async", "run_after_commit", "after_transition", "any", "project", "project", "new", "execute", "run_after_commit"]
CALLS: ["pipeline", "failure_reason?", "pipeline", "failure_reason", "to_sym", "pipeline", "failure_reason"]
CALLS: ["all", "maximum"]
CALLS: ["all", "minimum"]
CALLS: ["id", "perform_async", "run_after_commit"]
CALLS: []
CALLS: []
CALLS: ["add_root_as_member"]
CALLS: ["projects", "root_project"]
CALLS: []
CALLS: []
CALLS: ["reset_project_activity", "set_last_repository_updated_at", "track_user_interacted_projects"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["create_ref", "invalidate_cache"]
CALLS: ["raw_repository", "write_ref"]
CALLS: ["environment", "expire_etag_cache"]
CALLS: ["noteable", "discussions_rendered_on_frontend?", "new", "etag_key", "touch"]
CALLS: ["url_helpers", "project", "noteable_type", "underscore", "noteable_id", "project_noteable_notes_path"]
CALLS: []
CALLS: []
CALLS: ["url_helpers", "project", "realtime_changes_project_issue_path", "new", "touch"]
CALLS: ["new", "etag_cache_key", "touch", "tap"]
CALLS: ["url_helpers", "project", "project_environments_path"]
CALLS: ["awardable", "try"]
CALLS: []
CALLS: ["project", "repository", "ref", "ref_path", "create_ref"]
CALLS: []
CALLS: []
CALLS: ["refresh_user_cache", "post_create_hook"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["refresh_markdown_cache"]
CALLS: ["skip_project_check?", "cached_markdown_fields", "markdown_fields", "cached_markdown_fields", "html_field", "cacheless_render_field", "map", "to_h", "latest_cached_markdown_version", "write_attribute", "each"]
CALLS: ["cached_markdown_version", "cached_markdown_version"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["before_create_do_block"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["keep_around_commits"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["ensure_metadata", "before_create_do_block"]
CALLS: ["metadata", "project", "build_metadata"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["update_attributes", "title", "wiki", "title", "content", "format", "message", "create_page", "save"]
CALLS: ["commit_details", "wiki", "to_sym", "write_page", "update_project_activity", "message"]
CALLS: ["ensure_callout", "persisted?", "json", "respond_to", "json", "respond_to"]
CALLS: ["current_user", "callouts", "feature_names", "feature_name", "find_or_create_by"]
CALLS: ["params", "require"]
CALLS: ["snippet_params", "spammable_params", "merge", "current_user", "new", "execute", "valid?", "params", "move_temporary_files", "recaptcha_check_with_fallback", "snippets_path", "current_user"]
CALLS: ["params", "new", "execute", "each"]
CALLS: ["params", "require", "permit"]
CALLS: ["params", "require", "permit"]
CALLS: ["request", "params", "ensure_spam_config_loaded!", "verify_recaptcha", "params", "merge"]
CALLS: ["load_configurations!", "strong_memoize"]
CALLS: ["spammable", "valid?", "spammable_path", "render_recaptcha?", "ensure_spam_config_loaded!", "params", "flash", "html", "spammable", "render_to_string", "json", "respond_to"]
CALLS: ["snippet_path"]
CALLS: ["project_snippet_path"]
CALLS: ["project_issue_path"]
CALLS: ["spammable", "errors", "count", "enabled?", "spammable", "spam"]
CALLS: ["class", "__method__"]
CALLS: ["reset_password_token", "present?", "update_attributes", "flash", "current_user", "authentication_method", "log_audit_event", "current_user", "log_user_activity"]
CALLS: ["user_params", "user_params"]
CALLS: ["params", "require", "permit"]
CALLS: ["params", "require", "permit"]
CALLS: ["params", "require", "permit"]
CALLS: ["params", "require", "permit"]
CALLS: ["params", "require", "user_params_ce", "permit"]
CALLS: []
CALLS: ["login_counter", "increment", "new", "execute"]
CALLS: ["counter"]
CALLS: ["counter"]
CALLS: ["counter"]
CALLS: ["counter_name", "counter_description", "counter"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["username", "request", "remote_ip", "admin?", "info", "new", "for_authentication", "security_event"]
CALLS: ["id", "id", "class", "name", "create"]
CALLS: ["id", "name"]
CALLS: ["user", "new", "execute"]
CALLS: ["new", "for_authentication", "security_event"]
CALLS: ["params", "resource_name", "present?", "params", "resource_name", "blank?", "params", "resource_name", "params", "resource_name", "delete", "load_configurations!", "verify_recaptcha", "flash", "flash", "delete", "new_user_session_path", "redirect_to"]
CALLS: []
CALLS: ["controller_name", "singularize"]
CALLS: ["current_user", "project_params", "new", "execute", "saved?", "cookies", "project_path", "at", "custom_import_params", "project_path", "_", "name", "redirect_to", "active_new_project_tab", "active_new_project_tab", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["id", "persisted?"]
CALLS: ["project_params", "present?"]
CALLS: []
CALLS: ["params", "require", "project_params_attributes", "permit"]
CALLS: []
CALLS: ["params", "require", "permit"]
CALLS: ["params", "permit"]
CALLS: ["current_user", "wiki_params", "new", "execute", "persisted?", "project_wiki_path", "redirect_to", "fluid_layout", "_", "title", "capitalize", "_", "wiki_page_errors", "icon", "persisted?", "title", "capitalize", "project_wiki_path", "title", "capitalize", "persisted?", "s_", "s_", "current_user", "can?", "s_", "persisted?", "project_wiki_history_path", "s_", "current_user", "can?", "project_wiki_path", "s_", "_", "persisted?", "s_", "s_", "title", "namespace", "becomes", "persisted?", "form_errors", "persisted?", "last_commit_sha", "hidden_field", "label", "title", "text_field", "persisted?", "icon", "s_", "icon", "help_page_path", "label", "format", "options_for_select", "select", "label", "slug", "project_wiki_preview_markdown_path", "s_", "slug", "project_wiki_preview_markdown_path", "s_", "html_safe", "s_", "help_page_path", "s_", "html_safe", "label", "text_field", "persisted?", "_", "submit", "_", "project_wiki_path", "s_", "submit", "_", "project_wiki_path", "wiki_params", "build_page", "fluid_layout", "_", "title", "capitalize", "_", "wiki_page_errors", "icon", "persisted?", "title", "capitalize", "project_wiki_path", "title", "capitalize", "persisted?", "s_", "s_", "current_user", "can?", "s_", "persisted?", "project_wiki_history_path", "s_", "current_user", "can?", "project_wiki_path", "s_", "_", "persisted?", "s_", "s_", "title", "namespace", "becomes", "persisted?", "form_errors", "persisted?", "last_commit_sha", "hidden_field", "label", "title", "text_field", "persisted?", "icon", "s_", "icon", "help_page_path", "label", "format", "options_for_select", "select", "label", "slug", "project_wiki_preview_markdown_path", "s_", "slug", "project_wiki_preview_markdown_path", "s_", "html_safe", "s_", "help_page_path", "s_", "html_safe", "label", "text_field", "persisted?", "_", "submit", "_", "project_wiki_path", "s_", "submit", "_", "project_wiki_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["with_reactive_cache"]
CALLS: ["mock_service_url", "project", "namespace", "path", "project", "path", "join", "to_s"]
CALLS: ["drone_url", "project", "full_path", "to_s", "encode", "join", "to_s"]
CALLS: []
CALLS: ["project_url"]
CALLS: ["with_reactive_cache"]
CALLS: ["s_", "project_wiki_path", "s_", "html_safe", "concat", "s_", "message", "content_tag"]
CALLS: ["new", "update_attributes", "tap"]
CALLS: ["params", "require", "permit"]
CALLS: ["project", "triggers", "trigger_params", "current_user", "merge", "create", "valid?", "flash", "flash", "project_settings_ci_cd_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["params", "require", "permit"]
CALLS: ["new", "issuable", "current_user", "mark_todo", "current_user", "new", "execute", "count", "dashboard_todo_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project", "attributes_for_todo", "create_todos"]
CALLS: ["current_user", "new", "params", "params", "params", "params", "execute", "name", "project_tag_path", "params", "params", "s_", "params", "default_branch", "s_", "namespace_project_tags_path", "params", "s_", "s_", "s_", "preview_markdown_path", "s_", "preview_markdown_path", "s_", "s_", "s_", "project_tags_path", "repository", "ref_names", "to_json", "html_safe", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["branch_names", "tag_names"]
CALLS: ["refs", "map"]
CALLS: ["repository", "public_send"]
CALLS: ["ref_names", "join", "notes", "id", "pluralize"]
CALLS: ["params", "nil?", "include?", "include?", "include?", "params", "new", "execute", "take", "map", "s_", "tag_count", "nonzero?", "params", "new", "execute", "take", "map", "s_", "params", "unescape", "flatten", "exclude?", "to_json", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["is_a?", "group_preview_markdown_path", "is_a?", "preview_markdown_snippets_path", "preview_markdown_project_path"]
CALLS: ["snippet_params", "spammable_params", "merge", "current_user", "new", "execute", "recaptcha_check_with_fallback", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["params", "find", "current_user", "can?", "head", "project", "runners_path", "project", "current_user", "assign_to", "persisted?", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["shared?", "is_shared", "save", "runner_projects", "id", "create"]
CALLS: ["is_shared"]
CALLS: ["project_runners_path"]
CALLS: ["create_repository", "project_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project", "create_repository"]
CALLS: ["forked?", "gitlab_shell", "repository_storage", "disk_path", "create_repository", "repository", "after_create", "errors", "add"]
CALLS: ["fork_network", "fork_network", "root_project", "forked_project_link", "nil?", "forked_project_link", "forked_from_project", "nil?"]
CALLS: ["fork_network", "fork_network", "forked_from_project", "fork_network", "create_root_of_fork_network", "create_root_of_fork_network"]
CALLS: ["create_service_class", "current_user", "protected_ref_params", "new", "execute", "persisted?", "flash", "errors", "full_messages", "join", "html_safe", "redirect_to_repository_settings"]
CALLS: ["params", "require", "access_level_attributes", "permit"]
CALLS: []
CALLS: ["service_namespace"]
CALLS: []
CALLS: []
CALLS: ["params", "require", "access_level_attributes", "access_level_attributes", "permit"]
CALLS: ["project_settings_repository_path"]
CALLS: ["project", "current_user", "create_params", "new", "execute", "persisted?", "project", "project_pipeline_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["url_helpers", "project_pipeline_path"]
CALLS: ["url_helpers", "project_pipeline_path"]
CALLS: ["params", "require", "permit"]
CALLS: ["params", "require", "permit"]
CALLS: ["params", "require", "permit", "dig", "id", "merge!"]
CALLS: ["params", "require", "permit"]
CALLS: ["params", "require", "permit", "merge"]
CALLS: ["params", "require", "permit", "merge"]
CALLS: ["params", "require", "permit"]
CALLS: ["current_user", "schedule_params", "new", "execute", "persisted?", "pipeline_schedules_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project_pipeline_schedules_path"]
CALLS: ["params", "require", "permit"]
CALLS: ["pages_domains", "create_params", "create", "valid?", "project_pages_domain_path", "project_pages_path", "namespace", "becomes", "errors", "any?", "errors", "full_messages", "each", "label", "persisted?", "text_field", "config", "pages", "external_https", "label", "text_area", "label", "text_area", "submit", "_", "project_pages_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project", "current_user", "milestone_params", "new", "execute", "valid?", "project_milestone_path", "container_class", "namespace", "becomes", "form_errors", "label", "text_field", "label", "preview_markdown_path", "preview_markdown_path", "label", "text_field", "label", "text_field", "new_record?", "submit", "project_milestones_path", "submit", "project_milestone_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["params", "require", "permit"]
CALLS: ["params", "require", "permit"]
CALLS: ["project", "current_user", "merge_request_params", "new", "execute", "valid?", "merge_request_path", "redirect_to", "source_project", "target_project", "define_new_vars", "can_be_created", "params", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["target_project", "target_project", "repository", "branch_names", "target_project", "source_project", "commits", "prepare_commits_for_rendering", "diff_head_commit", "current_user", "id", "new", "execute", "set_pipeline_variables"]
CALLS: ["all_pipelines", "head_pipeline", "present?", "statuses", "relevant", "count"]
CALLS: ["", "where"]
CALLS: ["current_user", "configure_params", "configure", "flash", "service", "edit_project_service_path", "flash", "new_project_mattermost_path"]
CALLS: ["kubeclient", "get_service", "strong_memoize"]
CALLS: ["new", "command", "create", "update", "message"]
CALLS: ["bitmaps_enabled?", "git", "bitmaps_enabled?", "git", "git", "inspect"]
CALLS: []
CALLS: ["housekeeping_bitmaps_enabled"]
CALLS: ["project", "full_name", "merge"]
CALLS: ["params", "find_or_initialize_service"]
CALLS: ["find_or_initialize_service"]
CALLS: ["params", "require", "permit", "service_trigger_url", "asset_url", "merge"]
CALLS: ["gitlab", "url", "project_id", "to_param"]
CALLS: ["params", "where", "first"]
CALLS: ["project", "user", "params", "new", "execute", "render_json"]
CALLS: ["build_payload", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["new", "represent", "error_payload"]
CALLS: ["help_url", "merge"]
CALLS: ["label_params", "new", "execute", "valid?", "project_labels_path", "html", "json", "respond_to", "html", "errors", "messages", "json", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: []
CALLS: ["repo", "tags", "new", "to_hashes"]
CALLS: ["raw_repository", "tags"]
CALLS: []
CALLS: []
CALLS: ["manifest", "manifest", "manifest", "new", "map"]
CALLS: ["client", "path", "repository_tags"]
CALLS: ["project", "repository", "tag_names"]
CALLS: ["image", "tags", "new"]
CALLS: ["from_image"]
CALLS: ["project", "container_repositories", "params", "find"]
CALLS: ["project", "container_repositories", "params", "find"]
CALLS: ["params", "require", "permit"]
CALLS: ["params", "require", "permit"]
CALLS: ["params", "permit"]
CALLS: ["issue_params", "spammable_params", "merge", "params", "params", "merge", "project", "current_user", "new", "execute", "discussions_to_resolve", "count", "flash", "discussion_to_resolve_id", "recaptcha_check_with_fallback", "html", "attachment", "url", "to_js", "js", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["issue_params_with_info_from_discussions", "whitelisted_issue_params", "merge"]
CALLS: ["current_user", "project", "can?", "params", "slice", "params", "slice"]
CALLS: ["merge_request_to_resolve_discussions_of", "title_from_merge_request", "description_for_discussions"]
CALLS: ["discussions_to_resolve", "empty?", "merge_request_to_resolve_discussions_of", "to_reference", "discussions_to_resolve", "size", "pluralize", "merge_request_to_resolve_discussions_of", "to_reference", "items_for_discussions", "join"]
CALLS: ["discussions_to_resolve", "item_for_discussion", "map"]
CALLS: ["first_note_to_resolve", "first_note", "first_note", "build", "notes", "size", "author", "to_reference", "pluralize", "note", "new", "call", "lines", "map", "join", "join"]
CALLS: ["resolvable?", "notes", "find", "strong_memoize"]
CALLS: ["potentially_resolvable?", "system?"]
CALLS: ["class", "name", "include?", "noteable", "supports_resolvable_notes?"]
CALLS: ["base_class_name", "include?"]
CALLS: ["class", "base_class", "name"]
CALLS: ["potentially_resolvable?", "notes", "any?", "strong_memoize"]
CALLS: ["notes", "first", "strong_memoize"]
CALLS: ["merge_request_to_resolve_discussions_of", "title"]
CALLS: ["move_between_lists?", "add_label_ids", "remove_label_ids", "issue_state", "merge!", "move_between_ids", "move_between_ids", "board", "group", "id"]
CALLS: ["params", "params", "params", "params"]
CALLS: ["moving_to_list", "movable?", "moving_from_list", "label_id", "board", "group_board?", "parent", "id", "on_group_boards", "pluck", "parent", "id", "on_project_boards", "pluck", "compact"]
CALLS: ["board", "lists", "params", "find_by"]
CALLS: ["board", "lists", "params", "find_by"]
CALLS: ["label?"]
CALLS: ["", "with_lists_and_board", "where"]
CALLS: ["", "joins", "movable", "merge"]
CALLS: ["", "list_types", "where"]
CALLS: ["", "with_lists_and_board", "where"]
CALLS: ["group_id", "present?"]
CALLS: ["moving_to_list", "label_id", "compact"]
CALLS: ["moving_from_list", "closed?", "moving_to_list", "closed?"]
CALLS: ["moving_from_list", "present?", "moving_to_list", "present?", "moving_from_list", "moving_to_list"]
CALLS: ["params", "require", "issue_params_attributes", "permit"]
CALLS: []
CALLS: ["params", "require", "permit", "params", "params", "request", "merge"]
CALLS: ["import_url", "params", "save", "reload", "import_schedule", "project_import_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["errors", "empty?", "import?", "bare_repository_import?", "import_schedule", "errors", "full_messages", "join", "fail"]
CALLS: ["dup", "id", "id", "logger", "error", "errors", "add", "import?", "mark_import_as_failed"]
CALLS: ["errors", "dup", "sanitize", "import_fail", "update_column", "logger", "message", "error"]
CALLS: ["import_type"]
CALLS: ["external_import?", "forked?", "gitlab_project_import?", "bare_repository_import?"]
CALLS: ["hooks", "hook_params", "new", "save", "valid?", "hooks", "select", "flash", "errors", "full_messages", "join", "html_safe", "project_settings_integrations_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["params", "require", "triggers", "values", "permit"]
CALLS: ["params", "require", "triggers", "values", "permit"]
CALLS: ["params", "present?", "params", "find", "current_user", "can?", "render_404", "project", "current_user", "group_link_create_params", "new", "execute", "flash", "project", "project_project_members_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["params", "permit"]
CALLS: ["params", "find", "projects", "project", "path", "find_by", "forked_from_project", "project", "project", "current_user", "new", "execute", "saved?", "forked?", "import_in_progress?", "continue_params", "project_import_path", "continue_params", "continue_params", "continue_params", "project_path", "name", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["import_started?", "import_scheduled?"]
CALLS: ["import_status"]
CALLS: ["import_status", "import?"]
CALLS: ["params", "permit", "start_with?", "start_with?"]
CALLS: ["project", "environments", "environment_params", "create", "persisted?", "project", "project_environment_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["params", "require", "permit"]
CALLS: ["current_user", "create_params", "new", "execute", "valid?", "flash", "errors", "full_messages", "join", "html_safe", "redirect_to_repository_settings", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["params", "blank?", "params", "blank?", "flash", "params", "presence", "params", "presence", "project_compare_index_path", "params", "params", "project_compare_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project", "current_user", "create_params", "new", "execute", "persisted?", "project", "project_cluster_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project", "current_user", "create_params", "new", "token_in_session", "execute", "persisted?", "project", "project_cluster_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["session", "session_key_for_token"]
CALLS: ["project", "current_user", "new", "execute"]
CALLS: ["params", "yaml_processor_options", "validation_message", "blank?", "blank?", "yaml_processor_options", "new", "stages", "builds", "jobs", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["prepare!", "blob", "data", "new", "message"]
CALLS: ["new", "decorate"]
CALLS: ["diff_file", "old_blob", "load_all_data!", "diff_file", "new_blob", "load_all_data!"]
CALLS: ["diff", "diff", "project_repository", "new"]
CALLS: ["active?", "project_id", "project", "repository", "fetch", "project", "repository"]
CALLS: ["original_position", "project", "repository", "diff_file"]
CALLS: []
CALLS: []
CALLS: ["new"]
CALLS: ["blob", "load_all_data!"]
CALLS: []
CALLS: ["id", "blob_at", "id", "tree", "entries", "any?", "join", "project_tree_path", "render_404"]
CALLS: ["namespace", "repository", "root_ref", "namespace_project_tree_path"]
CALLS: ["prepare!", "blob", "data", "validation_message"]
CALLS: ["project", "repository", "commit", "sha"]
CALLS: ["params", "strip_tags", "sanitize", "unescape", "project", "empty_repo?", "project", "deployment_platform", "present?", "project", "current_user", "new", "ref", "execute", "params", "current_user", "id", "new", "params", "find_by", "current_user", "new_issue_branch", "project", "url_to_autodeploy_setup", "view_context", "autodeploy_flash_notice", "project_tree_path", "params", "default_branch", "namespace_project_branches_path", "params", "icon", "project_branches_path", "repository", "ref_names", "to_json", "html_safe", "html", "project_tree_url", "json", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["url_helpers", "default_branch", "project_compare_url", "new", "create_note"]
CALLS: ["_", "sanitize", "truncate", "link_to_autodeploy_doc", "html_safe"]
CALLS: ["project", "truncate_team"]
CALLS: ["id"]
CALLS: ["_", "help_page_path"]
CALLS: ["project_new_blob_path"]
CALLS: ["join", "project_blob_path", "project_new_blob_path", "create_commit", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["user_access", "branch_name_or_ref", "can_push_to_branch?", "current_user", "fork_of", "repository", "next_branch", "merge", "current_user", "new", "execute", "update_flash_notice", "final_success_path", "html", "json", "respond_to", "flash", "respond_to?", "call", "html", "json", "respond_to"]
CALLS: ["namespace", "find_fork_of"]
CALLS: ["fork_network", "active?", "id", "fork_network", "projects", "find_forks_in", "first", "new", "fetch", "fork_network", "projects", "find_forks_in", "first"]
CALLS: ["projects", "where"]
CALLS: ["branch_names", "match", "to_i", "map", "compact", "max"]
CALLS: []
CALLS: ["create_merge_request?", "merge_request_exists?", "existing_merge_request_path", "new_merge_request_path", "respond_to?", "call"]
CALLS: ["params", "present?", "different_project?"]
CALLS: []
CALLS: ["current_user", "id", "new", "execute", "opened", "find_by", "strong_memoize"]
CALLS: ["project_merge_request_path"]
CALLS: ["id", "id", "project_new_merge_request_path"]
CALLS: ["flash", "create_merge_request?", "merge_request_exists?", "flash", "different_project?", "flash"]
CALLS: ["current_user", "new"]
CALLS: ["current_user", "params", "validate_and_consume_otp!", "current_user", "current_user", "new", "generate_otp_backup_codes!", "execute!", "build_qr_code", "setup_u2f_registration", "header_title", "profile_path"]
CALLS: ["execute", "new"]
CALLS: ["can_see_access_requests?", "source", "requesters"]
CALLS: ["source", "source", "class", "to_s", "underscore", "source", "allowed?"]
CALLS: ["new", "current_user", "u2f_registrations", "u2f_app_id", "new", "registration_requests", "map", "authentication_requests", "session", "map", "gon", "session", "u2f_app_id", "push"]
CALLS: ["transaction_begin", "create_event", "new", "execute", "transaction_end", "transaction", "new", "cache_last_push_event", "new", "execute"]
CALLS: ["project", "project_cache_key", "user_cache_key", "project", "forked_from_project", "project_cache_key", "id", "set_key", "each"]
CALLS: ["cache", "write"]
CALLS: ["id", "id"]
CALLS: ["id"]
CALLS: ["request", "base_url"]
CALLS: ["current_user", "account_string", "issuer_host", "otp_provisioning_uri", "render_qrcode"]
CALLS: ["config", "gitlab", "host"]
CALLS: ["gitlab", "host"]
CALLS: ["issuer_host", "current_user", "email"]
CALLS: ["finder", "personal_access_token_params", "build", "save", "current_user", "id", "token", "redis_store!", "profile_personal_access_tokens_path", "set_index_vars", "header_title", "profile_path"]
CALLS: ["redis_shared_state_key", "set", "with"]
CALLS: []
CALLS: ["current_user", "available_scopes", "finder", "execute", "finder", "execute", "order", "current_user", "id", "redis_getdel"]
CALLS: ["redis_shared_state_key", "get", "redis_shared_state_key", "del", "with"]
CALLS: ["params", "require", "permit"]
CALLS: ["current_user", "oauth_applications", "current_user", "oauth_authorized_tokens", "reject", "map", "uniq", "reject", "new"]
CALLS: ["id", "where"]
CALLS: ["current_user", "available_scopes", "finder", "build", "finder", "execute", "finder", "execute", "order"]
CALLS: ["password_automatically_set", "user_params", "valid_password?", "new_profile_password_path", "user_params", "user_params", "current_user", "merge", "new", "execute", "current_user", "new", "execute", "root_path", "header_title", "profile_path"]
CALLS: ["current_user", "key_params", "request", "remote_ip", "merge", "new", "execute", "persisted?", "profile_key_path", "current_user", "keys", "select", "header_title", "profile_path"]
CALLS: ["params", "require", "permit"]
CALLS: ["params", "require"]
CALLS: ["current_user", "gpg_key_params", "new", "execute", "persisted?", "profile_gpg_keys_path", "current_user", "gpg_keys", "select", "header_title", "profile_path"]
CALLS: ["params", "require", "permit"]
CALLS: ["current_user", "email_params", "current_user", "merge", "new", "execute", "errors", "blank?", "flash", "errors", "full_messages", "first", "profile_emails_url", "header_title", "profile_path"]
CALLS: ["params", "require", "permit"]
CALLS: ["current_user", "chat_names", "chat_name_params", "new", "save", "flash", "chat_name", "flash", "delete_chat_name_token", "profile_chat_names_path"]
CALLS: ["id"]
CALLS: ["current_user", "chat_names"]
CALLS: ["chat_name_token", "get", "render_404"]
CALLS: ["new"]
CALLS: ["params", "render_404", "render_404", "params", "new"]
CALLS: ["chat_name_token", "delete"]
CALLS: ["current_user", "create_application_params", "new", "request", "execute", "persisted?", "flash", "t", "oauth_application_url", "set_index_vars", "header_title", "profile_path"]
CALLS: ["application_params", "current_user", "tap"]
CALLS: ["params", "require", "permit"]
CALLS: ["resource", "can_read?", "render_404", "current_user", "resource", "notification_settings_for", "notification_setting_params", "update_attributes", "render_response"]
CALLS: ["current_user", "sign_up_params", "new", "execute"]
CALLS: ["params", "require", "permit"]
CALLS: ["dup", "params", "require", "permit"]
CALLS: ["view_to_html_string"]
CALLS: ["class", "name", "downcase", "to_sym", "current_user", "can?"]
CALLS: ["params", "present?", "params", "find", "params", "present?", "params", "find"]
CALLS: ["client", "params", "repo", "session", "current_user", "namespace", "current_user", "new", "execute", "persisted?", "new", "represent", "errors", "full_messages"]
CALLS: ["file_is_valid?", "redirect_back_or_default", "current_user", "project_params", "new", "execute", "saved?", "project_path", "name", "redirect_to", "errors", "full_messages", "join", "redirect_back_or_default"]
CALLS: ["project_params", "project_params", "respond_to?"]
CALLS: ["root_path", "request", "referer", "present?"]
CALLS: ["client", "params", "to_i", "project", "client", "user", "find_or_create_namespace", "current_user", "can?", "current_user", "access_params", "new", "execute", "persisted?", "new", "represent", "errors", "full_messages"]
CALLS: ["session"]
CALLS: ["session", "access_token_key"]
CALLS: ["params", "presence", "current_user", "namespace", "current_user", "new", "execute", "errors", "any?", "current_user", "namespace", "error", "current_user", "namespace"]
CALLS: ["client", "params", "to_i", "repo", "params", "presence", "name", "params", "presence", "current_user", "namespace_path", "current_user", "namespace_path", "find_or_create_namespace", "current_user", "can?", "current_user", "access_params", "provider", "new", "extra_project_attrs", "execute", "persisted?", "new", "represent", "errors", "full_messages"]
CALLS: []
CALLS: ["client", "params", "repo", "session", "session", "session", "client", "user_map", "current_user", "namespace", "current_user", "new", "execute", "persisted?", "new", "represent", "errors", "full_messages"]
CALLS: ["client", "user_map", "session", "update", "sort"]
CALLS: ["client", "user_map", "session", "update"]
CALLS: ["credentials", "new", "params", "to_s", "gsub", "repo", "params", "presence", "name", "owner", "user", "username", "current_user", "username", "params", "presence", "current_user", "find_or_create_namespace", "current_user", "can?", "session", "connection", "token", "current_user", "credentials", "new", "execute", "persisted?", "new", "represent", "errors", "full_messages"]
CALLS: ["current_user", "group_params", "new", "execute", "persisted?", "chat_team", "present?", "name", "name", "dashboard_groups_path", "dashboard_groups_path", "form_errors", "label", "_", "_", "file_field", "_", "default_group_visibility", "default_group_visibility", "local_assigns", "fetch", "icon", "help_page_path", "label", "can_change_visibility_level", "form_model", "values", "form_model", "disallowed_visibility_level?", "restricted_visibility_levels", "include?", "form", "model_method", "form", "model_method", "selected_level", "radio_button", "visibility_level_icon", "visibility_level_label", "form_model", "visibility_level_description", "restricted_visibility_level_description", "form_model", "disallowed_visibility_level_description", "label", "each", "form_model", "render", "visibility_level_icon", "visibility_level_label", "form_model", "visibility_level_description", "config", "mattermost", "enabled", "custom_icon", "label", "check_box", "label", "mattermost", "host", "submit", "dashboard_groups_path", "name", "page_description", "description", "header_title", "group_title", "current_user"]
CALLS: ["respond_to?", "visibility_level_allowed?"]
CALLS: ["visibility_level", "visibility_level_allowed_as_fork?", "visibility_level_allowed_by_group?"]
CALLS: ["visibility_level", "group", "group", "visibility_level"]
CALLS: ["visibility_level", "forked?", "forked_project_link", "forked_from_project", "visibility_level"]
CALLS: ["visibility_level", "visibility_level_allowed_by_parent?", "visibility_level_allowed_by_projects?", "visibility_level_allowed_by_sub_groups?"]
CALLS: ["visibility_level", "children", "where", "exists?"]
CALLS: ["paginator", "params", "paginate"]
CALLS: ["visibility_level", "projects", "where", "exists?"]
CALLS: ["visibility_level", "parent_id", "parent_id", "nonzero?", "parent", "visibility_level"]
CALLS: ["current_user", "admin?", "restricted_visibility_levels"]
CALLS: ["visibility_levels", "key", "s_"]
CALLS: ["disallowed_project_visibility_level_description", "disallowed_group_visibility_level_description"]
CALLS: ["level_name", "downcase", "visibility_level_allowed_by_projects?", "visibility_level_allowed_by_sub_groups?", "visibility_level_allowed_by_parent?", "parent", "visibility_level_errors_for_group", "any?", "to_sentence", "html_safe"]
CALLS: ["name", "group_path", "edit_group_path", "visibility"]
CALLS: ["level_name", "downcase", "visibility_level_allowed_as_fork?", "visibility_level_allowed_by_group?", "group", "visibility_level_errors_for_group", "any?", "to_sentence", "html_safe"]
CALLS: ["level_name", "capitalize"]
CALLS: ["project_visibility_level_description", "group_visibility_level_description", "snippet_visibility_level_description"]
CALLS: ["is_a?"]
CALLS: []
CALLS: ["_", "_", "_"]
CALLS: ["params", "require", "group_params_attributes", "permit"]
CALLS: []
CALLS: ["params", "require", "group_params_ce", "permit"]
CALLS: []
CALLS: ["group", "current_user", "milestone_params", "new", "execute", "persisted?", "milestone_path", "form_errors", "label", "text_field", "label", "group_preview_markdown_path", "group_preview_markdown_path", "label", "text_field", "label", "text_field", "new_record?", "submit", "group_milestones_path", "submit", "group_milestone_path", "name", "page_description", "description", "header_title", "group_title", "current_user"]
CALLS: ["group_milestone?", "group", "group_milestone_path", "project_milestone?", "project", "project_milestone_path"]
CALLS: ["project_id", "present?"]
CALLS: []
CALLS: ["legacy_group_milestone?", "group", "safe_title", "title", "group_milestone_path", "group", "iid", "group_milestone_path"]
CALLS: []
CALLS: []
CALLS: ["label_params", "new", "group", "execute", "valid?", "group_labels_path", "html", "new", "represent_appearance", "json", "respond_to", "name", "page_description", "description", "header_title", "group_title", "current_user"]
CALLS: ["represent"]
CALLS: ["model", "params", "uploader_class", "new", "execute", "json", "json", "respond_to"]
CALLS: ["uploader", "const_get"]
CALLS: ["uploader", "const_get"]
CALLS: ["uploader", "const_get"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["note_params", "params", "params", "merge", "note_project", "current_user", "new", "execute", "is_a?", "current_user", "new", "execute", "note_json", "json", "redirect_back_or_default", "html", "respond_to"]
CALLS: ["params", "merge"]
CALLS: ["project", "params", "present?", "find", "project", "current_user", "can?", "access_denied!", "strong_memoize"]
CALLS: ["any", "html", "respond_to"]
CALLS: ["params", "require", "permit"]
CALLS: ["commands_changes", "persisted?", "use_note_serializer?", "note_serializer", "represent", "merge!", "id", "noteable", "discussion_id", "note_html", "note", "try", "merge!", "noteable", "to_discussion", "individual_note?", "resolvable?", "diff_discussion_html", "discussion_html", "merge!", "diff_discussion?", "line_code", "errors", "merge!"]
CALLS: ["build"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["params", "noteable", "is_a?", "cookies", "noteable", "discussions_rendered_on_frontend?"]
CALLS: ["project", "noteable", "current_user", "new"]
CALLS: ["individual_note?", "render_to_string"]
CALLS: ["diff_discussion?", "on_image?", "params", "params", "render_to_string"]
CALLS: []
CALLS: []
CALLS: ["position", "position_type"]
CALLS: ["render_to_string"]
CALLS: ["params", "permit", "current_user", "new", "membershipable", "execute", "members_page_url", "members_page_url"]
CALLS: ["membershipable", "membershipable", "polymorphic_url", "membershipable", "project_project_members_path", "membershipable"]
CALLS: ["board", "parent", "current_user", "list_params", "new", "board", "execute", "valid?", "serialize_as_json", "errors"]
CALLS: ["as_json"]
CALLS: ["as_json"]
CALLS: ["as_json"]
CALLS: ["as_json"]
CALLS: ["params", "require", "permit"]
CALLS: ["board", "group_board?", "as_json"]
CALLS: ["board_parent", "project", "current_user", "issue_params", "new", "execute", "valid?", "serialize_as_json", "errors"]
CALLS: ["board", "parent"]
CALLS: ["current_user", "user_params", "merge", "new", "execute", "persisted?", "html", "json", "form_errors", "label", "text_field", "label", "text_field", "label", "text_field", "new_record?", "label", "label", "object", "force_random_password", "password_field", "label", "object", "force_random_password", "password_field", "label", "number_field", "label", "check_box", "label", "current_user", "radio_button", "radio_button", "label", "check_box", "label", "file_field", "label", "text_field", "label", "text_field", "label", "text_field", "label", "text_field", "new_record?", "submit", "admin_users_path", "submit", "admin_user_path", "html", "errors", "json", "respond_to", "admin_root_path"]
CALLS: ["params", "find", "current_user", "assign_to", "persisted?", "admin_runner_path", "admin_runner_path", "admin_root_path"]
CALLS: ["label_params", "new", "execute", "persisted?", "admin_labels_url", "admin_root_path"]
CALLS: ["finder", "impersonation_token_params", "build", "save", "admin_user_impersonation_tokens_path", "set_index_vars", "admin_root_path"]
CALLS: ["params", "require", "permit"]
CALLS: ["identity_params", "new", "user_id", "user", "id", "save", "admin_user_identities_path", "admin_root_path"]
CALLS: ["params", "require", "permit"]
CALLS: ["hook_params", "new", "save", "admin_hooks_path", "all", "admin_root_path"]
CALLS: ["group_params", "new", "name", "name", "path", "dup", "save", "current_user", "add_owner", "name", "default_group_visibility", "form_errors", "label", "_", "_", "file_field", "_", "visibility_level", "can_change_group_visibility_level?", "visibility_level", "local_assigns", "fetch", "icon", "help_page_path", "label", "can_change_visibility_level", "form_model", "values", "form_model", "disallowed_visibility_level?", "restricted_visibility_levels", "include?", "form", "model_method", "form", "model_method", "selected_level", "radio_button", "visibility_level_icon", "visibility_level_label", "form_model", "visibility_level_description", "restricted_visibility_level_description", "form_model", "disallowed_visibility_level_description", "label", "each", "form_model", "render", "visibility_level_icon", "visibility_level_label", "form_model", "visibility_level_description", "form", "form", "check_box", "label", "current_user", "admin?", "label", "lfs_enabled?", "check_box", "icon", "help_page_path", "label", "current_user", "label", "check_box", "icon", "help_page_path", "label", "text_field", "new_record?", "submit", "admin_groups_path", "submit", "admin_group_path", "admin_root_path"]
CALLS: ["nil?", "namespace", "lfs_enabled?", "config", "lfs", "enabled"]
CALLS: ["config", "lfs", "enabled"]
CALLS: ["add_user"]
CALLS: ["project", "add_user"]
CALLS: ["retrieve_member", "retrieve_access_level", "can_update_member?", "attributes", "created_by", "request?", "new", "execute", "save"]
CALLS: ["created_by_id", "created_by_id", "find_by"]
CALLS: ["owner?", "new_record?"]
CALLS: ["requested_at", "present?"]
CALLS: ["type", "underscore", "can?"]
CALLS: ["access_levels", "to_i", "fetch"]
CALLS: ["retrieve_user", "is_a?", "id", "members", "id", "build", "members_and_requesters", "id", "find_or_initialize_by", "members", "build"]
CALLS: ["is_a?", "find_by", "find_by"]
CALLS: ["add_user"]
CALLS: ["config", "lfs", "enabled", "nil?", "config", "lfs", "enabled"]
CALLS: ["current_user", "can?"]
CALLS: ["current_user", "create_params", "merge", "new", "execute", "persisted?", "admin_deploy_keys_path", "local_assigns", "fetch", "local_assigns", "fetch", "deploy_keys_project_for", "form_errors", "label", "text_field", "new_record?", "label", "help_page_path", "text_area", "label", "text_field", "present?", "check_box", "label", "fields_for", "submit", "admin_deploy_keys_path", "admin_root_path"]
CALLS: ["broadcast_message_params", "new", "save", "admin_broadcast_messages_path", "admin_root_path"]
CALLS: ["params", "require", "permit"]
CALLS: ["current_user", "application_params", "new", "request", "execute", "persisted?", "flash", "t", "admin_application_url", "admin_root_path"]
CALLS: ["report_params", "new", "reporter", "current_user", "save", "notify", "user"]
CALLS: ["verification_enabled?", "domain", "domain", "info", "notification_service", "domain", "public_send"]
CALLS: ["pages_domain_verification_enabled?"]
CALLS: ["webhook", "new", "project_name", "pretext", "activity", "attachments", "ping"]
CALLS: ["project", "full_name", "gsub"]
CALLS: ["project", "full_name", "gsub"]
CALLS: ["user_combined_name", "action", "wiki_page_link", "project_link", "title", "user_avatar"]
CALLS: ["user_avatar_without_link", "user_path", "link_to", "mail_to"]
CALLS: ["try", "merge", "user_avatar_url_for", "nil?", "push", "push", "placeholder_image", "tag"]
CALLS: ["new"]
CALLS: []
CALLS: ["avatar_icon_for_user", "avatar_icon_for_email"]
CALLS: ["avatar_url", "default_avatar", "gravatar_icon"]
CALLS: ["asset_path"]
CALLS: ["new", "execute", "default_avatar"]
CALLS: ["try", "find_by_any_email", "avatar_icon_for_user", "gravatar_icon"]
CALLS: ["params", "find_tag"]
CALLS: ["tags", "name", "find"]
CALLS: ["image", "params", "tag"]
CALLS: ["markdown", "description", "description_message"]
CALLS: ["project", "render", "merge!", "render", "post_process", "sanitize", "truncate"]
CALLS: ["format", "attachment_color"]
CALLS: []
CALLS: ["status"]
CALLS: []
CALLS: ["note", "format", "attachment_color"]
CALLS: ["issue_title", "issue_url", "description", "format"]
CALLS: ["issues_url", "to_s", "gsub"]
CALLS: ["project", "project_issue_url"]
CALLS: ["reference_prefix", "issue_iid", "title"]
CALLS: ["project", "project_issue_url"]
CALLS: ["present?", "markdown_unsafe", "prepare_for_rendering"]
CALLS: ["present?", "current_user", "current_user", "merge!", "post_process", "preserve"]
CALLS: ["render"]
CALLS: ["new_branch?", "removed_branch?", "user_combined_name", "ref_type", "project_link", "compare_link", "user_avatar"]
CALLS: ["ref", "tag_ref?"]
CALLS: ["compare_url"]
CALLS: ["truncate_sha", "truncate_sha", "config", "gitlab", "url"]
CALLS: []
CALLS: []
CALLS: ["truncate_sha"]
CALLS: ["project_url", "before", "after"]
CALLS: ["after", "blank_ref?"]
CALLS: ["before", "blank_ref?"]
CALLS: ["new_branch?", "removed_branch?", "markdown", "commit_messages", "commit_message_attachments"]
CALLS: ["commit_messages", "format", "attachment_color"]
CALLS: ["commits", "compose_commit_message", "map", "join"]
CALLS: ["truncate_sha"]
CALLS: ["pipeline_link", "ref_type", "branch_link", "user_combined_name", "humanized_status", "project_link", "duration", "pretty_duration", "user_avatar"]
CALLS: []
CALLS: ["ref", "branch_url"]
CALLS: ["project_url", "ref"]
CALLS: ["project_url", "ref"]
CALLS: ["pipeline_id", "pipeline_url"]
CALLS: ["project_url", "pipeline_id"]
CALLS: ["project", "id", "project_pipeline_url"]
CALLS: ["ref", "branch_url"]
CALLS: ["status", "status"]
CALLS: ["duration", "hour", "at", "utc", "strftime"]
CALLS: ["calculate_duration"]
CALLS: ["started_at", "finished_at", "finished_at", "started_at", "started_at", "now", "started_at"]
CALLS: ["markdown", "message", "message", "format", "attachment_color"]
CALLS: []
CALLS: ["user_combined_name", "target", "note_url", "link", "project_link", "formatted_title", "user_avatar"]
CALLS: ["title", "format_title"]
CALLS: ["render_line"]
CALLS: ["lines", "first", "chomp", "markdown"]
CALLS: ["lines", "first", "chomp"]
CALLS: ["lines", "first", "chomp"]
CALLS: []
CALLS: ["noteable", "is_a?", "noteable", "snippet_note_path", "project_note_path"]
CALLS: ["markdown", "note", "description_message"]
CALLS: ["state", "user_combined_name", "project_link", "merge_request_link", "user_avatar"]
CALLS: ["merge_request_title", "merge_request_url", "link"]
CALLS: ["project_url", "merge_request_iid"]
CALLS: ["reference_prefix", "merge_request_iid", "title"]
CALLS: ["project", "project_merge_request_url"]
CALLS: []
CALLS: ["state", "user_combined_name", "project_link", "issue_link", "user_avatar"]
CALLS: ["issue_title", "issue_url", "link"]
CALLS: ["opened_issue?", "markdown", "description", "description_message"]
CALLS: ["action"]
CALLS: []
CALLS: []
CALLS: ["markdown", "message", "message", "format"]
CALLS: ["project", "project", "full_name"]
CALLS: ["html", "load_events", "count", "pager_json", "json", "respond_to", "_", "container_class", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["current_user", "user", "params", "new", "execute", "current_user", "new", "request", "format", "atom?", "execute"]
CALLS: ["id", "where", "params", "to_i", "event_filter", "new", "to_a", "current_user", "new", "request", "format", "atom?", "execute"]
CALLS: ["cookies", "present?", "cookies", "split", "new"]
CALLS: ["params", "params", "params", "params", "group", "current_user", "new", "execute", "includes", "params", "to_i", "event_filter", "new", "to_a", "current_user", "new", "request", "format", "atom?", "execute"]
CALLS: ["params", "current_user", "new", "execute", "current_user", "authorized_projects", "params", "to_i", "new", "to_a", "current_user", "new", "execute"]
CALLS: ["params", "merge", "load_projects", "params", "to_i", "event_filter", "new", "to_a", "current_user", "new", "request", "format", "atom?", "execute"]
CALLS: ["render_to_string"]
CALLS: ["html", "load_events", "count", "pager_json", "json", "respond_to", "rss_url_options", "group_url", "name", "auto_discovery_link_tag", "rss_url_options", "group_path", "icon", "icon", "all", "_", "s_", "event_filter_visible", "push", "_", "s_", "event_filter_visible", "merged", "_", "s_", "event_filter_visible", "issue", "_", "s_", "comments_visible?", "comments", "_", "s_", "team", "_", "s_", "spinner", "name", "page_description", "description", "header_title", "group_title", "current_user"]
CALLS: ["current_user", "try"]
CALLS: ["icon"]
CALLS: ["event_filter_visible", "event_filter_visible", "event_filter_visible"]
CALLS: ["current_user", "feature_available?"]
CALLS: ["project", "project_feature", "access_level", "guest?", "admin?"]
CALLS: ["id", "max_member_access"]
CALLS: ["access_level", "get_permission"]
CALLS: ["project", "team", "member?", "full_private_access?"]
CALLS: ["id", "max_member_access"]
CALLS: ["max_member_access_for_user"]
CALLS: ["html", "load_events", "count", "pager_json", "json", "respond_to", "rss_url_options", "dashboard_projects_url", "auto_discovery_link_tag", "activity_dashboard_path", "container_class", "params", "nil?", "active_when", "activity_dashboard_path", "params", "active_when", "activity_dashboard_path", "rss_url_options", "dashboard_projects_path", "icon", "icon", "all", "_", "s_", "event_filter_visible", "push", "_", "s_", "event_filter_visible", "merged", "_", "s_", "event_filter_visible", "issue", "_", "s_", "comments_visible?", "comments", "_", "s_", "team", "_", "s_", "spinner", "header_title", "root_path"]
CALLS: []
CALLS: ["webhook", "new", "pretext", "attachments", "fallback", "ping"]
CALLS: ["message", "format"]
CALLS: []
CALLS: ["persisted?", "id", "notify", "deliver_later"]
CALLS: ["admins", "pluck", "mail"]
CALLS: ["", "where"]
CALLS: ["deliverable?", "find", "admin_notification_email", "user", "name", "user", "username", "mail"]
CALLS: ["admin_notification_email", "present?"]
CALLS: ["params", "require", "permit"]
CALLS: ["state", "target_project", "current_user", "change_status"]
CALLS: ["dup", "gfm_reference", "new", "create_note"]
CALLS: ["class", "to_s", "underscore", "humanize", "downcase", "to_reference"]
CALLS: ["state", "project", "current_user", "change_status"]
CALLS: ["project", "current_user", "state", "change_status"]
CALLS: ["success", "delete_artifact!"]
CALLS: ["build", "reload", "build", "has_expiring_artifacts?", "build", "erase_artifacts!"]
CALLS: ["artifacts_expire_at", "present?", "artifacts_expire_at", "now"]
CALLS: ["remove_artifacts_file!", "remove_artifacts_metadata!", "save"]
CALLS: ["job_artifacts_metadata", "job_artifacts_metadata", "destroy", "remove_legacy_artifacts_metadata!"]
CALLS: ["current_user", "can?", "access_denied!", "destroy", "snippets_path", "snippets_path", "current_user"]
CALLS: ["current_user", "username", "request", "remote_ip", "info", "flash"]
CALLS: ["destroy_confirmation_valid?", "current_user", "current_user", "delete_async", "session", "try", "new_user_session_path", "s_", "profile_account_path", "destroy_confirmation_failure_message"]
CALLS: ["block", "id", "id", "perform_async"]
CALLS: ["block", "update_user", "redirect_back_or_admin_user", "redirect_back_or_admin_user", "admin_root_path"]
CALLS: ["current_user", "user", "new", "execute"]
CALLS: ["default_route", "redirect_back_or_default"]
CALLS: []
CALLS: ["current_user", "confirm_deletion_with_password?", "s_", "s_"]
CALLS: ["password_automatically_set?", "allow_password_authentication?"]
CALLS: ["allow_password_authentication_for_web?", "allow_password_authentication_for_git?"]
CALLS: ["password_authentication_enabled_for_git?", "ldap_user?"]
CALLS: ["identities", "loaded?", "identities", "provider", "ldap_provider?", "extern_uid", "nil?", "find", "identities", "exists?"]
CALLS: ["password_authentication_enabled_for_web?", "ldap_user?"]
CALLS: ["current_user", "confirm_deletion_with_password?", "current_user", "params", "valid_password?", "current_user", "username", "params"]
CALLS: ["current_user", "can?", "access_denied!", "current_user", "new", "async_execute", "flash", "_", "full_name", "dashboard_projects_path", "edit_project_path", "message", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["hook", "id", "data", "hook_name", "perform_async"]
CALLS: ["hooks", "params", "find"]
CALLS: ["hooks", "params", "find"]
CALLS: ["params", "find"]
CALLS: ["params", "find"]
CALLS: ["project", "update_attribute", "project", "id", "current_user", "id", "params", "perform_async", "logger", "current_user", "id", "project", "full_path", "info"]
CALLS: ["group", "id", "current_user", "id", "perform_async", "logger", "current_user", "id", "group", "id", "info"]
CALLS: ["project", "id", "current_user", "id", "perform_async"]
CALLS: ["supported_events", "include?", "id", "perform_async"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["new", "async_execute"]
CALLS: ["params", "find_page", "current_user", "new", "execute", "project_wiki_path", "fluid_layout", "_", "title", "capitalize", "_", "wiki_page_errors", "icon", "persisted?", "title", "capitalize", "project_wiki_path", "title", "capitalize", "persisted?", "s_", "s_", "current_user", "can?", "s_", "persisted?", "project_wiki_history_path", "s_", "current_user", "can?", "project_wiki_path", "s_", "_", "persisted?", "s_", "s_", "title", "namespace", "becomes", "persisted?", "form_errors", "persisted?", "last_commit_sha", "hidden_field", "label", "title", "text_field", "persisted?", "icon", "s_", "icon", "help_page_path", "label", "format", "options_for_select", "select", "label", "slug", "project_wiki_preview_markdown_path", "s_", "slug", "project_wiki_preview_markdown_path", "s_", "html_safe", "s_", "help_page_path", "s_", "html_safe", "label", "text_field", "persisted?", "_", "submit", "_", "project_wiki_path", "s_", "submit", "_", "project_wiki_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["page_title_and_dir", "wiki", "page", "new"]
CALLS: ["trigger", "destroy", "flash", "flash", "project_settings_ci_cd_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["success?", "merge_when_pipeline_succeeds?", "mergeable?", "todo_service", "merge_request_became_unmergeable", "merge_user_id", "merge_params", "merge_async", "pipeline_merge_requests"]
CALLS: ["merge_when_pipeline_succeeds?", "merge_user", "create_unmergeable_todo"]
CALLS: ["project", "attributes_for_todo", "create_todos"]
CALLS: ["ref", "merge_requests_for", "head_pipeline", "each"]
CALLS: ["valid_token?", "find_chat_user", "user", "project", "new", "execute", "authorize_chat_name_url", "new", "authorize"]
CALLS: ["new", "execute"]
CALLS: ["new", "execute"]
CALLS: ["respond_to?", "token", "present?", "token", "variable_size_secure_compare"]
CALLS: ["respond_to?", "token", "present?", "token", "variable_size_secure_compare"]
CALLS: ["token", "token", "variable_size_secure_compare"]
CALLS: ["params", "presence", "request", "headers", "present?", "health_check_access_token", "variable_size_secure_compare"]
CALLS: ["ensure_health_check_access_token!"]
CALLS: ["is_a?", "format", "tap"]
CALLS: ["project", "triggers", "params", "find", "render_404"]
CALLS: ["project", "current_user", "new", "params", "execute", "project_tags_path", "html", "js", "project_tags_path", "html", "js", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["current_user", "can?", "access_denied!", "destroy", "project_snippets_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project", "only_for?", "destroy", "runners_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["projects"]
CALLS: ["project", "runner_projects", "params", "find", "destroy", "project", "runners_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["tag", "delete", "json", "respond_to", "json", "respond_to"]
CALLS: ["image", "destroy", "json", "respond_to", "json", "respond_to"]
CALLS: ["destroy_service_class", "current_user", "new", "execute", "redirect_to_repository_settings", "html", "js", "respond_to"]
CALLS: ["service_namespace"]
CALLS: ["schedule", "destroy", "pipeline_schedules_path", "pipeline_schedules_path", "_"]
CALLS: ["project", "pipeline_schedules", "params", "find"]
CALLS: ["destroy", "project_pages_path", "html", "js", "respond_to"]
CALLS: ["project", "remove_pages", "project", "pages_domains", "destroy_all", "project_pages_path", "html", "respond_to"]
CALLS: ["namespace", "new", "execute", "path", "hex", "new", "path", "namespace", "full_path", "rename_project", "minutes", "namespace", "full_path", "perform_in"]
CALLS: ["new", "execute"]
CALLS: ["collection", "clear"]
CALLS: ["new", "current_user", "mark_todos_as_done", "dashboard_todos_path", "html", "js", "todos_counts", "merge", "json", "respond_to", "header_title", "root_path"]
CALLS: ["update_todos_state"]
CALLS: ["where", "not", "pluck", "unscope", "update_all", "update_todos_count_cache"]
CALLS: ["current_user", "todos_pending_count", "number_with_delimiter", "current_user", "todos_done_count", "number_with_delimiter"]
CALLS: ["current_user", "can?", "access_denied!", "project", "current_user", "new", "milestone", "execute", "namespace_project_milestones_path", "html", "js", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["milestone?", "target"]
CALLS: ["target_type"]
CALLS: ["milestones", "params", "find_by!"]
CALLS: ["params", "group", "group_projects", "params", "build", "group", "milestones", "params", "find_by_iid", "render_404"]
CALLS: ["params", "build", "render_404"]
CALLS: ["destroy", "find_labels", "project_labels_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["extract_references", "current_user", "project", "id", "split", "new", "execute"]
CALLS: ["project", "current_user", "new", "current_user", "analyze", "references"]
CALLS: ["noteable", "part_of_discussion?", "discussion", "notes", "id", "id", "take_while"]
CALLS: ["to_discussion", "individual_note?"]
CALLS: ["part_of_discussion?", "noteable", "notes", "discussion_id", "find_discussion", "to_discussion"]
CALLS: ["params", "find_discussion", "render_404"]
CALLS: ["current_user", "id", "params", "new", "execute"]
CALLS: ["hook", "destroy", "project_settings_integrations_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project", "project_group_links", "params", "find", "project", "current_user", "new", "execute", "project", "project_project_members_path", "html", "js", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["cluster", "destroy", "flash", "_", "project", "project_clusters_path", "flash", "_", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["params", "unescape", "project", "current_user", "new", "execute", "flash", "project_branches_path", "html", "js", "json", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project_tree_path", "project_blob_path", "create_commit", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["remove_avatar!", "save", "edit_project_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["current_user", "u2f_registrations", "params", "find", "destroy", "profile_two_factor_auth_path"]
CALLS: ["current_user", "disable_two_factor!", "profile_account_path", "header_title", "profile_path"]
CALLS: ["transaction_begin", "update_attributes", "u2f_registrations", "destroy_all", "transaction_end", "transaction"]
CALLS: ["current_user", "keys", "params", "find", "destroy", "profile_keys_url", "html", "js", "respond_to", "header_title", "profile_path"]
CALLS: ["destroy", "profile_gpg_keys_url", "html", "js", "respond_to"]
CALLS: ["current_user", "current_user", "new", "execute", "profile_emails_url", "html", "js", "respond_to", "header_title", "profile_path"]
CALLS: ["chat_names", "params", "find", "destroy", "flash", "chat_name", "flash", "chat_name", "profile_chat_names_path"]
CALLS: ["current_user", "current_user", "new", "remove_avatar!", "execute", "profile_path", "header_title", "profile_path"]
CALLS: ["params", "present?", "current_resource_owner", "oauth_authorized_tokens", "params", "find", "revoke", "params", "current_resource_owner", "revoke_all_for", "applications_profile_url", "t"]
CALLS: ["with_key_and_subkeys", "where", "verification_statuses", "not", "verification_statuses", "zone", "now", "update_all", "destroy"]
CALLS: ["subkeys", "pluck", "arel_table", "id", "eq", "arel_table", "in", "or", "where"]
CALLS: ["deploy_tokens", "params", "find", "revoke!", "project", "project_settings_repository_path"]
CALLS: ["update!"]
CALLS: ["update!"]
CALLS: ["finder", "params", "find", "revoke!", "flash", "name", "flash", "name", "profile_personal_access_tokens_path"]
CALLS: ["revoke", "profile_gpg_keys_url", "html", "js", "respond_to"]
CALLS: ["finder", "params", "find", "revoke!", "flash", "name", "flash", "name", "admin_user_impersonation_tokens_path"]
CALLS: ["current_user", "new", "async_execute", "root_path", "name", "name", "page_description", "description", "header_title", "group_title", "current_user"]
CALLS: ["destroy", "group_labels_path", "name", "html", "js", "respond_to"]
CALLS: ["remove_avatar!", "save", "edit_group_path", "name", "page_description", "description", "header_title", "group_title", "current_user"]
CALLS: ["new", "params", "current_user", "mark_todos_as_done_by_ids", "dashboard_todos_path", "html", "js", "todos_counts", "json", "respond_to", "header_title", "root_path"]
CALLS: ["todos_by_ids", "mark_todos_as_done"]
CALLS: ["todos", "where"]
CALLS: ["note", "editable?", "project", "current_user", "new", "note", "execute", "js", "respond_to"]
CALLS: []
CALLS: ["manual_configuration?", "prometheus_installed?"]
CALLS: ["template?", "project", "project", "clusters", "enabled", "application_prometheus", "installed?", "any?"]
CALLS: ["template"]
CALLS: ["template"]
CALLS: ["system?"]
CALLS: ["membershipable", "members_and_requesters", "params", "find", "current_user", "new", "execute", "source_type", "members_page_url", "html", "js", "respond_to"]
CALLS: ["issuable", "project", "current_user", "new", "issuable", "execute", "issuable", "human_class_name", "flash", "parent", "issuable", "class", "polymorphic_path", "html", "json", "respond_to"]
CALLS: ["base_class_name", "titleize", "downcase"]
CALLS: ["board", "lists", "destroyable", "params", "find", "board_parent", "current_user", "new", "execute"]
CALLS: ["", "list_types", "where"]
CALLS: ["user", "current_user", "params", "permit", "delete_async", "admin_users_path", "html", "json", "respond_to", "admin_root_path"]
CALLS: ["params", "find", "params", "current_user", "remove_user", "admin_spam_logs_path", "user", "username", "destroy", "admin_root_path"]
CALLS: ["user", "delete_async"]
CALLS: ["user", "delete_async"]
CALLS: ["destroy", "admin_runners_path", "admin_root_path"]
CALLS: ["params", "find", "runner", "destroy", "admin_runner_path", "admin_root_path"]
CALLS: ["destroy", "templates", "admin_labels_path", "html", "js", "respond_to", "admin_root_path"]
CALLS: ["", "where"]
CALLS: ["user", "keys", "params", "find", "destroy", "user", "keys_admin_user_path", "html", "user", "keys_admin_user_path", "html", "respond_to", "admin_root_path"]
CALLS: ["current_user", "warden", "impersonator", "set_user", "impersonator", "username", "username", "info", "session", "admin_user_path", "admin_root_path"]
CALLS: ["find_by", "log_error"]
CALLS: ["current_user"]
CALLS: ["session", "session", "find"]
CALLS: ["params", "find_by", "nil?", "root_path", "blocked?"]
CALLS: ["destroy", "new", "execute", "admin_user_identities_path", "admin_user_identities_path", "admin_root_path"]
CALLS: ["hook", "destroy", "admin_hooks_path", "admin_root_path"]
CALLS: ["current_user", "new", "async_execute", "admin_groups_path", "name", "admin_root_path"]
CALLS: ["deploy_key", "destroy", "admin_deploy_keys_path", "html", "json", "respond_to", "admin_root_path"]
CALLS: ["params", "find"]
CALLS: ["deploy_keys", "params", "find"]
CALLS: ["destroy", "redirect_back_or_default", "html", "js", "respond_to", "admin_root_path"]
CALLS: ["destroy", "admin_applications_url", "admin_root_path"]
CALLS: ["params", "find", "params", "current_user", "remove_user", "destroy", "admin_root_path"]
CALLS: ["job_artifacts_archive", "job_artifacts_archive", "destroy", "remove_legacy_artifacts_file!"]
CALLS: ["merge_requests_for_source_branch", "each"]
CALLS: ["merge_requests_for"]
CALLS: ["", "merge"]
CALLS: ["success", "merge"]
CALLS: ["success", "merge"]
CALLS: ["success", "merge"]
CALLS: []
CALLS: ["merge_when_pipeline_succeeds?", "merge_when_pipeline_succeeds", "merge_user", "merge_params", "merge_params", "delete", "merge_params", "delete", "save"]
CALLS: ["to_reference", "new", "create_note"]
CALLS: ["opened?"]
CALLS: ["", "where"]
CALLS: ["current_user", "can_cancel_merge_when_pipeline_succeeds?", "access_denied!", "current_user", "new", "cancel", "serialize_widget", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["can_be_merged_by?", "author"]
CALLS: ["project", "new", "target_branch", "can_update_branch?"]
CALLS: ["serializer", "represent"]
CALLS: ["current_user", "merge_request", "project", "new"]
CALLS: ["current_user", "issue", "project", "new"]
CALLS: []
CALLS: ["iwhere", "take"]
CALLS: ["postgresql?", "connection", "quote_table_name", "where", "each"]
CALLS: ["base_string", "increment_counter!", "base_string"]
CALLS: []
CALLS: ["respond_to?", "call"]
CALLS: ["pipeline", "cancel_running", "project", "project_pipelines_path", "html", "json", "respond_to"]
CALLS: ["url_helpers", "project_pipelines_path"]
CALLS: ["cancelable_statuses", "block_given?", "cancel", "find_each", "retry_optimistic_lock"]
CALLS: ["cancelable?", "respond_422", "cancel", "build_path"]
CALLS: ["build", "cancelable?", "request", "current_user", "build", "can?"]
CALLS: []
CALLS: ["cancelable_statuses", "any?"]
CALLS: ["active?"]
CALLS: ["project", "project_job_path"]
CALLS: ["url_helpers", "id", "project_build_path"]
CALLS: []
CALLS: ["params", "find_routable!"]
CALLS: ["request", "get?", "find_by_full_path", "routable_authorized?", "ensure_canonical_path", "handle_not_found_or_authorized"]
CALLS: ["for_user", "find_by_full_path", "owner"]
CALLS: ["", "where"]
CALLS: ["mysql?", "connection", "quote", "where_full_path_in", "reorder", "take", "postgresql?", "joins", "find_by", "joins", "find_by"]
CALLS: ["postgresql?", "connection", "quote", "each", "empty?", "none", "joins", "join", "where"]
CALLS: ["request", "get?", "full_path", "casecmp", "flash", "class", "to_s", "titleize", "build_canonical_path"]
CALLS: ["safe_params", "to_param", "merge", "url_for"]
CALLS: ["params", "respond_to?", "params", "except", "permit!", "params"]
CALLS: ["params", "namespace", "to_param", "params", "to_param", "safe_params", "url_for"]
CALLS: ["params", "namespace", "to_param", "params", "to_param", "params", "url_for"]
CALLS: ["action_name", "group_path", "params", "to_param", "safe_params", "url_for"]
CALLS: ["params", "to_param", "params", "url_for"]
CALLS: ["class", "to_s", "underscore", "current_user", "can?", "call"]
CALLS: ["route_not_found"]
CALLS: ["current_user", "not_found", "authenticate_user!"]
CALLS: ["current_user", "request", "get?", "request", "xhr?", "request", "fullpath", "new_user_session_path"]
CALLS: ["current_user", "allow_signup?", "request", "fullpath", "new_user_session_path"]
CALLS: ["signup_enabled?", "password_authentication_enabled_for_web?"]
CALLS: ["current_user"]
CALLS: ["current_user"]
CALLS: ["params", "find", "new", "represent"]
CALLS: ["params", "find_by!"]
CALLS: ["params", "find_by!"]
CALLS: ["params", "find_by!"]
CALLS: ["params", "find_by!"]
CALLS: ["render_to_string"]
CALLS: ["notes", "params", "find"]
CALLS: []
CALLS: ["for_commit?", "project", "commit_id", "commit"]
CALLS: ["target_type"]
CALLS: ["allowed?", "commit", "noteables_for_type", "find"]
CALLS: ["id", "new", "execute", "id", "new", "execute", "new", "execute", "all"]
CALLS: ["params", "downcase", "current_user", "id", "new", "params", "find_by", "current_user", "id", "new", "params", "find_by", "params", "commit"]
CALLS: ["params", "try"]
CALLS: ["issues", "params", "where", "reorder", "take!", "notes", "new", "current_user", "can?", "render_404"]
CALLS: ["cycle_analytics", "events", "render_events"]
CALLS: ["project", "events_params", "options", "new"]
CALLS: ["params", "present?", "params", "permit"]
CALLS: ["html", "json", "respond_to"]
CALLS: ["params", "params", "strip_tags", "sanitize", "unescape", "default_branch"]
CALLS: ["issues_finder", "params", "find"]
CALLS: ["board", "group_board?", "current_user", "board_parent", "id", "new", "current_user", "board_parent", "id", "new"]
CALLS: ["params", "require", "merge_request_params_attributes", "permit"]
CALLS: []
CALLS: ["params"]
CALLS: ["params"]
CALLS: ["info"]
CALLS: ["info"]
CALLS: ["closes_issues", "target_project", "to_reference", "map", "source_branch", "target_branch", "title", "present?", "to_sentence", "description", "present?", "description", "to_reference", "join"]
CALLS: ["merge_request?", "target"]
CALLS: ["target_type"]
CALLS: ["includes", "ref", "pipeline", "project", "where", "reorder", "commit_shas", "pipeline", "sha", "include?", "find"]
CALLS: ["merge_requests", "params", "find_by!"]
CALLS: ["current_user", "id", "new", "params", "find_by!"]
CALLS: ["current_user", "id", "new", "execute", "opened", "find_by"]
CALLS: ["repository", "current_user", "source", "merge_request", "target_branch", "merge_request", "ff_merge", "message", "message", "merge_request", "update"]
CALLS: ["commit", "id", "nil?", "update", "raw", "ff_merge", "with_cache_hooks"]
CALLS: ["project", "origin_sha", "origin_ref", "commit"]
CALLS: ["raw_repository", "root_ref"]
CALLS: ["exists?", "is_a?", "find_commit"]
CALLS: ["repository", "commit"]
CALLS: ["commit_id", "present?", "project", "commit_id", "commit"]
CALLS: ["project", "commit_sha", "commit"]
CALLS: ["project", "sha", "commit"]
CALLS: ["project", "name", "commit"]
CALLS: ["project", "sha", "lazy"]
CALLS: ["for", "group_by", "map", "repository", "commits_by", "project", "id", "call", "each", "each", "batch"]
CALLS: ["find_by"]
CALLS: ["present?", "raw_repository", "batch_by_oid", "present?", "decorate"]
CALLS: ["objects", "present?", "render_lfs_not_found", "download_request?", "download_objects!", "upload_request?", "upload_objects!", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["action_name", "include?"]
CALLS: ["action_name"]
CALLS: ["params", "include?"]
CALLS: ["params"]
CALLS: ["objects", "existing_oids", "include?", "upload_actions", "each", "objects"]
CALLS: ["project", "http_url_to_repo", "request", "headers", "compact"]
CALLS: ["project", "all_lfs_objects", "objects", "to_s", "map", "where", "pluck"]
CALLS: ["lfs_storage_project", "lfs_objects"]
CALLS: ["forked?", "fork_source"]
CALLS: ["forked?", "forked_from_project", "fork_network", "root_project"]
CALLS: ["objects", "existing_oids", "include?", "download_actions", "project", "can?", "each", "objects"]
CALLS: ["project", "http_url_to_repo", "request", "headers", "compact"]
CALLS: ["params"]
CALLS: ["params"]
CALLS: ["upload_pack?"]
CALLS: ["git_command"]
CALLS: ["action_name", "params", "action_name", "dasherize"]
CALLS: []
CALLS: []
CALLS: ["params", "to_a"]
CALLS: ["help_url", "render"]
CALLS: ["for", "group_by", "values_at", "map", "repository", "blobs_at", "project", "commit_id", "path", "call", "each", "each", "batch"]
CALLS: ["raw_repository", "batch_blobs", "project", "decorate", "map"]
CALLS: ["params"]
CALLS: ["commit"]
CALLS: ["params", "presence", "all_commits", "exists?", "commit"]
CALLS: ["params", "commit_by"]
CALLS: ["commit", "render_404"]
CALLS: ["head_commit_sha", "project", "head_commit_sha", "commit_by"]
CALLS: ["head", "project", "new", "strong_memoize"]
CALLS: ["args", "fetch", "avatar_path"]
CALLS: ["present?", "asset_host", "present?", "respond_to?", "public?", "gitlab_config", "base_url", "gitlab_config", "relative_url_root", "avatar", "local_url"]
CALLS: ["class", "base_dir", "dynamic_segment", "filename", "join"]
CALLS: ["model", "oid", "model", "oid", "join"]
CALLS: ["model", "id", "model", "created_at", "utc", "strftime", "model", "project_id", "to_s", "model", "id", "to_s", "join"]
CALLS: ["model", "id", "model", "created_at", "utc", "strftime", "disk_hash", "disk_hash", "disk_hash", "model", "job_id", "to_s", "model", "id", "to_s", "join"]
CALLS: ["raise"]
CALLS: ["secret"]
CALLS: ["model", "class", "to_s", "underscore", "mounted_as", "to_s", "model", "id", "to_s", "join"]
CALLS: ["model", "class", "to_s", "underscore", "mounted_as", "to_s", "model", "id", "to_s", "join"]
CALLS: ["config", "gitlab"]
CALLS: ["config", "gitlab"]
CALLS: ["ancestors", "reverse", "group_title_link", "add_to_breadcrumb_dropdown", "group_title_link", "each_with_index", "_", "group_title_link", "html_safe", "simple_sanitize", "link_to", "html_safe"]
CALLS: ["group_path", "try", "env", "test?", "group_icon", "name", "simple_sanitize", "html_safe", "link_to"]
CALLS: ["group_icon_url"]
CALLS: ["is_a?", "find_by_full_path", "try", "helpers", "image_path"]
CALLS: []
CALLS: ["sprite_icon"]
CALLS: ["blank?", "sprite_icon_path", "content_tag", "empty?", "content_tag"]
CALLS: ["asset_host", "config", "gitlab", "url", "helpers", "image_path"]
CALLS: ["sanitize"]
CALLS: ["respond_to?", "find_by_full_path", "avatar_url", "avatar_url", "project_identicon"]
CALLS: ["id", "values", "name", "upcase", "content_tag"]
CALLS: ["params", "sub"]
CALLS: ["link_to", "breadcrumb_list_item"]
CALLS: ["present?", "squish", "present?", "sanitize", "truncate_words"]
CALLS: ["root", "join"]
CALLS: ["root", "join", "html", "js", "any", "respond_to"]
CALLS: ["collection", "newest_first"]
CALLS: ["order", "where"]
CALLS: ["allow_n_plus_1_calls", "header_title", "root_path"]
CALLS: ["current_user", "root_path", "explore_root_path", "redirect_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project_settings_ci_cd_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["params", "params", "presence", "sort_value_recently_updated", "params", "params", "new", "execute", "paginate_array", "params", "page", "map", "pipelines", "latest_successful_for_refs", "project", "releases", "where", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["newest_first", "success", "ref", "each_with_object"]
CALLS: []
CALLS: ["current_user", "params", "new", "execute", "params", "page", "out_of_range?", "total_pages", "total_pages", "project_snippets_path", "current_user", "team", "current_user", "member?", "current_user", "admin?", "local_assigns", "current_user", "fetch", "local_assigns", "fetch", "params", "nil?", "active_when", "subject_snippets_path", "snippets", "count", "snippets", "public_and_internal", "count", "params", "active_when", "subject_snippets_path", "snippets", "are_private", "count", "params", "active_when", "subject_snippets_path", "snippets", "are_internal", "count", "params", "active_when", "subject_snippets_path", "snippets", "are_public", "count", "current_user", "can?", "new_project_snippet_path", "local_assigns", "fetch", "each", "empty?", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["", "where"]
CALLS: ["", "where"]
CALLS: ["", "where"]
CALLS: ["is_a?", "project_snippets_path", "dashboard_snippets_path"]
CALLS: ["id", "api_v4_projects_badges_path", "_", "_"]
CALLS: ["project_settings_ci_cd_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["new", "request", "response", "with_pagination", "tags", "represent", "json", "respond_to"]
CALLS: ["project", "container_repositories", "html", "project", "current_user", "new", "represent", "json", "respond_to"]
CALLS: ["redirect_to_repository_settings"]
CALLS: ["params", "presence", "sort_value_name", "project_group_links", "pluck", "personal?", "namespace_id", "group", "group", "ancestors", "pluck", "current_user", "new", "execute", "params", "present?", "joins", "params", "search", "merge", "invited_groups", "params", "search", "select", "where", "sort_by_attribute", "params", "page", "present_members", "new", "current_user", "execute", "present_members", "project_members", "new", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["group"]
CALLS: []
CALLS: ["current_user", "new", "fabricate!"]
CALLS: ["params", "project", "new", "execute", "params", "page", "per", "project", "new", "execute", "count", "project", "new", "execute", "count", "project", "new", "execute", "count", "project", "new", "execute", "count", "map", "html", "response", "set_header", "new", "request", "response", "with_pagination", "represent", "json", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["params", "new", "execute", "new", "params", "execute", "includes", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["params", "milestones", "sort_by_attribute", "namespace", "becomes", "for_projects", "params", "page", "html", "to_json", "json", "respond_to", "container_class", "milestones", "milestone_counts", "milestones", "params", "milestone_class_for_state", "milestones_filter_path", "counts", "params", "milestone_class_for_state", "milestones_filter_path", "counts", "params", "milestone_class_for_state", "milestones_filter_path", "counts", "current_user", "can?", "new_project_milestone_path", "blank?", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["", "includes", "references", "where", "where", "not"]
CALLS: ["", "where", "includes"]
CALLS: ["blank?"]
CALLS: ["reorder", "group", "count", "values", "sum"]
CALLS: ["project_milestones_path", "group_milestones_path", "dashboard_milestones_path"]
CALLS: ["html", "view_to_html_string", "as_json", "json", "respond_to", "current_user", "can?", "merge_request_source_project_for_project", "project_new_merge_request_path", "current_user", "new_issuable_address", "container_class", "merge_requests", "exists?", "container_class", "exists?", "local_assigns", "fetch", "local_assigns", "fetch", "_", "_", "_", "_", "_", "_", "present?", "merge_request", "local_assigns", "fetch", "local_assigns", "fetch", "_", "_", "_", "_", "_", "_", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["supports_issue_creation?", "ensure_incoming_email_token!", "full_path", "incoming_email_token", "reply_address"]
CALLS: ["current_user", "can?", "current_user", "can?", "current_user", "fork_of"]
CALLS: ["supports_issue_creation?", "render_404", "current_user", "reset_incoming_email_token!", "current_user", "params", "new_issuable_address", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project", "user", "params", "new", "execute", "render_json"]
CALLS: ["prioritized", "unprioritized", "params", "page", "html", "new", "represent_appearance", "json", "respond_to", "current_user", "can?", "exists?", "exists?", "container_class", "new_project_label_path", "empty?", "params", "present?", "params", "set_priorities_project_labels_path", "empty?", "present?", "each", "present?", "each", "_", "_", "current_user", "can?", "_", "new_project_label_path", "_", "_", "generate_project_labels_path", "_", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["arel_table", "arel_table", "join", "eq", "id", "eq", "and", "on", "join_sources", "joins", "eq", "where"]
CALLS: ["joins", "where", "reorder"]
CALLS: ["params", "project", "builds", "relevant", "order", "pending", "reverse_order", "running", "reverse_order", "finished", "includes", "params", "page", "per", "without_count", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["", "where"]
CALLS: ["html", "atom", "view_to_html_string", "as_json", "json", "respond_to", "current_user", "can?", "current_user", "new_issuable_address", "safe_params", "rss_url_options", "merge", "to_h", "name", "auto_discovery_link_tag", "project_issues", "exists?", "container_class", "local_assigns", "fetch", "each", "blank?", "present?", "issue", "new_project_issue_path", "local_assigns", "fetch", "local_assigns", "fetch", "current_user", "_", "_", "_", "_", "_", "new_user_session_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["current_user", "id", "new", "execute"]
CALLS: ["project_settings_integrations_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["namespace_project_settings_members_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project", "forks", "includes", "project", "params", "params", "merge", "current_user", "new", "execute", "size", "size", "params", "page", "html", "view_to_html_string", "json", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project", "environments", "params", "with_state", "html", "response", "set_header", "new", "request", "response", "with_pagination", "within_folders", "represent", "project", "environments", "available", "count", "project", "environments", "stopped", "count", "json", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["tap"]
CALLS: ["environment", "deployments", "reorder", "params", "to_time", "params", "to_time", "where", "project", "new", "represent_concise", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["represent"]
CALLS: ["redirect_to_repository_settings", "html", "current_user", "new", "as_json", "json", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["container_class", "_", "capture", "capture", "_", "html_safe", "_", "html_safe", "project_compare_index_path", "params", "params", "icon", "params", "params", "s_", "params", "params", "refs_project_path", "params", "params", "_", "local_assigns", "fetch", "dropdown_content", "dropdown_loading", "s_", "params", "params", "refs_project_path", "params", "params", "_", "local_assigns", "fetch", "dropdown_content", "dropdown_loading", "s_", "present?", "_", "project_merge_request_path", "create_mr_button?", "_", "create_mr_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["icon"]
CALLS: ["capture", "content_tag"]
CALLS: ["params", "params", "project_new_merge_request_path"]
CALLS: ["params", "params", "present?", "present?", "current_user", "can?", "repository", "branch_exists?", "repository", "branch_exists?"]
CALLS: ["project", "current_user", "new", "execute", "params", "page", "per", "empty?", "s_", "_", "help_page_path", "link_to", "s_", "html_safe", "current_user", "can?", "s_", "new_project_cluster_path", "s_", "s_", "s_", "s_", "current_user", "present", "present", "each", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project", "project_jobs_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["params", "presence", "sort_value_recently_updated", "params", "presence", "fetch_branches_by_mode", "pipelines", "map", "latest_successful_for_refs", "repository", "map", "merged_branch_names", "repository", "diverging_commit_counts", "max", "reduce", "allow_n_plus_1_calls", "render", "html", "params", "new", "execute", "paginate_array", "params", "page", "map", "json", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["raw_repository", "root_ref", "commit", "id", "cache", "name", "raw_repository", "dereferenced_target", "sha", "count_commits_between", "fetch"]
CALLS: ["sort_value_recently_updated", "new", "execute", "partition", "first", "first", "params", "merge", "new", "execute", "include?", "state", "to_s", "select", "paginate_array", "params", "page"]
CALLS: ["project", "current_user", "new", "execute", "respond_with_boards", "first", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["respond_with"]
CALLS: ["html", "serialize_as_json", "json", "respond_to"]
CALLS: ["set_index_vars", "finder", "build", "fluid_layout", "page_title", "clipboard_button", "profile_personal_access_tokens_path", "impersonation", "token", "path", "token", "form_errors", "label", "text_field", "label", "text_field", "label", "token", "scopes", "submit", "current_user", "rss_token", "incoming_email_token_enabled?", "current_user", "incoming_email_token", "header_title", "profile_path"]
CALLS: ["ensure_rss_token!"]
CALLS: ["read_attribute", "select"]
CALLS: ["any?", "compact", "push", "any?", "last", "join"]
CALLS: ["delete", "delete", "delete", "merge", "icon", "concat", "concat"]
CALLS: ["current_user", "incoming_email_token", "supports_issue_creation?"]
CALLS: ["current_user", "keys", "order_id_desc", "new", "fluid_layout", "page_title", "help_page_path", "help_page_path", "form_errors", "label", "text_area", "label", "text_field", "submit", "local_assigns", "fetch", "any?", "header_title", "profile_path"]
CALLS: ["current_user", "gpg_keys", "with_subkeys", "new", "fluid_layout", "page_title", "help_page_path", "form_errors", "label", "text_area", "submit", "local_assigns", "fetch", "any?", "emails_with_verified_status", "map", "fingerprint", "subkeys", "present?", "subkeys", "fingerprint", "each", "profile_gpg_key_path", "icon", "revoke_profile_gpg_key_path", "each", "header_title", "profile_path"]
CALLS: ["upcase"]
CALLS: ["user_infos", "user", "verified_email?", "map", "to_h"]
CALLS: ["downcase", "email", "primary_email_verified?", "emails", "confirmed", "where", "exists?"]
CALLS: ["confirmed?", "temp_oauth_email?"]
CALLS: ["email", "start_with?"]
CALLS: ["", "where", "not"]
CALLS: ["key", "user_infos_from_key"]
CALLS: ["upcase"]
CALLS: ["", "includes"]
CALLS: ["current_user", "email", "current_user", "emails", "order_id_desc", "fluid_layout", "page_title", "profile_emails_path", "label", "text_field", "submit", "current_user", "confirmed?", "current_user", "confirmed?", "current_user", "public_email", "current_user", "notification_email", "email", "confirmed?", "email", "confirmed?", "email", "current_user", "public_email", "email", "current_user", "notification_email", "confirmed?", "confirmation_sent_at", "resend_confirmation_instructions_profile_email_path", "profile_email_path", "icon", "each", "header_title", "profile_path"]
CALLS: ["current_user", "chat_names", "fluid_layout", "page_title", "present?", "header_title", "profile_path"]
CALLS: ["set_index_vars"]
CALLS: ["prometheus_metrics_enabled?", "metrics_service", "metrics_text", "help_page_url"]
CALLS: ["prometheus_metrics_text", "health_metrics_text", "concat"]
CALLS: ["flat_map", "formatter", "marshal"]
CALLS: ["new"]
CALLS: ["multiprocess_metrics_path", "marshal_multiprocess"]
CALLS: ["configuration", "multiprocess_files_dir"]
CALLS: ["new"]
CALLS: ["root", "join", "read", "icon", "koding_project_url", "koding_url", "koding_path"]
CALLS: ["full_path", "default_branch", "commit", "short_id", "koding_url", "join", "to_s", "koding_url"]
CALLS: []
CALLS: ["root", "join", "read", "sub", "config", "gitlab", "relative_url_root", "gsub!", "help_page_text", "present?", "current_application_settings", "markdown_field", "user_signed_in?", "namespace_project_commits_path", "version_status_badge", "help_page_hide_commercial_content?", "help_instance_configuration_url", "markdown", "support_url", "help_page_hide_commercial_content?", "help_path"]
CALLS: ["env", "production?", "version_check_enabled", "new", "url"]
CALLS: ["respond_to?", "for_display", "try", "present?", "render_field", "respond_to?", "banzai_render_context", "reverse_merge!", "prepare_for_rendering"]
CALLS: ["noteable", "merge"]
CALLS: []
CALLS: []
CALLS: []
CALLS: ["cached_markdown_fields", "markdown_fields", "include?", "inspect", "new", "respond_to?", "project", "respond_to?", "group", "cached_markdown_fields", "merge", "respond_to?", "author", "markdown_engine"]
CALLS: ["latest_cached_markdown_version"]
CALLS: ["project", "author", "author"]
CALLS: ["current_application_settings", "help_page_support_url", "presence", "promo_url"]
CALLS: ["promo_host"]
CALLS: []
CALLS: ["current_user", "dashboard_groups_path", "explore_groups_path", "redirect_to", "name", "page_description", "description", "header_title", "group_title", "current_user"]
CALLS: ["id", "api_v4_groups_badges_path", "_", "_"]
CALLS: ["group_projects", "group", "states_count", "milestones", "paginate_array", "params", "page", "html", "milestones", "for_display", "slice", "map", "json", "respond_to", "params", "milestone_class_for_state", "milestones_filter_path", "counts", "params", "milestone_class_for_state", "milestones_filter_path", "counts", "params", "milestone_class_for_state", "milestones_filter_path", "counts", "current_user", "can?", "new_group_milestone_path", "blank?", "each", "name", "page_description", "description", "header_title", "group_title", "current_user"]
CALLS: ["legacy_group_milestone_states_count", "group_milestones_states_count", "merge"]
CALLS: ["map", "new", "execute", "reorder", "group", "count", "count_by_state", "count_by_state", "map", "uniq", "count"]
CALLS: ["count"]
CALLS: ["params", "merge", "label_names", "any?", "label_names", "count", "class", "current_user", "new", "new", "execute", "reorder", "group", "count", "last", "to_sym", "each", "values", "sum"]
CALLS: ["id", "new", "execute", "reorder", "group", "count", "values", "sum"]
CALLS: ["labels", "params", "page", "html", "current_user", "id", "params", "params", "params", "new", "execute", "new", "represent_appearance", "json", "respond_to", "_", "to_sentence", "current_user", "can?", "new_group_label_path", "present?", "each", "_", "name", "page_description", "description", "header_title", "group_title", "current_user"]
CALLS: ["params", "presence", "sort_value_name", "params", "projects", "params", "find", "new", "execute", "current_user", "can?", "non_invite", "params", "present?", "params", "search", "sort_by_attribute", "params", "page", "per", "includes", "present_members", "new", "current_user", "execute", "present_members", "group_members", "new", "current_user", "can?", "name", "group_group_members_path", "users_select_tag", "access_level_roles", "access_level", "options_for_select", "help_page_path", "submit", "local_assigns", "fetch", "local_assigns", "fetch", "local_assigns", "fetch", "empty?", "name", "size", "each", "group_group_members_path", "params", "icon", "member_sort_options_hash", "dropdown_toggle", "member_sort_options_hash", "filter_group_project_member_path", "each", "name", "total_count", "each", "name", "page_description", "description", "header_title", "group_title", "current_user"]
CALLS: ["member", "class", "access_level_roles"]
CALLS: ["options"]
CALLS: ["options_with_owner"]
CALLS: ["", "where"]
CALLS: ["sort_value_access_level_asc", "sort_title_access_level_asc", "sort_value_access_level_desc", "sort_title_access_level_desc", "sort_value_last_joined", "sort_title_last_joined", "sort_value_name", "sort_title_name_asc", "sort_value_name_desc", "sort_title_name_desc", "sort_value_oldest_joined", "sort_title_oldest_joined", "sort_value_oldest_signin", "sort_title_oldest_signin", "sort_value_recently_signin", "sort_title_recently_signin"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["users_select_data_attributes", "id", "id", "hidden_field_tag"]
CALLS: ["current_user", "current_user", "username", "map"]
CALLS: ["params", "slice", "merge", "request", "path", "to_param"]
CALLS: ["key?", "key?", "content_tag", "icon", "html_safe", "content_tag"]
CALLS: ["params", "present?", "current_user", "new", "params", "execute", "nil?", "render_404", "setup_children", "current_user", "new", "request", "response", "with_pagination", "params", "present?", "expand_hierarchy", "represent", "json", "respond_to"]
CALLS: []
CALLS: ["current_user", "params", "new", "execute", "params", "page"]
CALLS: ["group", "current_user", "new", "execute", "respond_with_boards", "first", "name", "page_description", "description", "header_title", "group_title", "current_user"]
CALLS: ["current_user", "new", "execute", "params", "page", "snippets_path", "current_user", "dashboard_snippets_path", "dashboard_snippets_path", "nav_link", "explore_snippets_path", "explore_snippets_path", "nav_link", "current_user", "new_snippet_path", "current_user", "explore_root_path"]
CALLS: ["params", "params", "load_projects", "html", "view_to_html_string", "json", "respond_to", "dashboard_projects_path", "current_user", "cookies", "blank?", "current_user", "hide_project_limit", "current_user", "can_create_project?", "current_user", "projects_limit", "profile_path", "icon", "icon", "dashboard_projects_path", "root_path", "dashboard_projects_path", "nav_link", "starred_dashboard_projects_path", "starred_dashboard_projects_path", "nav_link", "explore_root_path", "trending_explore_projects_path", "starred_explore_projects_path", "explore_projects_path", "explore_root_path", "nav_link", "sort_value_latest_activity", "projects_sort_options_hash", "dropdown_toggle", "projects_sort_options_hash", "filter_projects_path", "each", "filter_projects_path", "params", "present?", "filter_projects_path", "params", "to_boolean", "filter_projects_path", "params", "current_user", "filter_projects_path", "params", "present?", "filter_projects_path", "params", "present?", "shared_projects", "present?", "filter_projects_path", "params", "present?", "filter_projects_path", "params", "filter_projects_path", "params", "current_user", "can_create_project?", "new_project_path", "trending_explore_projects_path", "explore_root_path", "trending_explore_projects_path", "nav_link", "starred_explore_projects_path", "starred_explore_projects_path", "nav_link", "explore_projects_path", "explore_projects_path", "nav_link", "current_user", "sort_value_latest_activity", "projects_sort_options_hash", "dropdown_toggle", "projects_sort_options_hash", "filter_projects_path", "each", "filter_projects_path", "params", "present?", "filter_projects_path", "params", "to_boolean", "filter_projects_path", "params", "current_user", "filter_projects_path", "params", "present?", "filter_projects_path", "params", "present?", "shared_projects", "present?", "filter_projects_path", "params", "present?", "filter_projects_path", "params", "filter_projects_path", "params", "projects", "current_user", "current_user", "explore_root_path"]
CALLS: ["projects_limit_left"]
CALLS: ["projects_limit", "personal_projects_count"]
CALLS: ["cache", "id", "hours", "personal_projects", "count", "fetch", "to_i"]
CALLS: []
CALLS: ["sort_value_latest_activity", "sort_title_latest_activity", "sort_value_name", "sort_title_name", "sort_value_oldest_activity", "sort_title_oldest_activity", "sort_value_oldest_created", "sort_title_oldest_created", "sort_value_recently_created", "sort_title_recently_created", "current_controller?", "sort_value_largest_repo", "sort_title_largest_repo"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["params", "params", "params", "params", "params", "params", "params", "params", "params", "params", "merge", "blank?", "delete_if", "request_path_with_options"]
CALLS: ["request", "path", "to_param"]
CALLS: ["group", "shared_projects"]
CALLS: ["current_user", "new", "execute", "dashboard_groups_path", "current_user", "dashboard_groups_path", "dashboard_groups_path", "_", "nav_link", "explore_groups_path", "explore_groups_path", "_", "nav_link", "request", "path", "params", "s_", "local_assigns", "groups_sort_options_hash", "fetch", "local_assigns", "fetch", "present?", "params", "params", "sort_value_recently_created", "icon", "_", "filter_groups_path", "each", "filter_groups_path", "params", "present?", "filter_groups_path", "params", "to_boolean", "filter_groups_path", "params", "current_user", "can_create_group?", "_", "new_group_path", "explore_groups_path", "explore_groups_path", "nav_link", "request", "path", "params", "s_", "local_assigns", "groups_sort_options_hash", "fetch", "local_assigns", "fetch", "present?", "params", "params", "sort_value_recently_created", "icon", "_", "filter_groups_path", "each", "filter_groups_path", "params", "present?", "filter_groups_path", "params", "to_boolean", "filter_groups_path", "params", "cookies", "icon", "custom_icon", "params", "blank?", "empty?", "current_user", "explore_root_path"]
CALLS: ["subgroup?", "current_user", "parent", "can?", "parent", "errors", "add", "current_user", "can?", "errors", "add"]
CALLS: ["has_parent?"]
CALLS: ["parent", "present?"]
CALLS: ["can?"]
CALLS: ["sort_value_name", "sort_title_name", "sort_value_name_desc", "sort_title_name_desc", "sort_value_recently_created", "sort_title_recently_created", "sort_value_oldest_created", "sort_title_oldest_created", "sort_value_recently_updated", "sort_title_recently_updated", "sort_value_oldest_updated", "sort_title_oldest_updated"]
CALLS: []
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["request_path_with_options"]
CALLS: ["params", "params", "page", "redirect_out_of_range", "header_title", "root_path"]
CALLS: ["todo_params", "except", "empty?", "current_user", "todos_pending_count", "to_f", "limit_value", "ceil", "total_pages", "zero?", "current_page", "safe_params", "merge", "url_for"]
CALLS: []
CALLS: ["params", "permit"]
CALLS: ["nil?", "zero?", "current_page", "params", "merge", "url_for", "redirect_to"]
CALLS: ["current_user", "current_user", "params", "new", "execute", "params", "page", "dashboard_snippets_path", "dashboard_snippets_path", "dashboard_snippets_path", "nav_link", "explore_snippets_path", "explore_snippets_path", "nav_link", "current_user", "new_snippet_path", "new_snippet_path", "header_title", "root_path"]
CALLS: ["params", "merge", "load_projects", "params", "page", "html", "load_events", "atom", "view_to_html_string", "json", "respond_to", "rss_url_options", "dashboard_projects_url", "auto_discovery_link_tag", "dashboard_projects_path", "container_class", "params", "show_projects?", "cookies", "blank?", "current_user", "hide_project_limit", "current_user", "can_create_project?", "current_user", "projects_limit", "profile_path", "icon", "icon", "dashboard_projects_path", "root_path", "dashboard_projects_path", "nav_link", "starred_dashboard_projects_path", "starred_dashboard_projects_path", "nav_link", "explore_root_path", "trending_explore_projects_path", "starred_explore_projects_path", "explore_projects_path", "explore_root_path", "nav_link", "sort_value_latest_activity", "projects_sort_options_hash", "dropdown_toggle", "projects_sort_options_hash", "filter_projects_path", "each", "filter_projects_path", "params", "present?", "filter_projects_path", "params", "to_boolean", "filter_projects_path", "params", "current_user", "filter_projects_path", "params", "present?", "filter_projects_path", "params", "present?", "shared_projects", "present?", "filter_projects_path", "params", "present?", "filter_projects_path", "params", "filter_projects_path", "params", "current_user", "can_create_project?", "new_project_path", "params", "present?", "s_", "dashboard_projects_path", "nav_link", "params", "present?", "s_", "filter_projects_path", "nav_link", "current_user", "current_user", "admin?", "current_user", "admin?", "new_project_path", "custom_icon", "current_user", "can_create_group?", "new_group_path", "custom_icon", "new_admin_user_path", "custom_icon", "admin_root_path", "custom_icon", "current_user", "new", "execute", "count", "current_user", "can_create_project?", "new_project_path", "custom_icon", "custom_icon", "current_user", "can_create_group?", "new_group_path", "custom_icon", "trending_explore_projects_path", "custom_icon", "number_with_delimiter", "custom_icon", "header_title", "root_path"]
CALLS: ["any_projects?"]
CALLS: ["is_a?", "any?", "limit_value", "to_a", "any?", "except", "any?"]
CALLS: ["states_count", "milestones", "paginate_array", "params", "page", "html", "milestones", "json", "respond_to", "dashboard_milestones_path", "params", "milestone_class_for_state", "milestones_filter_path", "counts", "params", "milestone_class_for_state", "milestones_filter_path", "counts", "params", "milestone_class_for_state", "milestones_filter_path", "counts", "blank?", "each", "header_title", "root_path"]
CALLS: ["new", "labels", "represent_appearance", "json", "respond_to", "header_title", "root_path"]
CALLS: ["current_user", "new", "execute", "render_group_tree", "dashboard_groups_path", "dashboard_groups_path", "dashboard_groups_path", "_", "nav_link", "explore_groups_path", "explore_groups_path", "_", "nav_link", "request", "path", "params", "s_", "local_assigns", "groups_sort_options_hash", "fetch", "local_assigns", "fetch", "present?", "params", "params", "sort_value_recently_created", "icon", "_", "filter_groups_path", "each", "filter_groups_path", "params", "present?", "filter_groups_path", "params", "to_boolean", "filter_groups_path", "params", "current_user", "can_create_group?", "_", "new_group_path", "params", "blank?", "empty?", "header_title", "root_path"]
CALLS: ["params", "present?", "params", "search", "select", "where", "new", "base_and_ancestors", "params", "where", "params", "with_selects_for_list", "params", "sort_by_attribute", "params", "page", "html", "current_user", "new", "request", "response", "with_pagination", "params", "present?", "expand_hierarchy", "represent", "json", "respond_to"]
CALLS: ["now", "to_i", "notes_finder", "execute", "inc_relations_for_view", "prepare_notes_for_rendering", "current_user", "cross_reference_not_visible_for?", "reject", "use_note_serializer?", "note_serializer", "represent", "note_json", "map"]
CALLS: ["project", "current_user", "finder_params", "new"]
CALLS: ["params", "last_fetched_at", "snippet", "id", "merge"]
CALLS: ["request", "headers"]
CALLS: ["params", "last_fetched_at", "merge"]
CALLS: ["board", "parent", "current_user", "new", "board", "execute", "serialize_as_json"]
CALLS: ["board_parent", "current_user", "filter_params", "new", "execute", "params", "page", "params", "per", "read_write?", "make_sure_position_is_set", "preload", "serialize_as_json", "total_count"]
CALLS: ["relative_position", "move_to_end", "save", "each"]
CALLS: ["order_name_asc", "params", "filter", "params", "present?", "params", "search_with_secondary_emails", "params", "sort_by_attribute", "params", "page", "container_class", "admin_users_path", "params", "present?", "params", "h", "params", "icon", "present?", "sort_options_hash", "sort_title_name", "dropdown_toggle", "sort_value_name", "params", "admin_users_path", "sort_title_name", "sort_value_recently_signin", "params", "admin_users_path", "sort_title_recently_signin", "sort_value_oldest_signin", "params", "admin_users_path", "sort_title_oldest_signin", "sort_value_recently_created", "params", "admin_users_path", "sort_title_recently_created", "sort_value_oldest_created", "params", "admin_users_path", "sort_title_oldest_created", "sort_value_recently_updated", "params", "admin_users_path", "sort_title_recently_updated", "sort_value_oldest_updated", "params", "admin_users_path", "sort_title_oldest_updated", "new_admin_user_path", "icon", "icon", "params", "nil?", "active_when", "admin_users_path", "active", "count", "number_with_delimiter", "nav_link", "params", "active_when", "admin_users_path", "admins", "count", "number_with_delimiter", "nav_link", "params", "active_when", "admin_users_path", "with_two_factor", "count", "number_with_delimiter", "nav_link", "params", "active_when", "admin_users_path", "without_two_factor", "count", "number_with_delimiter", "nav_link", "params", "active_when", "admin_users_path", "external", "count", "number_with_delimiter", "nav_link", "params", "active_when", "admin_users_path", "blocked", "count", "number_with_delimiter", "nav_link", "params", "active_when", "admin_users_path", "without_projects", "count", "number_with_delimiter", "nav_link", "empty?", "each", "admin_root_path"]
CALLS: ["blank?", "none", "downcase", "arel_table", "project", "eq", "where", "fuzzy_arel_match", "fuzzy_arel_match", "or", "arel_table", "eq", "or", "arel_table", "in", "or", "where"]
CALLS: ["admins", "blocked", "without_two_factor", "with_two_factor", "without_projects", "external", "active"]
CALLS: ["joins", "where"]
CALLS: ["joins", "where", "arel_table", "distinct"]
CALLS: ["", "where"]
CALLS: ["", "where"]
CALLS: ["", "with_states"]
CALLS: ["sort_value_created_date", "sort_title_created_date", "sort_value_downvotes", "sort_title_downvotes", "sort_value_due_date", "sort_title_due_date", "sort_value_due_date_later", "sort_title_due_date_later", "sort_value_due_date_soon", "sort_title_due_date_soon", "sort_value_label_priority", "sort_title_label_priority", "sort_value_largest_group", "sort_title_largest_group", "sort_value_largest_repo", "sort_title_largest_repo", "sort_value_milestone", "sort_title_milestone", "sort_value_milestone_later", "sort_title_milestone_later", "sort_value_milestone_soon", "sort_title_milestone_soon", "sort_value_name", "sort_title_name", "sort_value_name_desc", "sort_title_name_desc", "sort_value_oldest_created", "sort_title_oldest_created", "sort_value_oldest_signin", "sort_title_oldest_signin", "sort_value_oldest_updated", "sort_title_oldest_updated", "sort_value_recently_created", "sort_title_recently_created", "sort_value_recently_signin", "sort_title_recently_signin", "sort_value_recently_updated", "sort_title_recently_updated", "sort_value_popularity", "sort_title_popularity", "sort_value_priority", "sort_title_priority", "sort_value_upvotes", "sort_title_upvotes"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["s_"]
CALLS: ["order", "params", "page", "present?", "admin_root_path"]
CALLS: ["services_templates", "sort_by", "activated?", "id", "edit_admin_application_settings_service_path", "title", "description", "updated_at", "each", "admin_root_path"]
CALLS: ["active"]
CALLS: ["available_services_names", "concat", "camelize", "constantize", "where", "first_or_create", "map"]
CALLS: ["params", "order", "params", "present?", "params", "search", "params", "page", "per", "online", "count", "admin_root_path"]
CALLS: ["", "contact_time_deadline", "where"]
CALLS: ["profile_token", "all", "group_by", "container_class", "page_title", "present?", "time", "to_s", "admin_requests_profile_path", "each", "each", "admin_root_path"]
CALLS: ["params", "params", "params", "current_user", "new", "execute", "html", "view_to_html_string", "json", "respond_to", "params", "container_class", "params", "present?", "params", "params", "find", "kind", "full_path", "dropdown_toggle", "dropdown_title", "dropdown_filter", "dropdown_content", "dropdown_loading", "sort_value_latest_activity", "projects_sort_options_hash", "dropdown_toggle", "projects_sort_options_hash", "filter_projects_path", "each", "filter_projects_path", "params", "present?", "filter_projects_path", "params", "to_boolean", "filter_projects_path", "params", "current_user", "filter_projects_path", "params", "present?", "filter_projects_path", "params", "present?", "shared_projects", "present?", "filter_projects_path", "params", "present?", "filter_projects_path", "params", "filter_projects_path", "params", "new_project_path", "params", "present?", "admin_projects_path", "admin_projects_path", "nav_link", "params", "to_s", "active_when", "admin_projects_path", "nav_link", "params", "to_s", "active_when", "admin_projects_path", "nav_link", "params", "to_s", "active_when", "admin_projects_path", "nav_link", "admin_root_path"]
CALLS: ["type"]
CALLS: ["icon", "icon", "html_safe"]
CALLS: ["fetch", "icon", "content_tag", "content_tag", "fetch", "icon", "content_tag", "html_safe"]
CALLS: ["templates", "params", "page", "new_admin_label_path", "present?", "admin_root_path"]
CALLS: ["params", "order", "pending", "reverse_order", "running", "reverse_order", "finished", "params", "page", "per", "admin_root_path"]
CALLS: ["set_index_vars", "name", "name", "blocked?", "internal?", "admin", "current_user", "can?", "impersonate_admin_user_path", "edit_admin_user_path", "admin_user_path", "nav_link", "projects_admin_user_path", "nav_link", "keys_admin_user_path", "nav_link", "admin_user_identities_path", "nav_link", "admin_user_impersonation_tokens_path", "nav_link", "admin_user_impersonation_tokens_path", "impersonation", "token", "path", "token", "form_errors", "label", "text_field", "label", "text_field", "label", "token", "scopes", "submit", "admin_root_path"]
CALLS: ["identities", "name", "name", "blocked?", "internal?", "admin", "current_user", "can?", "impersonate_admin_user_path", "edit_admin_user_path", "admin_user_path", "nav_link", "projects_admin_user_path", "nav_link", "keys_admin_user_path", "nav_link", "admin_user_identities_path", "nav_link", "admin_user_impersonation_tokens_path", "nav_link", "new_admin_user_identity_path", "present?", "admin_root_path"]
CALLS: ["all", "new", "admin_root_path"]
CALLS: ["with_statistics", "with_route", "params", "sort_by_attribute", "params", "present?", "params", "search", "params", "page", "container_class", "admin_groups_path", "params", "present?", "params", "icon", "admin_groups_sort_options_hash", "local_assigns", "groups_sort_options_hash", "fetch", "local_assigns", "fetch", "present?", "params", "params", "sort_value_recently_created", "icon", "_", "filter_groups_path", "each", "filter_groups_path", "params", "present?", "filter_groups_path", "params", "to_boolean", "filter_groups_path", "params", "new_admin_group_path", "admin_root_path"]
CALLS: ["groups_sort_options_hash", "sort_value_largest_group", "sort_title_largest_group", "merge"]
CALLS: ["all", "_", "_", "any?", "_", "n_", "_", "_", "_", "storage", "address", "server_version", "git_binary_version", "up_to_date?", "boolean_to_icon", "each", "_", "admin_root_path"]
CALLS: ["icon", "icon"]
CALLS: ["new_admin_deploy_key_path", "any?", "title", "fingerprint", "projects_with_write_access", "full_name", "admin_project_path", "each", "edit_admin_deploy_key_path", "admin_deploy_key_path", "each", "admin_root_path"]
CALLS: ["preload", "deploy_keys_projects", "with_write_access", "select", "where"]
CALLS: ["", "where"]
CALLS: ["order_id_desc", "without_deleted", "with_route", "limit", "order_id_desc", "limit", "order_id_desc", "with_route", "limit", "admin_root_path"]
CALLS: ["", "where"]
CALLS: ["usage_ping_enabled", "cache", "day", "new", "execute", "fetch", "new", "represent", "container_class", "icon", "help_page_path", "times", "each", "each", "help_page_path", "admin_application_settings_path", "admin_root_path"]
CALLS: ["usage_ping_can_be_configured?"]
CALLS: ["gitlab", "usage_ping_enabled"]
CALLS: ["order", "params", "page", "new", "any?", "broadcast_message_status", "broadcast_message", "starts_at", "ends_at", "icon", "edit_admin_broadcast_message_path", "icon", "admin_broadcast_message_path", "each", "admin_root_path"]
CALLS: ["active?", "ended?"]
CALLS: ["ends_at", "zone", "now"]
CALLS: ["present?", "broadcast_message_style", "icon", "render_broadcast_message"]
CALLS: ["render_field", "html_safe"]
CALLS: ["color", "present?", "color", "font", "present?", "font", "present?", "font"]
CALLS: []
CALLS: ["where", "new_admin_application_path", "id", "name", "admin_application_path", "redirect_uri", "access_tokens", "map", "uniq", "count", "trusted?", "edit_admin_application_path", "admin_application_path", "each", "admin_root_path"]
CALLS: ["order", "params", "page", "includes", "present?", "admin_root_path"]
CALLS: ["priorities", "loaded?", "priorities", "project", "first", "priorities", "find_by", "try"]
CALLS: ["api_url"]
CALLS: ["token"]
CALLS: ["recipients"]
CALLS: ["username", "token"]
CALLS: []
CALLS: []
CALLS: []
CALLS: ["mock_service_url"]
CALLS: []
CALLS: []
CALLS: []
CALLS: ["api_url", "token", "enforce_namespace_to_lower_case", "namespace"]
CALLS: ["namespace", "namespace", "downcase"]
CALLS: ["namespace", "namespace", "downcase"]
CALLS: ["url", "api_url", "username", "password"]
CALLS: []
CALLS: ["recipients", "get_channels"]
CALLS: ["activated?", "recipients", "nil?", "recipients", "empty?", "map_recipients", "channels", "empty?", "errors", "add"]
CALLS: ["channels", "recipients", "split", "format_channel", "map", "channels", "reject!"]
CALLS: ["parse", "consider_uri", "present?", "default_irc_uri", "nil?", "default_irc_uri", "join", "to_s", "parse", "consider_uri", "logger", "default_irc_uri", "error"]
CALLS: ["scheme", "nil?", "is_a?", "scheme", "path", "nil?", "to_s"]
CALLS: ["token"]
CALLS: ["project_url", "issues_url", "new_issue_url"]
CALLS: ["token", "api_key"]
CALLS: ["token"]
CALLS: ["external_wiki_url"]
CALLS: ["recipients"]
CALLS: ["drone_url", "token"]
CALLS: []
CALLS: ["project_url", "issues_url", "new_issue_url"]
CALLS: []
CALLS: ["webhook"]
CALLS: ["token"]
CALLS: []
CALLS: ["project_url", "token"]
CALLS: ["project_url", "issues_url", "new_issue_url"]
CALLS: ["bamboo_url", "build_key", "username", "password"]
CALLS: ["token"]
CALLS: ["api_key"]
CALLS: ["project"]
CALLS: []
CALLS: []
CALLS: ["source_type", "access_level"]
CALLS: ["source_type"]
CALLS: []
CALLS: []
CALLS: []
CALLS: ["service"]
CALLS: ["project"]
CALLS: []
CALLS: ["group"]
CALLS: ["variables", "two_factor_grace_period"]
CALLS: ["set_default_values", "target_url"]
CALLS: ["context", "stage", "stage_idx"]
CALLS: ["token", "blank?", "token", "hex"]
CALLS: ["token", "blank?", "token", "hex"]
CALLS: []
CALLS: []
CALLS: []
CALLS: ["validation_message", "blank?"]
CALLS: ["validation_message", "blank?"]
CALLS: ["project"]
CALLS: ["group"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["current_user", "admin?"]
CALLS: ["target_type"]
CALLS: ["for_commit?", "project", "commit_id", "commit"]
CALLS: ["noteable_type"]
CALLS: ["for_commit?", "commit"]
CALLS: ["noteable_type"]
CALLS: ["notes_finder", "target", "noteable"]
CALLS: ["zone", "now", "updated_at"]
CALLS: []
CALLS: ["default_message", "id", "username", "name", "email", "new"]
CALLS: ["username"]
CALLS: ["path"]
CALLS: ["project", "full_path", "name", "select", "join", "downcase"]
CALLS: []
CALLS: ["project", "gl_repository", "project", "repository_storage", "disk_path", "new", "exists?", "create_repo!", "new"]
CALLS: ["gitlab_shell", "project", "repository_storage", "disk_path", "create_repository", "exists?", "repository", "after_create"]
CALLS: ["gl_repository"]
CALLS: ["owner", "new"]
CALLS: ["new"]
CALLS: ["exists?", "has_visible_content?"]
CALLS: ["options", "project", "jobs_cache_index", "project", "jobs_cache_index", "merge"]
CALLS: []
CALLS: ["zone", "now", "where", "order_id_asc"]
CALLS: ["raw_size"]
CALLS: ["stored_externally?", "external_size", "size"]
CALLS: []
CALLS: ["external_storage", "external_storage_error?"]
CALLS: []
CALLS: []
CALLS: ["external_storage", "project", "lfs_enabled?"]
CALLS: ["ensure_cache_setup", "cache", "last", "tap", "fetch", "last"]
CALLS: ["define_attribute_methods"]
CALLS: ["cache", "first", "fetch"]
CALLS: []
CALLS: ["for_commit?", "diff_line", "noteable", "noteable", "diff_refs", "find_noteable_diff", "new", "diff", "each_line", "parse", "text", "diff_line", "text", "any?"]
CALLS: ["noteable", "max_diff_options", "raw_diffs", "new_path", "diff", "new_path", "find"]
CALLS: ["diff_file", "line_code", "line_for_line_code"]
CALLS: ["diff_file", "original_position", "line_for_position"]
CALLS: []
CALLS: ["present?", "first_note", "active?"]
CALLS: ["state"]
CALLS: ["supported?", "for_commit?", "noteable", "diff_refs", "position", "diff_refs"]
CALLS: ["class", "supported?"]
CALLS: ["for_commit?", "noteable", "has_complete_diff_refs?"]
CALLS: ["diff_refs", "diff_refs", "complete?"]
CALLS: ["revoked"]
CALLS: []
CALLS: ["status", "include?"]
CALLS: ["started?", "ended?"]
CALLS: ["status", "include?", "started_at"]
CALLS: ["zone", "now", "starts_at"]
CALLS: ["allowed?"]
CALLS: ["current_user", "action", "subject", "allowed?"]
CALLS: ["allowed?"]
CALLS: ["skip_cross_project_check"]
CALLS: ["execute", "find_by"]
CALLS: ["allowed?"]
CALLS: ["parent", "group", "raise_error"]
CALLS: ["new"]
CALLS: []
CALLS: []
CALLS: ["project", "group"]
CALLS: ["source"]
CALLS: ["params", "present?", "params", "find"]
CALLS: ["params", "params", "find_routable!"]
CALLS: ["group"]
CALLS: ["params", "find_by_full_path"]
CALLS: ["of_projects", "where", "blank?", "new"]
CALLS: ["", "where"]
CALLS: ["", "where"]
CALLS: ["", "where"]
CALLS: ["first", "discussion_class", "new"]
CALLS: ["project", "builds", "params", "find", "current_user", "present"]
CALLS: ["build_from_id", "build_from_ref", "current_user", "present"]
CALLS: ["project", "latest_successful_builds_for", "params", "find_by"]
CALLS: ["default_branch", "pipelines", "latest_successful_for", "builds", "latest", "with_artifacts_archive", "builds", "none"]
CALLS: ["newest_first", "success", "take"]
CALLS: ["", "select", "where", "archive", "where"]
CALLS: ["current_user", "can?", "access_denied!", "archive!", "project_path", "html", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["update_attribute"]
CALLS: ["params", "path", "tr", "params", "logger", "class", "name", "error", "git_not_found!", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: []
CALLS: ["params", "project", "builds", "params", "find_by"]
CALLS: ["commit", "try"]
CALLS: ["persisted?", "merge_request_diff", "head_commit_sha", "source_branch_head", "try"]
CALLS: ["project", "pipelines", "params", "find_by!", "current_user", "present"]
CALLS: ["project", "params", "new"]
CALLS: ["skip_cross_project_check"]
CALLS: ["model", "find"]
CALLS: ["render_show"]
CALLS: ["current_user", "new", "deploy_tokens", "active", "define_deploy_token", "define_protected_refs", "fluid_layout", "current_user", "can?", "empty?", "each", "env", "test?", "current_user", "current_user", "can?", "each", "env", "test?", "current_user", "expand_deploy_tokens_section?", "s_", "s_", "persisted?", "s_", "deploy_token", "username", "deploy_token", "username", "s_", "clipboard_button", "s_", "deploy_token", "token", "deploy_token", "token", "s_", "clipboard_button", "s_", "s_", "s_", "token", "project", "namespace", "project", "create_deploy_token_namespace_project_settings_repository_path", "token", "form_errors", "label", "text_field", "label", "object", "expires_at", "text_field", "label", "check_box", "s_", "project", "container_registry_enabled?", "check_box", "s_", "s_", "submit", "s_", "active_tokens", "length", "active_tokens", "present?", "s_", "s_", "s_", "s_", "s_", "active_tokens", "name", "username", "created_at", "to_date", "to_s", "expires?", "expires_soon?", "scopes", "present?", "scopes", "join", "s_", "id", "project", "project", "each", "s_"]
CALLS: ["expires?", "expires_at", "days", "from_now"]
CALLS: ["persisted?", "errors", "present?", "env", "test?"]
CALLS: ["new"]
CALLS: ["protected_branches", "order", "params", "page", "protected_tags", "order", "params", "page", "protected_branches", "new", "protected_tags", "new", "repository", "branches", "matching", "size", "reduce", "repository", "tags", "matching", "size", "reduce", "load_gon_index"]
CALLS: ["project", "repository", "branch_names"]
CALLS: ["gon", "protectable_tags_for_dropdown", "push", "gon", "protectable_branches_for_dropdown", "push", "gon", "access_levels_options", "push"]
CALLS: ["new", "hash"]
CALLS: ["protectable_ref_names", "map"]
CALLS: ["ref_names", "non_wildcard_protected_ref_names"]
CALLS: ["protections", "reject", "map"]
CALLS: ["public_send"]
CALLS: ["class", "to_s", "hash"]
CALLS: ["new", "hash"]
CALLS: ["levels_for_dropdown", "levels_for_dropdown", "levels_for_dropdown"]
CALLS: ["map"]
CALLS: ["repository", "branch_count", "repository", "commit", "id", "branch_names_contains", "repository", "tag_count", "repository", "commit", "id", "tag_names_contains", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["raw_repository", "tag_names_contains_sha"]
CALLS: ["raw_repository", "branch_names_contains_sha"]
CALLS: ["html", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["job_from_id", "job_from_ref"]
CALLS: ["project", "latest_successful_builds_for", "params", "find_by"]
CALLS: ["params", "project", "builds", "params", "find_by"]
CALLS: ["class", "unhyphenize", "unescape_html"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["properties", "properties", "present?", "properties"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["properties", "properties", "present?", "properties"]
CALLS: []
CALLS: ["project_url", "project_name"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["properties", "properties", "present?", "properties"]
CALLS: ["wiki_page_url"]
CALLS: ["project_name", "project_url"]
CALLS: ["project_name", "project_url"]
CALLS: ["project_name", "project_url"]
CALLS: ["project_name", "project_url", "link"]
CALLS: ["project_name", "project_url", "link"]
CALLS: ["project_name", "project_url", "link"]
CALLS: ["user_full_name", "present?", "user_full_name", "user_name", "user_name"]
CALLS: []
CALLS: []
CALLS: ["properties", "properties", "present?", "properties"]
CALLS: []
CALLS: []
CALLS: []
CALLS: ["label?", "label", "name", "list_type", "humanize"]
CALLS: []
CALLS: ["full_title", "length", "full_title", "full_title", "truncate"]
CALLS: ["params"]
CALLS: ["params", "params"]
CALLS: ["new_branch?", "new_branch_message", "removed_branch?", "removed_branch_message", "push_message"]
CALLS: ["user_combined_name", "ref_type", "branch_link", "project_link", "compare_link"]
CALLS: ["user_combined_name", "ref_type", "ref", "project_link"]
CALLS: ["user_combined_name", "ref_type", "branch_link", "project_link"]
CALLS: ["project_link", "pipeline_link", "ref_type", "branch_link", "user_combined_name", "humanized_status", "duration", "pretty_duration"]
CALLS: ["user_combined_name", "target", "note_url", "link", "project_link", "formatted_title"]
CALLS: ["merge_request_message"]
CALLS: ["user_combined_name", "state", "merge_request_link", "project_link", "title"]
CALLS: ["opened_issue?", "project_link", "state", "user_combined_name", "project_link", "issue_link", "state", "user_combined_name"]
CALLS: []
CALLS: ["response_status"]
CALLS: ["to_s"]
CALLS: ["first_note", "context_noteable", "discussion_id"]
CALLS: []
CALLS: ["raw", "id"]
CALLS: ["status", "to_s"]
CALLS: ["path", "hexdigest"]
CALLS: ["success?", "upload", "id", "error", "message"]
CALLS: []
CALLS: ["data", "bytesize"]
CALLS: ["exists?", "raw_repository", "size"]
CALLS: ["real_size", "presence", "raw_diffs", "size"]
CALLS: ["to_s"]
CALLS: []
CALLS: ["sha_from", "notation", "sha_to"]
CALLS: ["entry", "metadata"]
CALLS: ["build", "params", "artifacts_metadata_entry", "exists?", "render_404"]
CALLS: ["artifacts_metadata", "options", "new", "to_entry", "use_file"]
CALLS: ["unsafe_use_file", "with_exclusive_lease"]
CALLS: ["file_storage?", "path", "cache_stored_file!", "cache_path", "cache_path", "rm_f", "cache_storage", "cache_path", "delete_dir!"]
CALLS: ["exclusive_lease_key", "hour", "to_i", "new", "try_obtain", "exclusive_lease_key", "cancel"]
CALLS: ["model", "class", "model", "id"]
CALLS: ["job_artifacts_metadata", "file", "legacy_artifacts_metadata"]
CALLS: ["params", "to_i"]
CALLS: ["order", "class", "to_s", "where"]
CALLS: ["store_dir", "filename", "to_s", "join"]
CALLS: ["store_dirs", "object_store"]
CALLS: ["base_dir", "dynamic_segment", "join", "class", "model", "model_path_segment", "dynamic_segment", "join"]
CALLS: ["base_dir", "dynamic_segment", "join", "dynamic_segment", "join"]
CALLS: ["base_dir", "dynamic_segment", "join", "class", "model", "model_path_segment", "dynamic_segment", "join"]
CALLS: ["base_dir", "dynamic_segment", "join", "base_dir", "dynamic_segment", "join"]
CALLS: ["store_dirs", "object_store"]
CALLS: ["store_dirs", "object_store"]
CALLS: ["dynamic_segment"]
CALLS: ["dynamic_segment"]
CALLS: ["dynamic_segment"]
CALLS: ["file", "present?"]
CALLS: ["store", "object_store", "tap"]
CALLS: ["store", "object_store", "tap"]
CALLS: ["file", "present?"]
CALLS: ["secret", "secret", "tap"]
CALLS: ["file_storage?", "dynamic_segment", "identifier", "join", "store_dir", "identifier", "join"]
CALLS: ["path", "basename"]
CALLS: ["path", "basename"]
CALLS: ["filename"]
CALLS: ["path", "basename"]
CALLS: ["model", "avatar", "file", "model", "avatar", "file", "present?"]
CALLS: ["full_path", "raw_repository", "exists?"]
CALLS: ["execute", "model"]
CALLS: ["project", "job", "params", "file_project_job_artifacts_path"]
CALLS: ["blob", "conditionally_expand_blob", "build", "external_link?", "build", "external_url", "name", "id", "browse_project_job_artifacts_path", "truncate", "file_project_job_artifacts_path", "browse_project_job_artifacts_path", "path_breadcrumbs", "blob", "mode", "name", "name", "path", "copy_file_path_button", "raw_size", "number_to_human_size", "stored_externally?", "external_storage", "copy_blob_source_button", "open_raw_blob_button", "simple_viewer", "rich_viewer", "params", "html", "render_blob_json", "json", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: []
CALLS: ["entry", "metadata"]
CALLS: ["rich_viewer_class", "new"]
CALLS: ["viewer_class_from"]
CALLS: ["empty?", "external_storage_error?", "stored_externally?", "can_render?", "find"]
CALLS: ["old_blob", "can_render_blob?", "new_blob", "can_render_blob?"]
CALLS: ["nil?", "binary?", "binary?", "extensions", "extension", "include?", "file_types", "file_type", "include?"]
CALLS: ["path", "basename", "path", "type_of", "type_of"]
CALLS: ["binary?", "binary?", "extensions", "extension", "include?", "file_types", "file_type", "include?"]
CALLS: ["simple_viewer_class", "new"]
CALLS: ["empty?", "raw_binary?"]
CALLS: ["stored_externally?", "rich_viewer", "rich_viewer", "binary?", "name", "find_by_extension", "any?", "_mime_type", "_mime_type", "binary?", "binary?"]
CALLS: ["present?", "split", "count", "count", "first", "join", "empty?", "join", "empty?", "count", "last", "include?", "each"]
CALLS: ["empty?", "raw_binary?", "stored_externally?", "sprite_icon", "icon", "blob_raw_path"]
CALLS: ["blob_raw_url"]
CALLS: ["path", "raw_project_job_artifacts_url", "project_id", "raw_project_snippet_url", "raw_snippet_url", "project_raw_url"]
CALLS: ["rendered_as_text?", "id", "clipboard_button"]
CALLS: ["simple_viewer", "is_a?", "simple_viewer", "render_error", "nil?"]
CALLS: []
CALLS: ["diff_file", "stored_externally?"]
CALLS: ["too_large?"]
CALLS: ["diff_file", "too_large?", "size_limit", "diff_file", "raw_size", "size_limit"]
CALLS: ["size_limit", "blob", "raw_size", "size_limit"]
CALLS: []
CALLS: ["blob", "stored_externally?"]
CALLS: ["project", "has_external_wiki?", "project", "wiki_enabled?", "project", "wiki", "has_home_page?"]
CALLS: ["find_page"]
CALLS: ["license"]
CALLS: ["license_key", "license_key", "new"]
CALLS: ["exists?", "raw_repository", "license_short_name"]
CALLS: ["repository", "license", "nickname", "name"]
CALLS: ["project", "repository", "license"]
CALLS: ["project", "repository", "tag_count"]
CALLS: ["too_large?", "collapsed?"]
CALLS: ["active?"]
CALLS: ["resolved?"]
CALLS: ["resolvable?", "resolved_at", "present?"]
CALLS: ["resolvable?", "notes", "none?", "strong_memoize"]
CALLS: ["diff_file", "collapsed?", "diff_file", "expanded?", "collapse_limit", "diff_file", "raw_size", "collapse_limit"]
CALLS: ["collapsed?"]
CALLS: []
CALLS: ["blob", "expanded?", "collapse_limit", "blob", "raw_size", "collapse_limit"]
CALLS: ["errors", "full_messages", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["errors", "full_messages"]
CALLS: ["clipboard_button"]
CALLS: ["params", "expand!"]
CALLS: []
CALLS: ["blob_json", "render_404"]
CALLS: ["params", "rich_viewer", "auxiliary_viewer", "simple_viewer", "view_to_html_string"]
CALLS: ["auxiliary_viewer_class", "new"]
CALLS: ["viewer_class_from"]
CALLS: ["find_model", "strong_memoize"]
CALLS: ["params", "upload_model_class", "params", "find"]
CALLS: ["params", "raise"]
CALLS: []
CALLS: []
CALLS: ["params", "params", "find_by_full_path"]
CALLS: ["params", "find_by_full_path"]
CALLS: []
CALLS: ["schedule_background_upload?", "class", "name", "model", "class", "name", "mounted_as", "model", "id", "perform_async"]
CALLS: ["class", "object_store_enabled?", "class", "background_upload_enabled?", "file_storage?"]
CALLS: ["object_store_options", "background_upload"]
CALLS: ["any?", "send", "schedule_background_upload", "each", "run_after_commit"]
CALLS: ["any?", "send", "schedule_background_upload", "each", "run_after_commit"]
CALLS: ["schedule_background_upload?", "upload", "class", "name", "upload", "class", "to_s", "mounted_as", "upload", "id", "perform_async"]
CALLS: ["model", "secret", "new"]
CALLS: ["model", "update_field", "read_attribute", "temp_file_uploader", "markdown_link", "uploader", "markdown_link", "gsub", "model", "update_field", "update_attribute", "revert"]
CALLS: ["logger", "model", "warn", "file_path", "temp_file_path", "move"]
CALLS: ["uploader", "file_name", "retrieve_from_store!", "uploader", "file", "path"]
CALLS: ["store_dirs", "join", "map", "model", "current_upload_satisfies?", "upload", "uploads", "model", "find_by"]
CALLS: ["upload", "upload", "path", "include?", "upload", "model_id", "id", "upload", "model_type", "class", "base_class", "sti_name"]
CALLS: []
CALLS: ["upload", "upload", "path", "include?", "upload", "model_id", "id", "upload", "model_type", "class", "base_class", "sti_name"]
CALLS: ["store_dirs", "join", "map", "model", "current_upload_satisfies?", "upload", "uploads", "model", "find_by"]
CALLS: ["temp_file_uploader", "file_name", "retrieve_from_store!", "temp_file_uploader", "file", "path"]
CALLS: ["secret", "new"]
CALLS: ["project", "raw_repository", "raw", "repository", "raw_repository", "revert", "with_cache_hooks"]
CALLS: ["assign_change_commit_vars", "blank?", "render_404", "create_new_branch?", "revert_branch_name", "current_user", "change_type_title", "successful_change_path", "failed_change_path", "create_commit", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["merged_merge_request?"]
CALLS: ["merged_merge_request"]
CALLS: ["merged_merge_request_no_cache", "new"]
CALLS: ["merge_commit?", "project", "id", "new", "id", "find_by"]
CALLS: ["parents", "size"]
CALLS: ["parent_ids", "values_at", "compact"]
CALLS: ["parent_ids", "project", "lazy", "map"]
CALLS: ["short_id"]
CALLS: ["params"]
CALLS: ["referenced_merge_request_url", "params", "project_commit_url"]
CALLS: ["current_user", "merged_merge_request", "target_project", "project_merge_request_url"]
CALLS: ["referenced_merge_request_url", "project_commits_url"]
CALLS: ["params", "present?", "current_user", "can?"]
CALLS: ["file_path", "dirname", "mkdir_p", "temp_file_path", "file_path", "move"]
CALLS: ["params", "require", "params", "to_i", "params", "find", "issue", "current_user", "can_move?", "render_404", "project", "current_user", "new", "issue", "execute", "render_issue_json", "json", "respond_to", "render_conflict_response"]
CALLS: ["can?", "moved?", "persisted?", "project", "can?"]
CALLS: ["moved_to", "nil?"]
CALLS: []
CALLS: ["valid?", "serializer", "represent", "errors", "full_messages", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["html", "issuable", "human_class_name", "json", "respond_to"]
CALLS: ["uploader_mounted?", "model", "upload_mount", "public_send", "build_uploader_from_upload", "build_uploader_from_params", "strong_memoize"]
CALLS: ["build_uploader", "params", "retrieve_from_store!"]
CALLS: ["uploader_class", "model", "new", "upload", "identifier", "retrieve_from_store!", "tap"]
CALLS: ["uploader_class", "model", "new", "upload", "identifier", "retrieve_from_store!", "tap"]
CALLS: ["build_uploader", "send"]
CALLS: ["uploader_class", "model", "mount_point", "new", "upload", "identifier", "retrieve_from_store!", "tap"]
CALLS: ["to_sym"]
CALLS: ["params", "params", "uploader_class", "model", "params", "new", "model_valid?"]
CALLS: []
CALLS: ["model"]
CALLS: ["build_uploader", "params", "upload_paths", "uploader_class", "to_s", "find_by", "build_uploader"]
CALLS: ["secret", "join", "base_dir", "secret", "join"]
CALLS: ["upload_model_class", "upload_mount", "nil?"]
CALLS: ["params", "include?"]
CALLS: ["update", "execute_hooks"]
CALLS: ["delete", "execute_hooks"]
CALLS: ["current_user", "new", "new", "create", "execute_hooks"]
CALLS: ["current_user", "build", "execute_hooks", "execute_services"]
CALLS: ["services", "public_send", "async_execute", "each", "run_after_commit_or_now"]
CALLS: ["now", "parsed_url", "userinfo", "blank?", "hook", "url", "make_request", "make_request_with_auth", "hook_name", "hook", "url", "data", "now", "log_execution", "code", "to_s", "hook_name", "hook", "url", "data", "new", "now", "to_s", "log_execution", "logger", "error", "to_s"]
CALLS: ["hook", "is_a?", "hook", "hook_name", "build_headers", "format_response_headers", "safe_response_body", "code", "create"]
CALLS: ["body", "body", "encode"]
CALLS: ["note", "present?", "note", "note", "target", "title"]
CALLS: ["headers", "each_capitalized", "to_h"]
CALLS: ["singularize", "titleize", "hook", "token", "present?", "hook", "token", "remove_line_breaks", "tap"]
CALLS: ["hook", "url", "parsed_url", "userinfo", "gsub", "parsed_url", "user", "unescape", "parsed_url", "password", "unescape", "make_request"]
CALLS: ["data", "to_json", "hook_name", "build_headers", "hook", "enable_ssl_verification", "request_options", "post"]
CALLS: ["hook", "url", "parse"]
CALLS: ["path"]
CALLS: ["cycle_analytics", "events", "render_events"]
CALLS: ["domain", "verification_code", "present?", "domain", "domain", "error", "verification_enabled?", "dns_record_present?", "verify_domain!", "expired?", "disable_domain!", "unverify_domain!"]
CALLS: ["timeouts", "domain", "domain", "check", "domain", "verification_domain", "check", "open"]
CALLS: ["file_storage?", "path", "path", "open", "url", "url", "cached_size", "new"]
CALLS: ["model", "size", "present?", "model", "file_changed?", "model", "size", "size"]
CALLS: ["domain", "present?", "domain"]
CALLS: ["domain", "assign_attributes", "domain", "save!", "notify", "domain", "domain", "error"]
CALLS: ["domain", "verified?", "domain", "assign_attributes", "domain", "save!", "notify", "domain", "domain", "error"]
CALLS: ["verified_at"]
CALLS: ["emails_with_verified_status", "values", "any?"]
CALLS: ["domain", "enabled?", "domain", "unverified?", "domain", "enabled_until", "from_now", "compact", "max", "domain", "now", "assign_attributes", "domain", "save!", "notify", "notify", "success"]
CALLS: ["verified?"]
CALLS: ["validate", "error", "project", "repository", "branch_exists?", "error", "success", "message", "error"]
CALLS: ["token", "expired?", "token", "revoked?", "include_any_scope?"]
CALLS: ["blank?", "token", "scopes", "map", "is_a?", "new", "request", "sufficient?", "any?"]
CALLS: ["user_synced_attributes_metadata", "params", "user_synced_attributes_metadata", "read_only_attributes", "except!", "params", "any?", "params", "assign_attributes"]
CALLS: ["sync_profile_from_provider?", "synced?", "select"]
CALLS: ["block_given?", "persisted?", "assign_attributes", "save", "notify_success", "errors", "full_messages", "uniq", "join", "error"]
CALLS: ["notify_new_user", "success"]
CALLS: ["name", "email", "log_info", "notification_service", "new_user", "system_hook_service", "execute_hooks_for"]
CALLS: ["notifiable?", "identities", "any?", "mailer", "id", "new_user_email", "deliver_later"]
CALLS: ["find", "user_url", "notification_email", "subject", "mail"]
CALLS: ["logger", "project", "name", "project", "id", "info"]
CALLS: ["user", "id", "new", "try_obtain", "sleep", "execute_without_lease", "cancel"]
CALLS: ["current_authorizations_per_project", "fresh_access_levels_per_project", "access_level", "project_id", "each_with_object", "access_level", "user", "id", "each_with_object", "update_authorizations"]
CALLS: ["current_authorizations", "index_by"]
CALLS: ["user", "project_authorizations", "select"]
CALLS: ["fresh_authorizations", "project_id", "access_level", "each_with_object"]
CALLS: ["supports_nested_groups?", "user", "new", "calculate"]
CALLS: ["empty?", "empty?", "transaction_begin", "empty?", "user", "remove_project_authorizations", "empty?", "insert_authorizations", "transaction_end", "transaction", "user", "reload"]
CALLS: ["project_authorizations", "where", "delete_all"]
CALLS: ["connection", "quote", "map", "map", "connection", "')}\n      EOF", "execute", "each_slice"]
CALLS: ["user", "block_transition", "user", "transaction_begin", "user", "block", "migrate_records_in_transaction", "rollback", "user", "save!", "transaction_end", "transaction", "user", "reload"]
CALLS: ["user", "transaction_begin", "ghost", "migrate_records", "transaction_end", "transaction"]
CALLS: ["migrate_issues", "migrate_merge_requests", "migrate_notes", "migrate_abuse_reports", "migrate_award_emojis"]
CALLS: ["user", "award_emoji", "ghost_user", "id", "update_all"]
CALLS: ["user", "reported_abuse_reports", "ghost_user", "id", "update_all"]
CALLS: ["user", "notes", "ghost_user", "id", "update_all"]
CALLS: ["user", "merge_requests", "ghost_user", "id", "update_all", "user", "id", "where", "ghost_user", "id", "update_all"]
CALLS: ["user", "issues", "ghost_user", "id", "update_all", "user", "id", "where", "ghost_user", "id", "update_all"]
CALLS: ["fetch", "current_user", "allowed?", "current_user", "solo_owned_groups", "present?", "errors", "members", "run_callbacks", "find_each", "solo_owned_groups", "current_user", "new", "execute", "each", "namespace", "prepare_for_destroy", "personal_projects", "current_user", "legacy_storage?", "new", "execute", "each", "block_given?", "new", "execute", "destroy", "destroy"]
CALLS: ["active_external_issue_tracker?", "where", "update_all", "active_external_wiki?", "where", "update_all"]
CALLS: ["type"]
CALLS: ["issue_tracker?", "default"]
CALLS: ["category"]
CALLS: ["read_attribute", "to_sym"]
CALLS: ["owned_groups", "owners", "select"]
CALLS: ["group", "group", "owners", "project", "owner"]
CALLS: ["", "active", "where"]
CALLS: ["storage_version", "include?"]
CALLS: ["old_repository_storage_paths"]
CALLS: ["repository_storage_paths"]
CALLS: ["all_projects", "select", "to_a", "map", "unscoped"]
CALLS: ["full_path", "inside_path"]
CALLS: ["personal_projects", "visible_to_user", "personal_projects", "public_to_user"]
CALLS: ["contributed_projects", "visible_to_user", "contributed_projects", "public_to_user"]
CALLS: ["select", "contributions", "where", "now", "year", "where", "uniq", "reorder", "where"]
CALLS: ["where"]
CALLS: ["user", "new", "current_user", "execute"]
CALLS: ["current_user", "params", "new", "execute", "recently_sent_password_reset?", "generate_reset_token", "save", "notify_new_user"]
CALLS: ["reset_password_sent_at", "present?", "reset_password_sent_at", "minute", "ago"]
CALLS: ["token_generator", "class", "generate", "reset_password_token", "reset_password_sent_at", "now", "utc"]
CALLS: ["subject", "transaction_begin", "lookup", "create_record", "maximum_iid", "increment_and_save!", "transaction_end", "transaction"]
CALLS: ["init", "subject", "call"]
CALLS: ["subject", "transaction_begin", "scope", "usage_value", "maximum_iid", "create!", "transaction_end", "transaction", "lookup"]
CALLS: ["usages", "usage", "to_s"]
CALLS: ["scope", "usage_value", "find_by"]
CALLS: ["lock!", "last_value", "last_value", "max", "save!", "last_value"]
CALLS: ["generate", "params", "project_issues_path", "params", "project_merge_requests_path", "project_labels_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["board_parent", "current_user", "new", "board", "execute", "board", "lists", "movable", "serialize_as_json"]
CALLS: ["can_create_user?", "build_user_params", "new", "current_user", "admin?", "params", "generate_reset_token", "friendly_token", "password_length", "min", "first", "password", "password_confirmation", "params", "slice", "any?", "identities", "build"]
CALLS: ["current_user", "admin?", "params", "admin_create_params", "slice", "current_user", "id", "params", "merge!", "signup_params", "params", "slice", "nil?", "skip_user_confirmation_email_from_setting"]
CALLS: ["send_user_confirmation_email"]
CALLS: []
CALLS: []
CALLS: ["current_user", "nil?", "allow_signup?", "current_user", "admin?"]
CALLS: ["is_a?", "record_activity"]
CALLS: ["read_write?", "id", "record", "logger", "id", "username", "debug"]
CALLS: ["reply_key", "is_a?", "id", "id", "project", "class", "name", "reverse_merge!", "create"]
CALLS: ["map", "bulk_perform_and_wait", "bulk_perform_async"]
CALLS: ["size", "bulk_perform_inline", "size", "new", "key", "map", "bulk_perform_async", "wait"]
CALLS: ["new", "perform", "each", "present?", "bulk_perform_async"]
CALLS: ["find", "with_indifferent_access", "new", "execute"]
CALLS: ["find_by_id", "provider", "gcp?", "new", "execute", "try", "try"]
CALLS: ["find", "calculate_checksum!", "save!", "logger", "error"]
CALLS: ["checksum", "checksummable?", "checksum", "class", "absolute_path", "hexdigest"]
CALLS: ["checksum", "nil?", "local?", "exist?"]
CALLS: ["store", "nil?", "store"]
CALLS: ["absolute_path", "exist?"]
CALLS: ["store", "nil?", "store"]
CALLS: ["absolute_path", "exist?"]
CALLS: ["store", "nil?", "store"]
CALLS: ["absolute_path", "exist?"]
CALLS: ["local?", "relative_path?", "path", "uploader_class", "absolute_path"]
CALLS: ["path", "start_with?"]
CALLS: ["path", "start_with?"]
CALLS: ["path", "start_with?"]
CALLS: ["checksum", "nil?", "local?", "exist?"]
CALLS: ["local?", "relative_path?", "path", "uploader_class", "absolute_path"]
CALLS: ["root", "path", "join"]
CALLS: ["class", "absolute_path"]
CALLS: ["checksum", "nil?", "local?", "exist?"]
CALLS: ["local?", "relative_path?", "path", "uploader_class", "absolute_path"]
CALLS: ["checksum", "checksummable?", "checksum", "class", "absolute_path", "hexdigest"]
CALLS: ["checksum", "checksummable?", "checksum", "absolute_path", "file", "hexdigest"]
CALLS: ["cast_data", "keys", "length", "where", "to_a", "flatten", "update_all", "new", "delete"]
CALLS: ["to_i", "to_i", "at", "to_s", "each_with_object"]
CALLS: ["find_by", "find_by", "new", "execute", "measure", "real", "join", "real", "logger", "info"]
CALLS: ["find", "source_project", "source_branch", "where", "last", "latest?", "diff_head_sha", "sha", "log_error_message_for", "id", "update_attribute"]
CALLS: ["logger", "id", "source_branch", "diff_head_sha", "error"]
CALLS: ["sha", "latest_sha"]
CALLS: ["project", "build", "ref", "commit", "try", "to_s", "project", "cleanup"]
CALLS: ["cleanup"]
CALLS: ["cleanup"]
CALLS: ["historical?"]
CALLS: ["historical?", "last_version", "sha", "version", "sha"]
CALLS: ["id", "merge_request", "latest_merge_request_diff_id"]
CALLS: ["ref", "commit", "present?", "project", "ref", "commit", "commit"]
CALLS: ["retried?"]
CALLS: ["logger", "info", "refresh!"]
CALLS: ["transaction_begin", "delete_all", "connection", "months", "ago", "quote", "connection", "T};\n      EOF", "execute", "transaction_end", "transaction"]
CALLS: ["blank?", "include?", "public_send", "each", "save!"]
CALLS: ["new", "execute_hooks"]
CALLS: ["stuck_merge_requests", "map", "completed_jids", "any?", "merge_jid", "include?", "select", "map", "apply_current_state!", "find_in_batches"]
CALLS: ["select", "with_state", "where", "not", "reorder"]
CALLS: ["where", "where", "not", "update_all", "where", "each", "logger", "join", "info"]
CALLS: ["mark_projects_without_jid_as_failed!", "mark_projects_with_jid_as_failed!", "add_event"]
CALLS: ["enqueued_projects_with_jid", "pluck", "to_h", "keys", "completed_jids", "any?", "values_at", "enqueued_projects_with_jid", "where", "logger", "map", "join", "info", "error_message", "mark_import_as_failed", "each", "count"]
CALLS: []
CALLS: ["enqueued_projects", "where", "not"]
CALLS: ["with_import_status"]
CALLS: ["enqueued_projects_without_jid", "error_message", "mark_import_as_failed", "each", "count"]
CALLS: ["enqueued_projects", "where"]
CALLS: ["try_obtain_lease", "logger", "class", "info", "remove_lease"]
CALLS: ["cancel"]
CALLS: ["minutes", "new", "try_obtain"]
CALLS: ["hours", "new", "try_obtain"]
CALLS: ["new", "try_obtain"]
CALLS: ["new", "try_obtain"]
CALLS: ["lease_key", "new", "try_obtain", "measure"]
CALLS: []
CALLS: ["id"]
CALLS: ["app", "id", "new", "try_obtain"]
CALLS: ["build_relation", "with_route", "logger", "full_path", "id", "info", "migrate_to_hashed_storage!", "logger", "message", "full_path", "id", "backtrace", "error", "find_each"]
CALLS: ["arel_table", "gteq", "where", "lteq", "where"]
CALLS: ["hashed_storage?", "update!", "repo_reference_count", "wiki_reference_count", "id", "perform_in", "id", "perform_async"]
CALLS: ["reference_counter", "value"]
CALLS: ["gl_repository", "new"]
CALLS: ["reference_counter", "value"]
CALLS: ["find_by", "update_status", "try"]
CALLS: ["statuses", "latest", "status", "enqueue", "run", "succeed", "drop", "cancel", "block", "skip", "skip", "retry_optimistic_lock"]
CALLS: ["search"]
CALLS: ["popen"]
CALLS: ["two_factor_grace_period_expired?", "new_profile_two_factor_auth_path", "session", "current_user", "otp_grace_period_started_at", "two_factor_grace_period", "hours", "root_path", "header_title", "profile_path"]
CALLS: ["current_user", "otp_grace_period_started_at", "two_factor_grace_period", "hours", "current"]
CALLS: ["latest_builds_status", "enqueue", "run", "succeed", "drop", "cancel", "skip", "block", "retry_optimistic_lock"]
CALLS: ["yaml_errors", "blank?", "statuses", "latest", "status"]
CALLS: ["new", "perform_async", "each_slice"]
CALLS: ["find_by", "find_by", "run_pipeline_schedule"]
CALLS: ["project", "ref", "new", "execute"]
CALLS: ["remove_all_profiles"]
CALLS: ["find", "start_import", "import_url", "full_path", "add_event", "creator", "new", "execute", "async?", "gitlab_project_import?", "fail_import", "after_import"]
CALLS: ["mark_import_as_failed"]
CALLS: ["start", "logger", "full_path", "import_status", "info"]
CALLS: ["import_started?", "import_jid", "jid", "import_start"]
CALLS: ["has_importer?", "importer_class", "try"]
CALLS: ["expire_content_cache"]
CALLS: ["repository", "after_import", "import_finish", "remove_import_jid", "update_project_counter_caches", "after_create_default_branch", "refresh_markdown_cache!"]
CALLS: ["import_jid", "import_jid", "unset", "update_column"]
CALLS: ["default_branch", "default_branch", "change_head", "default_branch_protection", "default_branch", "protected?", "default_branch", "default_branch_protection", "default_branch_protection", "creator", "new", "execute"]
CALLS: ["repository", "branch_exists?", "repository", "before_change_head", "repository", "raw_repository", "write_ref", "repository", "copy_gitattributes", "repository", "after_change_head", "reload_default_branch", "errors", "add"]
CALLS: ["root_ref", "raw_repository", "copy_gitattributes"]
CALLS: ["keys", "expire_method_caches"]
CALLS: ["expire_branch_cache", "expire_root_ref_cache", "repository_event"]
CALLS: ["root_ref", "branches", "cache", "name", "expire", "cache", "name", "expire", "each", "cache", "expire", "cache", "expire"]
CALLS: ["cache", "delete"]
CALLS: ["default_branch"]
CALLS: ["refresh_markdown_cache", "persisted?", "read_write?", "update_columns"]
CALLS: ["shift", "find", "empty?", "forked_from_project", "mark_import_as_failed", "repository_storage", "disk_path", "fork_repository", "logger", "id", "info", "config", "repositories", "storages", "legacy_disk_path", "find", "first", "raise", "fork_repository"]
CALLS: ["start_fork", "disk_path", "add_event", "gitlab_shell", "repository_storage", "disk_path", "fork_repository", "id", "disk_path", "after_import"]
CALLS: ["start", "logger", "full_path", "import_status", "info"]
CALLS: ["find", "check", "now", "update_columns"]
CALLS: ["select", "map", "where", "update_all", "find_in_batches"]
CALLS: ["now", "project_ids", "now", "current_settings", "repository_checks_enabled", "try_obtain_lease", "new", "perform", "each"]
CALLS: ["env", "test?", "fake_application_settings", "current"]
CALLS: ["new", "execute"]
CALLS: ["destroy_unreferenced"]
CALLS: ["table_name", "joins", "where", "destroy_all"]
CALLS: ["now", "destroy_all"]
CALLS: ["expired", "new", "execute", "logger", "id", "error", "find_each"]
CALLS: ["", "current", "where"]
CALLS: ["expired", "destroy_all"]
CALLS: ["find", "find", "source_project", "new", "execute"]
CALLS: ["const_get", "find_by", "try"]
CALLS: ["unscoped", "unscoped", "months", "day", "ago", "where", "select", "limit", "where", "delete_all"]
CALLS: ["try_obtain_lease_for", "find_by", "propagate"]
CALLS: ["new", "try_obtain"]
CALLS: ["new", "try_obtain"]
CALLS: ["hash", "new", "try_obtain"]
CALLS: ["active?", "logger", "id", "info", "propagate_projects_with_template"]
CALLS: ["project_ids_batch", "empty?", "bulk_create_from_template", "size", "loop"]
CALLS: ["connection", "select_values"]
CALLS: ["service_hash", "values", "map", "transaction_begin", "service_hash", "keys", "bulk_insert_services", "run_callbacks", "transaction_end", "transaction"]
CALLS: ["as_json", "except", "is_a?", "to_json", "connection", "quote_column_name", "sanitize", "each_with_object"]
CALLS: ["connection", "')}\n      SQL", "execute"]
CALLS: ["with_indifferent_access", "find", "execute"]
CALLS: ["find_by", "nil?", "pending_delete?", "lease_for", "try_obtain", "logger", "new", "execute", "cancel_lease_for"]
CALLS: ["lease_key", "cancel"]
CALLS: ["lease_key", "new"]
CALLS: ["class", "name", "new"]
CALLS: ["find", "find", "build!", "new", "execute"]
CALLS: ["find", "find", "symbolize_keys", "new", "execute", "logger", "message", "error"]
CALLS: ["find_by", "repository", "exists?", "map", "update_statistics", "repository", "map", "refresh_method_caches", "cleanup"]
CALLS: ["id", "try_obtain_lease_for", "logger", "id", "info", "statistics", "refresh!"]
CALLS: ["to_sym", "concat", "each", "expire_method_caches", "send", "each"]
CALLS: ["find_by", "commit_exists_in_upstream?", "find_by", "build_commit", "author", "process_commit_message", "update_issue_metrics"]
CALLS: ["forked?", "forked_from_project", "with_indifferent_access", "commit", "present?"]
CALLS: ["to_s", "end_with?", "is_a?", "parse", "each", "from_hash"]
CALLS: ["all_references", "issues", "empty?", "map", "where", "committed_date", "update_all"]
CALLS: ["merged_merge_request?", "closes_issues", "any?", "close_issues", "create_cross_references!"]
CALLS: ["new", "updatable_by_user", "new", "close_issue", "each"]
CALLS: ["mark_pending_todos_as_done"]
CALLS: ["close_resource_email"]
CALLS: ["new", "execute"]
CALLS: ["project", "jira_tracker?", "project", "jira_service", "active", "is_a?", "project", "jira_service", "close_issue", "todo_service", "current_user", "close_issue", "project", "issues_enabled?", "close", "current_user", "update", "event_service", "current_user", "close_issue", "create_note", "notification_service", "current_user", "close_issue", "todo_service", "current_user", "close_issue", "execute_hooks", "assignees", "invalidate_cache_counts", "update_project_counter_caches"]
CALLS: ["issues_tracker", "to_param"]
CALLS: ["config", "issues_tracker", "to_param"]
CALLS: ["external_issue_tracker", "external_issue_tracker", "default_issue_tracker"]
CALLS: ["gitlab_issue_tracker_service", "create_gitlab_issue_tracker_service"]
CALLS: ["create_record_event"]
CALLS: ["client", "iid", "find", "jira_request", "nil?", "has_resolution?", "jira_issue_transition_id", "present?", "is_a?", "id", "is_a?", "diff_head_sha", "build_entity_url", "transition_issue", "client", "key", "find", "jira_request", "has_resolution?", "add_issue_solved_comment"]
CALLS: ["message", "logger", "class", "name", "client_url", "info"]
CALLS: ["api_url", "present?", "api_url", "url"]
CALLS: ["project", "namespace", "becomes", "project", "to_sym", "gitlab", "base_url", "polymorphic_url"]
CALLS: ["respond_to?", "resolution", "present?"]
CALLS: ["build_remote_link_props", "send_message"]
CALLS: ["gitlab_config", "url", "asset_url"]
CALLS: ["client_url", "present?", "find_remote_link", "save!", "comments", "build", "save!", "remotelink", "build", "save!", "class", "name", "client_url", "logger", "info", "jira_request"]
CALLS: ["remotelink", "all", "jira_request", "object", "find"]
CALLS: ["transitions", "build", "jira_issue_transition_id", "save"]
CALLS: ["admin?", "collection", "project_ids", "projects_with_reporter_access_limited_to", "pluck", "collection", "project_id", "include?", "is_a?", "assignee_or_author?", "select"]
CALLS: ["authorized_projects", "where"]
CALLS: ["author_id", "id", "assignee_id", "id"]
CALLS: ["author_id", "id", "assignees", "id", "exists?"]
CALLS: ["target_branch", "project", "default_branch", "current_user", "closes_issues", "current_user", "can?", "project", "current_user", "new", "execute", "each"]
CALLS: ["author", "referenced_mentionables", "include?", "cross_reference_exists?", "reject!", "local_reference", "cross_reference", "each"]
CALLS: ["notes", "system", "notes_for_mentioner", "exists?"]
CALLS: ["is_a?", "cross_reference_note_prefix", "to_reference", "capitalize", "where", "project", "group", "gfm_reference", "cross_reference_note_content", "capitalize", "where"]
CALLS: ["cross_reference_note_prefix"]
CALLS: ["", "where"]
CALLS: ["cross_reference_disallowed?", "project", "group", "gfm_reference", "cross_reference_note_content", "is_a?", "project", "issues_tracker", "create_cross_reference_note", "project", "new", "create_note"]
CALLS: ["is_a?", "project", "jira_tracker_active?", "is_a?", "is_a?", "commits", "include?"]
CALLS: ["jira_tracker?", "jira_service", "active"]
CALLS: ["can_cross_reference?", "model_name", "plural", "humanize", "client", "id", "find", "jira_request", "present?", "respond_to?", "iid", "id", "noteable_name", "build_entity_url", "name", "user_path", "resource_url", "project", "full_path", "project", "namespace", "project", "namespace_project_path", "resource_url", "humanize", "downcase", "title", "add_comment"]
CALLS: ["model_name", "singular"]
CALLS: ["gitlab", "base_url", "chomp"]
CALLS: ["chomp", "build_remote_link_props", "comment_exists?", "send_message"]
CALLS: ["comments", "jira_request", "present?", "body", "include?", "any?"]
CALLS: ["commit_events", "merge_requests_events"]
CALLS: ["local_reference", "cross_reference_exists?"]
CALLS: ["parse", "nil?", "log", "include?", "decode64", "logger", "inspect", "info", "new", "process_wiki_changes", "process_project_changes"]
CALLS: ["error"]
CALLS: ["project", "touch"]
CALLS: ["new", "identify", "identifier", "log", "tag_ref?", "project", "new", "execute", "branch_ref?", "project", "new", "execute", "single_change", "changes_refs", "to_a", "after_project_changes_hooks"]
CALLS: ["project", "update", "new", "execute_hooks"]
CALLS: ["execute", "error"]
CALLS: ["find_by", "try"]
CALLS: ["find_by", "project", "new", "trigger", "try"]
CALLS: ["active", "now", "where", "preload", "project", "owner", "ref", "new", "execute", "persisted?", "deactivate!", "logger", "id", "message", "error", "schedule_next_run!", "find_each"]
CALLS: ["save!", "update_attribute"]
CALLS: ["update_attribute"]
CALLS: ["find_by", "try"]
CALLS: ["find_by", "new", "pipeline_finished"]
CALLS: ["status", "mailer", "respond_to?", "user", "status", "notifiable_users", "map", "any?", "mailer", "public_send", "deliver_later"]
CALLS: ["notifiable_users"]
CALLS: ["compact", "new", "map", "select", "map"]
CALLS: ["find_by", "active?", "update_metrics_for_active_pipeline", "success?", "update_metrics_for_succeeded_pipeline", "try"]
CALLS: ["metrics", "started_at", "finished_at", "id", "update_all"]
CALLS: ["metrics", "started_at", "id", "update_all"]
CALLS: ["find_by", "try"]
CALLS: ["send"]
CALLS: ["find_by", "new", "execute"]
CALLS: ["needs_verification", "id", "perform_async", "find_each"]
CALLS: ["", "arel_table", "arel_table", "now", "eq", "eq", "lt", "or", "or", "where"]
CALLS: ["constantize", "constantize", "object_store_enabled?", "background_upload_enabled?", "find", "public_send", "migrate!"]
CALLS: ["unsafe_migrate!", "with_exclusive_lease"]
CALLS: ["object_store", "file", "file", "object_store", "object_store", "file_storage?", "cache_stored_file!", "storage", "file", "store!", "persist_object_store!", "file", "with_callbacks", "with_callbacks", "file", "nil?", "delete", "object_store", "file"]
CALLS: ["class", "object_store_enabled?", "class", "direct_upload_enabled?", "object_store"]
CALLS: ["object_store_options", "direct_upload"]
CALLS: ["persist_object_store?", "model", "store_serialization_column", "object_store", "update_column"]
CALLS: ["model", "store_serialization_column", "respond_to?"]
CALLS: ["args_check!", "constantize", "to_sym", "preload", "where", "sanity_check!", "migrate", "report!", "logger", "class", "message", "warn"]
CALLS: ["build_uploaders", "method", "map"]
CALLS: ["build_uploader", "map"]
CALLS: ["count", "count"]
CALLS: ["class", "sanity_check!"]
CALLS: ["partition", "logger", "header", "info", "logger", "failures", "warn", "any?", "map", "new"]
CALLS: ["map", "join"]
CALLS: ["count", "count", "count"]
CALLS: ["statuses", "latest", "failed", "present?", "render_show", "pipeline_path"]
CALLS: ["", "where"]
CALLS: ["project", "id", "project_pipeline_path"]
CALLS: ["constantize", "constantize", "object_store_enabled?", "background_upload_enabled?", "find", "to_sym", "build_uploader", "migrate!"]
CALLS: ["find_by", "can_create_notification?", "new", "new_note", "new", "execute", "logger", "error"]
CALLS: ["handle_note"]
CALLS: ["can_create_todo?", "project", "noteable", "mark_pending_todos_as_done", "create_mention_todos"]
CALLS: ["system?", "for_snippet?"]
CALLS: ["noteable_type", "end_with?"]
CALLS: ["noteable_type"]
CALLS: ["noteable_type", "present?", "cross_reference?", "system?", "to_ability_name", "to_sym", "build_new_note_recipients", "mailer", "user", "id", "id", "send", "deliver_later", "each"]
CALLS: ["new", "notification_recipients"]
CALLS: []
CALLS: ["objects_found?", "new", "issuable", "user", "open_mr", "new", "issuable", "user", "new_merge_request", "issuable", "user", "create_cross_references!"]
CALLS: ["set_user", "set_issuable", "user", "issuable"]
CALLS: ["issuable_class", "find_by", "issuable_class", "log_error"]
CALLS: []
CALLS: []
CALLS: ["create_record_event"]
CALLS: ["objects_found?", "new", "issuable", "user", "open_issue", "new", "issuable", "user", "new_issue", "issuable", "user", "create_cross_references!"]
CALLS: ["create_record_event"]
CALLS: ["unscoped", "find", "namespace", "team", "truncate", "forked?", "unlink_fork", "destroy!"]
CALLS: ["forked_from_project", "merge_requests", "opened", "from_project", "update_all", "forked_project_link", "destroy"]
CALLS: ["", "id", "where"]
CALLS: ["with_indifferent_access", "find", "find", "target_project", "new", "execute"]
CALLS: ["new", "opened", "due_tomorrow", "in_projects", "preload", "issue_due", "find_each"]
CALLS: ["author", "build_recipients", "mailer", "user", "id", "id", "reason", "send", "deliver_later", "each"]
CALLS: ["", "tomorrow", "where"]
CALLS: ["opened", "due_tomorrow", "group", "pluck", "map", "bulk_perform_async"]
CALLS: ["find", "gsub", "close_connection"]
CALLS: ["close"]
CALLS: ["find_by", "new", "run"]
CALLS: ["new", "execute"]
CALLS: ["find", "find", "new", "execute"]
CALLS: ["try_obtain_lease", "new", "execute"]
CALLS: ["gitlab_shell", "__send__"]
CALLS: ["find_project", "running?", "refresh_import_jid_expiration", "class", "perform_in_the_future"]
CALLS: ["select", "import_started", "find_by"]
CALLS: ["", "where"]
CALLS: ["perform_in"]
CALLS: ["select", "import_started", "find_by"]
CALLS: ["import_started", "find_by"]
CALLS: ["import_jid", "import_jid", "set"]
CALLS: ["find_project", "wait_for_jobs", "empty?", "refresh_import_jid_expiration", "to_sym", "fetch", "perform_async", "class", "perform_in"]
CALLS: ["new", "wait", "jobs_remaining", "positive?", "key", "jobs_remaining", "each_with_object"]
CALLS: ["find", "get_lease_uuid", "renew_lease", "try_obtain_lease", "to_sym", "command", "repository", "raw_repository", "gitaly_call", "repository", "path_to_repo", "join", "info", "popen", "zero?", "error", "gitaly_migrate", "flush_ref_caches", "cleanup", "present?", "present?", "cancel_lease"]
CALLS: ["migrate", "error", "new", "error", "new"]
CALLS: ["repository", "after_create_branch", "repository", "branch_names", "repository", "has_visible_content?"]
CALLS: ["expire_branches_cache", "repository_event"]
CALLS: ["new", "bitmaps_enabled?", "garbage_collect", "bitmaps_enabled?", "repack_full", "repack_incremental"]
CALLS: ["get_uuid"]
CALLS: ["cancel"]
CALLS: ["new", "renew"]
CALLS: ["repository_storage_path", "disk_path", "join", "expand_path"]
CALLS: ["find_by", "project", "new", "project_pipelines_path", "touch", "project_pipeline_path", "touch", "commit", "nil?", "commit", "commit_pipelines_path", "touch", "new_merge_request_pipelines_path", "touch", "touch", "each_pipelines_merge_request_path", "update_for_pipeline"]
CALLS: ["all_merge_requests", "url_helpers", "pipelines_project_merge_request_path", "each"]
CALLS: ["project", "merge_requests", "ref", "where"]
CALLS: ["url_helpers", "project_new_merge_request_path"]
CALLS: ["url_helpers", "id", "pipelines_project_commit_path"]
CALLS: ["joins", "find_by", "pipeline", "project", "new", "project_pipeline_path", "touch", "project_job_path", "touch", "tap"]
CALLS: ["with_expired_artifacts", "reorder", "find_by", "project", "project", "pending_delete", "logger", "id", "info", "erase_artifacts!"]
CALLS: ["", "where"]
CALLS: ["", "with_artifacts_archive", "now", "where"]
CALLS: ["logger", "info", "with_expired_artifacts", "pluck", "map", "bulk_perform_async"]
CALLS: ["symbolize_keys!", "reverse_merge!", "find", "blank_ref?", "blank_ref?", "new", "execute", "diff_refs", "same", "commits", "empty?", "new", "execute", "diff_refs", "commits", "empty?", "split", "send_email", "logger", "full_name", "info", "each", "start"]
CALLS: ["email", "present?", "repository_push_email", "email", "to", "email", "add_message_id", "skip_premailer", "email", "header", "email", "deliver_now"]
CALLS: ["new", "target_url", "find", "add_project_headers", "headers", "author_username", "author_id", "send_from_committer_email?", "sender", "reply_to", "subject", "mail"]
CALLS: ["send_from_committer_email", "to_boolean"]
CALLS: ["headers", "name", "headers", "id", "headers", "full_path"]
CALLS: ["find", "default_sender_address", "display_name", "name", "can_send_from_user_email?", "address", "email", "format"]
CALLS: ["description", "blank?", "short_sha", "description"]
CALLS: ["sha", "truncate_sha"]
CALLS: ["token", "token"]
CALLS: ["sha", "truncate_sha"]
CALLS: ["truncate_sha"]
CALLS: ["email", "split", "last", "class", "allowed_email_domains", "include?"]
CALLS: ["config", "gitlab", "host", "split", "length", "tld_length", "join", "shift"]
CALLS: ["config", "gitlab", "email_from", "new", "display_name", "config", "gitlab", "email_display_name"]
CALLS: ["enabled?", "new", "execute", "handle_failure"]
CALLS: ["logger", "warn", "present?", "message", "rejection", "deliver_later"]
CALLS: ["new", "from", "from", "subject", "hex", "config", "gitlab", "host", "message_id", "message_id", "to", "first", "mail"]
CALLS: ["class", "model_name", "singular_route_key", "id", "config", "gitlab", "host"]
CALLS: ["find", "find", "new", "symbolize_keys", "execute", "logger", "warn"]
CALLS: ["find", "find", "new", "execute"]
CALLS: ["find", "find", "deep_symbolize_keys", "new", "execute"]
CALLS: ["find_by", "commit", "new", "signature"]
CALLS: ["gpg_commit", "signature"]
CALLS: ["commit", "commit", "new"]
CALLS: ["last", "key?", "pop", "", "jid", "notify"]
CALLS: ["find_project", "new_client_for", "try_import"]
CALLS: ["import", "class", "rate_limit_resets_in", "id", "perform_in"]
CALLS: ["id", "jid", "perform_in_the_future", "new", "execute", "counter", "increment", "id", "perform_async"]
CALLS: ["new", "execute", "refresh_import_jid_expiration", "id", "key", "jobs_remaining", "perform_async"]
CALLS: ["new", "execute", "id", "key", "jobs_remaining", "perform_async"]
CALLS: ["new", "execute", "key", "jobs_remaining", "each_with_object", "id", "perform_async"]
CALLS: ["new", "execute", "each", "refresh_import_jid_expiration", "id", "perform_async"]
CALLS: ["after_import", "report_import_time"]
CALLS: ["zone", "now", "created_at", "full_path", "histogram", "observe", "counter", "increment", "logger", "round", "info"]
CALLS: ["histogram"]
CALLS: ["representation_class", "from_json_hash", "importer_class", "new", "execute", "counter", "full_path", "increment"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["project", "project_members", "to_a", "project_members", "pluck", "invite?", "user_id", "include?", "reject!", "dup", "id", "source", "created_by", "map!", "transaction_begin", "save", "each", "transaction_end", "transaction"]
CALLS: ["invite_token", "present?"]
CALLS: ["current_user", "authorized_projects", "order_id_desc", "apply_import_project_project_members_path", "options_from_collection_for_select", "select_tag", "project_project_members_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["import"]
CALLS: ["find_by", "notify_waiter", "new_client_for", "try_import", "notify_waiter", "class", "rate_limit_resets_in", "id", "perform_in"]
CALLS: ["jid", "notify"]
CALLS: ["new", "execute", "find_application"]
CALLS: ["find", "try"]
CALLS: ["new", "execute", "find_application"]
CALLS: ["find_by_id", "provider", "gcp?", "new", "execute", "try", "try"]
CALLS: ["new", "execute", "find_application"]
CALLS: ["class", "get_session_token", "try_obtain_lease_for", "new", "execute", "empty?", "class", "get_billing_state", "update_billing_change_counter", "class", "set_billing_state"]
CALLS: ["billing_changed_counter", "state_transition", "increment"]
CALLS: ["nil?", "nil?"]
CALLS: ["counter"]
CALLS: ["redis_shared_state_key_for", "set", "with"]
CALLS: ["hexdigest"]
CALLS: ["redis_shared_state_key_for", "get", "new", "type_cast_from_user", "with"]
CALLS: ["get_redis_session_key", "get", "with"]
CALLS: []
CALLS: ["find_by", "parse_trace_sections!"]
CALLS: ["project", "user", "new", "execute"]
CALLS: ["find_by", "has_environment?", "create_deployment", "try"]
CALLS: ["new", "execute"]
CALLS: ["find_by", "new", "execute", "try"]
CALLS: ["find_by", "try"]
CALLS: ["find_by", "new", "id", "perform", "new", "id", "perform", "id", "perform_async", "id", "perform_async", "try"]
CALLS: ["find_by", "update_coverage"]
CALLS: ["trace", "coverage_regex", "extract_coverage", "present?", "update_attributes"]
CALLS: ["project", "try"]
CALLS: ["perform_and_ttl", "perform", "class", "perform_in"]
CALLS: ["always_perform?", "lease_for", "try_obtain", "ttl"]
CALLS: ["env", "test?"]
CALLS: ["find_by", "refresh_authorized_projects"]
CALLS: ["new", "execute"]
CALLS: ["find_by", "trace", "archive!", "try"]
CALLS: ["where", "count", "zero?", "notify", "deliver_now"]
CALLS: ["push_bulk"]
CALLS: []
CALLS: ["size", "max_attachment_size", "new", "store!", "to_h"]
CALLS: ["max_attachment_size", "megabytes", "to_i"]
CALLS: ["max_attachment_size", "megabytes", "to_i"]
CALLS: ["params", "to_i", "snippet", "visibility_level", "current_user", "allowed_for?", "snippet", "deny_visibility_level", "snippet", "filter_spam_check_params", "snippet", "params", "assign_attributes", "snippet", "current_user", "spam_check", "snippet", "save"]
CALLS: ["params", "delete", "params", "delete", "params", "delete", "params", "delete"]
CALLS: ["visibility_level", "level_name", "downcase", "errors", "add"]
CALLS: ["project", "repository", "find_tag", "project", "releases", "find_by", "update_attributes", "success", "error", "error"]
CALLS: ["hook", "project"]
CALLS: ["hook", "class", "triggers", "trigger", "to_sym", "key", "trigger", "nil?", "respond_to?", "error", "__send__", "hook", "execute", "catch", "error"]
CALLS: ["project", "repository", "find_tag", "error", "current_user", "rm_tag", "project", "releases", "find_by", "destroy", "build_push_data", "new", "project", "current_user", "push", "project", "dup", "execute_hooks", "project", "dup", "execute_services", "success", "error", "message", "error"]
CALLS: ["project", "current_user", "dereferenced_target", "sha", "name", "build"]
CALLS: ["params", "blank_ref?", "params", "ref_name", "project", "repository", "find_tag", "target", "params", "project", "dereferenced_target", "commit", "compact", "message", "project", "current_user", "params", "params", "params", "build"]
CALLS: ["current_user", "params", "params", "params", "build"]
CALLS: ["project", "current_user", "dereferenced_target", "sha", "name", "build"]
CALLS: ["before_remove_tag", "raw_repository", "rm_tag", "after_remove_tag"]
CALLS: ["expire_tags_cache"]
CALLS: ["expire_tags_cache", "expire_statistics_caches", "repository_event"]
CALLS: ["validate", "error", "project", "repository", "strip!", "current_user", "add_tag", "error", "message", "error", "new", "execute", "success", "merge", "error"]
CALLS: ["raw_repository", "add_tag"]
CALLS: ["hooks_for", "async_execute", "find_each", "execute_all_async"]
CALLS: ["triggers", "keys", "include?", "none", "public_send"]
CALLS: ["usage_ping_enabled?", "to_json", "post", "store_metrics", "logger", "info"]
CALLS: ["present?", "slice", "create!"]
CALLS: ["params", "present?", "params", "find_by", "current_user", "can?"]
CALLS: ["current_user", "new", "execute", "params", "new"]
CALLS: ["current_user", "project", "params", "params", "new"]
CALLS: ["current_user", "projects", "params", "default_project_filter", "new"]
CALLS: ["increment!"]
CALLS: ["increment_pushes_since_gc", "measure"]
CALLS: ["pushes_since_gc_redis_shared_state_key", "incr", "with"]
CALLS: ["id"]
CALLS: ["path", "directory?", "clean_up_old_archives", "clean_up_empty_directories", "measure"]
CALLS: ["path", "path", "run"]
CALLS: ["path", "path", "mmin", "run"]
CALLS: ["ldap_hard_blocked?", "user", "block"]
CALLS: ["user", "ldap_blocked?", "user", "ldap_user?"]
CALLS: ["current_user", "can?", "extractor", "extract_commands", "extract_updates"]
CALLS: ["class", "definition_by_name", "execute", "each"]
CALLS: ["class", "command_definitions", "new"]
CALLS: ["supported?", "note", "project", "current_user", "new", "note", "noteable", "execute"]
CALLS: ["commit_count", "action", "ref_type", "commit_from_id", "commit_to_id", "trimmed_ref", "commit_title", "id", "build_push_event_payload", "push_event_payload", "save!", "push_event_payload"]
CALLS: ["commit"]
CALLS: ["ref", "ref_name"]
CALLS: ["fetch"]
CALLS: ["remove?", "revision_after"]
CALLS: ["create?", "revision_before"]
CALLS: ["fetch", "last", "index", "strip", "truncate"]
CALLS: ["root_ref", "raw_repository", "root_ref", "commit_count"]
CALLS: ["commit", "try"]
CALLS: ["current_user", "project", "can?", "params", "update"]
CALLS: ["destroy"]
CALLS: ["current_user", "project", "can?", "project", "protected_tags", "params", "create"]
CALLS: ["current_user", "can?", "params", "update"]
CALLS: ["params", "delete", "params", "delete", "transaction_begin", "delete_redundant_access_levels", "params", "params", "params", "params", "new", "execute", "transaction_end", "transaction"]
CALLS: ["nil?", "merge_access_levels", "destroy_all", "nil?", "push_access_levels", "destroy_all"]
CALLS: ["params", "delete", "params", "delete", "merge!", "new", "execute"]
CALLS: ["current_user", "can?", "destroy"]
CALLS: ["authorized?", "protected_branch", "save", "protected_branch"]
CALLS: ["project", "protected_branches", "params", "new"]
CALLS: ["current_user", "protected_branch", "can?"]
CALLS: ["project", "params", "valid_visibility_level_change?", "error", "renaming_project_with_container_registry_tags?", "error", "changing_default_branch?", "project", "params", "change_head", "error", "enabling_wiki?", "ensure_wiki_exists", "project", "params", "except", "update_attributes", "project", "previous_changes", "include?", "project", "rename_repo", "system_hook_service", "project", "execute_hooks_for", "changing_pages_https_only?", "update_pages_config", "success", "project", "errors", "full_messages", "to_sentence", "presence", "error"]
CALLS: ["project", "previous_changes", "include?"]
CALLS: ["project", "new", "execute"]
CALLS: ["project", "project", "owner", "new", "wiki", "project", "full_name", "log_error", "counter"]
CALLS: ["wiki_enabled?", "params", "dig", "to_i"]
CALLS: ["params", "project", "repository", "exists?", "project", "default_branch"]
CALLS: ["params", "project", "path", "project", "has_container_registry_tags?"]
CALLS: ["container_repositories", "to_a", "any?", "has_root_container_repository_tags?"]
CALLS: ["config", "registry", "enabled", "build_root_repository", "has_tags?"]
CALLS: ["new"]
CALLS: ["tags", "any?"]
CALLS: ["tag_list", "any?"]
CALLS: ["tag_list", "any?"]
CALLS: ["to_i", "visibility_level", "current_user", "can?", "current_user", "allowed_for?", "deny_visibility_level"]
CALLS: ["project", "build_full_path", "gitlab_shell", "repository_storage_path", "project", "full_path_was", "mv_repository", "gitlab_shell", "repository_storage_path", "project", "full_path_was", "mv_repository", "logger", "project", "full_path_was", "error"]
CALLS: ["gitlab_shell", "project", "repository_storage_path", "exists?", "gitlab_shell", "project", "repository_storage_path", "mv_repository"]
CALLS: []
CALLS: ["build_full_path", "logger", "full_path_was", "error", "has_container_registry_tags?", "logger", "full_path_was", "error", "new", "full_path_was", "expire_caches_before_rename", "storage", "rename_repo", "full_path_was", "info", "rename_repo_notify!", "after_rename_repo", "logger", "full_path_was", "error", "new"]
CALLS: ["started?", "full_path_was", "send_move_instructions", "expires_full_path_cache", "old_path_with_namespace", "full_path_was", "new", "execute_hooks_for", "reload_repository!"]
CALLS: ["new", "project_was_moved", "run_after_commit"]
CALLS: ["team", "members", "notifiable_users", "mailer", "id", "id", "project_was_moved_email", "deliver_later", "each"]
CALLS: ["find", "find", "project_url", "notification_email", "subject", "mail"]
CALLS: ["active?", "full_path_key", "delete"]
CALLS: ["write_repository_config", "previous_changes", "first", "hashed_storage?", "new", "path", "namespace", "full_path", "rename_project", "new", "path", "namespace", "full_path", "rename_project"]
CALLS: ["project", "write_repository_config"]
CALLS: ["full_path", "repository", "raw_repository", "write_config", "logger", "full_path", "id", "message", "error"]
CALLS: ["new", "new", "exists?", "before_delete", "exists?", "before_delete"]
CALLS: ["expire_exists_cache", "expire_all_method_caches", "exists?", "expire_branch_cache", "expire_content_cache", "repository_event"]
CALLS: ["expire_method_caches"]
CALLS: ["register_attempt", "create_status", "enqueue!", "run!", "build", "artifacts?", "latest?", "tmp_path", "mkdir_p", "tmp_path", "extract_archive!", "join", "exist?", "latest?", "deploy_page!", "success", "mktmpdir", "message", "error", "message", "error"]
CALLS: ["sanity_check!", "ids", "to_s", "perform_async"]
CALLS: ["pages_deployments_total_counter", "increment"]
CALLS: ["counter"]
CALLS: ["pages", "path", "join"]
CALLS: ["pages_path", "mkdir_p", "public_path", "previous_public_path", "move", "public_path", "move", "previous_public_path", "rm_r"]
CALLS: ["pages_path", "hex", "join"]
CALLS: ["pages_path", "join"]
CALLS: ["project", "pages_path"]
CALLS: ["project", "pages_path"]
CALLS: ["pages", "path", "full_path", "join"]
CALLS: ["artifacts", "ends_with?", "extract_zip_archive!"]
CALLS: ["build", "artifacts_file", "path"]
CALLS: ["job_artifacts_archive", "file", "legacy_artifacts_file"]
CALLS: ["build", "artifacts_file"]
CALLS: ["build", "artifacts_metadata?", "build", "artifacts_metadata_entry", "total_size", "max_size", "total_size", "join", "build", "artifacts_file", "system", "use_file"]
CALLS: ["max_pages_size", "megabytes", "zero?", "min"]
CALLS: ["artifacts?", "artifacts_metadata", "exists?"]
CALLS: ["statuses", "count"]
CALLS: ["options"]
CALLS: ["project", "build", "pipeline", "build", "user", "build", "ref", "new"]
CALLS: ["artifacts_expired?", "artifacts_file", "exists?"]
CALLS: ["artifacts_expire_at", "artifacts_expire_at", "now"]
CALLS: ["pages_config_file", "pages_config", "to_json", "update_file", "reload_daemon", "success", "message", "error"]
CALLS: ["remove", "hex", "write", "open", "move", "remove"]
CALLS: ["pages", "path", "join", "rm_r"]
CALLS: ["pages_path", "join"]
CALLS: ["pages_update_file", "hex", "update_file"]
CALLS: ["pages", "path", "join"]
CALLS: ["options", "delete", "options", "options", "multi_action"]
CALLS: ["options", "delete", "options", "repository", "raw_repository", "raw", "options", "multi_action", "with_cache_hooks"]
CALLS: ["forked?", "fork_source", "lfs_objects", "projects", "include?", "projects", "find_each", "refresh_forks_count", "fork_network", "merge_requests", "opened", "where", "not", "from_project", "new", "execute", "each", "fork_network_member", "destroy", "forked_project_link", "destroy"]
CALLS: ["new", "refresh_cache"]
CALLS: ["new", "refresh_cache"]
CALLS: ["new", "refresh_cache"]
CALLS: ["blank?", "current_user", "project", "allowed_transfer?", "project", "transfer", "current_user", "invalidate_personal_projects_count", "project", "reload", "project", "errors", "message", "add"]
CALLS: ["can?", "id", "namespace_id", "can?"]
CALLS: ["full_path", "group", "try", "path", "join", "namespace", "path", "try", "where", "exists?", "new", "has_container_registry_tags?", "new", "attempt_transfer_transaction"]
CALLS: ["transaction_begin", "project", "expire_caches_before_rename", "update_namespace_and_visibility", "project", "send_move_instructions", "project", "move_project_folders", "current_user", "project", "new", "execute", "project", "move_project_uploads", "new", "project", "path", "full_path", "full_path", "move_project", "project", "old_path_with_namespace", "project", "expires_full_path_cache", "write_repository_config", "execute_system_hooks", "transaction_end", "transaction", "rollback_side_effects", "raise", "refresh_permissions"]
CALLS: ["hashed_storage?", "new", "path", "full_path", "full_path", "move_project"]
CALLS: ["hashed_storage?", "move_repo_folder", "new", "reload_repository!", "move_repo_folder"]
CALLS: ["gitlab_shell", "project", "repository_storage_path", "mv_repository"]
CALLS: ["new", "project", "execute_hooks_for"]
CALLS: ["rollback_folder_move", "update_namespace_and_visibility", "write_repository_config"]
CALLS: ["move_repo_folder", "move_repo_folder"]
CALLS: ["move_repository", "move_repository"]
CALLS: ["gitlab_shell", "project", "repository_storage_path", "exists?", "gitlab_shell", "project", "repository_storage_path", "exists?", "logger", "project", "full_path", "project", "id", "warn", "gitlab_shell", "project", "repository_storage_path", "mv_repository"]
CALLS: ["user_ids_for_project_authorizations", "user_ids_for_project_authorizations", "new", "execute"]
CALLS: ["owner_id"]
CALLS: ["members_with_parents", "pluck"]
CALLS: ["project", "namespace", "project", "visibility_level_allowed_by_group?", "project", "visibility_level", "visibility_level", "project", "save!"]
CALLS: ["cache", "id", "delete"]
CALLS: ["current_user", "can?", "access_denied!", "params", "find_by", "project", "current_user", "new", "execute", "errors", "present?", "flash", "errors", "first", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["params", "find_by", "current_user", "new", "execute", "flash", "name", "group_path", "flash", "now", "error", "name", "page_description", "description", "header_title", "group_title", "current_user"]
CALLS: ["params", "find_by", "current_user", "params", "dup", "new", "execute", "reload", "admin_project_path", "admin_root_path"]
CALLS: ["project", "team", "members", "sorted", "noteable_owner", "participants_in_noteable", "all_members", "groups", "uniq"]
CALLS: ["project", "team", "members", "flatten", "count"]
CALLS: ["uniq", "to_a", "compact", "sort_by", "username", "name", "avatar_url", "map"]
CALLS: ["noteable", "noteable", "current_user", "participants", "sorted"]
CALLS: ["noteable", "noteable", "author", "present?", "noteable", "author", "name", "noteable", "author", "username", "noteable", "author", "avatar_url"]
CALLS: ["namespace", "namespace", "transaction_begin", "move_before_destroy_relationships", "destroy_old_project", "name", "path", "rename_project", "transaction_end", "transaction", "attempt_restore_repositories", "class", "message", "raise"]
CALLS: ["new", "attempt_repositories_rollback"]
CALLS: ["flush_caches", "repo_path", "removal_path", "repo_path", "mv_repository", "raise_error", "wiki_path", "removal_path", "wiki_path", "mv_repository", "raise_error"]
CALLS: ["repository", "before_delete", "wiki_path", "repo_path", "new", "before_delete", "new", "delete_cache"]
CALLS: ["cache", "cache_key", "delete"]
CALLS: ["project", "id"]
CALLS: ["project", "wiki", "disk_path"]
CALLS: ["project", "disk_path"]
CALLS: ["new", "execute"]
CALLS: ["new", "execute", "new", "execute", "new", "execute", "new", "execute", "new", "execute", "new", "execute", "add_source_project_to_fork_network"]
CALLS: ["fork_network", "fork_network", "create!"]
CALLS: ["users_star_projects", "any?", "transaction_begin", "id", "update_all", "id", "reset_counters", "id", "reset_counters", "success", "transaction_end", "transaction"]
CALLS: ["transaction_begin", "move_project_members", "remove_remaining_members", "success", "transaction_end", "transaction"]
CALLS: ["source_project", "project_members", "destroy_all"]
CALLS: ["non_existent_members", "prepare_relation", "id", "update_all"]
CALLS: ["source_project", "members", "select", "where", "project_members", "select", "not"]
CALLS: ["postgresql?", "model", "pluck", "where"]
CALLS: ["transaction_begin", "move_group_links", "remove_remaining_project_group_links", "success", "transaction_end", "transaction"]
CALLS: ["source_project", "reload", "project_group_links", "destroy_all"]
CALLS: ["non_existent_group_links", "prepare_relation", "id", "update_all"]
CALLS: ["source_project", "project_group_links", "where", "group_links_in_target_project", "not"]
CALLS: ["project_group_links", "select"]
CALLS: ["transaction_begin", "move_project_authorizations", "remove_remaining_authorizations", "success", "transaction_end", "transaction"]
CALLS: ["source_project", "project_authorizations", "delete_all"]
CALLS: ["non_existent_authorization", "prepare_relation", "id", "update_all"]
CALLS: ["source_project", "project_authorizations", "select", "where", "authorized_users", "not"]
CALLS: ["transaction_begin", "move_notification_settings", "remove_remaining_notification_settings", "success", "transaction_end", "transaction"]
CALLS: ["source_project", "notification_settings", "destroy_all"]
CALLS: ["non_existent_notifications", "prepare_relation", "id", "update_all"]
CALLS: ["source_project", "notification_settings", "select", "where", "users_in_target_project", "not"]
CALLS: ["notification_settings", "select"]
CALLS: ["transaction_begin", "move_lfs_objects_projects", "remove_remaining_lfs_objects_project", "success", "transaction_end", "transaction"]
CALLS: ["source_project", "lfs_objects_projects", "destroy_all"]
CALLS: ["non_existent_lfs_objects_projects", "prepare_relation", "lfs_storage_project", "id", "update_all"]
CALLS: ["source_project", "lfs_objects_projects", "where", "lfs_objects", "not"]
CALLS: ["fork_network", "transaction_begin", "move_forked_project_links", "move_fork_network_members", "update_root_project", "refresh_forks_count", "success", "transaction_end", "transaction"]
CALLS: ["source_project", "where", "id", "update_all"]
CALLS: ["source_project", "where", "id", "update_all", "source_project", "where", "id", "update_all"]
CALLS: ["source_project", "where", "id", "update_all", "source_project", "where", "id", "update_all"]
CALLS: ["transaction_begin", "move_deploy_keys_projects", "remove_remaining_deploy_keys_projects", "success", "transaction_end", "transaction"]
CALLS: ["source_project", "deploy_keys_projects", "destroy_all"]
CALLS: ["non_existent_deploy_keys_projects", "prepare_relation", "id", "update_all"]
CALLS: ["source_project", "deploy_keys_projects", "joins", "where", "deploy_keys", "select", "not"]
CALLS: ["namespace", "namespace", "namespace", "refresh_project_authorizations", "namespace", "refresh_project_authorizations", "run_after_commit", "new", "execute", "new", "execute", "new", "execute", "success", "with_transaction_returning_status"]
CALLS: ["owner", "refresh_authorized_projects"]
CALLS: ["refresh_members_authorized_projects"]
CALLS: ["user_ids_for_project_authorizations", "new", "execute"]
CALLS: ["add_repository_to_project", "import_data", "success", "project", "import_url", "project", "full_path", "message", "error"]
CALLS: ["project", "external_import?", "unknown_url?", "project", "import_url", "validate!", "message", "has_importer?", "importer_class", "try", "unknown_url?", "create_repository", "project", "repository_exists?", "import_repository"]
CALLS: ["project", "import_url"]
CALLS: ["has_importer?", "importer_class", "try", "project", "ensure_repository", "project", "repository", "project", "import_url", "fetch_as_mirror", "gitlab_shell", "project", "repository_storage", "project", "disk_path", "project", "import_url", "import_repository", "project", "repository_exists?", "project", "repository", "expire_content_cache", "message"]
CALLS: ["hex", "add_remote", "fetch_remote", "remove_remote"]
CALLS: ["gitlab_shell", "raw_repository", "fetch_remote"]
CALLS: ["wiki", "repository_exists?"]
CALLS: ["repository_exists?", "create_repository"]
CALLS: ["file_has_changed?"]
CALLS: ["repository", "last_for_path", "sha"]
CALLS: ["params", "validate_file_status!", "each"]
CALLS: ["include?", "file_has_changed?", "raise_error"]
CALLS: ["file_has_changed?"]
CALLS: ["validate_permissions!", "validate_on_branch!", "validate_branch_existance!", "different_branch?", "validate_new_branch_name!"]
CALLS: ["project", "current_user", "new", "execute", "raise_error"]
CALLS: ["project", "empty_repo?", "different_branch?", "repository", "branch_exists?", "raise_error"]
CALLS: ["empty_repo?", "repository", "branch_exists?", "raise_error"]
CALLS: ["current_user", "project", "new", "can_push_to_branch?", "raise_error"]
CALLS: []
CALLS: ["repository", "exists?"]
CALLS: ["repository", "exists?"]
CALLS: ["project", "import_export_shared", "save_all!", "execute_after_export_action"]
CALLS: ["save_services", "project", "save", "notify_success", "cleanup_and_notify_error!"]
CALLS: ["cleanup_and_notify_error", "errors", "join", "new"]
CALLS: ["logger", "project", "name", "project", "id", "errors", "join", "error", "export_path", "rm_rf", "notify_error"]
CALLS: ["notification_service", "errors", "project_not_exported"]
CALLS: ["notifiable?", "mailer", "project_was_not_exported_email", "deliver_later"]
CALLS: ["notification_email", "subject", "mail"]
CALLS: ["namespace", "present?", "hashed_storage?", "import_export_shared", "archive_path"]
CALLS: ["version_saver", "avatar_saver", "project_tree_saver", "uploads_saver", "repo_saver", "wiki_repo_saver", "lfs_saver", "all?"]
CALLS: ["project", "new"]
CALLS: ["project", "new"]
CALLS: ["project", "new"]
CALLS: ["project", "new"]
CALLS: ["project", "new"]
CALLS: ["project", "new"]
CALLS: ["new"]
CALLS: ["current_user", "project", "execute", "cleanup_and_notify_error"]
CALLS: ["new"]
CALLS: ["try_obtain_lease", "present?", "block_given?", "execute_gitlab_shell_gc"]
CALLS: ["id", "task", "lease_key", "perform_async", "pushes_since_gc", "gc_period", "reset_pushes_since_gc", "measure"]
CALLS: ["housekeeping_gc_period"]
CALLS: ["pushes_since_gc", "gc_period", "pushes_since_gc", "full_repack_period"]
CALLS: ["housekeeping_full_repack_period"]
CALLS: ["pushes_since_gc"]
CALLS: ["pushes_since_gc_redis_shared_state_key", "del", "with"]
CALLS: ["pushes_since_gc_redis_shared_state_key", "get", "to_i", "with"]
CALLS: ["project", "hashed_storage?", "project", "logger", "new", "execute", "project", "hashed_storage?", "project", "logger", "new", "execute"]
CALLS: ["project", "disk_path", "project", "wiki", "repository_exists?", "project", "storage_version", "project", "storage_version", "project", "ensure_storage_path_exists", "project", "disk_path", "move_repository", "move_repository", "project", "write_repository_config", "rollback_folder_move", "project", "storage_version", "project", "repository_read_only", "project", "save!", "block_given?"]
CALLS: ["project", "full_path", "project", "disk_path", "project", "absolute_base_dir", "project", "storage_version", "project", "absolute_base_dir", "move_folder!", "project", "save!", "block_given?"]
CALLS: ["root", "base_dir", "join"]
CALLS: ["directory?", "logger", "project", "id", "info", "exist?", "logger", "project", "id", "error", "dirname", "mkdir_p", "mv", "logger", "project", "id", "info"]
CALLS: ["destroy"]
CALLS: ["project", "project_group_links", "params", "params", "create"]
CALLS: ["import_upload_path", "dirname", "mkdir_p", "params", "delete", "path", "import_upload_path", "copy_entry", "params", "delete", "overwrite_project?", "params", "params", "tmp_filename", "params", "params", "import_upload_path", "present?", "params", "current_user", "params", "new", "execute"]
CALLS: ["project_with_same_full_path?"]
CALLS: ["current_namespace", "full_path", "params", "find_by_full_path", "present?"]
CALLS: ["params", "find_by"]
CALLS: ["hex"]
CALLS: ["tmp_filename", "import_upload_path"]
CALLS: ["link_existing_project", "fork_new_project"]
CALLS: ["id", "allowed_visibility_level", "description", "name", "path", "shared_runners_enabled", "target_namespace", "id", "avatar", "present?", "avatar", "image?", "avatar", "current_user", "new", "execute", "persisted?", "project_feature", "builds_access_level", "project_feature", "update_attributes", "link_fork_network"]
CALLS: ["visibility_level", "target_namespace", "visibility_level", "min", "closest_allowed_level"]
CALLS: ["current_user", "namespace"]
CALLS: ["fork_network", "fork_network_members", "create", "forked_project_link", "create_forked_project_link", "refresh_forks_count"]
CALLS: ["forked?", "link_fork_network"]
CALLS: ["accessible_keys", "params", "params", "find_by", "project", "deploy_keys", "include?", "project", "deploy_keys"]
CALLS: ["current_user", "accessible_deploy_keys"]
CALLS: ["project_deploy_keys", "pluck", "are_public", "pluck", "push", "where"]
CALLS: ["valid_url?", "new", "download!", "store!", "to_h"]
CALLS: ["nil?", "default_options", "options", "merge", "strip!", "regexp"]
CALLS: []
CALLS: ["valid_protocol?", "valid_uri?"]
CALLS: ["options", "merge", "regexp"]
CALLS: ["valid?"]
CALLS: ["http?", "valid_domain?"]
CALLS: ["parse", "host", "any?"]
CALLS: ["regexp"]
CALLS: ["current_user", "project", "can?", "project", "flush_caches", "project", "current_user", "new", "execute", "project", "root_of_fork_network", "project", "full_name", "update", "project", "attempt_destroy_transaction", "system_hook_service", "project", "execute_hooks_for", "project", "full_path", "log_info", "current_user", "invalidate_personal_projects_count", "project", "message", "attempt_rollback", "project", "message", "attempt_rollback", "raise"]
CALLS: ["transaction_begin", "remove_legacy_registry_tags", "raise_error", "trash_repositories!", "team", "truncate", "destroy!", "transaction_end", "transaction"]
CALLS: ["config", "registry", "enabled", "project", "build_root_repository", "has_tags?", "delete_tags!", "tap"]
CALLS: ["has_tags?", "tags", "digest", "map", "to_set", "client", "path", "delete_repository_tag", "all?"]
CALLS: ["repo_path", "remove_repository", "raise_error", "wiki_path", "remove_repository", "raise_error"]
CALLS: ["params", "removal_path", "mv_repository", "log_info", "project", "minutes", "repository_storage_path", "perform_in", "run_after_commit"]
CALLS: ["destroyed?", "update_attributes", "full_path", "log_error"]
CALLS: ["present?", "current_user", "params", "new", "execute", "params", "delete", "params", "delete", "params", "delete", "params", "new", "current_user", "visibility_level", "allowed_for?", "deny_visibility_level", "allowed_fork?", "errors", "add", "set_project_name_from_path", "params", "current_user", "allowed_namespace?", "namespace_id", "deny_namespace", "namespace_id", "current_user", "namespace_id", "block_given?", "creator", "current_user", "build_forked_project_link", "save_project_and_import_data", "persisted?", "after_create_actions", "import_schedule", "record", "type", "record", "errors", "full_messages", "join", "fail", "message", "fail"]
CALLS: ["name", "present?", "path", "present?", "path", "present?", "name", "path", "dup", "name", "present?", "path", "name", "dup", "parameterize"]
CALLS: ["transaction_begin", "create_or_update_import_data", "save", "gitlab_project_import?", "create_services_from_active_templates", "create_labels", "import?", "create_repository", "transaction_end", "transaction"]
CALLS: ["where", "id", "build_from_template", "save!", "each"]
CALLS: ["templates", "attributes", "except", "new", "execute", "each"]
CALLS: ["nil?", "nil?", "import_data", "build_import_data", "data", "data", "data", "merge", "credentials", "credentials", "credentials", "merge"]
CALLS: ["owner", "name", "full_name", "log_info", "gitlab_project_import?", "write_repository_config", "skip_wiki?", "create_wiki", "event_service", "current_user", "create_project", "system_hook_service", "execute_hooks_for", "setup_authorizations", "current_user", "invalidate_personal_projects_count"]
CALLS: ["current_user", "feature_available?"]
CALLS: ["group", "group", "refresh_members_authorized_projects", "current_user", "refresh_authorized_projects", "namespace", "owner", "current_user", "add_master"]
CALLS: ["add_user"]
CALLS: ["add_user"]
CALLS: ["create_event"]
CALLS: ["find_by", "current_user", "can?"]
CALLS: ["nil?", "find_by", "current_user", "can?"]
CALLS: ["errors", "add"]
CALLS: ["params", "delete", "find", "file", "params", "dup", "params", "current_user", "params", "new", "execute", "close"]
CALLS: ["blank?"]
CALLS: ["new", "repository", "delete_all_refs_except", "execute", "logger", "full_path", "id", "info"]
CALLS: ["params", "explain_quick_actions", "find_user_references", "join", "success"]
CALLS: ["project", "current_user", "new", "current_user", "analyze", "users", "map"]
CALLS: ["commands_target_type", "include?", "project", "current_user", "new", "find_commands_target", "explain"]
CALLS: ["current_user", "can?", "extractor", "extract_commands", "explain_commands"]
CALLS: ["class", "definition_by_name", "explain", "map", "compact"]
CALLS: ["params"]
CALLS: ["commands_target_id", "present?", "commands_target_type", "current_user", "project", "id", "new", "commands_target_id", "find", "commands_target_type", "project", "issues", "project", "merge_requests", "build"]
CALLS: ["params"]
CALLS: ["pages", "enabled", "data", "data", "data", "perform_async"]
CALLS: ["note", "project"]
CALLS: ["target", "project"]
CALLS: ["editable?", "mentioned_users", "to_a", "params", "current_user", "merge", "update_attributes", "current_user", "create_new_cross_references!", "previous_changes", "include?", "new", "current_user", "update_note"]
CALLS: ["handle_note"]
CALLS: ["current_user", "new", "render"]
CALLS: ["empty?", "supported?", "class", "noteable_update_service", "project", "current_user", "new", "noteable", "execute"]
CALLS: ["noteable_type"]
CALLS: ["system?", "new", "author", "leave_note", "for_personal_snippet?", "create_cross_references!", "execute_note_hooks"]
CALLS: ["project", "hook_data", "confidential?", "project", "execute_hooks", "project", "execute_services"]
CALLS: ["author", "build"]
CALLS: ["current_user", "to_hook_data", "blank_ref?"]
CALLS: ["previous_changes", "fetch", "fetch", "labels", "map", "labels", "map", "assignees", "is_a?", "map", "assignees", "map", "first", "hook_attrs", "assignee", "hook_attrs", "respond_to?", "fetch", "total_time_spent", "total_time_spent", "new", "build"]
CALLS: ["attributes"]
CALLS: ["name", "username", "avatar_url"]
CALLS: ["attributes"]
CALLS: ["web_url", "ssh_url_to_repo", "http_url_to_repo", "full_path", "default_branch"]
CALLS: ["url_to_repo"]
CALLS: ["gitlab_shell", "full_path", "url_to_repo"]
CALLS: ["gitlab_shell", "full_path", "url_to_repo"]
CALLS: ["url_to_repo"]
CALLS: ["id", "name", "description", "web_url", "avatar_url", "ssh_url_to_repo", "http_url_to_repo", "namespace", "name", "visibility_level", "full_path", "default_branch", "ci_config_path", "web_url", "url_to_repo", "ssh_url_to_repo", "http_url_to_repo", "merge!"]
CALLS: ["attributes"]
CALLS: ["new", "build"]
CALLS: ["attributes"]
CALLS: ["new", "build"]
CALLS: ["timelogs", "sum"]
CALLS: ["id", "safe_message", "committed_date", "xmlschema", "build", "author_name", "author_email", "repo_changes", "merge!"]
CALLS: ["raw_deltas", "deleted_file", "old_path", "renamed_file", "new_file", "new_path", "new_path", "each"]
CALLS: ["project", "lfs_enabled?", "lfs_file?", "decode64", "new", "create_lfs_object!", "link_lfs_object!", "pointer", "new", "new"]
CALLS: ["project", "lfs_objects"]
CALLS: ["sha256", "size", "file", "new", "find_or_create_by"]
CALLS: ["cached_attributes", "attributes"]
CALLS: ["repository", "branch_name", "new"]
CALLS: ["cache_attribute_key", "get", "parse", "with", "strong_memoize"]
CALLS: ["class", "name", "id"]
CALLS: ["raw", "deltas"]
CALLS: ["current_user", "to_hook_data"]
CALLS: ["create_record_event"]
CALLS: ["new", "destroy", "destroy_target"]
CALLS: ["todos", "pending", "select", "where", "to_a", "each"]
CALLS: ["params", "delete", "project", "current_user", "params", "new", "execute", "valid?", "allow_n_plus_1_calls", "project", "current_user", "new", "supported?", "extract_commands", "empty?", "note", "id", "perform_async", "run_after_commit", "save", "todo_service", "current_user", "new_note", "present?", "execute", "errors", "add", "commands_changes"]
CALLS: ["params", "delete", "present?", "find_discussion", "new", "errors", "add", "params", "reply_attributes", "merge!", "params", "new", "project", "project", "author", "current_user"]
CALLS: ["delete", "tap"]
CALLS: ["line_code", "merge"]
CALLS: ["delete", "tap"]
CALLS: ["first_note", "slice"]
CALLS: ["original_position", "to_json", "position", "to_json", "merge"]
CALLS: ["params", "parent", "current_user", "new", "execute", "parent", "current_user", "new", "execute", "params", "present?", "params", "except", "update_attributes"]
CALLS: ["activate", "project_milestone?", "event_service", "current_user", "reopen_milestone"]
CALLS: ["create_record_event"]
CALLS: ["check_project_milestone!", "transaction_begin", "clone_project_milestone", "move_children_to_group_milestone", "destroy_old_milestones", "valid?", "errors", "full_messages", "to_sentence", "raise_error", "transaction_end", "transaction"]
CALLS: ["milestone_ids_for_merge", "where", "destroy_all"]
CALLS: ["title", "group_project_ids", "new", "execute", "pluck"]
CALLS: ["group", "projects", "pluck"]
CALLS: ["slice", "group", "current_user", "new", "execute", "save"]
CALLS: ["project_milestone?", "raise_error"]
CALLS: ["milestone_ids_for_merge", "update_children", "in_groups_of"]
CALLS: ["group_project_ids", "where", "group_project_ids", "where", "id", "update_all", "each"]
CALLS: ["project_milestone?", "transaction_begin", "issues", "parent", "current_user", "new", "execute", "each", "merge_requests", "parent", "current_user", "new", "execute", "each", "event_service", "current_user", "destroy_milestone", "id", "for_milestone_id", "target_id", "save", "each", "destroy", "transaction_end", "transaction"]
CALLS: ["create_record_event"]
CALLS: ["", "where"]
CALLS: ["parent", "milestones", "params", "new", "save", "project_milestone?", "event_service", "current_user", "open_milestone"]
CALLS: ["create_record_event"]
CALLS: ["close", "project_milestone?", "event_service", "current_user", "close_milestone"]
CALLS: ["create_record_event"]
CALLS: ["current_user", "cache_merge_request_closes_issues!"]
CALLS: ["fetch", "fetch", "fetch", "has_changes?", "todo_service", "current_user", "mark_pending_todos_as_done", "previous_changes", "include?", "previous_changes", "include?", "todo_service", "current_user", "update_merge_request", "previous_changes", "include?", "previous_changes", "first", "target_branch", "create_branch_change_note", "previous_changes", "include?", "create_assignee_note", "notification_service", "current_user", "reassigned_merge_request", "todo_service", "current_user", "reassigned_merge_request", "previous_changes", "include?", "previous_changes", "include?", "mark_as_unchecked", "labels", "present?", "notification_service", "current_user", "relabeled_merge_request", "mentioned_users", "present?", "notification_service", "current_user", "new_mentions_in_merge_request"]
CALLS: ["create_assignment_todo"]
CALLS: ["update_issuable"]
CALLS: ["toggling_tasks?", "project", "create_mention_todos"]
CALLS: ["previous_changes", "include?", "tasks?", "updated_tasks", "any?"]
CALLS: ["tasks", "summary", "items?"]
CALLS: ["new", "data"]
CALLS: ["new"]
CALLS: ["previous_changes", "first", "description", "get_updated_tasks"]
CALLS: ["get_tasks", "get_tasks", "select", "source", "source", "complete?", "complete?", "with_index"]
CALLS: ["to_s", "scan", "strip", "new", "map"]
CALLS: ["relabeled_resource_email"]
CALLS: ["project", "subscribers", "flat_map", "uniq", "notifiable_users", "map", "mailer", "id", "id", "id", "send", "deliver_later", "each"]
CALLS: ["reassign_resource_email"]
CALLS: ["previous_record", "find_by", "build_recipients", "mailer", "user", "id", "id", "id", "reason", "send", "deliver_later", "each"]
CALLS: ["previous_changes", "include?", "previous_changes", "first"]
CALLS: ["new_mentions_in_resource_email"]
CALLS: ["build_recipients", "user", "include?", "select", "mailer", "user", "id", "id", "id", "reason", "send", "deliver_later", "each"]
CALLS: ["project", "current_user", "change_branch"]
CALLS: ["new", "create_note"]
CALLS: ["project", "current_user", "assignee", "change_assignee"]
CALLS: ["nil?", "to_reference", "new", "create_note"]
CALLS: ["project", "current_user", "change_issue_assignees"]
CALLS: ["assignees", "assignees", "to_a", "any?", "map", "to_sentence", "any?", "map", "to_sentence", "join", "new", "create_note"]
CALLS: ["previous_changes", "to_s", "include?", "any?", "labels", "assignees"]
CALLS: ["params", "except!", "params", "except!", "params", "except!", "params", "merge_from_quick_action", "closed_without_fork?", "params", "except!", "params", "present?", "merge_params", "params", "delete", "handle_wip_event", "update"]
CALLS: ["params", "delete", "current_user", "mergeable_with_quick_action?", "update", "head_pipeline", "head_pipeline", "active?", "project", "current_user", "new", "execute", "current_user", "id", "merge_async"]
CALLS: ["can_be_merged_by?", "mergeable?", "actual_head_pipeline", "actual_head_pipeline", "success?", "actual_head_pipeline", "active?", "diff_head_sha"]
CALLS: ["closed?", "source_project_missing?"]
CALLS: ["for_fork?", "source_project", "source_project", "target_project", "in_fork_network_of?"]
CALLS: ["forked_from?", "fork_network", "nil?", "fork_network", "nil?", "fork_network", "fork_network"]
CALLS: ["forked?", "forked_from_project"]
CALLS: ["target_project", "source_project"]
CALLS: ["discussions_resolved?", "project", "current_user", "resolve_all_discussions", "notification_service", "current_user", "resolve_all_discussions"]
CALLS: ["new", "create_note"]
CALLS: ["build_recipients", "mailer", "user", "id", "id", "id", "reason", "resolved_all_discussions_email", "deliver_later", "each"]
CALLS: ["setup_merge_request_mail", "find", "merge_request_thread_options", "mail_answer_thread"]
CALLS: ["hex", "config", "gitlab", "host", "message_id", "message_id", "prepend", "mail_thread"]
CALLS: ["add_project_headers", "add_unsubscription_headers_and_links", "class", "name", "id", "reply_key", "enabled?", "reply_key", "reply_address", "new", "display_name", "full_name", "reply_key", "config", "gitlab", "host", "freeze", "mail"]
CALLS: ["unsubscribable?", "unsubscribe_sent_notification_url", "enabled?", "supports_wildcard?", "reply_key", "unsubscribe_address", "headers", "map", "join", "unsubscribe_sent_notification_url"]
CALLS: ["for_commit?", "for_snippet?"]
CALLS: ["sender", "recipient", "title", "to_reference", "subject"]
CALLS: ["find", "notification_email"]
CALLS: ["find", "project", "project_merge_request_url", "reply_key", "record"]
CALLS: ["current_user", "can?", "reopen", "create_event", "create_note", "notification_service", "current_user", "reopen_mr", "execute_hooks", "current_user", "reload_diff", "mark_as_unchecked", "assignees", "invalidate_cache_counts", "update_project_counter_caches"]
CALLS: ["open?", "diff_refs", "create_merge_request_diff", "new", "execute", "diff_refs", "update_diff_discussion_positions"]
CALLS: ["has_complete_diff_refs?", "notes", "new_diff_notes", "discussions", "active?", "select", "empty?", "diff_file", "paths", "flat_map", "uniq", "project", "new", "execute", "each", "project", "resolve_outdated_diff_discussions?", "project", "new", "execute"]
CALLS: ["", "where"]
CALLS: ["branch_ref?", "ref_name", "method", "allow_n_plus_1_calls", "close_upon_missing_source_branch_ref", "post_merge_manually_merged", "reload_merge_requests", "reset_merge_when_pipeline_succeeds", "mark_pending_todos_done", "cache_merge_requests_closing_issues", "branch_added?", "branch_removed?", "comment_mr_branch_presence_changed", "notify_about_push", "mark_mr_as_wip_from_commits", "execute_mr_web_hooks"]
CALLS: ["blank_ref?"]
CALLS: ["blank_ref?"]
CALLS: ["merge_requests", "where", "cache_merge_request_closes_issues!", "each"]
CALLS: ["merge_requests_for_source_branch", "execute_hooks", "each"]
CALLS: ["present?", "merge_requests_for_source_branch", "commit_shas", "work_in_progress?", "sha", "include?", "detect", "work_in_progress?", "wip_title", "update", "project", "add_merge_request_wip_from_commit", "each"]
CALLS: ["to_reference", "new", "create_note"]
CALLS: ["present?", "merge_requests_for_source_branch", "commit_shas", "new", "id", "include?", "partition", "project", "add_commits", "notification_service", "push_to_merge_request", "each"]
CALLS: ["length", "length", "pluralize", "commits_list", "diff_comparison_url", "new", "create_note"]
CALLS: ["merge_request_diff", "id", "url_helpers", "diffs_project_merge_request_url"]
CALLS: ["existing_commit_summary", "new_commit_summary", "join", "html_safe", "content_tag"]
CALLS: ["empty?", "size", "first", "short_id", "blank_ref?", "truncate_sha", "last", "short_id", "first", "short_id", "last", "short_id", "pluralize", "target_branch", "for_fork?", "target_project_namespace", "content_tag", "html_safe", "content_tag"]
CALLS: ["target_project", "target_project", "namespace", "target_project", "namespace", "full_path"]
CALLS: ["short_id", "title", "content_tag", "collect"]
CALLS: ["short_id", "title", "map", "short_id", "title", "map", "build_recipients", "mailer", "user", "id", "id", "id", "reason", "send", "deliver_later", "each"]
CALLS: ["branch_added?", "merge_requests_for_source_branch", "project", "change_branch_presence", "each"]
CALLS: ["new", "create_note"]
CALLS: ["merge_requests_for_source_branch", "todo_service", "merge_request_push", "each"]
CALLS: ["mark_pending_todos_as_done"]
CALLS: ["merge_requests", "opened", "by_source_or_target_branch", "to_a", "opened", "where", "where", "not", "to_a", "filter_merge_requests", "source_branch", "force_push?", "current_user", "reload_diff", "commit_shas", "map", "any?", "current_user", "reload_diff", "mark_as_unchecked", "id", "perform_async", "each", "merge_requests_for_source_branch"]
CALLS: ["uniq", "select"]
CALLS: ["force_push?"]
CALLS: ["", "where"]
CALLS: ["map", "merge_requests", "preload", "opened", "where", "to_a", "select", "diff_head_sha", "include?", "merge_request_diff", "state", "select", "filter_merge_requests", "target_project", "new", "execute", "each"]
CALLS: ["merge_requests_for_source_branch", "reject", "target_project", "new", "execute", "each"]
CALLS: ["rebase", "success", "error"]
CALLS: ["merge_request", "rebase_in_progress?", "log_error", "repository", "current_user", "merge_request", "rebase", "merge_request", "update_attributes", "log_error", "message", "log_error"]
CALLS: ["source_project", "source_project", "repository", "id", "rebase_in_progress?", "strong_memoize"]
CALLS: ["raw", "id", "source_branch", "source_branch_sha", "target_project", "repository", "raw", "target_branch", "rebase"]
CALLS: ["id", "current_user", "id", "perform_async", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["close_issues", "todo_service", "current_user", "merge_merge_request", "mark_as_merged", "create_event", "create_note", "notification_service", "current_user", "merge_mr", "execute_hooks", "assignees", "invalidate_cache_counts", "update_project_counter_caches"]
CALLS: ["mark_pending_todos_as_done"]
CALLS: ["merge_params", "params", "merge!", "merge_when_pipeline_succeeds?", "merge_when_pipeline_succeeds", "merge_user", "diff_head_commit", "merge_when_pipeline_succeeds", "save"]
CALLS: ["project", "merge_requests_ff_only_enabled", "is_a?", "project", "current_user", "params", "new", "execute", "error_check!", "commit", "after_merge", "clean_merge_jid", "success", "in_locked_state", "merge_jid", "state", "log_info", "message", "handle_merge_error"]
CALLS: ["logger", "merge_request_info", "error", "update"]
CALLS: ["merge_request", "update_column"]
CALLS: ["merge_jid", "state", "log_info", "project", "current_user", "new", "merge_request", "execute", "merge_jid", "state", "log_info", "delete_source_branch?", "source_project", "branch_deletion_user", "new", "merge_request", "source_branch", "execute"]
CALLS: ["params", "force_remove_source_branch?", "fetch", "branch_deletion_user", "can_remove_source_branch?"]
CALLS: ["merge_params", "to_boolean"]
CALLS: ["source_project", "source_branch", "protected?", "source_project", "source_branch", "root_ref?", "source_project", "allowed?", "diff_head_sha", "source_branch_head", "try"]
CALLS: ["repository", "root_ref"]
CALLS: ["force_remove_source_branch?", "author", "current_user"]
CALLS: ["should_be_rebased?", "mergeable?", "source"]
CALLS: ["lock_mr", "unlock_mr"]
CALLS: ["diffs", "diff_files", "to_a", "where", "diffs", "clear_cache!", "each"]
CALLS: ["project", "printing_merge_request_link_enabled", "get_branches", "opened_merge_requests_from_source_branches", "url_for_existing_merge_request", "url_for_new_merge_request", "map"]
CALLS: ["target_project", "url_helpers", "project_merge_request_url", "source_branch"]
CALLS: ["url_helpers", "project", "project_new_merge_request_url"]
CALLS: ["project", "empty_repo?", "project", "merge_requests_enabled?", "new", "branch_ref?", "blank_ref?", "branch_name", "project", "default_branch", "map", "compact"]
CALLS: ["merge_requests_access_level"]
CALLS: ["project", "from_project", "opened", "from_source_branches", "index_by"]
CALLS: ["", "where"]
CALLS: ["set_projects!", "new", "target_project", "source_project", "source_branch", "params", "merge_params", "params", "delete", "create"]
CALLS: ["params", "params", "find", "params", "delete", "params", "delete", "current_user", "can?", "current_user", "can?"]
CALLS: ["present?", "issue", "present?", "error", "issue", "label_ids", "any?", "params", "issue", "label_ids", "project", "current_user", "new", "branch_name", "ref", "execute", "issue", "project", "current_user", "branch_name", "new_issue_branch", "merge_request", "create", "valid?", "success", "errors", "error"]
CALLS: ["merge_request", "new", "resolve"]
CALLS: ["note", "resolvable?", "render_404", "note", "current_user", "resolve!", "project", "current_user", "new", "note", "noteable", "execute", "note", "discussion", "serialize_notes?", "render_json_with_notes_serializer", "note", "resolved_by", "try", "view_to_html_string", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["resolve_without_save", "save!"]
CALLS: ["resolvable?", "resolved?", "resolved_at", "now", "resolved_by", "resolved_by_push"]
CALLS: ["resolvable?", "resolve!", "update"]
CALLS: ["has_vue_discussions_cookie?", "params"]
CALLS: ["cookies"]
CALLS: ["current_user", "new", "note", "execute", "note_serializer", "note", "represent", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project", "current_user", "merge_request", "new", "discussion", "execute", "render_discussion"]
CALLS: ["serialize_notes?", "discussion", "notes", "merge_request", "prepare_notes_for_rendering", "render_json_with_discussions_serializer", "render_json_with_html"]
CALLS: ["discussion", "resolved_by", "try", "discussion", "view_to_html_string", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project", "discussion", "noteable", "current_user", "new", "discussion", "represent", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["current_user", "can?", "allow_broken", "close", "create_event", "create_note", "notification_service", "current_user", "close_mr", "todo_service", "current_user", "close_merge_request", "execute_hooks", "assignees", "invalidate_cache_counts", "update_project_counter_caches"]
CALLS: ["mark_pending_todos_as_done"]
CALLS: ["params", "delete", "merge_request", "params", "new", "merge_request", "author", "current_user", "merge_request", "compare_commits", "merge_request", "source_project", "find_source_project", "merge_request", "target_project", "find_target_project", "merge_request", "target_branch", "find_target_branch", "merge_request", "can_be_created", "branches_valid?", "merge_request", "can_be_created", "compare_branches", "assign_title_and_description", "merge_request"]
CALLS: ["assign_title_and_description_from_single_commit", "target_project", "issues_enabled?", "target_project", "external_issue_tracker", "assign_title_from_issue", "merge_request", "title", "source_branch", "titleize", "humanize", "compare_commits", "empty?", "merge_request", "title", "wip_title", "append_closes_description"]
CALLS: ["issue", "issue", "is_a?", "merge_request", "title", "issue", "title", "merge_request", "title", "present?", "issue_iid", "present?", "merge_request", "title", "issue", "to_reference", "source_branch", "downcase", "issue_iid", "downcase", "remove", "titleize", "humanize", "present?", "merge_request", "title"]
CALLS: ["compare_commits", "count", "first", "merge_request", "title", "title", "merge_request", "description", "description", "try"]
CALLS: ["issue", "to_reference", "present?", "issue", "to_reference", "description", "present?", "merge_request", "description", "prepend", "merge_request", "description"]
CALLS: ["source_project", "source_branch_ref", "new", "target_project", "target_branch_ref", "execute", "merge_request", "compare_commits", "commits", "merge_request", "compare"]
CALLS: ["source_branch_specified?", "target_branch_specified?", "validate_branches", "errors", "blank?"]
CALLS: ["branches_present?", "add_error", "same_source_and_target?", "add_error", "source_branch_exists?", "source_branch", "add_error", "target_branch_exists?", "target_branch", "add_error"]
CALLS: ["source_project", "target_project", "target_branch", "source_branch"]
CALLS: ["target_branch", "present?", "source_branch", "present?"]
CALLS: ["errors", "add"]
CALLS: ["params", "present?"]
CALLS: ["params", "present?"]
CALLS: ["target_project", "source_project", "target_branch", "source_branch", "errors", "add", "opened?", "target_project", "merge_requests", "source_branch", "target_branch", "source_project", "try", "where", "opened", "id", "id", "where", "any?", "errors", "pluck", "add"]
CALLS: ["target_branch", "target_project", "default_branch"]
CALLS: ["target_project", "present?", "current_user", "target_project", "can?", "target_project", "project", "default_merge_request_target"]
CALLS: ["forked_from_project", "merge_requests_enabled?", "forked_from_project"]
CALLS: ["source_project", "present?", "current_user", "source_project", "can?", "source_project", "project"]
CALLS: ["current_user", "can_allow_maintainer_to_push?", "params", "delete"]
CALLS: ["maintainer_push_possible?", "source_project", "allowed?"]
CALLS: ["source_project", "present?", "for_fork?", "target_project", "visibility_level", "source_project", "visibility_level", "source_project", "source_branch", "protected?"]
CALLS: ["project", "hook_data", "project", "execute_hooks", "project", "execute_services"]
CALLS: ["assignable_issues", "project", "current_user", "current_user", "id", "new", "execute", "each", "assignable_issues", "count"]
CALLS: ["current_user", "merge_request", "author", "closes_issues", "is_a?", "assignees", "present?", "current_user", "can?", "select"]
CALLS: ["allow_failure?", "retried?", "todo_service", "merge_request_build_failed", "commit_status_merge_requests"]
CALLS: ["author", "create_build_failed_todo", "merge_when_pipeline_succeeds?", "merge_user", "create_build_failed_todo"]
CALLS: ["project", "attributes_for_todo", "create_todos"]
CALLS: ["current_user", "action_member_permission", "can?", "human_access", "params", "update_attributes", "after_execute"]
CALLS: ["update_member_permission", "override_member_permission"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["can_request_access?", "members", "current_user", "now", "utc", "create"]
CALLS: ["current_user", "can?"]
CALLS: ["can_destroy_member?", "is_a?", "source", "user", "last_owner?", "destroy", "user", "invalidate_cache_counts", "request?", "user", "current_user", "notification_service", "decline_access_request", "after_execute"]
CALLS: ["notifiable?", "mailer", "real_source_type", "source_id", "user_id", "member_access_denied_email", "deliver_later"]
CALLS: ["member_source_class", "find", "find", "notification_email", "member_source", "human_name", "member_source", "model_name", "singular", "subject", "mail"]
CALLS: ["classify", "constantize"]
CALLS: ["current_user", "destroy_member_permission", "can?"]
CALLS: []
CALLS: []
CALLS: []
CALLS: []
CALLS: ["owners", "include?", "owners", "size"]
CALLS: ["params", "blank?", "error", "params", "split", "uniq", "user_limit", "size", "user_limit", "user_limit", "error", "params", "params", "current_user", "add_users", "after_execute", "each", "success"]
CALLS: ["params", "fetch"]
CALLS: ["project", "add_users"]
CALLS: ["present?", "parse_users_list", "transaction_begin", "add_user", "map!", "transaction_end", "transaction"]
CALLS: ["to_i", "email_regexp", "each", "present?", "where", "concat", "members_and_requesters", "where", "index_by"]
CALLS: ["add_users"]
CALLS: ["can_update_access_requester?", "params", "access_level", "params", "accept_request", "after_execute"]
CALLS: ["current_user", "update_member_permission", "can?"]
CALLS: ["request?", "update", "after_accept_request"]
CALLS: ["post_create_hook"]
CALLS: ["current_user", "new", "mattermost_team_params", "create", "errors", "message", "add"]
CALLS: ["path", "name", "public?"]
CALLS: ["current_user", "project", "can?", "unlock_file", "message", "error", "error", "message", "error"]
CALLS: ["params", "lock", "current_user", "can_be_unlocked_by?", "lock", "destroy!", "lock", "success", "error", "lock", "path", "lock", "user_id", "error"]
CALLS: ["params", "present?", "project", "lfs_file_locks", "params", "find", "params", "present?", "project", "lfs_file_locks", "params", "find_by!"]
CALLS: ["id", "user_id", "project", "can?"]
CALLS: ["find_locks", "success", "message", "error"]
CALLS: ["params", "slice", "compact", "symbolize_keys", "project", "lfs_file_locks", "where"]
CALLS: ["current_user", "project", "can?", "create_lock!", "current_lock", "error", "message", "error", "message", "error"]
CALLS: ["project", "lfs_file_locks", "current_user", "params", "create!", "success"]
CALLS: ["project", "lfs_file_locks", "params", "find_by"]
CALLS: ["params", "present?", "params", "convert_color_name_to_hex", "params", "update"]
CALLS: ["params", "strip", "downcase", "start_with?", "to_sym"]
CALLS: ["old_group", "present?", "transaction_begin", "labels_to_transfer", "find_or_create_label!", "id", "group_labels_applied_to_issues", "id", "update_label_links", "group_labels_applied_to_merge_requests", "id", "update_label_links", "id", "update_label_priorities", "find_each", "transaction_end", "transaction"]
CALLS: ["project", "id", "where", "update_all"]
CALLS: ["pluck", "where", "update_all"]
CALLS: ["attributes", "slice", "current_user", "project", "new", "execute", "id"]
CALLS: ["joins", "project", "id", "old_group", "id", "where"]
CALLS: ["joins", "project", "id", "old_group", "id", "where"]
CALLS: ["group_labels_applied_to_issues", "select", "group_labels_applied_to_merge_requests", "select", "new", "to_sql", "where", "reorder", "uniq"]
CALLS: ["project", "group", "is_a?", "transaction_begin", "clone_label_to_group_label", "label_ids_for_merge", "update_issuables", "update_issue_board_lists", "update_priorities", "subscribe_users", "update_project_labels", "find_in_batches", "valid?", "new", "transaction_end", "transaction"]
CALLS: ["attributes", "slice", "project", "group", "merge", "new", "save"]
CALLS: ["where", "destroy_all"]
CALLS: ["where", "update_all"]
CALLS: ["where", "update_all"]
CALLS: ["where", "update_all"]
CALLS: ["current_user", "title", "project", "group", "id", "new", "execute", "where", "not", "select"]
CALLS: ["where", "group", "pluck", "where", "id", "update_all"]
CALLS: ["find_or_create_label"]
CALLS: ["available_labels", "title", "find_by", "nil?", "skip_authorization", "current_user", "parent", "allowed?", "params", "new", "parent_type", "to_sym", "parent", "execute"]
CALLS: ["parent", "model_name", "param_key"]
CALLS: ["current_user", "parent_type", "to_sym", "parent", "id", "parent_is_group?", "new", "skip_authorization", "execute"]
CALLS: ["parent_type"]
CALLS: ["current_user", "id", "new", "execute"]
CALLS: ["current_user", "parent", "new", "execute"]
CALLS: ["params", "present?", "params", "convert_color_name_to_hex", "present?", "labels", "params", "create", "params", "new", "template", "save", "logger", "warn"]
CALLS: ["update?", "key", "zone", "now", "update_column"]
CALLS: ["read_only?", "key", "last_used_at", "zone", "now", "redis_lease", "try_obtain"]
CALLS: ["key", "id", "new"]
CALLS: []
CALLS: []
CALLS: ["user", "keys", "params", "create", "persisted?", "notification_service", "new_key"]
CALLS: ["user", "can?", "mailer", "id", "new_ssh_key_email", "deliver_later"]
CALLS: ["find_by", "user", "user_url", "notification_email", "subject", "mail"]
CALLS: ["new", "deploy_keys_projects", "build", "tap"]
CALLS: ["fetch", "fetch", "fetch", "fetch", "has_changes?", "todo_service", "current_user", "mark_pending_todos_as_done", "previous_changes", "include?", "previous_changes", "include?", "todo_service", "current_user", "update_issue", "assignees", "create_assignee_note", "notification_service", "current_user", "reassigned_issue", "todo_service", "current_user", "reassigned_issue", "previous_changes", "include?", "create_confidentiality_note", "labels", "present?", "notification_service", "current_user", "relabeled_issue", "mentioned_users", "present?", "notification_service", "current_user", "new_mentions_in_issue"]
CALLS: ["create_assignment_todo"]
CALLS: ["update_issuable"]
CALLS: ["relabeled_resource_email"]
CALLS: ["build_recipients", "map", "mailer", "user", "id", "id", "id", "reason", "send", "deliver_later", "each"]
CALLS: ["new_mentions_in_resource_email"]
CALLS: ["project", "current_user", "change_issue_confidentiality"]
CALLS: ["confidential", "new", "create_note"]
CALLS: ["current_user", "spam_check"]
CALLS: ["handle_move_between_ids", "filter_spam_check_params", "change_issue_duplicate", "move_issue_to_new_project", "update"]
CALLS: ["params", "delete", "current_user", "can_move?", "project", "update", "project", "current_user", "new", "execute"]
CALLS: ["params", "delete", "current_user", "new", "find_by", "project", "current_user", "new", "execute"]
CALLS: ["params", "params", "delete", "params", "delete", "get_issue_if_allowed", "get_issue_if_allowed", "move_between"]
CALLS: ["current_user", "new", "find_by", "project", "issues", "find", "current_user", "can?"]
CALLS: ["move_after", "move_before", "relative_position", "relative_position", "move_before", "relative_position", "relative_position", "relative_position", "position_between"]
CALLS: ["relative_position", "prev_relative_position", "shift_before?", "class", "parent_ids", "in_parents", "find_by!", "move_before", "relative_position", "relative_position", "position_between"]
CALLS: ["prev_relative_position", "relative_position"]
CALLS: ["relative_position", "class", "parent_ids", "in_parents", "relative_position", "where", "maximum"]
CALLS: ["relative_position", "next_relative_position", "shift_after?", "class", "parent_ids", "in_parents", "find_by!", "move_after", "relative_position", "relative_position", "position_between"]
CALLS: ["next_relative_position", "relative_position"]
CALLS: ["relative_position", "class", "parent_ids", "in_parents", "relative_position", "where", "minimum"]
CALLS: ["current_user", "can?", "reopen", "event_service", "current_user", "reopen_issue", "create_note", "notification_service", "current_user", "reopen_issue", "execute_hooks", "assignees", "invalidate_cache_counts", "update_project_counter_caches"]
CALLS: ["reopen_resource_email"]
CALLS: ["create_record_event"]
CALLS: ["current_user", "can_move?", "transaction_begin", "create_new_issue", "update_new_issue", "update_old_issue", "transaction_end", "transaction", "notify_participants"]
CALLS: ["notification_service", "issue_moved"]
CALLS: ["build_recipients", "mailer", "user", "reason", "issue_moved_email", "deliver_later", "map"]
CALLS: ["id", "id", "setup_issue_mail", "project", "id", "id", "issue_thread_options", "mail_answer_thread"]
CALLS: ["sender", "recipient", "title", "iid", "subject"]
CALLS: ["find", "project", "project_issue_url", "reply_key", "record"]
CALLS: ["cloneable_label_ids", "cloneable_milestone_id", "author", "description", "rewrite_content", "assignee_ids", "serializable_hash", "symbolize_keys", "merge", "new", "execute"]
CALLS: ["new", "rewrite", "inject"]
CALLS: ["milestone", "title", "group", "current_user", "group", "can?", "group", "id", "id", "new", "execute", "first", "id"]
CALLS: ["id", "labels", "pluck", "current_user", "new", "execute", "pluck"]
CALLS: ["assignee_id"]
CALLS: ["", "read_attribute", "merge"]
CALLS: ["add_note_moved_to", "close_issue", "mark_as_moved"]
CALLS: ["update"]
CALLS: ["noteable_moved"]
CALLS: ["include?", "to_reference", "new", "create_note"]
CALLS: ["rewrite_notes", "rewrite_issue_award_emoji", "add_note_moved_from"]
CALLS: ["noteable_moved"]
CALLS: ["rewrite_award_emoji"]
CALLS: ["award_emoji", "dup", "awardable", "save", "each"]
CALLS: ["notes_with_associations", "dup", "note", "rewrite_content", "created_at", "updated_at", "update", "rewrite_award_emoji", "find_each"]
CALLS: ["notes", "includes"]
CALLS: ["notes", "authors_loaded?", "notes", "award_emojis_loaded?", "any?", "notes", "includes", "notes"]
CALLS: ["loaded?", "to_a", "association", "loaded?", "all?"]
CALLS: ["loaded?", "to_a", "association", "loaded?", "all?"]
CALLS: ["notes", "includes"]
CALLS: ["current_user", "referenced_merge_requests", "project", "iid", "to_s", "sort", "current_user", "closed_by_merge_requests", "project", "iid", "to_s", "sort"]
CALLS: ["open?", "all_references", "notes", "system", "all_references", "each", "merge_requests", "select", "any?", "map", "id", "where", "pluck", "id", "in?", "select"]
CALLS: ["all_references", "notes_with_associations", "all_references", "each", "merge_requests", "sort_by", "target_project", "project", "select", "merge_requests_readable_by_user"]
CALLS: ["apply_filters_if_needed", "allowed?", "select", "user_scope"]
CALLS: ["allowed?", "call", "each"]
CALLS: ["project", "current_user", "new", "issue", "execute", "view_to_html_string", "json", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["current_user", "can?", "current_user", "can?", "create_issue_duplicate_note", "create_issue_canonical_note", "close_service", "project", "current_user", "new", "execute"]
CALLS: []
CALLS: ["project", "current_user", "mark_canonical_issue_of_duplicate"]
CALLS: ["to_reference", "new", "create_note"]
CALLS: ["project", "current_user", "mark_duplicate_issue"]
CALLS: ["to_reference", "new", "create_note"]
CALLS: []
CALLS: ["project", "current_user", "params", "new", "execute", "filter_spam_check_params", "filter_resolve_discussion_params", "create"]
CALLS: ["params", "delete", "params", "delete"]
CALLS: ["current_user", "can?", "close_issue"]
CALLS: ["filter_resolve_discussion_params", "project", "issues", "issue_params", "new"]
CALLS: ["confidential_changed?"]
CALLS: ["hook_data", "confidential?", "project", "execute_hooks", "project", "execute_services"]
CALLS: ["state_changed?"]
CALLS: []
CALLS: []
CALLS: ["model_name", "singular", "public_send", "each"]
CALLS: ["labels", "to_a", "mentioned_users", "to_a", "assignees", "to_a", "respond_to?", "total_time_spent"]
CALLS: ["params", "delete", "todo_service", "current_user", "new_award_emoji", "current_user", "toggle_award_emoji"]
CALLS: ["mark_pending_todos_as_done"]
CALLS: ["awarded_emoji?", "remove_award_emoji", "create_award_emoji"]
CALLS: ["award_emoji", "where", "destroy_all"]
CALLS: ["emoji_awardable?", "award_emoji", "normalize_name", "create"]
CALLS: ["system?"]
CALLS: ["normalize_emoji_name"]
CALLS: []
CALLS: ["award_emoji", "where", "exists?"]
CALLS: ["authenticate_user!", "params", "require", "awardable", "current_user", "user_can_award?", "awardable", "current_user", "toggle_award_emoji", "awardable", "to_todoable", "new", "current_user", "new_award_emoji"]
CALLS: ["awardable_by_user?", "allowed?"]
CALLS: ["user_authored?", "normalize_name", "awardable_votes?"]
CALLS: ["respond_to?", "author", "user"]
CALLS: []
CALLS: ["for_personal_snippet?", "noteable"]
CALLS: ["params", "delete", "todo_service", "current_user", "mark_todo", "current_user", "new", "find_by", "todo_service", "current_user", "mark_todos_as_done_by_ids"]
CALLS: ["params", "delete", "current_user", "project", "subscribe", "current_user", "project", "unsubscribe"]
CALLS: ["unsubscribe_from_other_levels", "find_or_initialize_subscription", "update"]
CALLS: ["subscriptions", "id", "try", "find_or_initialize_by"]
CALLS: ["subscriptions", "where", "blank?", "where", "not", "where", "update_all"]
CALLS: ["unsubscribe_from_other_levels", "find_or_initialize_subscription", "update"]
CALLS: ["params", "for", "unsubscribable?", "render_404", "current_user", "params", "unsubscribe_and_redirect"]
CALLS: ["noteable", "recipient", "project", "unsubscribe", "flash", "current_user", "issue_path", "merge_request_path", "root_path", "new_user_session_path"]
CALLS: ["issue_url"]
CALLS: ["project", "project_issue_path"]
CALLS: ["project", "project_issue_path"]
CALLS: ["params", "delete", "reopen_service", "project", "current_user", "new", "execute", "close_service", "project", "current_user", "new", "execute"]
CALLS: []
CALLS: []
CALLS: ["title_changed?", "description_changed?"]
CALLS: ["sort", "sort"]
CALLS: []
CALLS: []
CALLS: ["delete", "delete", "delete", "blank?", "blank?"]
CALLS: ["to_ability_name", "current_user", "can?", "params", "delete", "params", "delete", "params", "delete", "params", "delete", "params", "delete", "params", "delete", "params", "delete", "params", "delete", "params", "delete", "params", "delete", "params", "delete", "filter_assignee", "filter_milestone", "filter_labels"]
CALLS: ["params", "blank?", "params", "params", "params", "assignee_can_read?", "select", "params", "map", "params", "any?", "params", "params", "delete"]
CALLS: ["find_by_id", "to_ability_name", "persisted?", "project", "can?"]
CALLS: ["filter_labels_in_param", "filter_labels_in_param", "filter_labels_in_param", "find_or_create_label_ids"]
CALLS: ["params", "delete", "params", "split", "current_user", "parent", "strip", "available_labels", "new", "execute", "try", "map", "compact"]
CALLS: ["params", "to_a", "empty?", "params", "available_labels", "params", "where", "pluck"]
CALLS: ["params", "params", "project", "group", "self_and_ancestors", "pluck", "project", "id", "for_projects_and_groups", "find_by_id", "params"]
CALLS: ["", "compact", "any?", "arel_table", "in", "compact", "any?", "arel_table", "in", "reduce", "where"]
CALLS: ["params", "present?", "params", "to_s", "params", "assignee_can_read?", "params", "delete"]
CALLS: ["new", "destroy", "update_project_counter_caches", "assignees", "each", "destroy_target"]
CALLS: ["previous_changes", "include?", "previous_changes", "first", "create_title_change_note", "handle_description_change_note", "is_a?", "handle_time_tracking_note", "labels", "create_labels_note", "previous_changes", "include?", "create_discussion_lock_note", "previous_changes", "include?", "create_milestone_note"]
CALLS: ["issuable", "current_user", "discussion_lock"]
CALLS: ["discussion_locked?", "class", "to_s", "titleize", "downcase", "project", "new", "create_note"]
CALLS: ["issuable", "issuable", "project", "current_user", "issuable", "milestone", "change_milestone"]
CALLS: ["group_milestone?", "nil?", "to_reference", "new", "create_note"]
CALLS: ["create_wip_note", "issuable", "wipless_title_changed", "issuable", "issuable", "project", "current_user", "change_title"]
CALLS: ["title", "dup", "new", "inline_diffs", "new", "mark", "new", "mark", "new", "create_note"]
CALLS: ["issuable", "is_a?", "work_in_progress?", "issuable", "work_in_progress?", "issuable", "issuable", "project", "current_user", "handle_merge_request_wip"]
CALLS: ["work_in_progress?", "new", "create_note"]
CALLS: ["class", "wipless_title", "wipless_title"]
CALLS: ["title"]
CALLS: ["issuable", "labels", "issuable", "labels", "issuable", "issuable", "project", "current_user", "change_label"]
CALLS: ["count", "count", "to_reference", "map", "join", "map", "join", "present?", "present?", "present?", "pluralize", "new", "create_note"]
CALLS: ["issuable", "previous_changes", "include?", "issuable", "tasks?", "issuable", "updated_tasks", "any?", "create_task_status_note", "create_description_change_note"]
CALLS: ["issuable", "updated_tasks", "issuable", "issuable", "project", "current_user", "change_task_status", "each"]
CALLS: ["complete?", "source", "new", "create_note"]
CALLS: ["issuable", "issuable", "project", "current_user", "change_description"]
CALLS: ["new", "create_note"]
CALLS: ["issuable", "previous_changes", "include?", "create_time_estimate_note", "issuable", "time_spent?", "create_time_spent_note"]
CALLS: ["issuable", "issuable", "project", "issuable", "time_spent_user", "change_time_spent"]
CALLS: ["time_spent", "spent_at", "abs", "output", "new", "create_note"]
CALLS: ["issuable", "issuable", "project", "current_user", "change_time_estimate"]
CALLS: ["time_estimate", "output", "time_estimate", "new", "create_note"]
CALLS: ["classify", "constantize", "classify", "pluralize", "constantize", "params", "delete", "split", "where", "permitted_attrs", "params", "present?", "params", "delete", "each", "params", "to_s", "params", "current_user", "can?", "project", "current_user", "params", "new", "execute", "each", "count", "count", "zero?"]
CALLS: ["push", "push"]
CALLS: ["path", "directory?", "clean_up_export_files", "measure"]
CALLS: ["path", "path", "mmin", "popen"]
CALLS: ["reject_parent_id!", "group", "params", "valid_visibility_level_change?", "valid_share_with_group_lock_change?", "group", "params", "assign_attributes", "group", "save", "group", "errors", "message", "add"]
CALLS: ["changing_share_with_group_lock?", "current_user", "group", "can?", "group", "errors", "s_", "add"]
CALLS: ["params", "nil?", "params", "group", "share_with_group_lock"]
CALLS: ["params", "except!"]
CALLS: ["ensure_allowed_transfer", "proceed_to_transfer", "errors", "clear", "message"]
CALLS: ["group_is_already_root?", "raise_transfer_error", "supports_nested_groups?", "raise_transfer_error", "same_parent?", "raise_transfer_error", "valid_policies?", "raise_transfer_error", "namespace_with_same_path?", "raise_transfer_error"]
CALLS: []
CALLS: ["path", "exists?"]
CALLS: ["current_user", "can?", "current_user", "can?", "current_user", "can?"]
CALLS: ["id", "parent_id"]
CALLS: ["has_parent?"]
CALLS: ["transaction_begin", "update_group_attributes", "transaction_end", "transaction"]
CALLS: ["visibility_level", "visibility_level", "update_children_and_projects_visibility", "visibility_level", "visibility_level", "parent", "save!"]
CALLS: ["descendants", "visibility_level", "where", "select", "where", "visibility_level", "update_all", "all_projects", "visibility_level", "where", "visibility_level", "update_all"]
CALLS: ["group_path", "group_path", "namespace_or_group", "group_path", "include?", "supports_nested_groups?", "create_group_path"]
CALLS: ["find_by_full_path"]
CALLS: ["group_path", "split", "shift", "join", "params", "reverse_merge", "current_application_settings", "default_group_visibility", "namespace_or_group", "current_user", "new", "execute"]
CALLS: ["group", "prepare_for_destroy", "group", "projects", "current_user", "legacy_storage?", "new", "execute", "each", "group", "children", "current_user", "new", "execute", "each", "group", "chat_team", "current_user", "remove_mattermost_team", "group", "destroy"]
CALLS: ["new", "team_id", "destroy", "logger", "error"]
CALLS: ["params", "new", "can_use_visibility_level?", "can_create_group?", "name", "path", "dup", "create_chat_team?", "current_user", "new", "execute", "errors", "any?", "build_chat_team", "save", "current_user", "add_owner"]
CALLS: ["current_user", "params", "allowed_for?", "deny_visibility_level"]
CALLS: ["config", "mattermost", "enabled", "group", "chat_team", "nil?"]
CALLS: ["gravatar_enabled?", "presence", "presence", "strip", "downcase", "hexdigest", "gravatar_url", "strip", "url_encode", "strip", "url_encode"]
CALLS: ["gitlab_config", "https", "gravatar_config", "ssl_url", "gravatar_config", "plain_url"]
CALLS: ["config", "gravatar"]
CALLS: ["user", "gpg_keys", "params", "create", "persisted?", "notification_service", "new_gpg_key"]
CALLS: ["user", "can?", "mailer", "id", "new_gpg_key_email", "deliver_later"]
CALLS: ["find_by", "user", "user_url", "notification_email", "subject", "mail"]
CALLS: ["project", "empty_repo?", "project", "repository", "after_create", "project", "repository", "before_push_tag", "build_push_data", "new", "project", "current_user", "push", "project", "current_user", "new", "execute", "new", "build_system_push_data", "dup", "execute_hooks", "project", "dup", "execute_hooks", "project", "dup", "execute_services", "project", "id", "perform_async"]
CALLS: ["project", "current_user", "params", "params", "params", "build"]
CALLS: ["expire_statistics_caches", "expire_emptiness_caches", "expire_tags_cache", "repository_event"]
CALLS: ["empty_repo?", "repository", "after_create", "repository", "branch_name", "after_push_commit", "push_remove_branch?", "repository", "after_remove_branch", "push_to_new_branch?", "repository", "after_create_branch", "default_branch?", "process_default_branch", "repository", "default_branch", "params", "commits_between", "process_commit_messages", "push_to_existing_branch?", "repository", "params", "params", "commits_between", "process_commit_messages", "default_branch?", "update_gitattributes", "execute_related_hooks", "perform_housekeeping", "update_caches", "update_signatures"]
CALLS: ["params", "branch_ref?", "params", "ref_name", "project", "default_branch", "project", "default_branch", "nil?"]
CALLS: ["params", "branch_ref?", "params", "blank_ref?"]
CALLS: ["params", "branch_ref?", "params", "blank_ref?"]
CALLS: ["params", "branch_ref?", "params", "blank_ref?"]
CALLS: ["project", "repository", "params", "commit_count_for_ref", "max", "project", "repository", "params", "commits", "after_create_default_branch"]
CALLS: ["exists?", "cache", "raw_repository", "commit_count", "fetch"]
CALLS: ["new", "increment!", "needed?", "execute"]
CALLS: ["pushes_since_gc", "period_match?", "housekeeping_enabled?"]
CALLS: ["housekeeping_enabled"]
CALLS: ["gc_period", "full_repack_period", "repack_period", "pushes_since_gc", "any?"]
CALLS: ["housekeeping_incremental_repack_period"]
CALLS: ["id", "current_user", "id", "params", "params", "params", "perform_async", "new", "current_user", "build_push_data", "push", "current_user", "build_push_data", "new", "execute", "build_push_data", "dup", "perform_async", "build_push_data", "dup", "execute_hooks", "build_push_data", "dup", "execute_services", "push_remove_branch?", "project", "current_user", "new", "branch_name", "execute"]
CALLS: ["default_branch?", "last", "matches_cross_reference_regex?", "project", "id", "current_user", "id", "to_hash", "perform_async", "each"]
CALLS: ["last", "map", "empty?", "where", "pluck", "empty?", "project", "repository", "shas_with_signatures", "project", "id", "perform_async", "each"]
CALLS: ["default_branch?", "push_to_new_branch?", "new", "last", "raw_deltas", "new_path", "each", "each", "to_a", "types_in_paths", "id", "perform_async"]
CALLS: ["repository", "params", "copy_gitattributes"]
CALLS: ["expire_branches_cache"]
CALLS: ["expire_statistics_caches", "expire_branch_cache", "repository_event"]
CALLS: ["map", "compact", "render_notes"]
CALLS: ["current_user", "new", "render_options", "execute"]
CALLS: []
CALLS: ["destroy", "update_secondary_emails!"]
CALLS: ["new", "update_secondary_emails!", "execute"]
CALLS: ["set_notification_email", "set_public_email", "notification_email_changed?", "public_email_changed?", "save"]
CALLS: ["public_email", "blank?", "all_emails", "public_email", "include?", "public_email"]
CALLS: ["temp_oauth_email?", "email", "emails", "map", "concat"]
CALLS: ["notification_email", "blank?", "all_emails", "notification_email", "include?", "notification_email", "email"]
CALLS: ["emails", "merge", "create"]
CALLS: ["resend_confirmation_instructions"]
CALLS: ["current_user", "current_user", "new", "execute", "flash", "email", "flash", "profile_emails_url"]
CALLS: ["tracer", "position", "trace", "notes", "change_position", "project", "resolve_outdated_diff_discussions?", "current_user", "resolve_without_save", "position", "change_position", "each", "transaction_begin", "notes", "timeless", "each", "current_user", "project", "current_user", "diff_discussion_outdated", "transaction_end", "transaction"]
CALLS: ["noteable", "diff_refs", "merge_request_diffs", "viewable", "count", "version_params_for", "repository", "line_code", "url_helpers", "merge", "diffs_project_merge_request_url", "reply_attributes", "merge", "merge", "create", "system_note_metadata", "new"]
CALLS: ["", "without_state"]
CALLS: ["merge_request_diff_for", "id", "head_sha", "merge_request_diff_for", "id", "start_sha"]
CALLS: ["is_a?", "start_sha", "head_sha", "base_sha", "viewable_diffs", "attributes", "keys", "slice", "find"]
CALLS: ["merge_request_diffs", "viewable", "to_a"]
CALLS: ["project", "params", "params", "params", "new"]
CALLS: ["resolve_discussion", "each"]
CALLS: ["current_user", "can_resolve?", "current_user", "resolve!", "project", "current_user", "new", "merge_request", "execute", "follow_up_issue", "project", "current_user", "follow_up_issue", "discussion_continued_in_issue"]
CALLS: ["to_reference", "reply_attributes", "merge", "merge", "create", "system_note_metadata", "new"]
CALLS: ["params"]
CALLS: ["resolvable?", "noteable", "author", "project", "can?"]
CALLS: ["deploy_tokens", "params", "create"]
CALLS: ["params", "user", "merge", "create"]
CALLS: ["current_user", "project", "can?", "project", "repository", "merged_branch_names", "merge_request_branch_names", "project", "protected?", "reject", "project", "current_user", "new", "execute", "each"]
CALLS: ["project", "origin_merge_requests", "opened", "reorder", "uniq", "pluck", "project", "merge_requests", "opened", "reorder", "uniq", "pluck", "uniq"]
CALLS: ["merge_requests", "id", "where"]
CALLS: ["project", "repository", "find_branch", "current_user", "project", "can?", "error", "error", "current_user", "rm_branch", "success", "error", "message", "error"]
CALLS: ["before_remove_branch", "raw_repository", "rm_branch", "after_remove_branch"]
CALLS: ["expire_branches_cache", "repository_event"]
CALLS: ["raw_repository", "find_branch"]
CALLS: ["filter_spam_check_params", "project", "project", "snippets", "params", "build", "params", "new", "current_user", "params", "allowed_for?", "deny_visibility_level", "author", "current_user", "current_user", "spam_check", "save", "new", "create"]
CALLS: ["project", "repository", "find_tag", "project", "releases", "find_by", "error", "project", "releases", "new", "save", "success", "error"]
CALLS: ["executable?", "transaction_begin", "expanded_environment_url", "environment", "external_url", "expanded_environment_url", "environment", "action", "fire_state_event", "environment", "save", "environment", "stopped?", "deploy", "tap", "transaction_end", "transaction"]
CALLS: ["find_by", "project", "new", "execute", "project", "new", "execute"]
CALLS: ["environment_url", "environment_url", "variables", "expand"]
CALLS: ["project", "deployments", "environment", "job", "ref", "job", "tag", "job", "sha", "job", "user", "job", "on_stop", "create"]
CALLS: ["environment_options"]
CALLS: ["project", "job", "environment", "present?", "environment"]
CALLS: ["project", "empty_repo?", "create_master_branch", "project", "current_user", "new", "execute", "repository", "current_user", "add_branch", "success", "error", "message", "error"]
CALLS: ["project", "repository", "current_user", "create_file"]
CALLS: ["options", "options", "multi_action"]
CALLS: ["raw_repository", "add_branch", "after_create_branch"]
CALLS: ["repository", "start_project", "repository", "start_ref_name", "compare_source_branch", "new"]
CALLS: ["raw_repository", "raw_repository", "compare_source_branch"]
CALLS: ["validate!", "create_commit!", "success", "message", "error"]
CALLS: ["repository", "current_user", "update_file"]
CALLS: ["project", "new", "params", "actions_after_lfs_transformation", "commit_actions!"]
CALLS: ["repository", "current_user", "multi_action", "raise_error"]
CALLS: ["new_file", "content", "encoding", "map"]
CALLS: ["repository", "current_user", "delete_file"]
CALLS: ["options", "options", "multi_action"]
CALLS: ["project", "new", "new_file", "content", "create_transformed_commit"]
CALLS: ["repository", "current_user", "create_file"]
CALLS: ["repository", "current_user", "create_dir"]
CALLS: ["options", "options", "multi_action"]
CALLS: ["values", "all?", "render_404", "join", "project_tree_path", "project_tree_path", "create_commit", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["commit_change"]
CALLS: ["repository", "respond_to?", "current_user", "public_send", "repository", "current_user", "public_send", "to_s", "dasherize", "current_user", "change_type_title", "current_user", "change_type_title", "to_s", "dasherize"]
CALLS: []
CALLS: ["commit_change"]
CALLS: ["cohorts"]
CALLS: ["months", "ago", "beginning_of_month", "to_date", "new", "last", "running_totals", "counts_by_month", "to_i", "pop", "first", "new"]
CALLS: ["column_to_date", "column_to_date", "months", "ago", "end_of_month", "where", "group", "reorder", "count"]
CALLS: ["postgresql?"]
CALLS: ["counts_by_month", "map", "last", "to_i", "to_i", "reduce", "reverse", "first", "zero?", "map"]
CALLS: ["params", "update"]
CALLS: ["status", "continue_creation", "finalize_creation", "status", "status_message", "make_errored!", "request_operation"]
CALLS: ["new", "provider", "execute"]
CALLS: ["new", "provider", "execute"]
CALLS: ["elapsed_time_from_creation", "provider", "cluster_id", "perform_in", "provider", "_", "make_errored!"]
CALLS: ["now", "utc", "start_time", "to_time", "utc"]
CALLS: ["make_creating", "cluster_id", "perform_in", "errors", "make_errored!", "get_operation_id"]
CALLS: ["provider", "api_client", "provider", "gcp_project_id", "provider", "zone", "provider", "cluster", "name", "provider", "num_nodes", "provider", "machine_type", "projects_zones_clusters_create", "status", "status", "provider", "status_message", "make_errored!", "provider", "api_client", "self_link", "parse_operation_id", "provider", "make_errored!", "provider", "message", "make_errored!"]
CALLS: ["access_token", "access_token", "new"]
CALLS: ["configure_provider", "configure_kubernetes", "cluster", "save!", "message", "make_errored!", "message", "make_errored!"]
CALLS: ["cluster", "platform_type", "cluster", "gke_cluster", "endpoint", "gke_cluster", "master_auth", "cluster_ca_certificate", "decode64", "gke_cluster", "master_auth", "username", "gke_cluster", "master_auth", "password", "request_kubernetes_token", "build_platform_kubernetes"]
CALLS: ["provider", "api_client", "provider", "gcp_project_id", "provider", "zone", "cluster", "name", "projects_zones_clusters_get"]
CALLS: ["gke_cluster", "endpoint", "gke_cluster", "master_auth", "cluster_ca_certificate", "decode64", "gke_cluster", "master_auth", "username", "gke_cluster", "master_auth", "password", "new", "execute"]
CALLS: ["provider", "endpoint", "gke_cluster", "endpoint", "provider", "status_event"]
CALLS: ["api_client", "gcp_project_id", "zone", "operation_id", "projects_zones_operations", "block_given?", "message", "make_errored!"]
CALLS: ["can_create_cluster?", "_", "new", "create_cluster", "persisted?", "id", "perform_async", "tap"]
CALLS: ["project", "clusters", "empty?"]
CALLS: ["cluster_params", "create"]
CALLS: ["params", "access_token", "try", "params", "current_user", "project", "merge"]
CALLS: ["application_class", "cluster", "find_or_create_by!", "make_scheduled!", "name", "id", "perform_async", "try"]
CALLS: ["params"]
CALLS: ["params", "render_404"]
CALLS: ["app", "scheduled?", "app", "make_installing!", "helm_api", "install_command", "install", "app", "name", "app", "id", "perform_in", "app", "message", "make_errored!", "app", "make_errored!"]
CALLS: ["app", "install_command"]
CALLS: ["kubeclient", "new"]
CALLS: ["name", "chart", "values", "repository", "new"]
CALLS: ["name"]
CALLS: []
CALLS: []
CALLS: ["name", "chart", "values", "new"]
CALLS: ["name", "chart", "values", "new"]
CALLS: ["name", "new"]
CALLS: ["app", "installing?", "installation_phase", "on_success", "on_failed", "check_timeout", "app", "errored?", "app", "message", "make_errored!"]
CALLS: ["helm_api", "install_command", "pod_name", "installation_status"]
CALLS: ["timeouted?", "app", "make_errored!", "remove_installation_pod", "app", "name", "app", "id", "perform_in"]
CALLS: ["helm_api", "install_command", "pod_name", "delete_installation_pod!"]
CALLS: ["now", "utc", "app", "updated_at", "to_time", "utc"]
CALLS: ["app", "installation_errors", "make_errored!", "remove_installation_pod"]
CALLS: ["helm_api", "install_command", "pod_name", "installation_log"]
CALLS: ["app", "make_installed!", "remove_installation_pod"]
CALLS: ["app", "external_ip", "try_obtain_lease", "ingress_ip", "app", "ingress_ip", "update!"]
CALLS: ["service", "status", "loadBalancer", "ingress", "first", "ip"]
CALLS: ["project", "runners", "can_pick?", "tick_runner_queue", "each", "project", "shared_runners_enabled?", "shared", "can_pick?", "tick_runner_queue", "each"]
CALLS: ["projects", "with_shared_runners", "any?"]
CALLS: ["", "where"]
CALLS: ["hex", "runner_queue_key", "set_key_and_notify", "tap"]
CALLS: ["token"]
CALLS: ["ref_protected?", "protected?", "project_id", "assignable_for?", "accepting_tags?"]
CALLS: ["new", "can_create_tag?", "can_update_branch?"]
CALLS: ["run_untagged?", "has_tags?", "tag_list", "tag_list", "empty?"]
CALLS: ["is_shared?", "projects", "exists?"]
CALLS: ["", "where"]
CALLS: ["present?", "environments", "stop_action?", "current_user", "can?", "current_user", "stop_with_action!", "each"]
CALLS: ["available?", "stop!", "stop_action", "play"]
CALLS: ["on_stop", "present?", "manual_actions", "manual_actions", "on_stop", "find_by"]
CALLS: ["deployable", "try"]
CALLS: ["", "where"]
CALLS: ["project", "new", "execute"]
CALLS: ["schedule", "id", "current_user", "id", "perform_async", "flash", "project_pipelines_path", "html_safe", "flash", "pipeline_schedules_path"]
CALLS: ["playable?", "respond_422", "current_user", "play", "build_path"]
CALLS: ["build", "playable?", "request", "current_user", "build", "can?"]
CALLS: ["build", "playable?", "request", "current_user", "build", "can?"]
CALLS: []
CALLS: ["action?", "manual?", "complete?"]
CALLS: ["available?", "stop_action", "present?"]
CALLS: ["stop_action", "present?"]
CALLS: ["current_user", "can?", "retryable_builds", "current_user", "can?", "project", "current_user", "new", "reprocess!", "find_each", "builds", "latest", "skipped", "process", "retry_optimistic_lock", "find_each", "project", "current_user", "new", "close_all", "process!"]
CALLS: ["todo_service", "merge_request_build_retried", "pipeline_merge_requests"]
CALLS: ["current_user", "can?", "public_send", "map", "current_user", "push", "retried", "transaction_begin", "pipeline", "builds", "latest", "name", "where", "update_all", "project", "builds", "create!", "transaction_end", "transaction"]
CALLS: ["", "where"]
CALLS: ["statuses", "order", "statuses", "latest"]
CALLS: ["project", "user", "new", "execute"]
CALLS: ["reprocess!", "pipeline", "stage_idx", "mark_as_processable_after_stage", "enqueue!", "project", "current_user", "new", "close", "tap"]
CALLS: ["builds", "skipped", "after_stage", "find_each"]
CALLS: ["", "where"]
CALLS: ["runner", "shared?", "builds_for_shared_runner", "builds_for_specific_runner", "enabled?", "runner", "tags", "ids", "matches_tag_ids", "runner", "run_untagged?", "with_any_tags", "runner", "can_pick?", "runner_id", "runner", "id", "run!", "register_success", "new", "drop!", "find", "register_failure", "new"]
CALLS: ["pages_deployments_failed_total_counter", "increment"]
CALLS: ["counter"]
CALLS: ["runner", "shared?", "jobs_running_for_project", "queued_at", "nil?", "job_queue_duration_seconds", "now", "queued_at", "observe", "attempt_counter", "increment"]
CALLS: ["histogram"]
CALLS: ["counter"]
CALLS: ["runner", "shared?", "project", "builds", "running", "shared", "where", "limit", "count"]
CALLS: ["failed_attempt_counter", "increment", "attempt_counter", "increment"]
CALLS: ["counter"]
CALLS: ["new_builds", "runner", "projects", "without_deleted", "with_builds_enabled", "where", "order"]
CALLS: ["pending", "unstarted", "runner", "ref_protected?", "ref_protected"]
CALLS: ["", "where"]
CALLS: ["", "where"]
CALLS: ["", "with_feature_enabled"]
CALLS: ["new_builds", "joins", "where", "joins", "where", "running_builds_for_shared_runners", "to_sql", "joins", "order"]
CALLS: ["running", "shared", "where", "group", "select"]
CALLS: ["", "where", "where", "where", "select", "where"]
CALLS: ["", "where", "where", "where", "where", "not", "select", "where"]
CALLS: ["update_retried", "stage_indexes_of_created_builds", "process_stage", "map", "update_status", "flatten", "any?"]
CALLS: ["pipeline", "statuses", "latest", "group", "having", "pluck", "any?", "pipeline", "statuses", "latest", "map", "where", "where", "map", "not", "update_all"]
CALLS: ["created_builds", "order", "pluck"]
CALLS: ["pipeline", "builds", "created"]
CALLS: ["status_for_prior_stages", "include?", "created_builds_in_stage", "process_build", "retry_lock", "select"]
CALLS: ["created_builds", "where"]
CALLS: ["pipeline", "builds", "where", "latest", "status"]
CALLS: ["when", "valid_statuses_for_when", "include?", "action?", "actionize", "enqueue", "skip"]
CALLS: []
CALLS: ["current_user", "can?", "enqueue", "current_user", "update", "tap", "current_user", "retry"]
CALLS: ["project", "new", "execute"]
CALLS: ["pipeline", "current_user", "retry_failed", "project", "project_pipelines_path", "html", "json", "respond_to"]
CALLS: ["project", "new", "execute"]
CALLS: ["retryable?", "respond_422", "current_user", "retry", "build_path"]
CALLS: ["build", "retryable?", "request", "current_user", "build", "can?"]
CALLS: []
CALLS: ["retryable_builds", "any?"]
CALLS: ["success?", "failed?", "canceled?"]
CALLS: ["build", "failed?"]
CALLS: ["hook", "hook_log", "request_data", "hook_log", "trigger", "execute", "set_hook_execution_notice", "edit_project_hook_path"]
CALLS: ["hook", "web_hook_logs", "params", "find"]
CALLS: ["flash", "flash", "flash"]
CALLS: ["hook", "web_hook_logs", "params", "find"]
CALLS: ["hook", "hook_log", "request_data", "hook_log", "trigger", "execute", "set_hook_execution_notice", "edit_admin_hook_path"]
CALLS: ["trigger_from_token", "trigger_from_token", "create_pipeline_from_trigger"]
CALLS: ["params", "to_s", "find_by_token", "strong_memoize"]
CALLS: ["project", "project", "project", "owner", "params", "new", "trigger_requests", "build", "variables", "variables", "build", "execute", "persisted?", "success", "errors", "messages", "error"]
CALLS: ["read_secrets", "dig", "dig", "decode64", "each"]
CALLS: ["build_kubeclient!", "get_secrets", "as_json", "error_code"]
CALLS: ["trace_sections", "empty?", "table_name", "extract_sections", "bulk_insert"]
CALLS: ["trace", "extract_sections", "delete", "find_or_create_name", "id", "project", "id", "id", "merge", "map"]
CALLS: ["project", "build_trace_section_names", "find_or_create_by!", "project", "build_trace_section_names", "find_by!"]
CALLS: ["stage_id", "present?", "invalid?", "ensure_stage", "stage_id", "id", "block_given?", "tap"]
CALLS: ["find_stage", "create_stage"]
CALLS: ["stage", "pipeline", "project", "create!"]
CALLS: ["pipeline", "stages", "stage", "find_by"]
CALLS: ["new", "params", "params", "params", "params", "project", "current_user", "new", "pipeline", "new", "schedule_head_pipeline_update", "complete?", "project", "auto_cancel_pending_pipelines?", "cancel_pending_pipelines", "pipeline_created_counter", "increment", "process!", "build!", "pipeline"]
CALLS: ["related_merge_requests", "id", "perform_async", "each"]
CALLS: ["pipeline", "project", "source_of_merge_requests", "opened", "pipeline", "ref", "where"]
CALLS: ["counter"]
CALLS: ["auto_cancelable_pipelines", "pipeline", "auto_cancel_running", "find_each", "retry_lock"]
CALLS: ["project", "pipelines", "pipeline", "ref", "where", "where", "pipeline", "id", "not", "where", "project", "pipeline", "ref", "commit", "try", "not", "created_or_pending"]
CALLS: ["", "where"]
CALLS: ["update", "auto_canceled_by", "cancel_running"]
CALLS: ["project", "pipeline_schedules", "pipeline_schedule_params", "create"]
CALLS: ["params", "current_user", "merge"]
CALLS: ["new", "projects_list", "project_id", "projects_get_billing_info", "billing_enabled", "select"]
CALLS: ["find_chat_name", "update_last_used_at"]
CALLS: ["find_by"]
CALLS: ["new", "execute"]
CALLS: ["update_last_used_at?", "id", "to_i", "new", "try_obtain", "touch"]
CALLS: ["last_used_at", "nil?", "last_used_at", "ago"]
CALLS: ["chat_name_params", "values", "all?", "request_token", "new_profile_chat_name_url"]
CALLS: ["chat_name_token", "chat_name_params", "store!"]
CALLS: ["board", "position", "params", "movable?", "valid_move?", "reorder_intermediate_lists", "update_list_position", "with_lock"]
CALLS: ["new_position", "update_attribute"]
CALLS: ["old_position", "new_position", "decrement_intermediate_lists", "increment_intermediate_lists"]
CALLS: ["board", "lists", "movable", "new_position", "where", "old_position", "where", "update_all"]
CALLS: ["board", "lists", "movable", "old_position", "where", "new_position", "where", "update_all"]
CALLS: ["new_position", "present?", "new_position", "old_position", "new_position", "new_position", "board", "lists", "movable", "size"]
CALLS: ["lists", "backlog", "exists?", "lists", "create", "lists"]
CALLS: ["lists", "movable", "empty?", "transaction_begin", "label_params", "create_list", "each", "transaction_end", "transaction"]
CALLS: ["find_or_create_label", "parent", "current_user", "id", "new", "execute"]
CALLS: ["lists", "create"]
CALLS: ["destroyable?", "board", "decrement_higher_lists", "remove_list", "with_lock"]
CALLS: ["destroy"]
CALLS: ["board", "lists", "movable", "position", "where", "update_all"]
CALLS: ["label?"]
CALLS: ["transaction_begin", "available_labels_for", "params", "find", "next_position", "create_list", "transaction_end", "transaction"]
CALLS: ["lists", "movable", "maximum", "nil?", "succ"]
CALLS: ["group_board?", "parent", "id", "merge!", "parent", "id", "current_user", "new", "execute"]
CALLS: ["parent", "boards", "empty?", "create_board!", "boards"]
CALLS: ["parent", "current_user", "new", "execute"]
CALLS: ["parent", "boards", "params", "create", "persisted?", "lists", "create", "lists", "create"]
CALLS: ["current_user", "can?", "issue_params", "empty?", "update"]
CALLS: ["set_parent", "set_state", "set_scope", "params"]
CALLS: ["params", "board", "group_board?"]
CALLS: ["params", "list", "list", "closed?"]
CALLS: ["params", "key?", "board", "lists", "params", "find"]
CALLS: ["board", "lists", "params", "delete", "find"]
CALLS: ["ls_files", "json", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["root_ref", "raw_repository", "ls_files"]
CALLS: ["parent", "is_a?", "params", "parent", "id", "params", "parent", "id"]
CALLS: ["current_user", "filter_params", "new", "execute", "movable_list?", "closed_list?", "without_board_labels", "movable_list?", "with_list_label", "order_by_position_and_priority"]
CALLS: ["where", "list", "label_id", "where", "limit", "arel", "exists", "where"]
CALLS: ["board_label_ids", "any?", "where", "issues_label_links", "limit", "arel", "exists", "not"]
CALLS: ["where", "board_label_ids", "where"]
CALLS: ["board", "lists", "movable", "pluck"]
CALLS: ["list", "present?", "list", "closed?"]
CALLS: ["list", "present?", "list", "movable?"]
CALLS: ["order_labels_priority", "nulls_last_order", "nulls_last_order", "reorder"]
CALLS: ["params", "list", "label_id", "merge", "create_issue"]
CALLS: ["project", "current_user", "new", "execute"]
CALLS: ["can_create_board?", "create_board!"]
CALLS: ["parent", "boards", "size"]
CALLS: ["params", "present?", "params", "update_attributes"]
CALLS: ["params", "new", "execute", "save", "tap"]
CALLS: ["is_a?", "params", "merge", "new", "params", "merge", "new"]
CALLS: ["registry", "enabled", "error", "scope", "current_user", "project", "error", "scope", "authorized_token", "encoded"]
CALLS: ["registry", "key", "new", "issuer", "registry", "issuer", "audience", "params", "subject", "current_user", "try", "expire_time", "class", "token_expire_at", "compact", "tap"]
CALLS: ["create"]
CALLS: ["update"]
CALLS: ["stop_environments"]
CALLS: ["project", "current_user", "new", "branch_name", "execute"]
CALLS: ["request", "project"]
CALLS: ["request", "project"]
CALLS: ["request", "project"]
CALLS: ["build", "project"]
CALLS: ["request", "current_user"]
CALLS: ["job", "project"]
CALLS: []
CALLS: ["invalidate_issue_cache_counts", "invalidate_merge_request_cache_counts", "invalidate_todos_done_count", "invalidate_todos_pending_count", "invalidate_personal_projects_count"]
CALLS: ["cache", "id", "delete"]
CALLS: ["cache", "id", "delete"]
CALLS: ["cache", "id", "delete"]
CALLS: ["cache", "id", "delete"]
CALLS: []
CALLS: ["supported_events", "include?", "username", "password", "ref_name", "build_url", "build_type", "post"]
CALLS: ["teamcity_url", "join", "to_s"]
CALLS: ["bamboo_url", "join", "to_s"]
CALLS: ["supported_events", "include?", "ref_name", "blank_ref?", "blank_ref?", "api_key", "user_key", "device", "priority", "project", "full_name", "project", "full_name", "sound", "sound", "post"]
CALLS: ["supported_events", "include?", "allowed_branch?", "to_json", "token", "post", "each"]
CALLS: ["present?", "restrict_to_branch", "present?", "ref_name", "restrict_to_branch", "split", "map", "present?", "include?"]
CALLS: ["supported_events", "include?", "should_pipeline_be_notified?", "retrieve_recipients", "any?", "new", "perform"]
CALLS: ["recipients", "to_s", "split", "reject"]
CALLS: ["notify_only_broken_pipelines?"]
CALLS: ["notify_only_broken_pipelines?"]
CALLS: ["notify_for_ref?", "notify_for_pipeline?"]
CALLS: ["notify_only_broken_pipelines?"]
CALLS: ["dig", "notify_only_default_branch?", "ref_name", "dig", "project", "default_branch"]
CALLS: ["supported_events", "include?", "service_hook", "execute"]
CALLS: []
CALLS: ["supported_events", "include?", "type", "project_url", "project_url", "head", "type", "code", "project_url", "type", "project_url", "message", "logger", "info"]
CALLS: ["supported_events", "include?", "project_id", "channels", "colorize_messages", "settings", "perform_async"]
CALLS: ["server_host", "present?", "server_host", "server_port", "present?", "server_port"]
CALLS: ["cache", "ssh_algorithms_hashes", "host", "gitlab_pages", "gitlab_ci", "deep_symbolize_keys", "fetch"]
CALLS: ["gitlab_ci", "to_h", "artifacts", "max_size", "megabytes", "megabytes", "merge"]
CALLS: ["pages", "to_h", "pages", "host", "resolv_dns", "merge"]
CALLS: ["getaddress"]
CALLS: ["ssh_algorithm_hashes", "map", "compact"]
CALLS: ["ssh_algorithm_file_content", "present?", "ssh_algorithm_md5", "ssh_algorithm_sha256"]
CALLS: ["hexdigest"]
CALLS: ["hexdigest", "scan", "join"]
CALLS: ["ssh_algorithm_file", "exist?", "read"]
CALLS: ["downcase", "join"]
CALLS: ["supported_events", "include?", "create_message", "present?", "gate", "room", "message_options", "send"]
CALLS: ["create_push_message", "update?", "create_issue_message", "update?", "create_merge_request_message", "create_note_message", "should_pipeline_be_notified?", "create_pipeline_message"]
CALLS: ["project_url", "escape", "project_url", "project_link", "humanized_status"]
CALLS: ["new", "new", "new", "truncate_sha", "format_title", "new", "format_title", "new", "format_title", "new", "format_title", "project_link", "markdown"]
CALLS: ["new", "render_line", "project_url", "project_link", "markdown"]
CALLS: ["new", "render_line", "project_link", "markdown"]
CALLS: ["tag_ref?", "ref_name", "blank_ref?", "project_url", "escape", "project_link", "blank_ref?", "project", "web_url", "project_name", "project", "web_url", "escape", "project", "web_url", "project", "full_name", "gsub!", "project", "web_url", "take", "render_line", "each", "count", "count"]
CALLS: ["notify", "present?", "notify", "to_boolean", "message_color"]
CALLS: ["pipeline_status_color", "color"]
CALLS: []
CALLS: ["api_version", "present?", "api_version", "server", "blank?", "server", "token", "new"]
CALLS: ["supported_events", "include?", "token", "api_key", "project", "repository", "path_to_repo", "execute"]
CALLS: ["supported_events", "include?", "token", "project", "repository", "config", "gitlab", "url", "project", "full_path", "config", "gitlab", "url", "project", "full_path", "config", "gitlab", "url", "project", "full_path", "post"]
CALLS: ["properties", "get"]
CALLS: ["supported_events", "include?", "project_id", "recipients", "send_from_committer_email?", "disable_diffs?", "perform_async"]
CALLS: ["disable_diffs", "to_boolean"]
CALLS: ["push_valid?", "service_hook", "execute", "merge_request_valid?", "service_hook", "execute", "tag_push_valid?", "service_hook", "execute"]
CALLS: []
CALLS: ["project", "merge_requests", "opened", "project", "id", "ref_name", "where", "empty?", "blank_ref?"]
CALLS: ["blank_ref?"]
CALLS: ["supported_events", "include?", "webhook", "present?", "custom_data", "get_message", "get_channel_field", "presence", "channel", "username", "username", "notify"]
CALLS: ["custom_data", "merge"]
CALLS: ["event_channel_name", "public_send"]
CALLS: []
CALLS: ["notify_for_ref?", "new", "update?", "new", "update?", "new", "new", "should_pipeline_be_notified?", "new", "new"]
CALLS: ["project_url", "project_name", "merge"]
CALLS: ["supported_events", "include?", "build_message", "room", "auth", "speak"]
CALLS: ["ref_name", "project", "full_name", "blank_ref?", "blank_ref?", "project", "web_url"]
CALLS: ["rooms", "find", "base_uri", "merge", "post", "code"]
CALLS: ["base_uri", "get", "code"]
CALLS: ["subdomain"]
CALLS: ["token"]
CALLS: ["params", "project", "actor", "auth_params", "new", "authentication_abilities", "execute"]
CALLS: ["params", "permit"]
CALLS: ["supported_events", "include?", "service_hook", "execute"]
CALLS: ["supported_events", "include?", "build_key", "get_path"]
CALLS: ["build_url", "username", "password", "get"]
CALLS: ["build_url", "username", "blank?", "password", "blank?", "get", "username", "password", "get"]
CALLS: ["supported_events", "include?", "subdomain", "token", "to_json", "post"]
CALLS: ["supported_events", "include?", "ref_name", "restrict_to_branch", "to_s", "length", "index", "nil?", "project", "full_name", "check_commit", "each"]
CALLS: ["scan", "client", "find_by_id", "add_comment", "update", "logger", "message", "error", "each"]
CALLS: ["new", "refresh_cache", "each"]
CALLS: ["hooks", "hooks_for", "to_s", "async_execute", "each", "new", "execute_hooks", "run_after_commit_or_now"]
CALLS: ["merge_request", "target_project"]
CALLS: ["target_project", "new", "refresh_cache"]
CALLS: ["target_project"]
CALLS: ["assignee"]
CALLS: ["source"]
CALLS: ["project", "new", "refresh_cache"]
CALLS: ["new", "execute"]
CALLS: ["new", "execute"]
CALLS: []
CALLS: ["current_page", "join_lateral_supported?", "relation_with_join_lateral", "relation_without_join_lateral", "with_associations", "to_a"]
CALLS: ["", "includes"]
CALLS: ["projects", "select", "to_sql", "filtered_events", "limit_for_join_lateral", "limit", "where", "to_sql", "base_relation", "from", "table_name", "joins", "paginate_events"]
CALLS: []
CALLS: ["unscoped", "recent"]
CALLS: ["limit", "offset"]
CALLS: ["base_relation", "apply_filter", "base_relation"]
CALLS: ["filtered_events", "projects", "in_projects", "paginate_events"]
CALLS: ["", "includes", "preload"]
CALLS: ["projects", "first"]
CALLS: ["author", "detect_mentionable_changes", "empty?", "create_cross_references!"]
CALLS: ["changes", "present?", "changes", "previous_changes", "dup", "class", "mentionable_attrs", "map", "include?", "select"]
CALLS: ["pipeline_data", "project", "execute_hooks", "project", "execute_services"]
CALLS: ["build"]
CALLS: ["project", "build", "project", "dup", "execute_hooks", "project", "dup", "execute_services", "new", "execute", "project", "running_or_pending_build_count"]
CALLS: ["cache", "id", "builds", "running_or_pending", "count", "fetch"]
CALLS: ["", "where"]
CALLS: ["all", "order_id_desc", "by_username", "by_search", "by_blocked", "by_active", "by_external_identity", "by_external", "by_2fa", "by_created_at", "by_custom_attributes"]
CALLS: ["params", "with_two_factor", "without_two_factor"]
CALLS: ["current_user", "admin?", "where", "not", "params", "external"]
CALLS: ["current_user", "admin?", "params", "params", "joins", "params", "params", "with_extern_uid", "merge"]
CALLS: ["", "normalize_uid", "iwhere", "with_provider"]
CALLS: ["ldap_provider?", "normalize_dn", "to_s"]
CALLS: ["", "where"]
CALLS: ["params", "active"]
CALLS: ["params", "blocked"]
CALLS: ["params", "present?", "params", "search"]
CALLS: ["params", "params", "where"]
CALLS: ["params", "params", "params", "present?", "params", "search"]
CALLS: ["params", "present?", "joins", "params", "where"]
CALLS: ["search", "search", "full_search"]
CALLS: ["fuzzy_search"]
CALLS: ["params", "is_a?", "current_user", "allowed?", "reflect_on_association", "klass", "arel_table", "model", "arel_table", "klass", "select", "foreign_key", "association_primary_key", "eq", "where", "params", "where", "where", "inject"]
CALLS: ["params", "present?", "params", "created_before", "params", "present?", "params", "created_after"]
CALLS: ["", "scoped_table", "gteq", "where"]
CALLS: ["arel_table", "table_name", "alias"]
CALLS: ["arel_table", "table_name", "alias"]
CALLS: ["", "scoped_table", "lteq", "where"]
CALLS: ["params", "recent_events", "joins", "with_associations", "params", "limit_recent"]
CALLS: ["recent", "limit", "offset"]
CALLS: ["sql", "from"]
CALLS: ["project?", "params", "find", "pending_delete?", "current_user", "allowed?"]
CALLS: ["current_user", "todos", "by_action_id", "by_action", "by_author", "by_state", "by_type", "by_project", "sort"]
CALLS: ["type?", "type", "where"]
CALLS: ["type", "present?", "type", "include?"]
CALLS: ["params", "to_s", "done", "pending"]
CALLS: ["", "with_state"]
CALLS: ["project?", "project", "where", "current_user", "public_or_visible_to_user", "joins", "merge"]
CALLS: ["project_authorizations", "select", "where", "levels_for_user", "id", "where", "public_to_user"]
CALLS: ["authorizations_for_projects", "levels_for_user", "where", "public_to_user"]
CALLS: ["author?", "author", "try", "where"]
CALLS: ["action_id?", "action_id", "where"]
CALLS: ["params"]
CALLS: ["action_id", "present?", "action_id", "to_i", "key?"]
CALLS: ["action?", "to_action_id", "where"]
CALLS: ["params", "params", "id", "where"]
CALLS: ["active", "inactive"]
CALLS: ["", "where"]
CALLS: ["", "where"]
CALLS: ["params", "filter_by_state"]
CALLS: ["closed", "active"]
CALLS: ["", "with_state"]
CALLS: ["", "with_state"]
CALLS: ["author", "author", "id", "where", "no_author?", "where", "author_id?", "author_username?", "none"]
CALLS: ["params", "params"]
CALLS: ["project?", "projects", "of_projects", "references_project", "projects", "projects", "reorder", "merge", "join_project", "none"]
CALLS: ["", "references"]
CALLS: ["", "references"]
CALLS: ["params", "to_s", "closed", "respond_to?", "merged", "closed", "opened"]
CALLS: ["params", "params", "where"]
CALLS: ["sort", "tags_sorted_by", "filter_by_name"]
CALLS: ["tags", "name", "sort", "tags", "name", "rsort", "tags_sorted_by_committed_date", "reverse", "tags_sorted_by_committed_date", "tags"]
CALLS: ["tags", "dereferenced_target", "committed_date", "now", "sort_by"]
CALLS: ["search", "name", "search", "include?", "select"]
CALLS: ["search", "name", "upcase", "search", "upcase", "include?", "select"]
CALLS: ["init_collection", "by_author", "by_visibility", "fresh"]
CALLS: ["params", "visibility_from_scope", "where"]
CALLS: ["params", "to_s"]
CALLS: ["project", "present?", "authorized_snippets_from_project", "authorized_snippets"]
CALLS: ["feature_available_projects", "not_project_related", "or", "where", "current_user", "public_or_visible_to_user"]
CALLS: ["table", "eq"]
CALLS: ["arel_table"]
CALLS: ["current_user", "allowed?", "table", "eq", "current_user", "with_feature_available_for_user", "projects_for_user", "select", "to_sql", "new", "table", "in"]
CALLS: ["current_user", "public_to_user", "current_user", "full_private_access?", "all", "current_user", "authorizations_for_projects", "where", "current_user", "levels_for_user", "where", "select", "select", "new", "to_sql", "table_name", "from"]
CALLS: ["current_user", "project", "can?", "project", "team", "current_user", "member?", "project", "snippets", "project", "snippets", "current_user", "public_to_user", "none"]
CALLS: ["current_user", "collection_with_user", "collection_without_user"]
CALLS: ["private_only?", "owned_projects?", "none", "public_to_user"]
CALLS: ["params", "present?"]
CALLS: ["params", "present?"]
CALLS: ["owned_projects?", "current_user", "owned_projects", "private_only?", "current_user", "authorized_projects", "current_user", "public_or_visible_to_user"]
CALLS: ["owned_projects_union", "to_sql", "from"]
CALLS: ["namespace", "where", "joins", "namespace", "id", "where", "id", "where", "new"]
CALLS: ["include_subgroups?", "group", "self_and_descendants", "select", "where", "group", "projects"]
CALLS: ["class", "id", "where", "new", "base_and_descendants"]
CALLS: ["options", "fetch"]
CALLS: ["only_shared?", "shared_projects", "public_only", "only_owned?", "owned_projects", "public_only", "shared_projects", "public_only", "owned_projects", "public_only"]
CALLS: ["options", "fetch"]
CALLS: ["options", "fetch"]
CALLS: ["group", "users", "current_user", "include?", "only_shared?", "shared_projects", "only_owned?", "owned_projects", "shared_projects", "owned_projects", "only_shared?", "shared_projects", "current_user", "public_or_visible_to_user", "only_owned?", "owned_projects", "current_user", "public_or_visible_to_user", "owned_projects", "current_user", "public_or_visible_to_user", "shared_projects", "current_user", "public_or_visible_to_user"]
CALLS: ["target", "notes_on_target", "target_type", "notes_of_target_type", "notes_of_any_type"]
CALLS: ["target", "respond_to?", "target", "related_notes", "target", "notes"]
CALLS: ["commit_shas", "take", "except", "source_project_id", "target_project_id", "where", "for_commit_id", "notes", "new", "to_sql", "table_name", "from", "includes"]
CALLS: ["notes_for_type", "map", "search", "map!", "new", "includes", "find_union"]
CALLS: ["allowed?", "notes", "where", "none", "noteables_for_type", "notes", "base_class", "name", "reorder", "where"]
CALLS: ["target_type", "notes_for_type", "search"]
CALLS: ["public_only?", "public_only", "with_confidentiality_access_check"]
CALLS: ["params", "fetch"]
CALLS: ["user_can_see_all_confidential_issues?", "all", "user_cannot_see_confidential_issues?", "where", "current_user", "id", "current_user", "authorized_projects", "select", "where"]
CALLS: ["user_can_see_all_confidential_issues?", "current_user", "blank?"]
CALLS: ["current_user", "blank?", "current_user", "full_private_access?", "project?", "project", "project", "team", "current_user", "id", "max_member_access"]
CALLS: ["klass", "all"]
CALLS: ["current_user", "collection_with_user", "collection_without_user", "union"]
CALLS: ["builds", "by_status"]
CALLS: ["params", "include?", "params", "where"]
CALLS: ["params", "include?", "params", "where"]
CALLS: ["params", "delete", "new", "current_user", "execute", "init_collection", "by_ids", "by_personal", "by_starred", "by_trending", "by_visibilty_level", "by_tags", "by_search", "by_archived", "by_custom_attributes", "sort"]
CALLS: ["params", "non_archived", "params", "key?", "params", "archived", "params", "to_boolean", "non_archived"]
CALLS: ["params", "present?", "params", "tagged_with"]
CALLS: ["params", "present?", "params", "where"]
CALLS: ["params", "present?", "trending"]
CALLS: ["joins", "reorder"]
CALLS: ["params", "params", "load_projects", "html", "view_to_html_string", "json", "respond_to", "dashboard_projects_path", "current_user", "cookies", "blank?", "current_user", "hide_project_limit", "current_user", "can_create_project?", "current_user", "projects_limit", "profile_path", "icon", "icon", "dashboard_projects_path", "root_path", "dashboard_projects_path", "nav_link", "starred_dashboard_projects_path", "starred_dashboard_projects_path", "nav_link", "explore_root_path", "trending_explore_projects_path", "starred_explore_projects_path", "explore_projects_path", "explore_root_path", "nav_link", "sort_value_latest_activity", "projects_sort_options_hash", "dropdown_toggle", "projects_sort_options_hash", "filter_projects_path", "each", "filter_projects_path", "params", "present?", "filter_projects_path", "params", "to_boolean", "filter_projects_path", "params", "current_user", "filter_projects_path", "params", "present?", "filter_projects_path", "params", "present?", "shared_projects", "present?", "filter_projects_path", "params", "present?", "filter_projects_path", "params", "filter_projects_path", "params", "current_user", "can_create_project?", "new_project_path", "trending_explore_projects_path", "explore_root_path", "trending_explore_projects_path", "nav_link", "starred_explore_projects_path", "starred_explore_projects_path", "nav_link", "explore_projects_path", "explore_projects_path", "nav_link", "current_user", "sort_value_latest_activity", "projects_sort_options_hash", "dropdown_toggle", "projects_sort_options_hash", "filter_projects_path", "each", "filter_projects_path", "params", "present?", "filter_projects_path", "params", "to_boolean", "filter_projects_path", "params", "current_user", "filter_projects_path", "params", "present?", "filter_projects_path", "params", "present?", "shared_projects", "present?", "filter_projects_path", "params", "present?", "filter_projects_path", "params", "filter_projects_path", "params", "projects", "current_user", "current_user", "explore_root_path"]
CALLS: ["params", "present?", "current_user", "current_user", "starred_by"]
CALLS: ["", "joins", "id", "where"]
CALLS: ["params", "present?", "current_user", "current_user", "personal"]
CALLS: ["", "namespace_id", "where"]
CALLS: ["project_ids_relation", "project_ids_relation", "where"]
CALLS: ["params", "present?", "current_user", "personal"]
CALLS: ["params", "archived", "params", "blank?", "non_archived"]
CALLS: ["params", "present?", "params", "where"]
CALLS: ["pipelines", "by_scope", "by_status", "by_ref", "by_name", "by_username", "by_yaml_errors", "sort_items"]
CALLS: ["params", "include?", "params", "params", "params", "order"]
CALLS: ["params", "to_boolean", "where", "where"]
CALLS: ["params", "present?", "joins", "params", "where"]
CALLS: ["params", "present?", "params", "where"]
CALLS: ["params", "running", "pending", "finished", "branches", "ids_for_ref", "from_ids", "tags", "ids_for_ref", "from_ids"]
CALLS: ["pipelines", "unscoped", "where"]
CALLS: ["pipelines", "where", "group", "select"]
CALLS: ["current_user_related?", "current_user", "none", "params", "current_user", "id", "where", "current_user", "assigned_to"]
CALLS: ["", "id", "where"]
CALLS: ["", "id", "where"]
CALLS: ["params", "present?", "params", "search"]
CALLS: ["pipeline_schedules", "active", "pipeline_schedules", "inactive", "pipeline_schedules", "order"]
CALLS: ["all_projects", "find_union", "includes", "order_id_desc"]
CALLS: ["all", "by_user", "by_impersonation", "by_state"]
CALLS: ["with_impersonation", "without_impersonation"]
CALLS: ["", "where"]
CALLS: ["", "where"]
CALLS: ["where"]
CALLS: ["init_collection", "since_fetch_at", "fresh"]
CALLS: ["fetch", "to_i", "at", "updated_after"]
CALLS: ["", "where"]
CALLS: ["", "scoped_table", "gteq", "where"]
CALLS: ["projects_where_can_admin_issues", "present?", "search", "excluding_project", "order_id_desc", "present?", "where", "limit", "includes"]
CALLS: ["authorized_projects", "non_archived", "with_issues_enabled"]
CALLS: ["", "with_feature_enabled"]
CALLS: ["", "where", "not"]
CALLS: ["project_ids", "empty?", "group_ids", "empty?", "none", "all", "by_groups_and_projects", "by_title", "by_state", "order"]
CALLS: ["joins", "where", "select"]
CALLS: ["params", "params", "where"]
CALLS: ["project_ids", "group_ids", "for_projects_and_groups"]
CALLS: ["fork_network", "fork_network", "projects", "current_user", "public_or_visible_to_user", "non_archived", "current_user", "with_feature_available_for_user", "source_project", "where"]
CALLS: ["project", "project_members", "current_user", "project", "can?", "non_invite", "group", "group", "new", "execute", "non_invite", "new", "distinct_on", "includes", "table_name", "from"]
CALLS: ["postgresql?"]
CALLS: ["project?", "params", "find", "authorized_to_read_labels?"]
CALLS: ["skip_authorization", "current_user", "allowed?"]
CALLS: ["project?", "project", "project", "group", "present?", "arel_table", "project", "group", "group_ids_for", "eq", "in", "and", "eq", "project", "id", "eq", "and", "or", "where", "project", "labels", "group?", "params", "find", "group_ids_for", "where", "projects", "group_ids", "where", "only_group_labels?", "projects", "select", "where"]
CALLS: ["params"]
CALLS: ["groups_to_include", "groups_user_can_read_labels", "map", "strong_memoize"]
CALLS: ["authorized_to_read_labels?", "select", "user_scope"]
CALLS: ["include_ancestor_groups?", "ancestors", "include_descendant_groups?", "descendants"]
CALLS: ["params"]
CALLS: ["params"]
CALLS: ["label_ids", "find_union", "none", "with_title", "sort"]
CALLS: ["", "where"]
CALLS: ["title", "nil?", "title", "blank?", "none", "title", "where"]
CALLS: ["all_groups", "find_union", "order_id_desc"]
CALLS: ["params", "find", "current_user", "klass", "to_ability_name", "allowed?"]
CALLS: ["init_collection", "filter_items", "by_project", "sort"]
CALLS: ["by_source_branch", "by_target_branch"]
CALLS: ["target_branch", "target_branch", "where"]
CALLS: ["source_branch", "source_branch", "where"]
CALLS: ["by_due_date"]
CALLS: ["due_date?", "filter_by_no_due_date?", "without_due_date", "filter_by_overdue?", "today", "due_before", "filter_by_due_this_week?", "today", "beginning_of_week", "today", "end_of_week", "due_between", "filter_by_due_this_month?", "today", "beginning_of_month", "today", "end_of_month", "due_between"]
CALLS: ["", "where", "where"]
CALLS: ["", "where"]
CALLS: ["", "where"]
CALLS: ["params", "present?"]
CALLS: ["due_date?", "params", "name"]
CALLS: ["due_date?", "params", "name"]
CALLS: ["due_date?", "params", "name"]
CALLS: ["due_date?", "params", "name"]
CALLS: ["by_scope", "by_created_at", "by_updated_at", "by_state", "by_group", "by_search", "by_assignee", "by_author", "by_non_archived", "by_iids", "by_milestone", "by_label", "by_my_reaction_emoji"]
CALLS: ["", "where"]
CALLS: ["assignee", "assignee", "assigned_to", "no_assignee?", "unassigned", "assignee_id?", "assignee_username?", "none"]
CALLS: ["", "where"]
CALLS: ["", "where"]
CALLS: ["params", "params"]
CALLS: ["params", "present?", "non_archived"]
CALLS: ["params", "present?", "current_user", "current_user", "params", "awarded"]
CALLS: ["id", "name", "where"]
CALLS: ["labels?", "filter_by_no_label?", "without_label", "label_names", "params", "with_label"]
CALLS: ["is_a?", "size", "joins", "where", "grouping_columns", "group", "size", "having", "joins", "where"]
CALLS: ["arel_table", "include?", "arel_table"]
CALLS: ["", "name", "table_name", "joins", "where"]
CALLS: ["milestones?", "filter_by_no_milestone?", "left_joins_milestones", "where", "filter_by_upcoming_milestone?", "projects", "upcoming_ids_by_projects", "left_joins_milestones", "where", "filter_by_started_milestone?", "left_joins_milestones", "where", "params", "with_milestone"]
CALLS: ["unscoped", "of_projects", "active", "now", "where", "postgresql?", "order", "select", "group", "having", "pluck", "map"]
CALLS: ["", "left_joins_milestones", "where"]
CALLS: ["params", "name"]
CALLS: ["params", "name"]
CALLS: ["milestones?", "params", "title"]
CALLS: ["assignee", "assignee", "id", "where", "no_assignee?", "where", "assignee_id?", "assignee_username?", "none"]
CALLS: ["params", "present?", "params", "where"]
CALLS: []
CALLS: ["params", "present?", "params", "updated_after", "params", "present?", "params", "updated_before"]
CALLS: ["", "scoped_table", "lteq", "where"]
CALLS: ["all_groups", "by_parent", "by_custom_attributes", "map", "find_union", "with_route", "order_id_desc"]
CALLS: ["params", "params", "where"]
CALLS: ["members", "parent", "non_request", "ancestors", "select", "where", "where", "users", "select", "not", "select", "to_sql", "select", "to_sql", "join", "where"]
CALLS: ["find_by", "can?"]
CALLS: ["children", "params", "ancestors_of_filtered_subgroups", "ancestors_of_filtered_projects", "size", "paginator", "total_count", "max", "paginate_array"]
CALLS: ["subgroups", "ancestors_of_groups", "params", "with_selects_for_list"]
CALLS: ["except", "select", "where", "new", "parent_group", "id", "base_and_ancestors"]
CALLS: ["projects", "where", "parent_group", "not", "select", "where", "ancestors_of_groups", "params", "with_selects_for_list"]
CALLS: ["source", "events", "by_current_user_access", "by_action", "by_target_type", "by_created_at_before", "by_created_at_after"]
CALLS: ["params", "params", "end_of_day", "where"]
CALLS: ["params", "params", "beginning_of_day", "where"]
CALLS: ["params", "params", "where"]
CALLS: ["current_user", "new", "execute", "merge", "joins"]
CALLS: ["project", "deployments", "ref", "params", "ref", "to_s", "where", "commit", "commit", "sha", "where", "none", "group", "select", "project", "environments", "available", "where", "order_by_last_deployed_at", "to_a", "current_user", "allowed?", "select!", "ref", "commit", "commit", "includes_commit?", "select!", "ref", "params", "ref", "recently_updated_on_branch?", "select!"]
CALLS: ["last_deployment", "last_deployment", "includes_commit?"]
CALLS: ["to_s", "last_deployment", "try"]
CALLS: ["", "arel_table", "maximum", "select", "arel_table", "arel_table", "eq", "where", "to_sql", "nulls_first_order", "order"]
CALLS: ["project", "repository", "id", "sha", "ancestor?"]
CALLS: ["all_projects", "find_union", "includes", "order_id_desc"]
CALLS: ["find_check", "should_skip_cross_project_check", "can_read_cross_project?", "should_run?", "model", "none"]
CALLS: ["current_user", "allowed?"]
CALLS: ["project", "clusters", "filter_by_scope"]
CALLS: ["scope", "to_sym", "disabled", "enabled", "scope"]
CALLS: ["", "where"]
CALLS: ["", "where"]
CALLS: ["sort", "branches_sorted_by", "filter_by_name"]
CALLS: ["raw_repository", "local_branches"]
CALLS: ["raw_repository", "local_branches"]
CALLS: ["find_users", "active", "reorder", "search", "present?", "search", "search", "skip_users", "present?", "where", "skip_users", "not", "limit", "params", "present?", "current_user", "current_user", "id", "params", "todo_authors", "search", "blank?", "params", "present?", "current_user", "current_user", "uniq", "author_id", "present?", "current_user", "author_id", "find_by_id", "uniq"]
CALLS: ["", "where", "select", "where"]
CALLS: ["project", "users_from_project", "group", "group", "users_with_parents", "current_user", "all", "none"]
CALLS: ["members_with_parents", "select", "where", "reorder"]
CALLS: ["author_id", "present?", "project", "authorized_users", "author_id", "where", "new", "to_sql", "table_name", "from", "project", "authorized_users"]
CALLS: ["without_deleted", "with_statistics", "by_namespace_id", "by_visibilty_level", "by_with_push", "by_abandoned", "by_last_repository_check_failed", "by_archived", "by_personal", "by_name", "includes", "sort", "params", "page"]
CALLS: ["params", "present?", "where"]
CALLS: ["params", "present?", "abandoned"]
CALLS: ["", "months", "ago", "where"]
CALLS: ["params", "present?", "with_push"]
CALLS: ["params", "present?", "params", "in_namespace"]
CALLS: ["execute!"]
CALLS: []
CALLS: ["parse_repo_path"]
CALLS: ["params", "params", "params", "params", "params", "join", "pending_delete?", "find_routable!"]
CALLS: ["merge"]
CALLS: ["set_sort_order_from_cookie", "set_default_state", "params", "dup", "except", "default_sort_order", "id", "id", "finder_type", "valid_params", "permit"]
CALLS: ["scalar_params", "array_params"]
CALLS: []
CALLS: []
CALLS: []
CALLS: ["params", "sort_value_created_date", "sort_value_recently_updated", "sort_value_created_date"]
CALLS: ["params", "present?", "cookies", "params", "cookies", "cookies", "update_cookie_value", "params", "cookies"]
CALLS: ["sort_value_oldest_created", "sort_value_recently_created", "sort_value_created_date", "sort_value_created_date", "sort_value_due_date", "sort_value_due_date", "sort_value_milestone", "sort_value_milestone", "sort_value_popularity", "sort_value_popularity"]
CALLS: ["params", "blank?", "params"]
CALLS: ["board", "group_board?", "issue_params", "find", "board_parent"]
CALLS: ["params", "params", "params", "merge", "nil?", "reject"]
CALLS: ["params", "params", "join", "find_by_full_path", "render_404"]
CALLS: ["params", "params", "join", "find_by_full_path", "render_404"]
CALLS: ["runner", "update", "runner", "tick_runner_queue", "tap"]
CALLS: ["project", "current_user", "issue_params", "new", "execute"]
CALLS: ["delete", "last_commit_sha", "update_attributes", "title_changed?", "title", "wiki", "find_page", "present?", "url_path", "url_path", "wiki", "content", "format", "title", "update_page", "save"]
CALLS: ["title", "commit_details", "wiki", "path", "name", "to_sym", "update_page", "update_project_activity"]
CALLS: ["repo_created?", "after_create", "branch_created?", "after_create_branch", "newrev"]
CALLS: ["full_path", "initialize_raw_repository"]
CALLS: ["project", "repository_storage", "disk_path", "project", "is_wiki", "gl_repository", "new"]
CALLS: ["notes", "map", "where", "fresh", "to_a", "class", "memoized_values", "clear_memoization", "each"]
CALLS: ["params", "presence"]
CALLS: ["snippet_params", "spammable_params", "merge", "current_user", "new", "execute", "recaptcha_check_with_fallback", "snippets_path", "current_user"]
CALLS: ["current_user", "project_params", "new", "execute", "repository", "flash", "_", "name", "edit_project_path", "redirect_to", "html", "flash", "html", "js", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["_", "s_", "s_", "current_user", "can?", "render", "params", "find_page", "current_user", "wiki_params", "new", "execute", "valid?", "project_wiki_path", "redirect_to", "fluid_layout", "_", "title", "capitalize", "_", "wiki_page_errors", "icon", "persisted?", "title", "capitalize", "project_wiki_path", "title", "capitalize", "persisted?", "s_", "s_", "current_user", "can?", "s_", "persisted?", "project_wiki_history_path", "s_", "current_user", "can?", "project_wiki_path", "s_", "_", "persisted?", "s_", "s_", "title", "namespace", "becomes", "persisted?", "form_errors", "persisted?", "last_commit_sha", "hidden_field", "label", "title", "text_field", "persisted?", "icon", "s_", "icon", "help_page_path", "label", "format", "options_for_select", "select", "label", "slug", "project_wiki_preview_markdown_path", "s_", "slug", "project_wiki_preview_markdown_path", "s_", "html_safe", "s_", "help_page_path", "s_", "html_safe", "label", "text_field", "persisted?", "_", "submit", "_", "project_wiki_path", "s_", "submit", "_", "project_wiki_path", "fluid_layout", "_", "title", "capitalize", "_", "wiki_page_errors", "icon", "persisted?", "title", "capitalize", "project_wiki_path", "title", "capitalize", "persisted?", "s_", "s_", "current_user", "can?", "s_", "persisted?", "project_wiki_history_path", "s_", "current_user", "can?", "project_wiki_path", "s_", "_", "persisted?", "s_", "s_", "title", "namespace", "becomes", "persisted?", "form_errors", "persisted?", "last_commit_sha", "hidden_field", "label", "title", "text_field", "persisted?", "icon", "s_", "icon", "help_page_path", "label", "format", "options_for_select", "select", "label", "slug", "project_wiki_preview_markdown_path", "s_", "slug", "project_wiki_preview_markdown_path", "s_", "html_safe", "s_", "help_page_path", "s_", "html_safe", "label", "text_field", "persisted?", "_", "submit", "_", "project_wiki_path", "s_", "submit", "_", "project_wiki_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["variables_params", "update", "render_variables", "json", "respond_to", "render_error", "json", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["params", "variable_params_attributes", "permit"]
CALLS: []
CALLS: []
CALLS: ["new", "variables", "represent", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["trigger", "trigger_params", "update", "project_settings_ci_cd_path", "help_page_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["snippet_params", "spammable_params", "merge", "project", "current_user", "new", "execute", "recaptcha_check_with_fallback", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project", "current_user", "update_params", "new", "execute", "flash", "name", "run_autodevops_pipeline", "project_settings_ci_cd_path", "fluid_layout", "env", "test?", "errors", "empty?", "s_", "_", "_", "s_", "s_", "help_page_path", "shared_runners_text", "present?", "current_application_settings", "markdown_field", "shared_runners_enabled?", "toggle_shared_runners_project_runners_path", "toggle_shared_runners_project_runners_path", "zero?", "dom_id", "runner_status_icon", "include?", "short_sha", "runner_path", "locked?", "icon", "edit_project_runner_path", "short_sha", "include?", "active?", "pause_project_runner_path", "resume_project_runner_path", "belongs_to_one_project?", "runner_path", "runner_projects", "find_by", "project_runner_project_path", "specific?", "namespace", "becomes", "runner_projects", "new", "id", "hidden_field", "submit", "description", "present?", "description", "tag_list", "present?", "tag_list", "sort", "each", "each", "_", "icon", "help_page_path", "_", "project_variables_path", "help_page_path", "any?", "each", "tap"]
CALLS: ["shared?"]
CALLS: ["runner_projects", "count"]
CALLS: ["status", "contacted_at", "time_ago_in_words"]
CALLS: ["project_runner_path"]
CALLS: ["run_auto_devops_pipeline?", "empty_repo?", "flash", "project", "id", "current_user", "id", "project", "default_branch", "perform_async", "flash", "project_pipelines_path", "html_safe"]
CALLS: ["project", "repository", "gitlab_ci_yml", "project", "auto_devops", "previous_changes", "include?", "project", "auto_devops", "enabled?", "project", "auto_devops", "enabled", "nil?", "auto_devops_enabled?"]
CALLS: ["file_on_head"]
CALLS: ["params", "require", "permit"]
CALLS: ["params", "require", "permit"]
CALLS: ["params", "require", "permit"]
CALLS: ["cluster", "managed?", "params", "require", "permit", "params", "require", "permit"]
CALLS: ["user?"]
CALLS: ["params", "require", "permit"]
CALLS: ["attributes", "service_params", "save", "project_settings_integrations_path", "success_message", "redirect_to", "title", "edit_project_path", "add_to_breadcrumbs", "deprecation_message", "deprecation_message", "title", "activated?", "description", "respond_to?", "detailed_description", "to_param", "project_service_path", "can_test?", "test_project_service_path", "editable?", "service_save_button", "project_settings_integrations_path", "form_for", "lookup_context", "to_param", "template_exists?", "to_param", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: []
CALLS: []
CALLS: []
CALLS: ["project", "pipelines", "any?"]
CALLS: []
CALLS: []
CALLS: []
CALLS: ["_", "deprecated_message_content", "url_helpers", "project", "project_clusters_path", "html_safe"]
CALLS: ["active?", "_", "_"]
CALLS: []
CALLS: ["deprecated?", "icon", "content_tag", "button_tag"]
CALLS: []
CALLS: ["active"]
CALLS: ["push"]
CALLS: ["active?", "title", "title"]
CALLS: ["event_channel_names", "event_names", "params", "permit", "is_a?", "blank?", "delete", "each"]
CALLS: ["supported_events", "map"]
CALLS: []
CALLS: ["supported_events", "event_channel_name", "map"]
CALLS: ["new", "runner_params", "update", "runner_path", "description", "id", "runner_path", "runner", "runner_form_url", "runner", "form_errors", "check_box", "check_box", "check_box", "check_box", "text_field", "text_field", "text_field", "text_field", "runner", "tag_list", "sort", "join", "text_field", "submit", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["params", "require", "permit"]
CALLS: ["params", "require", "permit"]
CALLS: ["release_params", "present?", "release", "release_params", "update_attributes", "release", "destroy", "name", "project_tag_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["params", "require", "permit"]
CALLS: ["releases", "name", "find_or_initialize_by"]
CALLS: ["update_service_class", "current_user", "protected_ref_params", "new", "execute", "valid?", "errors", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["service_namespace"]
CALLS: ["schedule", "schedule_params", "update", "project_pipeline_schedules_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["update_params", "update", "project_pages_path", "project_pages_path", "domain", "domain", "domain", "namespace", "becomes", "errors", "any?", "errors", "full_messages", "each", "label", "persisted?", "text_field", "config", "pages", "external_https", "label", "text_area", "label", "text_area", "submit", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["current_user", "project_params", "new", "execute", "flash", "flash", "project_pages_path", "html", "respond_to"]
CALLS: ["project", "current_user", "milestone_params", "new", "milestone", "execute", "js", "valid?", "project_milestone_path", "html", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project", "current_user", "merge_request_params", "new", "execute", "valid?", "target_project", "namespace", "becomes", "target_project", "redirect_to", "define_edit_vars", "html", "to_json", "json", "respond_to", "request", "format", "html?", "define_edit_vars", "render_conflict_response", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["source_project", "target_project", "target_project", "repository", "branch_names"]
CALLS: ["label_params", "new", "execute", "valid?", "project_labels_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["hook", "hook_params", "update_attributes", "flash", "project_settings_integrations_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project_group_links", "params", "find", "group_link_params", "update_attributes"]
CALLS: ["params", "require", "permit"]
CALLS: ["environment_params", "update", "project", "project_environment_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["deploy_key", "update_params", "update_attributes", "flash", "redirect_to_repository_settings", "namespace", "becomes", "local_assigns", "fetch", "local_assigns", "fetch", "deploy_keys_project_for", "form_errors", "label", "text_field", "new_record?", "label", "help_page_path", "text_area", "label", "text_field", "present?", "check_box", "label", "fields_for", "submit", "project_settings_repository_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project", "current_user", "update_params", "new", "cluster", "execute", "cluster", "valid?", "json", "flash", "_", "project", "cluster", "project_cluster_path", "html", "respond_to", "json", "html", "respond_to", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["params", "present?", "params", "after_edit_path", "project_blob_path", "create_commit", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["current_user", "id", "new", "params", "find_by", "target_project", "diffs_project_merge_request_path", "hexdigest", "join", "project_blob_path"]
CALLS: ["current_user", "user_params", "merge", "new", "execute", "redirect_back_or_default", "html", "json", "redirect_back_or_default", "html", "json", "respond_to", "header_title", "profile_path"]
CALLS: ["current_user", "preferences_params", "user", "merge", "new", "execute", "flash", "flash", "flash", "message", "profile_preferences_path", "html", "js", "respond_to", "header_title", "profile_path"]
CALLS: ["params", "require", "permit"]
CALLS: ["user_params", "to_s", "include?", "select", "password_automatically_set", "user_params", "valid_password?", "edit_profile_password_path", "current_user", "merge", "new", "execute", "flash", "new_user_session_path", "reload", "fluid_layout", "page_title", "password_automatically_set?", "profile_password_path", "form_errors", "password_automatically_set?", "label", "password_field", "label", "password_field", "label", "password_field", "submit", "password_automatically_set?", "reset_profile_password_path", "header_title", "profile_path"]
CALLS: ["current_user", "user_params", "current_user", "merge", "new", "execute", "flash", "flash", "profile_notifications_path", "redirect_back_or_default", "header_title", "profile_path"]
CALLS: ["valid?", "password_automatically_set?", "update_attribute"]
CALLS: ["current_user", "notification_settings", "params", "find", "notification_setting_params", "update_attributes", "render_response"]
CALLS: ["current_user", "group_params", "new", "execute", "edit_group_path", "name", "restore_path!", "form_errors", "group_icon", "avatar?", "_", "_", "file_field", "_", "avatar?", "_", "to_param", "group_avatar_path", "_", "visibility_level", "can_change_group_visibility_level?", "visibility_level", "local_assigns", "fetch", "icon", "help_page_path", "label", "can_change_visibility_level", "form_model", "values", "form_model", "disallowed_visibility_level?", "restricted_visibility_levels", "include?", "form", "model_method", "form", "model_method", "selected_level", "radio_button", "visibility_level_icon", "visibility_level_label", "form_model", "visibility_level_description", "restricted_visibility_level_description", "form_model", "disallowed_visibility_level_description", "label", "each", "form_model", "render", "visibility_level_icon", "visibility_level_label", "form_model", "visibility_level_description", "form", "form", "check_box", "label", "s_", "can_change_share_with_group_lock?", "check_box", "name", "group_path", "s_", "html_safe", "share_with_group_lock_help_text", "label", "current_user", "admin?", "label", "lfs_enabled?", "check_box", "icon", "help_page_path", "label", "current_user", "label", "check_box", "icon", "help_page_path", "label", "text_field", "submit", "remove_group_message", "form_tag", "supports_nested_groups?", "transfer_group_path", "parent_group_options", "dropdown_tag", "submit", "path", "name", "page_description", "description", "header_title", "group_title", "current_user"]
CALLS: ["current_user", "owned_groups", "sort_by", "id", "human_name", "map", "id", "delete_if", "to_json"]
CALLS: ["parent", "share_with_group_lock?", "default_help", "share_with_group_lock?", "current_user", "parent", "can?", "ancestor_locked_but_you_can_override", "ancestor_locked_so_ask_the_owner", "ancestor_locked_and_has_been_overridden"]
CALLS: ["s_", "html_safe", "ancestor_group"]
CALLS: ["oldest_consecutively_locked_ancestor", "current_user", "can?", "name", "group_path", "name"]
CALLS: ["ancestors", "has_parent?", "parent", "share_with_group_lock?", "find"]
CALLS: ["s_", "html_safe", "ancestor_group", "remove_the_share_with_group_lock_from_ancestor"]
CALLS: ["oldest_consecutively_locked_ancestor", "s_", "name", "current_user", "can?", "edit_group_path"]
CALLS: ["s_", "html_safe", "ancestor_group", "remove_the_share_with_group_lock_from_ancestor"]
CALLS: ["s_"]
CALLS: ["_", "name"]
CALLS: ["current_user", "can?"]
CALLS: ["key?", "key?", "merge", "dropdown_toggle", "key?", "key?", "dropdown_title", "key?", "dropdown_filter", "key?", "key?", "capture", "content_tag", "capture", "content_tag", "dropdown_loading", "html_safe", "content_tag", "html_safe"]
CALLS: ["group_variables_params", "update", "render_group_variables", "json", "respond_to", "render_error", "json", "respond_to"]
CALLS: ["params", "variable_params_attributes", "permit"]
CALLS: ["new", "variables", "represent"]
CALLS: ["legacy_group_milestone?", "milestone_params", "select", "milestones", "milestone_params", "parent", "current_user", "new", "execute", "each", "milestone_path", "name", "page_description", "description", "header_title", "group_title", "current_user"]
CALLS: ["label_params", "new", "execute", "valid?", "redirect_back_or_group_labels_path", "name", "page_description", "description", "header_title", "group_title", "current_user"]
CALLS: ["previous_labels_path"]
CALLS: ["session", "fallback_path", "fetch"]
CALLS: ["group_labels_path"]
CALLS: ["project", "current_user", "note_params", "new", "note", "execute", "is_a?", "current_user", "new", "execute", "note_json", "json", "redirect_back_or_default", "html", "respond_to"]
CALLS: ["params", "root_params_key", "require", "permit", "membershipable", "members_and_requesters", "params", "find", "current_user", "new", "execute", "current_user", "present", "js", "respond_to"]
CALLS: ["membershipable", "membershipable"]
CALLS: ["update_service", "issuable", "execute", "recaptcha_check_if_spammable", "html", "render_entity_json", "recaptcha_check_if_spammable", "json", "respond_to", "render_conflict_response"]
CALLS: ["issue_params", "spammable_params", "merge", "project", "current_user", "new"]
CALLS: []
CALLS: ["valid?", "serializer", "represent", "errors", "full_messages"]
CALLS: ["issuable", "is_a?", "recaptcha_check_with_fallback"]
CALLS: ["board", "lists", "movable", "params", "find", "board_parent", "current_user", "move_params", "new", "execute"]
CALLS: ["params", "require", "permit"]
CALLS: ["params", "permit"]
CALLS: ["board_parent", "current_user", "move_params", "new", "issue", "execute"]
CALLS: ["user_params", "dup", "params", "present?", "params", "params", "changing_own_password?", "now", "merge!", "current_user", "user", "merge", "new", "skip_reconfirmation!", "execute", "user", "html", "json", "user", "username", "params", "name", "form_errors", "label", "text_field", "label", "text_field", "label", "text_field", "new_record?", "label", "label", "object", "force_random_password", "password_field", "label", "object", "force_random_password", "password_field", "label", "number_field", "label", "check_box", "label", "current_user", "radio_button", "radio_button", "label", "check_box", "label", "file_field", "label", "text_field", "label", "text_field", "label", "text_field", "label", "text_field", "new_record?", "submit", "admin_users_path", "submit", "admin_user_path", "html", "json", "respond_to", "admin_root_path"]
CALLS: ["user", "current_user"]
CALLS: ["service", "service_params", "update_attributes", "service", "active?", "service", "id", "perform_async", "admin_application_settings_services_path", "admin_root_path"]
CALLS: ["new", "runner_params", "update", "js", "admin_runner_path", "html", "respond_to", "assign_builds_and_projects", "shared?", "_", "admin_runners_path", "id", "shared?", "admin_runner_path", "runner", "runner_form_url", "runner", "form_errors", "check_box", "check_box", "check_box", "check_box", "text_field", "text_field", "text_field", "text_field", "runner", "tag_list", "sort", "join", "text_field", "submit", "projects", "any?", "runner_projects", "project", "full_name", "namespace", "becomes", "each", "admin_runner_path", "params", "full_name", "namespace", "becomes", "runner_projects", "new", "id", "hidden_field", "submit", "each", "project", "project_job_path", "current_user", "detailed_status", "detailed_status", "full_name", "pipeline", "pipeline_path", "pipeline", "short_sha", "finished_at", "each", "admin_root_path"]
CALLS: ["stage", "request", "current_user", "detailed_status"]
CALLS: ["pipeline", "request", "current_user", "detailed_status"]
CALLS: ["group", "request", "current_user", "detailed_status"]
CALLS: ["build", "request", "current_user", "detailed_status"]
CALLS: ["subject", "user", "detailed_status"]
CALLS: ["new", "fabricate!"]
CALLS: ["new", "fabricate!"]
CALLS: ["new", "fabricate!"]
CALLS: ["new", "fabricate!"]
CALLS: ["jobs", "one?", "jobs", "first", "detailed_status", "new", "fabricate!"]
CALLS: ["new", "fabricate!"]
CALLS: ["runner", "builds", "order", "first", "params", "present?", "params", "search", "all", "runner", "projects", "any?", "where", "runner", "projects", "select", "not", "params", "page", "per"]
CALLS: ["label_params", "new", "execute", "valid?", "admin_labels_path", "admin_root_path"]
CALLS: ["identity_params", "update_attributes", "new", "execute", "admin_user_identities_path", "admin_root_path"]
CALLS: ["hook", "hook_params", "update_attributes", "flash", "admin_hooks_path", "admin_root_path"]
CALLS: ["group_params", "update_attributes", "name", "visibility_level", "form_errors", "label", "_", "_", "file_field", "_", "visibility_level", "can_change_group_visibility_level?", "visibility_level", "local_assigns", "fetch", "icon", "help_page_path", "label", "can_change_visibility_level", "form_model", "values", "form_model", "disallowed_visibility_level?", "restricted_visibility_levels", "include?", "form", "model_method", "form", "model_method", "selected_level", "radio_button", "visibility_level_icon", "visibility_level_label", "form_model", "visibility_level_description", "restricted_visibility_level_description", "form_model", "disallowed_visibility_level_description", "label", "each", "form_model", "render", "visibility_level_icon", "visibility_level_label", "form_model", "visibility_level_description", "form", "form", "check_box", "label", "current_user", "admin?", "label", "lfs_enabled?", "check_box", "icon", "help_page_path", "label", "current_user", "label", "check_box", "icon", "help_page_path", "label", "text_field", "new_record?", "submit", "admin_groups_path", "submit", "admin_group_path", "admin_root_path"]
CALLS: ["deploy_key", "update_params", "update_attributes", "flash", "admin_deploy_keys_path", "local_assigns", "fetch", "local_assigns", "fetch", "deploy_keys_project_for", "form_errors", "label", "text_field", "new_record?", "label", "help_page_path", "text_area", "label", "text_field", "present?", "check_box", "label", "fields_for", "submit", "admin_deploy_keys_path", "admin_root_path"]
CALLS: ["broadcast_message_params", "update", "admin_broadcast_messages_path", "admin_root_path"]
CALLS: ["application_params", "update", "admin_application_path", "admin_root_path"]
CALLS: ["current_user", "application_setting_params", "new", "execute", "admin_application_settings_path", "admin_root_path"]
CALLS: ["params", "params", "key?", "params", "delete", "delete", "params", "button_based_providers", "map", "params", "delete", "params", "delete", "params", "params", "delete", "params", "require", "visible_application_setting_attributes", "permit"]
CALLS: ["auth_providers", "form_based_provider?", "reject"]
CALLS: ["to_s", "any?"]
CALLS: ["providers"]
CALLS: ["visible_attributes"]
CALLS: []
CALLS: ["appearance_params", "update", "admin_appearances_path", "admin_appearances_path", "form_errors", "label", "header_logo?", "header_logo_url", "persisted?", "header_logos_admin_appearances_path", "hidden_field", "file_field", "label", "text_field", "label", "text_area", "label", "logo?", "logo_url", "persisted?", "logo_admin_appearances_path", "hidden_field", "file_field", "label", "text_area", "submit", "persisted?", "preview_sign_in_admin_appearances_path", "new_project_path", "updated_at", "admin_root_path"]
CALLS: ["current_user", "can_be_merged_by?", "access_denied!", "merge!", "merge_error", "merge_error", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["register_failure", "log_error", "allow_failure", "latest?", "description", "drop", "delete_artifact!"]
CALLS: []
CALLS: ["error", "merge"]
CALLS: []
CALLS: []
CALLS: ["akismet_enabled"]
CALLS: ["akismet_api_key", "config", "gitlab", "url", "new"]
CALLS: ["title", "description", "join"]
CALLS: ["snippet", "file_name"]
CALLS: ["client_url", "parse", "username", "password", "join", "to_s", "path", "chomp", "scheme"]
CALLS: ["group", "group", "namespace", "try"]
CALLS: []
CALLS: ["class", "application_name"]
CALLS: ["to_s", "demodulize", "underscore"]
CALLS: ["default_options", "deep_symbolize_keys"]
CALLS: ["start_date", "current_user"]
CALLS: ["start_date", "first", "start_date", "all?", "first", "start_date"]
CALLS: ["days", "ago", "days", "ago", "days", "ago"]
CALLS: ["valid?", "errors", "wiki", "error_message", "add", "wiki", "page_title_and_dir", "wiki", "wiki", "page", "set_attributes", "errors", "blank?"]
CALLS: ["attributes", "url_path", "attributes", "title", "attributes", "format"]
CALLS: []
CALLS: []
CALLS: []
CALLS: ["errors", "any?", "errors", "count", "pluralize", "content_tag", "errors", "full_messages", "content_tag", "map", "join", "html_safe", "content_tag", "content_tag"]
CALLS: ["new", "snippets_path", "page_specific_javascript_tag", "url", "form_errors", "label", "text_field", "visibility_level", "visibility_level", "local_assigns", "fetch", "icon", "help_page_path", "label", "can_change_visibility_level", "form_model", "values", "form_model", "disallowed_visibility_level?", "restricted_visibility_levels", "include?", "form", "model_method", "form", "model_method", "selected_level", "radio_button", "visibility_level_icon", "visibility_level_label", "form_model", "visibility_level_description", "restricted_visibility_level_description", "form_model", "disallowed_visibility_level_description", "label", "each", "form_model", "render", "visibility_level_icon", "visibility_level_label", "form_model", "visibility_level_description", "label", "text_field", "content", "hidden_field", "params", "params", "each_with_index", "new_record?", "submit", "submit", "project_id", "project_snippets_path", "snippets_path", "snippets_path", "current_user"]
CALLS: ["asset_path"]
CALLS: ["set_minimum_password_length", "available_servers"]
CALLS: ["new_user_session_path", "redirect_to"]
CALLS: ["params", "params", "find_by", "current_user", "can?", "access_denied!", "id", "new", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["snippets", "build", "project_snippets_path", "project_snippets_path", "page_specific_javascript_tag", "url", "form_errors", "label", "text_field", "visibility_level", "visibility_level", "local_assigns", "fetch", "icon", "help_page_path", "label", "can_change_visibility_level", "form_model", "values", "form_model", "disallowed_visibility_level?", "restricted_visibility_levels", "include?", "form", "model_method", "form", "model_method", "selected_level", "radio_button", "visibility_level_icon", "visibility_level_label", "form_model", "visibility_level_description", "restricted_visibility_level_description", "form_model", "disallowed_visibility_level_description", "label", "each", "form_model", "render", "visibility_level_icon", "visibility_level_label", "form_model", "visibility_level_description", "label", "text_field", "content", "hidden_field", "params", "params", "each_with_index", "new_record?", "submit", "submit", "project_id", "project_snippets_path", "snippets_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project", "pipelines", "default_branch", "new", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project", "pipeline_schedules", "new", "namespace", "namespace_project_pipeline_schedules_path", "_", "project_pipelines_path", "add_to_breadcrumbs", "_", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["pages_domains", "new", "project_pages_path", "namespace", "becomes", "errors", "any?", "errors", "full_messages", "each", "label", "persisted?", "text_field", "config", "pages", "external_https", "label", "text_area", "label", "text_area", "submit", "_", "project_pages_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["milestones", "new", "respond_with", "container_class", "namespace", "becomes", "form_errors", "label", "text_field", "label", "preview_markdown_path", "preview_markdown_path", "label", "text_field", "label", "text_field", "new_record?", "submit", "project_milestones_path", "submit", "project_milestone_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["define_new_vars", "allow_n_plus_1_calls", "can_be_created", "params", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["custom_icon", "empty?", "config", "mattermost", "host", "config", "mattermost", "host", "project_mattermost_path", "one?", "one?", "first", "mattermost_teams_options", "options_for_select", "one?", "select", "one?", "hidden_field", "one?", "config", "mattermost", "host", "icon", "path", "text_field", "path", "full_path", "icon", "edit_project_service_path", "submit", "form_for", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["map"]
CALLS: ["labels", "params", "find"]
CALLS: ["labels", "new", "container_class", "project_labels_path", "project_labels_path", "url", "form_errors", "label", "text_field", "label", "text_field", "label", "text_field", "suggested_colors", "each", "persisted?", "submit", "submit", "back_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: []
CALLS: ["params", "new", "issue_params", "params", "params", "merge", "project", "current_user", "new", "execute", "merge_request_to_resolve_discussions_of", "params", "discussions_to_resolve", "first", "respond_with", "namespace", "becomes", "local_assigns", "fetch", "local_assigns", "issuable", "form_errors", "issuable", "class", "model_name", "human", "downcase", "namespace", "becomes", "issuable", "polymorphic_path", "label", "issuable", "issuable", "detect", "issuable", "issuable", "respond_to?", "check_box", "label", "issuable", "local_assigns", "fetch", "is_a?", "closed_without_fork?", "current_user", "can_remove_source_branch?", "current_user", "can_remove_source_branch?", "force_remove_source_branch?", "local_assigns", "fetch", "local_assigns", "fetch", "is_a?", "for_fork?", "current_user", "source_project", "can?", "_", "current_user", "can_allow_maintainer_to_push?", "check_box", "_", "help_page_path", "allow_maintainer_push_unavailable_reason", "label", "icon", "current_user", "discussions_can_be_resolved_by?", "iid", "id", "link_to_discussions_to_resolve", "link_to_discussions_to_resolve", "is_a?", "new_record?", "new_record?", "namespace", "becomes", "class", "polymorphic_path", "current_user", "to_ability_name", "can?", "namespace", "becomes", "polymorphic_path", "human_class_name", "namespace", "becomes", "polymorphic_path", "new_record?", "class", "model_name", "human", "downcase", "submit", "submit", "persisted?", "project", "empty_repo?", "project", "present", "contribution_guide_path", "link_to", "hidden_field", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["project", "repository", "contribution_guide", "project", "project", "default_branch", "name", "tree_join", "project_blob_path"]
CALLS: ["file_on_head"]
CALLS: ["join"]
CALLS: ["discussions_to_be_resolved", "can_resolve?", "all?"]
CALLS: ["current_user", "can_allow_maintainer_to_push?", "target_project", "visibility_level", "source_project", "visibility_level", "min", "_", "source_project", "source_branch", "protected?", "_"]
CALLS: ["to_reference", "first_note", "id", "first_note", "build", "project", "project_merge_request_path"]
CALLS: ["import_failed?", "project_import_path", "local_assigns", "fetch", "_", "label", "text_field", "_", "html_safe", "_", "html_safe", "import_will_timeout_message", "import_svn_message", "submit", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["import_status"]
CALLS: ["_", "help_page_path", "_", "html_safe"]
CALLS: ["config", "gitlab_shell", "git_timeout", "time_interval_in_words", "_"]
CALLS: ["to_i", "pluralize", "pluralize", "pluralize"]
CALLS: ["current_user", "manageable_namespaces", "namespace", "delete", "present?", "each", "icon", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["namespace", "manageable_groups"]
CALLS: ["owned_groups", "select", "masters_groups", "select", "new", "to_sql", "where", "new", "base_and_descendants"]
CALLS: ["project", "environments", "new", "container_class", "help_page_path", "namespace", "becomes", "form_errors", "label", "text_field", "label", "url_field", "submit", "project_environments_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["redirect_to_repository_settings", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["_", "s_", "s_", "_", "help_page_path", "link_to", "s_", "html_safe", "s_", "s_", "s_", "namespace", "gcp_new_namespace_project_clusters_path", "s_", "s_", "namespace", "user_new_namespace_project_clusters_path", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["new", "build_platform_kubernetes", "tap", "_", "s_", "s_", "_", "help_page_path", "link_to", "s_", "html_safe", "s_", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["new", "build_provider_gcp", "tap", "_", "s_", "s_", "_", "help_page_path", "link_to", "s_", "html_safe", "s_", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["empty?", "commit", "full_name", "page_description", "description", "header_title", "project_title", "current_user"]
CALLS: ["profile_password_path", "form_errors", "password_automatically_set?", "label", "password_field", "label", "password_field", "label", "password_field", "submit", "header_title", "profile_path"]
CALLS: ["profile_chat_names_path", "token", "deny_profile_chat_names_path", "token", "header_title", "profile_path"]
CALLS: ["pre_auth", "authorizable?", "skip_authorization?", "matching_token?", "authorization", "authorize", "session", "delete", "redirect_uri", "client", "name", "redirect_uri", "current_user", "admin?", "icon", "client", "name", "client", "name", "redirect_uri", "client", "application", "owner", "name", "user_path", "scopes", "scopes", "each", "oauth_authorization_path", "client", "uid", "redirect_uri", "state", "response_type", "scope", "nonce", "oauth_authorization_path", "client", "uid", "redirect_uri", "state", "response_type", "scope", "nonce", "error_response", "body", "header_title", "profile_path"]
CALLS: []
CALLS: ["project_params", "find", "current_user", "can?", "render_404", "project_params"]
CALLS: ["logged_in_with_provider?", "go_to_provider_for_permissions", "session", "access_token_key", "status_import_url", "has_ci_cd_only_params?", "_", "_", "root_path", "import_github_title", "github_import_configured?", "import_github_authorize_message", "_", "params", "status_import_github_path", "import_github_personal_access_token_message", "personal_access_token_import_github_path", "_", "_", "github_import_configured?", "import_configure_github_admin_message"]
CALLS: ["help_page_path", "current_user", "admin?", "_", "html_safe", "_", "html_safe"]
CALLS: ["_", "github_import_configured?", "_", "html_safe", "_", "html_safe"]
CALLS: ["_"]
CALLS: ["current_user", "identities", "provider", "exists?"]
CALLS: ["provider", "extra_import_params", "public_send"]
CALLS: []
CALLS: ["client", "callback_import_url", "authorize_url"]
CALLS: ["provider", "extra_import_params", "public_send"]
CALLS: []
CALLS: ["enabled?"]
CALLS: ["session", "access_token_key", "present?", "session", "host_key", "present?", "status_import_url", "root_path", "custom_icon", "personal_access_token_import_gitea_path"]
CALLS: ["root_path", "callback_import_fogbugz_path"]
CALLS: ["params", "permit", "new", "dashboard_groups_path", "dashboard_groups_path", "form_errors", "label", "_", "_", "file_field", "_", "default_group_visibility", "default_group_visibility", "local_assigns", "fetch", "icon", "help_page_path", "label", "can_change_visibility_level", "form_model", "values", "form_model", "disallowed_visibility_level?", "restricted_visibility_levels", "include?", "form", "model_method", "form", "model_method", "selected_level", "radio_button", "visibility_level_icon", "visibility_level_label", "form_model", "visibility_level_description", "restricted_visibility_level_description", "form_model", "disallowed_visibility_level_description", "label", "each", "form_model", "render", "visibility_level_icon", "visibility_level_label", "form_model", "visibility_level_description", "config", "mattermost", "enabled", "custom_icon", "label", "check_box", "label", "mattermost", "host", "submit", "dashboard_groups_path", "name", "page_description", "description", "header_title", "group_title", "current_user"]
CALLS: ["new", "form_errors", "label", "text_field", "label", "group_preview_markdown_path", "group_preview_markdown_path", "label", "text_field", "label", "text_field", "new_record?", "submit", "group_milestones_path", "submit", "group_milestone_path", "name", "page_description", "description", "header_title", "group_title", "current_user"]
CALLS: ["labels", "params", "find"]
CALLS: ["labels", "new", "previous_labels_path", "group_labels_path", "url", "form_errors", "label", "text_field", "label", "text_field", "label", "text_field", "suggested_colors", "each", "persisted?", "submit", "submit", "back_path", "name", "page_description", "description", "header_title", "group_title", "current_user"]
CALLS: ["new", "form_errors", "label", "text_field", "label", "text_field", "label", "text_field", "new_record?", "label", "label", "object", "force_random_password", "password_field", "label", "object", "force_random_password", "password_field", "label", "number_field", "label", "check_box", "label", "current_user", "radio_button", "radio_button", "label", "check_box", "label", "file_field", "label", "text_field", "label", "text_field", "label", "text_field", "label", "text_field", "new_record?", "submit", "admin_users_path", "submit", "admin_user_path", "admin_root_path"]
CALLS: ["new", "form_errors", "label", "text_field", "label", "text_field", "label", "text_field", "suggested_colors", "each", "submit", "admin_labels_path", "admin_root_path"]
CALLS: ["new", "form_errors", "label", "providers", "label_for", "map", "select", "label", "text_field", "submit", "admin_root_path"]
CALLS: ["new", "default_group_visibility", "form_errors", "label", "_", "_", "file_field", "_", "visibility_level", "can_change_group_visibility_level?", "visibility_level", "local_assigns", "fetch", "icon", "help_page_path", "label", "can_change_visibility_level", "form_model", "values", "form_model", "disallowed_visibility_level?", "restricted_visibility_levels", "include?", "form", "model_method", "form", "model_method", "selected_level", "radio_button", "visibility_level_icon", "visibility_level_label", "form_model", "visibility_level_description", "restricted_visibility_level_description", "form_model", "disallowed_visibility_level_description", "label", "each", "form_model", "render", "visibility_level_icon", "visibility_level_label", "form_model", "visibility_level_description", "form", "form", "check_box", "label", "current_user", "admin?", "label", "lfs_enabled?", "check_box", "icon", "help_page_path", "label", "current_user", "label", "check_box", "icon", "help_page_path", "label", "text_field", "new_record?", "submit", "admin_groups_path", "submit", "admin_group_path", "admin_root_path"]
CALLS: ["deploy_keys", "new", "local_assigns", "fetch", "local_assigns", "fetch", "deploy_keys_project_for", "form_errors", "label", "text_field", "new_record?", "label", "help_page_path", "text_area", "label", "text_field", "present?", "check_box", "label", "fields_for", "submit", "admin_deploy_keys_path", "admin_root_path"]
CALLS: ["new", "admin_applications_path", "application", "form_errors", "label", "text_field", "application", "label", "text_area", "application", "configuration", "native_redirect_uri", "configuration", "native_redirect_uri", "label", "check_box", "label", "application", "submit", "admin_applications_path", "admin_root_path"]
CALLS: ["params", "require", "allowed_appearance_params", "permit"]
CALLS: []
CALLS: ["new", "user_id", "id", "params", "fetch", "form_errors", "hidden_field", "label", "user", "name", "user", "username", "label", "sanitize", "text_area", "submit"]
END
THE SIZE OF TOUCHED METHODS: 6856 ["create", "new", "appearance_params", "new", "new", "new", "new", "new", "new", "new", "label", "new", "new", "new", "new", "new", "new", "new", "new", "new", "new", "new", "new", "new", "new", "new", "new", "new", "new", "new", "new", "label", "new", "new", "new", "new", "new", "new", "new", "new", "new", "new", "new", "form_errors", "persisted?", "persisted?", "persisted?", "save", "submit", "options", "options", "name", "name", "owner", "options", "name", "text", "akismet_client", "akismet_enabled?", "error", "error", "error", "error", "error", "error", "error", "merge", "merge", "merge", "author_id", "created_at", "version", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "update", "target_branch", "update", "raw_repository", "with_cache_hooks", "update", "update", "update", "update", "project", "project", "filter_params", "project", "filter_params", "filter_params", "project", "project", "project", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "project", "execute", "execute", "label_ids", "project", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "project", "execute", "execute", "execute_hooks", "execute_hooks", "create_new_cross_references!", "project", "to_a", "project", "execute", "execute", "update_project_counter_caches", "project", "assignees", "project", "update_project_counter_caches", "project", "execute_hooks", "update_project_counter_caches", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "invalidate_cache_counts", "project", "project", "current_user", "project", "project", "project", "project", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "filter_params", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "filter_params", "process_label_ids", "before_update", "after_update", "labels_changing?", "has_title_or_description_changed?", "change_state", "change_subscription", "change_todo", "toggle_award", "associations_before_update", "invalidate_cache_counts", "handle_changes", "execute_hooks", "update_project_counter_caches?", "execute_hooks", "update_project_counter_caches?", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "before_update", "handle_changes", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute_hooks", "filter_params", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "handle_changes", "after_update", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "project", "project", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "project", "execute", "execute_hooks", "execute", "execute", "execute", "project", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "execute", "assign_attributes", "execute", "execute", "execute", "execute_hooks", "execute", "execute", "execute", "execute", "uploader", "move", "move", "update_markdown", "uploader", "schedule_background_upload", "schedule_background_upload", "record_upload", "model", "file", "file", "model", "exists?", "exists?", "upload_path", "build_upload", "exists?", "build_upload", "build_upload", "exists?", "upload_path", "uploads", "build_upload", "size", "size", "to_s", "size", "to_s", "size", "size", "size", "to_s", "to_s", "to_s", "id", "success?", "id", "id", "id", "id", "success?", "message", "message", "message", "message", "message", "message", "message", "message", "id", "success?", "success?", "message", "title", "action", "title", "title", "title", "title", "title", "title", "title", "title", "title", "user_combined_name", "project_link", "project_link", "project_link", "project_link", "project_link", "project_link", "wiki_page_link", "title", "title", "title", "title", "title", "title", "title", "project_link", "title", "title", "title", "title", "title", "title", "title", "title", "title", "title", "title", "title", "title", "title", "title", "title", "title", "title", "title", "title", "action", "title", "action", "create?", "remove?", "revision_after", "revision_before", "environment_options", "job", "job", "builds", "find", "find", "builds", "pipeline", "pipeline", "pipeline", "actual_head_pipeline", "diff_head_sha", "sha", "sha", "build", "build", "build", "build", "build", "group", "group", "group", "group", "group", "group", "group", "group", "can?", "find_by", "find_by", "can?", "can?", "can?", "can?", "allowed?", "policy_for", "user_scope", "user_scope", "active?", "active?", "active?", "active?", "active?", "active?", "active?", "active?", "active?", "active?", "expired?", "expired?", "expired?", "expired?", "expired?", "domain", "find_by!", "find_by!", "skip_cross_project_check", "x509", "due_date", "current", "current", "current", "expires?", "expires_at", "expires_at", "empty?", "current_and_future_messages", "cache_expires_in", "cache", "empty?", "cache", "delete", "wiki", "wiki", "delete_page", "path", "path", "path", "commit_details", "update_project_activity", "touch", "touch", "touch", "touch_noteable", "noteable", "for_commit?", "noteable", "for_commit?", "noteable", "for_commit?", "scope", "scope", "scope", "scope", "process_scope", "process_registry_access", "process_repository_access", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "ensure_container_repository!", "can_access?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "valid?", "container_registry_enabled?", "build_can_pull?", "user_can_admin?", "user_can_pull?", "deploy_token_can_pull?", "build_can_push?", "user_can_push?", "has_authentication_ability?", "can_user?", "has_authentication_ability?", "has_access_to?", "has_access_to?", "deploy_keys_project_for", "enabled", "registry", "enabled", "enabled", "config", "registry", "full_access_token", "token_expire_at", "create_from_path!", "build_from_path", "target_type", "project_id", "project_id", "project_id", "username", "project_url", "project_url", "new_issue_url", "project_url", "issues_url", "new_issue_url", "url", "web_url", "web_url", "web_url", "url_helpers", "priority", "priority", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "index", "render_404", "render_404", "render_404", "page_description", "header_title", "project_title", "description", "full_name", "description", "description", "description", "description", "description", "description", "description", "description", "description", "description", "description", "description", "description", "description", "description", "description", "description", "description", "description", "description", "description", "description", "description", "description", "description", "description", "description", "description", "description", "description", "description", "description", "build_full_name", "update_route", "prepare_route", "read_only?", "synced?", "sync_profile_from_provider?", "provider", "provider", "provider", "provider", "build_full_path", "parent", "parent", "parent", "parent", "parent", "full_path", "parent", "full_path", "full_path", "parent", "uncached_full_path", "full_path_key", "commit_by", "commit_by", "find_commit", "repository", "repository", "repository", "repository", "repository", "repository", "repository", "repository", "disk_path", "disk_path", "disk_path", "base_dir", "disk_hash", "base_dir", "base_dir", "base_dir", "disk_hash", "base_dir", "base_dir", "model_path_segment", "model_path_segment", "model_path_segment", "hashed_storage?", "hashed_storage?", "hexdigest", "hexdigest", "hexdigest", "hexdigest", "hexdigest", "object_store", "object_store", "store_serialization_column", "serialization_column", "wiki?", "parse_repo_path", "parse", "group?", "group?", "human_name", "human_name", "full_title", "project_path", "project_icon", "simple_sanitize", "breadcrumb_list_item", "group_title", "avatar_url", "avatar_url", "avatar_url", "content_tag", "avatar_in_git", "avatar", "file_on_head", "tree", "blobs", "head_commit", "head_commit", "head_commit", "head_tree", "commit", "commit", "commit", "commit", "commit", "commit", "commit", "commit", "commit", "commit", "commit", "commit", "root_ref", "commit", "commit", "commit", "merge_request", "merge_request", "merge_request", "merge_request", "merge_request", "merge_commit_message", "log_info", "log_info", "merge_request", "merge_request", "merge_request", "log_info", "source", "merge_request_info", "to_reference", "to_reference", "to_reference", "to_reference", "to_reference", "to_reference", "to_reference", "to_reference", "to_reference", "to_reference", "to_reference", "to_reference", "to_reference", "reference_prefix", "reference_prefix", "reference_prefix", "reference_prefix", "reference_prefix", "reference_prefix", "reference_prefix", "reference_prefix", "reference_prefix", "reference_prefix", "reference_prefix", "cross_namespace_reference?", "cross_project_reference?", "milestone_format_reference", "group_milestone?", "iid", "group_milestone?", "label_format_reference", "reference_link_text", "reference_link_text", "reference_link_text", "reference_link_text", "reference_link_text", "short_id", "commit_reference", "merge_request_params", "merge_request_params", "issue", "ref", "issue", "issue", "ref", "issue", "branch_name", "issue", "issue", "branch_name", "ref", "ref", "ref", "default_branch", "default_branch", "to_branch_name", "confidential?", "get_issue", "issue_iid", "target_project", "source_branch", "external_issue_reference_pattern", "external_issue_tracker", "services", "cache_has_external_issue_tracker", "external_issue_trackers", "active", "active", "active", "active", "active", "active", "active", "issue_trackers", "active", "without_defaults", "active", "non_internal", "internal_attributes", "order", "left_join_users", "reference_pattern", "reference_pattern", "reference_pattern", "reference_pattern", "reference_pattern", "reference_pattern", "reference_pattern", "reference_pattern", "reference_pattern", "reference_pattern", "reference_pattern", "issues_enabled?", "reference_pattern", "reference_pattern", "reference_pattern", "reference_pattern", "union", "union", "find_union", "with_route", "ref_name", "target", "target", "issue?", "target", "target", "target", "note", "note", "note", "note?", "snippet", "snippet", "snippet", "notes", "notes", "notes", "for_commit_id", "snippets", "view_to_html_string", "load_snippets", "user", "user", "user", "user", "user", "user", "user", "user", "user", "user", "ghost", "unique_internal", "create_unique_internal", "cancel", "cancel", "string", "find_by_username", "cancel", "cancel_merge_when_pipeline_succeeds", "success", "open?", "reset_merge_when_pipeline_succeeds", "success", "success", "success", "success", "success", "reset_merge_when_pipeline_succeeds", "success", "cancel_merge_when_pipeline_succeeds", "success", "success", "create_note", "create_note", "create_note", "create_note", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "create", "metadata?", "create", "create", "spammable", "request", "request", "access_levels", "access_levels", "access_levels", "verify_params!", "ce_style_access_level", "type", "type", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "after_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "handle_quick_actions_on_create", "create_issuable", "after_create", "before_create", "before_create", "before_create", "before_create", "after_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "after_create", "handle_quick_actions_on_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "before_create", "handle_wip_event", "wipless_title", "wip_title", "cache_merge_request_closes_issues!", "todo_service", "update_merge_requests_head_pipeline", "new_merge_request", "new_merge_request", "new_issuable", "create_assignment_todo", "create_mention_todos", "create_todos", "attributes_for_todo", "filter_mentioned_users", "filter_directly_addressed_users", "directly_addressed_users", "filter_todo_users", "reject_users_without_access", "to_ability_name", "for_issue?", "for_merge_request?", "to_ability_name", "select_users", "for_personal_snippet?", "all_references", "author", "author", "author", "each", "skip_project_check?", "extractors", "skip_project_check?", "skip_project_check?", "each", "members", "present", "members", "fetch_members", "attributes", "html_fields", "markdown_fields", "html_field", "keys", "nav_link", "blocked?", "order_id_desc", "blocked?", "internal?", "status", "status", "status", "status", "status", "status", "status", "status", "status", "status", "status", "status", "status", "status", "status_sql", "failed_but_allowed", "exclude_ignored", "created", "running", "pending", "canceled", "skipped", "manual", "pending", "all_state_names", "values", "values", "values", "chart_values_file", "root", "root", "root", "root", "content_values", "specification", "ensure_runner", "gitlab_url", "runner", "create_and_assign_runner", "pipelines", "pipelines", "pipelines", "latest_status_per_commit", "pipelines", "all_pipelines", "represent", "represent", "represent", "represent", "represent", "represent", "represent", "represent", "represent", "count", "cache_key", "uncached_count", "cache_key", "cache_options", "cache_key", "cache_key", "cache_key_name", "cache_key_name", "cache_key_name", "cache_key_name", "raw?", "raw?", "relation_for_count", "relation_for_count", "relation_for_count", "relation_for_count", "merge_requests", "merge_requests", "merge_requests", "merge_requests", "merge_requests", "opened", "merge_requests", "merge_requests", "merge_requests", "merge_requests", "of_milestones", "milestoneish_ids", "milestoneish_ids", "milestones", "milestones", "milestones", "milestones", "milestones", "milestones", "project?", "milestones?", "project?", "project?", "project?", "search_params", "search_params", "group_projects", "sort", "sort", "sort", "sort", "sort", "sort", "sort", "sort", "build_collection", "build_collection", "build_collection", "build_collection", "discussion_id", "discussion_id", "discussion_class", "override_discussion_id", "discussion_class", "discussion_class", "discussion_class", "override_discussion_id", "build_discussion_id", "build_discussion_id", "base_discussion_id", "commit_id", "sort_by_attribute", "sort_by_attribute", "sort_by_attribute", "sort_by_attribute", "sort_by_attribute", "sort_by_attribute", "sort_by_attribute", "sort_by_attribute", "order_by", "order_by", "order_recent_sign_in", "order_oldest_sign_in", "order_recent_sign_in", "order_oldest_sign_in", "order_id_asc", "order_created_desc", "order_created_asc", "order_updated_desc", "order_updated_asc", "order_name_asc", "order_name_desc", "order_name_asc", "order_name_desc", "order_by_labels_priority", "highest_label_priority", "left_join_priorities", "order_due_date_asc", "order_due_date_desc", "order_upvotes_desc", "order_downvotes_desc", "order_milestone_due_desc", "order_milestone_due_asc", "order_due_date_and_labels_priority", "order_labels_priority", "project_foreign_key", "project_foreign_key", "left_joins_milestones", "order_votes_desc", "label_names", "label_names", "labels", "labels", "labels", "labels", "labels", "labels", "labels", "as_json", "as_json", "as_json", "as_json", "enabled_keys", "available_project_keys", "available_public_keys", "are_public", "are_public", "project_deploy_keys", "in_projects", "in_projects", "in_projects", "in_projects", "authorized_projects", "recent", "recent", "recent", "recent", "deploy_keys", "board", "board", "board", "board", "board", "boards", "merge!", "merge_params", "merge_when_pipeline_succeeds_active?", "merge_params", "merge_async", "mergeable?", "check_if_can_be_merged", "check_if_can_be_merged", "mergeable_state?", "should_be_rebased?", "ff_merge_possible?", "ff_merge_must_be_possible?", "target_branch_sha", "ancestor?", "target_branch_head", "target_branch_ref", "work_in_progress?", "work_in_progress?", "mergeable_discussions_state?", "broken?", "mergeable_ci_state?", "branch_missing?", "has_no_commits?", "has_commits?", "merge_request_diff", "commits_count", "commits_count", "source_branch_exists?", "target_branch_exists?", "source_branch_exists?", "target_branch_exists?", "source_project", "source_project", "branch_exists?", "discussions_to_be_resolved?", "discussions_resolvable?", "discussions_resolved?", "resolvable_discussions", "discussions", "discussion_notes", "discussion_notes", "discussions", "resolvable", "discussions", "fresh", "fresh", "fresh", "potentially_resolvable", "inc_relations_for_view", "non_diff_notes", "discussion_serializer", "prepare_notes_for_rendering", "issuable", "cross_reference_not_visible_for?", "issuable", "cross_reference?", "has_referenced_mentionables?", "cross_reference?", "cross_reference_note_prefix", "referenced_mentionables", "issues", "issues", "commits", "commits", "commits", "local_reference", "matches_cross_reference_regex?", "issues", "commits", "commits", "commits", "commits", "issues", "decorate", "decorate", "decorate", "author_name", "commits_between", "load_commits", "from_hash", "to_hash", "to_hash", "diff", "diff", "diff", "binary?", "binary?", "binary?", "apply_diff_view_cookie!", "highlight", "data", "load_all_data!", "data", "data", "load_all_data!", "data", "content", "raw", "raw", "raw", "raw", "raw", "send_upload", "trace", "raw_send_params", "raw_redirect_params", "trace_artifact_file", "trace", "complete?", "complete?", "to_h", "markdown_link", "markdown_name", "secure_url", "secure_url", "filename", "secret", "filename", "filename", "filename", "oid", "generate_secret", "image_or_video?", "image_or_video?", "video?", "image?", "video?", "extension_match?", "extension", "dangerous?", "closed_items_count", "total_items_count", "total_issues_count", "memoize_per_user", "memoized_users", "count_issues_by_state", "issues_visible_to_user", "issues_finder_params", "issues_finder_params", "issues_finder_params", "issues_finder_params", "closed_and_merged", "inspect", "inspect", "inspect", "inspect", "file_storage?", "proxy_download_enabled?", "file_storage?", "storage", "storage", "storage_for", "object_store_enabled?", "object_store_options", "send_artifacts_entry", "convert_line_endings", "sanitized_file_name", "file_name", "default_issues_tracker?", "prepare_commits_for_rendering", "with_pipeline_status", "set_status_for_ref", "issuables_collection", "collection_type", "non_archived", "non_archived", "join_project", "join_project", "join_project", "create_event", "create_event", "create_event", "create_event", "event_service", "event_service", "reopen_mr", "reopen", "merge_request_metrics_service", "reopen_mr", "reopen_resource_email", "build_recipients", "mailer", "notification_recipients", "notification_recipients", "build!", "filter!", "recipients", "build!", "build!", "filter!", "recipients", "build!", "for_project_noteable?", "add_participants", "add_mentions", "add_custom_notifications", "add_project_watchers", "add_subscribed_users", "add_participants", "add_mentions", "add_custom_notifications", "add_project_watchers", "add_subscribed_users", "subscribers", "add_recipients", "add_recipients", "make_recipient", "make_recipient", "acting_user", "custom_action", "acting_user", "custom_action", "acting_user", "custom_action", "model_name", "model_name", "model_name", "model_name", "subscriptions_available", "project_watchers", "project_watchers", "user_ids_notifiable_on", "select_project_members_ids", "select_group_members_ids", "user_ids_with_global_level_watch", "user_ids_notifiable_on", "select_project_members_ids", "select_group_members_ids", "user_ids_with_global_level_watch", "settings_with_global_level_of", "settings_with_global_level_of", "user_ids_with_global_level_custom", "user_ids_with_global_level_custom", "mentioned_users", "users", "participants", "participants", "participants", "participants", "all_participants", "raw_participants", "users_that_can_read_project", "users_that_can_read_personal_snippet", "tabs_json", "milestone_redirect_path", "safe_title", "safe_title", "assignee", "add_labels_subscribers", "add_labels_subscribers", "assignee_id?", "assignee_username?", "metrics", "metrics", "metrics", "metrics", "metrics", "metrics", "prometheus_adapter", "query", "has_metrics?", "prometheus_adapter", "has_metrics?", "prometheus_adapter", "query", "query", "query", "query", "prometheus_adapter", "can_query?", "can_query?", "service_prometheus_adapter", "cluster_prometheus_adapter", "cluster", "cluster", "deployment_platform", "deployment_platform", "cluster", "cluster", "cluster", "find_deployment_platform", "find_cluster_platform_kubernetes", "find_kubernetes_service_integration", "build_cluster_and_deployment_platform", "kubernetes_service_template", "cluster_attributes_from_service_template", "platform_kubernetes_attributes_from_service_template", "find_by_template", "deployment", "deployment", "environment", "environment", "environment", "persisted_environment", "expanded_environment_name", "has_environment?", "simple_variables", "scoped_variables", "variables", "yaml_variables", "user_variables", "secret_group_variables", "secret_project_variables", "predefined_variables", "predefined_variables", "job_variables", "predefined_variables", "user_variables", "predefined_variables", "predefined_variables", "predefined_variables", "deployment_variables", "predefined_variables", "predefined_variables", "predefined_variables", "variables", "actual_namespace", "kubeconfig", "actual_namespace", "kubeconfig", "default_namespace", "default_namespace", "instance_domain", "has_domain?", "full_path_slug", "container_registry_variables", "auto_devops_variables", "auto_devops_enabled?", "enabled?", "container_registry_url", "slug", "slug", "format", "format", "format", "format", "generate_slug", "random_suffix", "tag_list", "tag_path", "ci_yaml_file_path", "stage", "action?", "action?", "ref_slug", "legacy_variables", "licensed_features", "before_sha", "when", "build_attributes_from_config", "config_processor", "ci_yaml_file", "ci_yaml_from_repo", "implied_ci_yaml_file", "gitlab_ci_yml_for", "blob_data_at", "blob_at", "to_action_id", "not_found", "legacy_stage", "statuses_count", "statuses", "secret_variables_for", "secret_variables_for", "unprotected", "unprotected", "protected_for?", "protected?", "protected?", "tag_exists?", "matching", "matching", "matches?", "exact_match?", "wildcard_match?", "wildcard?", "wildcard_regex", "empty_repo?", "default_branch_protected?", "ancestors", "persisted_variables", "persisted_environment_variables", "environment_url", "environment_url", "external_url", "external_link?", "pages_group_url", "pages", "pages_subdomain", "pages", "get_project_wiki_path", "icon", "container_class", "group_by_directory", "directory", "page_title_and_dir", "fluid_layout", "blank_container", "external_wiki", "cache_has_external_wiki", "external_wikis", "pages_config", "pages_config", "pages_https_only?", "pages_domains_config", "https?", "enabled_pages_domains", "repo_url", "http_url_to_repo", "http_url_to_repo", "environments", "environments", "default_environment", "find_or_initialize_service", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "find_or_initialize_services", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "to_param", "reply_key", "reply_key", "find_service", "available_services_names", "build_from_template", "sha_to", "sha_start", "exclude_start?", "sha_from", "prometheus_client", "prometheus_client", "prometheus_client", "service_name", "service_port", "kube_client", "kubeclient", "kubeclient", "kubeclient", "kubeclient", "build_kubeclient!", "build_kubeclient!", "build_kubeclient!", "kubeclient_ssl_options", "join_api_url", "kubeclient_ssl_options", "join_api_url", "join_api_url", "kubeclient_ssl_options", "kubeclient_auth_options", "kubeclient_auth_options", "public_only", "available?", "available?", "with_reactive_cache", "full_reactive_cache_key", "alive_reactive_cache_key", "within_reactive_cache_lifetime", "create_record_event", "create_merge_event", "merge_mr", "merge_mr", "close_resource_email", "close_mr", "close", "close", "close_mr", "commit_status_merge_requests", "merge_request_build_retried", "mark_pending_todos_as_done", "update_todos_count_cache", "attributes_for_target", "pending_todos", "todos_pending_count", "todos_done_count", "todos_done_count", "todos_pending_count", "merge_requests_for", "finder", "finder", "finder", "finder", "issuable_finder_for", "finder_type", "finder_type", "finder_type", "finder_type", "finder_type", "action_name", "action_name", "push?", "merged?", "closed?", "joined?", "left?", "destroyed?", "commented?", "created_project?", "push_action_name", "created_project_action_name", "closed?", "push?", "state", "external_import?", "import_url", "credentials", "credentials", "import_data", "gitlab_project_import?", "expire_content_cache", "has_importer?", "importer", "importer_class", "importer_class", "importer_class", "importer_class", "importer_class", "importer_class", "expire_tags_cache", "expire_branches_cache", "expire_statistics_caches", "expire_root_ref_cache", "expire_emptiness_caches", "expire_exists_cache", "new_ref?", "rm_ref?", "created?", "created?", "status_name", "preload_for_collection", "force_cross_reference_regex_check?", "preload_max_access_for_authors", "preload_noteable_for_regular_notes", "preload_first_time_contribution_for_authors", "first_contribution?", "first_contribution?", "specialize_for_first_contribution!", "merged", "team", "max_member_access", "max_member_access_for_user_ids", "max_member_access_for_resource_ids", "max_member_access_for_resource_key", "merge_params_ee", "merge_params_attributes", "projects", "projects", "projects", "projects", "projects", "projects", "projects", "labels?", "filter_by_no_label?", "projects", "projects", "projects", "projects", "projects", "projects", "projects", "inside_path", "inside_path", "for_milestones", "projects?", "in_namespace", "current_user_related?", "klass", "item_project_ids", "klass", "item_project_ids", "with_feature_available_for_user", "with_project_feature", "with_feature_enabled", "with_feature_access_level", "quoted_access_level_column", "authorizations_for_projects", "access_level_attribute", "direct_child_projects", "projects_matching_filter", "hierarchy_for_parent", "load_projects", "load_projects", "load_projects", "prepare_projects_for_rendering", "preload_max_member_access_for_collection", "visibility_level_icon", "remove_project_message", "storage_counter", "visibility_level_color", "with_statistics", "archived", "with_statistics", "sorted_by_activity", "projects_finder", "to_json", "joined", "namespace_id", "by_commit_sha", "by_commit_sha", "merge_request_path", "sorted_merge_requests", "paginated?", "paginated?", "paginator", "subgroups", "direct_child_groups", "subgroups_matching_filter", "supports_nested_groups?", "with_selects_for_list", "supports_nested_groups?", "with_counts", "project_count_sql", "subgroup_count_sql", "member_count_sql", "search", "all_visible_descendant_groups", "search", "search", "search", "search", "search", "search", "search", "search", "search", "search", "search", "search", "search", "exists", "descendants", "find_by_path_or_name", "represent_hierarchies", "hierarchy", "build_hierarchy", "represent_hierarchy", "expand_hierarchy_for_child", "ancestors_upto", "ancestors_upto", "itemized?", "itemize", "folder", "available", "stopped", "with_pagination", "with_pagination", "entity_class", "all_commit_shas", "commit_shas", "all_commits", "commit_shas", "online?", "contact_time_deadline", "latest", "commit_statuses", "jobs", "jobs", "jobs", "jobs", "jobs", "represent_status", "represent_status", "represent_status", "client", "client", "client", "client", "client", "client", "client", "client_options", "access_token_key", "client_options", "host_key", "has_ci_cd_only_params?", "import_github_title", "custom_icon", "active_nav_link?", "current_controller?", "current_action?", "current_path?", "find_by_any_email", "by_any_email", "author?", "author_id?", "author_username?", "new_resource_email", "head_pipeline_for", "source_branch_sha", "source_branch_head", "source_branch_ref", "closes_issues", "closes_issues", "closes_issues", "committer", "resolve_discussions_with_issue", "user_agent_detail_service", "new_issue", "new_issue", "merge_request_to_resolve_discussions_of", "discussions_to_resolve", "discussions_to_be_resolved", "find_discussion", "find_discussion", "noteable_without_project?", "move_to_end", "spam_check", "when_recaptcha_verified", "check", "check", "check", "create_wiki", "wiki_enabled?", "git_fsck", "has_pushes?", "with_push", "keyed_verification_code", "log_error", "log_error", "txt_records", "log_error", "check_for_spam?", "check_for_spam?", "check_for_spam?", "spam?", "akismet", "akismet", "check_for_spam?", "create_spam_log", "spam_title", "spam_description", "spammable_owner_id", "spammable_text", "spammable_owner", "title_changed?", "unhyphenize", "max_relative_position", "position_between", "parent_ids", "update_attributes", "process_title", "deep_title_squish", "merge_quick_actions_into_params!", "delete_conflicting_redirects", "conflicting_redirects", "matching_path_and_descendants", "repository_event", "reset_project_activity", "set_last_repository_updated_at", "track_user_interacted_projects", "set_last_repository_updated_at", "track", "cached_exists?", "recent_update?", "check_repository_absence!", "set_last_activity_at", "ensure_storage_path_exists", "ensure_storage_path_exists", "repository_storage_path", "repository_storage_path", "repository_storage", "repository_storages", "repository_with_same_path_already_exists?", "update_daemon", "sync_share_with_group_lock_with_parent", "save_git_content", "keep_around_commits", "keep_around_commits", "ensure_commit_shas", "save_diffs", "save_commits", "keep_around_commits", "start_commit_sha", "base_commit_sha", "head_commit_sha", "head_commit_sha", "keep_around", "kept_around?", "keep_around_ref_name", "ref_exists?", "last_commit_sha", "last_commit_sha", "last_version", "versions", "start_commit", "start_commit", "merge_base_commit", "merge_base", "compare", "create_bulk", "safe_start_commit_sha", "diffs", "max_diff_options", "diffs", "diffs", "diffs", "diffs", "create_merge_request_diff_files", "diff_refs", "diff_refs", "diff_refs", "diff_refs", "diff_start_sha", "diff_base_sha", "branch_merge_base_commit", "diff_options", "environments_for", "diff_head_commit", "diffs_expanded?", "hide_whitespace?", "find_base_sha", "ensure_merge_request_diff", "create_merge_request_diff", "reload_merge_request_diff", "fetch_ref!", "ref_path", "ref_path", "ref_path", "fetch_source_branch!", "post_create_hook", "post_create_hook", "create_notification_setting", "send_invite", "send_request", "post_create_hook", "send_invite", "post_create_hook", "send_invite", "post_create_hook", "notification_service", "owner?", "notification_service", "notification_service", "notification_service", "new_project_member", "member_access_granted_email", "real_source_type", "notifiable?", "real_source_type", "notifiable?", "notifiable?", "notifiable?", "suitable_notification_level?", "unsubscribed?", "own_activity?", "has_access?", "read_ability", "notification_level", "custom_enabled?", "action_excluded?", "excluded_watcher_action?", "excluded_participating_action?", "notification_setting", "notification_setting", "event_enabled?", "find_notification_setting", "notification_settings_for", "global_notification_setting", "notifiable_options", "notifiable_options", "notifiable_options", "source_type", "membershipable", "humanize", "access_level", "access_level", "access_level", "max_member_access_for_user", "members_with_parents", "active_without_invites_and_requests", "self_and_ancestors", "non_request", "member", "member", "member_source", "subject", "subject", "find_by_invite_token", "invite_project_member", "member_invited_email", "new_group_member", "invite_group_member", "system_hook_service", "system_hook_service", "system_hook_service", "system_hook_service", "execute_hooks_for", "build_event_data", "full_path_was", "full_path_was", "build_event_name", "project_data", "project_member_data", "group_data", "group_member_data", "user_data", "human_access", "access_options", "visibility_levels", "new_access_request", "owners_and_masters", "deliver_access_request_email", "fallback_to_group_owners_masters?", "member_access_requested_email", "find_or_create_for", "update_two_factor_requirement", "update_two_factor_requirement", "two_factor_grace_period", "expanded_groups_requiring_two_factor_authentication", "all_expanded_groups", "groups", "all_groups", "all_groups", "groups", "groups", "authorized_groups", "ordered", "ordered", "visible_to_user", "visible_to_user", "groups_for_ancestors", "groups_for_descendants", "owned_groups", "include_public_groups?", "full_private_access?", "load_groups", "prepare_groups_for_rendering", "set_diff", "find_diff", "diff_for_line_code", "raw_diffs", "raw_diffs", "diff_file_hash", "raw_diffs", "raw_diffs", "load_diffs", "refresh_user_cache", "refresh_cache", "refresh_cache", "count_stored?", "global_count", "count_service", "global_count", "count_service", "global_count", "count_service", "project_ids", "project_ids", "project_ids", "project_ids", "generate_subkeys", "primary_keyid", "before_create_do_block", "before_create_do_block", "started_at", "finished_at", "failure_reason", "add_root_as_member", "create_ref", "invalidate_cache", "create_ref", "expire_etag_cache", "expire_etag_cache", "expire_etag_cache", "expire_etag_cache", "discussions_rendered_on_frontend?", "discussions_rendered_on_frontend?", "etag_key", "etag_cache_key", "awardable", "refresh_markdown_cache", "latest_cached_markdown_version", "ensure_metadata", "create_page", "ensure_callout", "feature_name", "recaptcha_check_with_fallback", "spammable_params", "snippet_params", "snippet_params", "move_temporary_files", "ensure_spam_config_loaded!", "spammable_path", "render_recaptcha?", "spammable_path", "spammable_path", "spammable_path", "log_audit_event", "log_user_activity", "log_audit_event", "log_user_activity", "authentication_method", "user_params", "user_params", "user_params", "user_params", "user_params", "user_params_ce", "login_counter", "counter", "counter", "counter", "counter_name", "counter_description", "counter_name", "counter_description", "counter_name", "counter_description", "counter_name", "counter_description", "counter_name", "counter_description", "for_authentication", "security_event", "resource_name", "resource_name", "project_params", "project_params", "project_params", "custom_import_params", "active_new_project_tab", "saved?", "project_params_attributes", "wiki_params", "build_page", "wiki_page_errors", "build_page", "build_page", "build_page", "build_page", "build_page", "build_page", "trigger_params", "mark_todo", "preview_markdown_path", "ref_names", "ref_names", "refs", "refs", "refs", "runners_path", "assign_to", "shared?", "create_repository", "create_repository", "forked?", "fork_network", "redirect_to_repository_settings", "protected_ref_params", "create_service_class", "protected_ref_params", "access_level_attributes", "service_namespace", "service_namespace", "create_params", "create_params", "create_params", "create_params", "create_params", "create_params", "create_params", "project_pipeline_path", "project_pipeline_path", "schedule_params", "pipeline_schedules_path", "milestone_params", "milestone_params", "define_new_vars", "set_pipeline_variables", "relevant", "service", "configure_params", "service", "service", "configure", "service", "command", "command", "bitmaps_enabled?", "git", "service_trigger_url", "render_json", "build_payload", "error_payload", "label_params", "label_params", "label_params", "messages", "label_params", "tags", "tags", "tags", "tags", "repo", "tags", "manifest", "image", "image", "image", "issue_params", "issue_params", "issue_params", "issue_params", "issue_params_with_info_from_discussions", "whitelisted_issue_params", "title_from_merge_request", "description_for_discussions", "items_for_discussions", "item_for_discussion", "first_note", "first_note_to_resolve", "resolvable?", "resolvable?", "potentially_resolvable?", "supports_resolvable_notes?", "base_class_name", "move_between_lists?", "issue_state", "add_label_ids", "remove_label_ids", "move_between_ids", "group_board?", "on_group_boards", "on_project_boards", "movable?", "moving_from_list", "moving_to_list", "with_lists_and_board", "movable", "issue_params_attributes", "import_schedule", "import?", "bare_repository_import?", "fail", "mark_import_as_failed", "hook_params", "hook_params", "group_link_create_params", "continue_params", "import_in_progress?", "import_started?", "import_scheduled?", "environment_params", "token_in_session", "yaml_processor_options", "validation_message", "validation_message", "blob", "prepare!", "prepare!", "blob", "prepare!", "prepare!", "blob", "diff_file", "diff_file", "diff_file", "project_repository", "project_tree_path", "url_to_autodeploy_setup", "autodeploy_flash_notice", "new_issue_branch", "link_to_autodeploy_doc", "truncate", "truncate_team", "create_commit", "user_access", "update_flash_notice", "final_success_path", "branch_name_or_ref", "next_branch", "fork_of", "find_fork_of", "find_forks_in", "new_merge_request_path", "existing_merge_request_path", "merge_request_exists?", "create_merge_request?", "different_project?", "build_qr_code", "setup_u2f_registration", "execute!", "execute!", "can_see_access_requests?", "u2f_app_id", "push", "cache_last_push_event", "user_cache_key", "project_cache_key", "set_key", "account_string", "issuer_host", "host", "set_index_vars", "set_index_vars", "personal_access_token_params", "set_index_vars", "redis_store!", "redis_shared_state_key", "redis_getdel", "oauth_authorized_tokens", "key_params", "key_params", "gpg_key_params", "email_params", "delete_chat_name_token", "chat_name_params", "chat_names", "chat_name_params", "chat_name_token", "chat_name_token", "create_application_params", "application_params", "resource", "can_read?", "render_response", "notification_setting_params", "resource", "sign_up_params", "redirect_back_or_default", "file_is_valid?", "find_or_create_namespace", "access_params", "access_params", "extra_project_attrs", "user_map", "user_map", "group_params", "group_params", "visibility_level_description", "restricted_visibility_level_description", "disallowed_visibility_level_description", "visibility_level_label", "restricted_visibility_levels", "disallowed_visibility_level?", "visibility_level_allowed?", "visibility_level_allowed?", "visibility_level_allowed_as_fork?", "visibility_level_allowed_by_group?", "visibility_level_allowed_by_parent?", "visibility_level_allowed_by_projects?", "visibility_level_allowed_by_sub_groups?", "children", "disallowed_project_visibility_level_description", "disallowed_group_visibility_level_description", "visibility_level_errors_for_group", "project_visibility_level_description", "group_visibility_level_description", "snippet_visibility_level_description", "group_params_attributes", "group_params_ce", "milestone_path", "milestone_path", "project_milestone?", "project_milestone?", "legacy_group_milestone?", "legacy_group_milestone?", "represent_appearance", "uploader_class", "uploader_class", "uploader_class", "uploader_class", "uploader_class", "uploader_class", "uploader_class", "note_json", "note_params", "note_project", "note_params", "access_denied!", "note_html", "diff_discussion_html", "discussion_html", "note_serializer", "use_note_serializer?", "diff_discussion?", "diff_discussion?", "individual_note?", "individual_note?", "to_discussion", "on_image?", "on_image?", "on_image?", "members_page_url", "serialize_as_json", "list_params", "serialize_as_json", "serialize_as_json", "serialize_as_json", "serialize_as_json", "board_parent", "impersonation_token_params", "identity_params", "can_change_group_visibility_level?", "lfs_enabled?", "add_owner", "lfs_enabled?", "lfs_enabled?", "add_user", "add_user", "add_user", "retrieve_member", "retrieve_access_level", "can_update_member?", "request?", "can_update_member?", "created_by", "retrieve_user", "broadcast_message_params", "report_params", "notify", "notify", "notify", "notify", "notify", "notify", "verification_enabled?", "activity", "activity", "activity", "project_name", "pretext", "attachments", "activity", "attachments", "activity", "attachments", "activity", "attachments", "activity", "pretext", "attachments", "activity", "attachments", "activity", "attachments", "activity", "project_name", "project_name", "user_avatar", "user_avatar_without_link", "tag", "tag", "user_avatar_url_for", "placeholder_image", "tag", "avatar_icon_for_email", "avatar_icon_for_user", "gravatar_icon", "default_avatar", "find_tag", "markdown", "description_message", "description_message", "description_message", "markdown", "attachment_color", "attachment_color", "attachment_color", "issue_url", "issue_title", "issue_url", "issue_url", "markdown_unsafe", "prepare_for_rendering", "new_branch?", "removed_branch?", "compare_link", "ref_type", "compare_url", "compare_url", "truncate_sha", "truncate_sha", "truncate_sha", "commit_messages", "commit_message_attachments", "compose_commit_message", "duration", "pretty_duration", "humanized_status", "branch_link", "pipeline_link", "branch_link", "humanized_status", "branch_url", "branch_url", "pipeline_url", "pipeline_url", "calculate_duration", "note_url", "link", "formatted_title", "format_title", "format_title", "format_title", "render_line", "merge_request_link", "merge_request_url", "merge_request_title", "merge_request_url", "issue_link", "opened_issue?", "pager_json", "load_events", "load_events", "load_events", "load_events", "load_events", "event_filter", "event_filter_visible", "comments_visible?", "spinner", "rss_url_options", "feature_available?", "feature_available?", "guest?", "get_permission", "member?", "member?", "active_when", "fallback", "fallback", "admins", "deliverable?", "change_status", "gfm_reference", "delete_artifact!", "erase_artifacts!", "has_expiring_artifacts?", "remove_artifacts_file!", "remove_artifacts_metadata!", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy", "destroy_confirmation_valid?", "destroy_confirmation_failure_message", "delete_async", "block", "redirect_back_or_admin_user", "update_user", "default_route", "confirm_deletion_with_password?", "allow_password_authentication?", "allow_password_authentication_for_web?", "allow_password_authentication_for_git?", "ldap_user?", "async_execute", "async_execute", "async_execute", "async_execute", "async_execute", "async_execute", "hook", "hook", "hook", "hook", "supported_events", "supported_events", "supported_events", "supported_events", "supported_events", "supported_events", "supported_events", "supported_events", "supported_events", "supported_events", "supported_events", "supported_events", "supported_events", "supported_events", "supported_events", "supported_events", "supported_events", "supported_events", "supported_events", "supported_events", "supported_events", "supported_events", "supported_events", "find_page", "trigger", "trigger", "trigger", "trigger", "pipeline_merge_requests", "merge_request_became_unmergeable", "create_unmergeable_todo", "valid_token?", "valid_token?", "valid_token?", "valid_token?", "find_chat_user", "authorize_chat_name_url", "health_check_access_token", "only_for?", "destroy_service_class", "schedule", "destroy_all", "destroy_all", "remove_pages", "rename_project", "todos_counts", "mark_todos_as_done", "update_todos_state", "milestone", "milestone", "milestone", "milestone", "milestone?", "find_labels", "find_labels", "extract_references", "references", "discussion", "discussion", "part_of_discussion?", "disable_two_factor!", "revoke", "revoke", "revoke", "revoke", "revoke", "with_key_and_subkeys", "revoke!", "revoke!", "mark_todos_as_done_by_ids", "todos_by_ids", "editable?", "editable?", "editable?", "prometheus_installed?", "template?", "template?", "human_class_name", "destroyable", "remove_user", "remove_user", "templates", "set_user", "impersonator", "set_user", "set_user", "deploy_key", "deploy_key", "merge_requests_for_source_branch", "merge_when_pipeline_succeeds", "serialize_widget", "can_cancel_merge_when_pipeline_succeeds?", "can_be_merged_by?", "serializer", "serializer", "serializer", "iwhere", "base_string", "increment_counter!", "cancel_running", "project_pipelines_path", "respond_422", "build_path", "cancelable?", "cancelable?", "cancelable?", "cancelable?", "project_job_path", "find_routable!", "handle_not_found_or_authorized", "routable_authorized?", "ensure_canonical_path", "find_by_full_path", "find_by_full_path", "for_user", "where_full_path_in", "build_canonical_path", "build_canonical_path", "build_canonical_path", "build_canonical_path", "build_canonical_path", "safe_params", "route_not_found", "authenticate_user!", "authenticate_user!", "allow_signup?", "noteables_for_type", "render_events", "cycle_analytics", "events_params", "issues_finder", "merge_request_params_attributes", "merge_request?", "ff_merge", "lazy", "lazy", "batch", "commits_by", "for", "render_lfs_not_found", "objects", "download_request?", "upload_request?", "download_request?", "download_request?", "upload_request?", "download_objects!", "upload_objects!", "download_request?", "upload_request?", "download_request?", "upload_request?", "existing_oids", "upload_actions", "all_lfs_objects", "lfs_storage_project", "fork_source", "download_actions", "upload_pack?", "git_command", "blobs_at", "avatar_path", "gitlab_config", "gitlab_config", "local_url", "dynamic_segment", "dynamic_segment", "dynamic_segment", "dynamic_segment", "dynamic_segment", "dynamic_segment", "dynamic_segment", "add_to_breadcrumb_dropdown", "group_title_link", "group_icon", "group_icon_url", "sprite_icon", "sprite_icon_path", "project_identicon", "newest_first", "sort_value_recently_updated", "latest_successful_for_refs", "subject_snippets_path", "are_internal", "are_private", "public_and_internal", "present_members", "sort_value_name", "personal?", "milestones_filter_path", "milestone_counts", "milestone_class_for_state", "for_projects", "for_projects", "new_issuable_address", "merge_request_source_project_for_project", "new_issuable_address", "prioritized", "unprioritized", "finished", "project_issues", "within_folders", "represent_concise", "create_mr_button?", "create_mr_path", "dropdown_content", "dropdown_loading", "fetch_branches_by_mode", "diverging_commit_counts", "respond_with_boards", "respond_with", "incoming_email_token_enabled?", "clipboard_button", "page_title", "scopes", "rss_token", "with_subkeys", "fingerprint", "emails_with_verified_status", "fingerprint", "user_infos", "verified_email?", "confirmed", "primary_email_verified?", "temp_oauth_email?", "metrics_service", "metrics_text", "prometheus_metrics_text", "health_metrics_text", "formatter", "multiprocess_metrics_path", "koding_project_url", "support_url", "markdown_field", "version_status_badge", "banzai_render_context", "banzai_render_context", "for_display", "for_display", "for_display", "banzai_render_context", "markdown_engine", "promo_url", "promo_host", "states_count", "group_milestones_states_count", "legacy_group_milestone_states_count", "count_by_state", "count_by_state", "dropdown_toggle", "filter_group_project_member_path", "users_select_tag", "member_sort_options_hash", "non_invite", "access_level_roles", "access_level_roles", "access_level_roles", "sort_title_access_level_asc", "sort_title_access_level_desc", "sort_title_last_joined", "sort_title_name_asc", "sort_title_name_desc", "sort_title_oldest_joined", "sort_title_oldest_signin", "sort_title_recently_signin", "sort_value_access_level_asc", "sort_value_access_level_desc", "sort_value_last_joined", "sort_value_name_desc", "sort_value_oldest_signin", "sort_value_oldest_joined", "sort_value_recently_signin", "users_select_data_attributes", "setup_children", "expand_hierarchy", "shared_projects", "filter_projects_path", "projects_sort_options_hash", "sort_value_latest_activity", "can_create_project?", "projects_limit_left", "personal_projects_count", "sort_title_largest_repo", "sort_title_latest_activity", "sort_title_name", "sort_title_oldest_activity", "sort_title_oldest_created", "sort_title_recently_created", "sort_value_largest_repo", "sort_value_oldest_activity", "sort_value_oldest_created", "sort_value_recently_created", "request_path_with_options", "filter_groups_path", "groups_sort_options_hash", "can_create_group?", "can_create_group?", "subgroup?", "has_parent?", "sort_title_oldest_updated", "sort_title_recently_updated", "sort_value_oldest_updated", "redirect_out_of_range", "redirect_out_of_range", "todo_params", "current_page", "show_projects?", "any_projects?", "render_group_tree", "notes_finder", "finder_params", "finder_params", "last_fetched_at", "make_sure_position_is_set", "sort_options_hash", "blocked", "external", "without_projects", "with_two_factor", "without_two_factor", "filter", "search_with_secondary_emails", "sort_title_created_date", "sort_title_downvotes", "sort_title_due_date", "sort_title_due_date_later", "sort_title_due_date_soon", "sort_title_label_priority", "sort_title_largest_group", "sort_title_milestone", "sort_title_milestone_later", "sort_title_milestone_soon", "sort_title_popularity", "sort_title_priority", "sort_title_upvotes", "sort_value_created_date", "sort_value_downvotes", "sort_value_due_date", "sort_value_due_date_later", "sort_value_due_date_soon", "sort_value_label_priority", "sort_value_largest_group", "sort_value_milestone", "sort_value_milestone_later", "sort_value_milestone_soon", "sort_value_popularity", "sort_value_priority", "sort_value_upvotes", "services_templates", "activated?", "online", "dropdown_title", "dropdown_filter", "kind", "admin_groups_sort_options_hash", "boolean_to_icon", "projects_with_write_access", "with_write_access", "without_deleted", "usage_ping_enabled", "usage_ping_can_be_configured?", "broadcast_message", "broadcast_message_status", "ended?", "broadcast_message_style", "render_broadcast_message", "color", "enforce_namespace_to_lower_case", "enforce_namespace_to_lower_case", "get_channels", "map_recipients", "format_channel", "consider_uri", "set_default_values", "set_default_values", "set_default_values", "default_message", "gl_repository", "create_repo!", "raw_size", "stored_externally?", "external_size", "external_storage_error?", "external_storage", "external_storage", "ensure_cache_setup", "diff_line", "diff_line", "diff_line", "find_noteable_diff", "supported?", "supported?", "has_complete_diff_refs?", "started?", "started?", "raise_error", "raise_error", "raise_error", "of_projects", "of_projects", "of_projects", "build_from_id", "build_from_ref", "latest_successful_builds_for", "with_artifacts_archive", "latest_successful_for", "archive", "archive", "archive!", "git_not_found!", "render_show", "render_show", "define_protected_refs", "define_deploy_token", "expand_deploy_tokens_section?", "expires_soon?", "branches", "load_gon_index", "branches", "access_levels_options", "protectable_tags_for_dropdown", "protectable_branches_for_dropdown", "hash", "hash", "protectable_ref_names", "non_wildcard_protected_ref_names", "protections", "levels_for_dropdown", "branch_names_contains", "tag_names_contains", "job_from_id", "job_from_ref", "new_branch_message", "removed_branch_message", "push_message", "merge_request_message", "entry", "artifacts_metadata_entry", "artifacts_metadata", "use_file", "with_exclusive_lease", "unsafe_use_file", "exclusive_lease_key", "store_dir", "store_dir", "store_dir", "store_dir", "store_dir", "store_dir", "store_dirs", "store_dirs", "store_dirs", "store_dirs", "identifier", "identifier", "identifier", "identifier", "render_blob_json", "conditionally_expand_blob", "copy_file_path_button", "copy_blob_source_button", "open_raw_blob_button", "path_breadcrumbs", "simple_viewer", "rich_viewer", "mode", "mode", "rich_viewer_class", "viewer_class_from", "can_render?", "can_render?", "can_render_blob?", "file_type", "simple_viewer_class", "raw_binary?", "blob_raw_path", "blob_raw_url", "rendered_as_text?", "render_error", "render_error", "render_error", "render_error", "render_error", "render_error", "render_error", "render_error", "render_error", "render_error", "render_error", "too_large?", "too_large?", "has_home_page?", "license", "license", "license_key", "license_short_name", "collapsed?", "collapsed?", "collapsed?", "collapsed?", "resolved?", "resolved?", "expanded?", "expanded?", "expand!", "blob_json", "auxiliary_viewer", "auxiliary_viewer_class", "find_model", "find_model", "find_model", "find_model", "upload_model_class", "upload_model_class", "upload_model_class", "schedule_background_upload?", "background_upload_enabled?", "background_upload", "background_upload", "revert", "revert", "temp_file_uploader", "revert", "temp_file_path", "file_path", "retrieve_from_store!", "retrieve_from_store!", "current_upload_satisfies?", "current_upload_satisfies?", "sti_name", "create_new_branch?", "successful_change_path", "failed_change_path", "assign_change_commit_vars", "revert_branch_name", "change_type_title", "merged_merge_request?", "merged_merge_request", "merged_merge_request_no_cache", "merge_commit?", "parents", "parents", "referenced_merge_request_url", "render_conflict_response", "render_issue_json", "can_move?", "can_move?", "moved?", "upload_mount", "uploader_mounted?", "build_uploader_from_upload", "build_uploader_from_params", "build_uploader", "build_uploader", "build_uploader", "build_uploader", "build_uploader", "mount_point", "model_valid?", "model_valid?", "upload_paths", "execute_services", "code", "code", "parsed_url", "make_request", "make_request_with_auth", "log_execution", "build_headers", "format_response_headers", "safe_response_body", "body", "verify_domain!", "unverify_domain!", "disable_domain!", "dns_record_present?", "verification_domain", "open", "cached_size", "verified?", "verified?", "unverified?", "validate", "include_any_scope?", "read_only_attributes", "notify_success", "notify_success", "notify_new_user", "new_user", "new_user_email", "execute_without_lease", "update_authorizations", "fresh_access_levels_per_project", "current_authorizations_per_project", "current_authorizations", "fresh_authorizations", "insert_authorizations", "remove_project_authorizations", "migrate_records_in_transaction", "migrate_records", "migrate_issues", "migrate_merge_requests", "migrate_notes", "migrate_abuse_reports", "migrate_award_emojis", "prepare_for_destroy", "legacy_storage?", "solo_owned_groups", "run_callbacks", "active_external_issue_tracker?", "active_external_wiki?", "issue_tracker?", "category", "owners", "owners", "old_repository_storage_paths", "repository_storage_paths", "all_projects", "all_projects", "all_projects", "contributed_projects", "contributed_projects", "contributions", "generate_reset_token", "recently_sent_password_reset?", "generate", "generate", "generate", "increment_and_save!", "lookup", "create_record", "maximum_iid", "usage_value", "can_create_user?", "build_user_params", "admin_create_params", "signup_params", "skip_user_confirmation_email_from_setting", "record_activity", "record", "bulk_perform_and_wait", "bulk_perform_async", "bulk_perform_and_wait", "bulk_perform_inline", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "perform", "calculate_checksum!", "calculate_checksum!", "calculate_checksum!", "absolute_path", "checksummable?", "absolute_path", "absolute_path", "absolute_path", "checksummable?", "absolute_path", "checksummable?", "exist?", "local?", "exist?", "local?", "exist?", "local?", "relative_path?", "relative_path?", "relative_path?", "cast_data", "latest?", "latest?", "latest?", "latest?", "latest?", "log_error_message_for", "latest_sha", "cleanup", "cleanup", "historical?", "refresh!", "refresh!", "apply_current_state!", "stuck_merge_requests", "mark_projects_without_jid_as_failed!", "mark_projects_with_jid_as_failed!", "enqueued_projects_with_jid", "error_message", "enqueued_projects", "enqueued_projects_without_jid", "try_obtain_lease", "try_obtain_lease", "try_obtain_lease", "try_obtain_lease", "try_obtain_lease", "try_obtain_lease", "remove_lease", "lease_key", "lease_key", "migrate_to_hashed_storage!", "build_relation", "repo_reference_count", "wiki_reference_count", "reference_counter", "update_status", "update_status", "skip", "run", "drop", "two_factor_grace_period_expired?", "latest_builds_status", "run_pipeline_schedule", "after_import", "after_import", "async?", "start_import", "fail_import", "start", "refresh_markdown_cache!", "after_create_default_branch", "remove_import_jid", "change_head", "reload_default_branch", "before_change_head", "after_change_head", "copy_gitattributes", "expire_branch_cache", "expire", "fork_repository", "start_fork", "current_settings", "destroy_unreferenced", "expired", "propagate", "try_obtain_lease_for", "try_obtain_lease_for", "try_obtain_lease_for", "propagate_projects_with_template", "bulk_create_from_template", "project_ids_batch", "bulk_insert_services", "service_hash", "lease_for", "lease_for", "cancel_lease_for", "refresh_method_caches", "update_statistics", "process_commit_message", "update_issue_metrics", "build_commit", "commit_exists_in_upstream?", "create_cross_references!", "close_issues", "close_issues", "updatable_by_user", "close_issue", "close_issue", "close_issue", "close_issue", "close_issue", "close_issue", "jira_tracker?", "issues_tracker", "issues_tracker", "default_issue_tracker", "transition_issue", "add_issue_solved_comment", "has_resolution?", "build_entity_url", "jira_request", "client_url", "send_message", "build_remote_link_props", "find_remote_link", "assignee_or_author?", "assignee_or_author?", "projects_with_reporter_access_limited_to", "cross_reference_exists?", "cross_reference", "cross_reference_exists?", "system", "notes_for_mentioner", "cross_reference_note_content", "create_cross_reference_note", "cross_reference_disallowed?", "jira_tracker_active?", "can_cross_reference?", "add_comment", "resource_url", "noteable_name", "comment_exists?", "process_project_changes", "process_wiki_changes", "log", "after_project_changes_hooks", "deactivate!", "schedule_next_run!", "pipeline_finished", "notifiable_users", "notifiable_users", "update_metrics_for_active_pipeline", "update_metrics_for_succeeded_pipeline", "needs_verification", "migrate!", "unsafe_migrate!", "persist_object_store!", "store!", "direct_upload_enabled?", "persist_object_store?", "report!", "sanity_check!", "args_check!", "migrate", "build_uploaders", "failures", "header", "failures", "pipeline_path", "failed", "can_create_notification?", "new_note", "new_note", "handle_note", "can_create_todo?", "for_snippet?", "for_snippet?", "build_new_note_recipients", "open_mr", "objects_found?", "set_issuable", "issuable_class", "issuable_class", "open_issue", "unlink_fork", "from_project", "due_tomorrow", "issue_due", "close_connection", "refresh_import_jid_expiration", "find_project", "find_project", "perform_in_the_future", "find_project", "import_started", "wait_for_jobs", "path_to_repo", "renew_lease", "cancel_lease", "get_lease_uuid", "gitaly_call", "flush_ref_caches", "gitaly_migrate", "after_create_branch", "commit_pipelines_path", "new_merge_request_pipelines_path", "each_pipelines_merge_request_path", "all_merge_requests", "with_expired_artifacts", "pending_delete", "send_email", "repository_push_email", "sender", "add_project_headers", "send_from_committer_email?", "default_sender_address", "can_send_from_user_email?", "display_name", "short_sha", "short_sha", "short_sha", "short_sha", "allowed_email_domains", "handle_failure", "rejection", "message_id", "signature", "gpg_commit", "try_import", "try_import", "import", "import", "import", "import", "import", "import", "import", "import", "import", "report_import_time", "histogram", "representation_class", "representation_class", "representation_class", "representation_class", "representation_class", "invite?", "notify_waiter", "find_application", "get_session_token", "get_billing_state", "set_billing_state", "update_billing_change_counter", "billing_changed_counter", "state_transition", "redis_shared_state_key_for", "get_redis_session_key", "parse_trace_sections!", "create_deployment", "update_coverage", "coverage_regex", "perform_and_ttl", "always_perform?", "refresh_authorized_projects", "max_attachment_size", "max_attachment_size", "deny_visibility_level", "filter_spam_check_params", "rm_tag", "build_push_data", "build_push_data", "build_push_data", "build_push_data", "before_remove_tag", "after_remove_tag", "add_tag", "hooks_for", "store_metrics", "increment!", "increment_pushes_since_gc", "pushes_since_gc_redis_shared_state_key", "clean_up_old_archives", "clean_up_empty_directories", "ldap_hard_blocked?", "extract_commands", "extractor", "extract_updates", "commit_title", "commit_count", "commit_title", "commit_from_id", "commit_to_id", "commit_count", "trimmed_ref", "commit_from_id", "delete_redundant_access_levels", "authorized?", "protected_branch", "rename_repo", "rename_repo", "rename_repo", "valid_visibility_level_change?", "renaming_project_with_container_registry_tags?", "changing_default_branch?", "enabling_wiki?", "ensure_wiki_exists", "update_pages_config", "changing_pages_https_only?", "has_container_registry_tags?", "has_root_container_repository_tags?", "has_tags?", "has_tags?", "has_tags?", "build_root_repository", "mv_repository", "expire_caches_before_rename", "after_rename_repo", "rename_repo_notify!", "expires_full_path_cache", "send_move_instructions", "project_was_moved", "project_was_moved_email", "write_repository_config", "write_repository_config", "before_delete", "expire_all_method_caches", "artifacts?", "create_status", "extract_archive!", "deploy_page!", "tmp_path", "register_attempt", "enqueue!", "pages_deployments_total_counter", "pages_path", "pages_path", "pages_path", "public_path", "previous_public_path", "artifacts", "extract_zip_archive!", "artifacts", "artifacts_file", "artifacts_file", "total_size", "artifacts_metadata?", "max_size", "artifacts_expired?", "update_file", "reload_daemon", "pages_config_file", "update_file", "remove", "pages_update_file", "multi_action", "refresh_forks_count", "refresh_forks_count", "refresh_forks_count", "transfer", "transfer", "transfer", "invalidate_personal_projects_count", "transfer", "allowed_transfer?", "attempt_transfer_transaction", "update_namespace_and_visibility", "refresh_permissions", "rollback_side_effects", "execute_system_hooks", "move_project_folders", "move_project_uploads", "move_repo_folder", "rollback_folder_move", "rollback_folder_move", "move_repository", "user_ids_for_project_authorizations", "user_ids_for_project_authorizations", "noteable_owner", "participants_in_noteable", "sorted", "all_members", "move_before_destroy_relationships", "destroy_old_project", "attempt_restore_repositories", "attempt_repositories_rollback", "repo_path", "wiki_path", "removal_path", "flush_caches", "delete_cache", "add_source_project_to_fork_network", "move_project_members", "remove_remaining_members", "prepare_relation", "non_existent_members", "move_group_links", "remove_remaining_project_group_links", "non_existent_group_links", "group_links_in_target_project", "move_project_authorizations", "remove_remaining_authorizations", "non_existent_authorization", "move_notification_settings", "remove_remaining_notification_settings", "non_existent_notifications", "users_in_target_project", "move_lfs_objects_projects", "remove_remaining_lfs_objects_project", "non_existent_lfs_objects_projects", "move_forked_project_links", "move_fork_network_members", "update_root_project", "move_deploy_keys_projects", "remove_remaining_deploy_keys_projects", "non_existent_deploy_keys_projects", "refresh_project_authorizations", "refresh_project_authorizations", "refresh_members_authorized_projects", "add_repository_to_project", "repository_exists?", "repository_exists?", "validate!", "validate!", "validate!", "validate!", "import_repository", "unknown_url?", "ensure_repository", "ensure_repository", "fetch_as_mirror", "fetch_remote", "file_has_changed?", "validate_file_status!", "different_branch?", "validate_permissions!", "validate_on_branch!", "validate_branch_existance!", "validate_new_branch_name!", "import_export_shared", "execute_after_export_action", "save_all!", "save_services", "cleanup_and_notify_error!", "cleanup_and_notify_error", "export_path", "notify_error", "project_not_exported", "project_was_not_exported_email", "version_saver", "avatar_saver", "project_tree_saver", "uploads_saver", "repo_saver", "wiki_repo_saver", "lfs_saver", "execute_gitlab_shell_gc", "pushes_since_gc", "reset_pushes_since_gc", "pushes_since_gc", "task", "gc_period", "full_repack_period", "move_folder!", "absolute_base_dir", "import_upload_path", "tmp_filename", "overwrite_project?", "project_with_same_full_path?", "current_namespace", "link_existing_project", "fork_new_project", "link_fork_network", "target_namespace", "allowed_visibility_level", "accessible_keys", "accessible_deploy_keys", "valid_url?", "valid_url?", "valid_url?", "default_options", "valid_uri?", "valid_protocol?", "http?", "valid_domain?", "attempt_rollback", "attempt_destroy_transaction", "trash_repositories!", "remove_legacy_registry_tags", "delete_tags!", "remove_repository", "deny_namespace", "allowed_fork?", "allowed_namespace?", "after_create_actions", "save_project_and_import_data", "set_project_name_from_path", "create_or_update_import_data", "create_labels", "create_services_from_active_templates", "create_project", "setup_authorizations", "skip_wiki?", "add_master", "add_master", "explain_quick_actions", "find_user_references", "find_commands_target", "commands_target_type", "explain", "explain_commands", "commands_target_id", "update_note", "noteable_update_service", "leave_note", "execute_note_hooks", "hook_data", "hook_data", "hook_data", "to_hook_data", "hook_attrs", "total_time_spent", "hook_attrs", "hook_attrs", "hook_attrs", "hook_attrs", "hook_attrs", "hook_attrs", "hook_attrs", "hook_attrs", "hook_attrs", "ssh_url_to_repo", "ssh_url_to_repo", "url_to_repo", "url_to_repo", "repo_changes", "raw_deltas", "new_file", "lfs_file?", "create_lfs_object!", "link_lfs_object!", "cached_attributes", "cached_attributes", "cache_attribute_key", "destroy_target", "reply_attributes", "reply_attributes", "reply_attributes", "reply_attributes", "reply_attributes", "reopen_milestone", "move_children_to_group_milestone", "check_project_milestone!", "clone_project_milestone", "destroy_old_milestones", "milestone_ids_for_merge", "group_project_ids", "update_children", "for_milestone_id", "destroy_milestone", "open_milestone", "close_milestone", "has_changes?", "create_assignee_note", "create_assignee_note", "create_branch_change_note", "new_mentions_in_merge_request", "reassigned_merge_request", "relabeled_merge_request", "update_merge_request", "reassigned_merge_request", "update_issuable", "toggling_tasks?", "updated_tasks", "tasks?", "tasks", "summary", "get_updated_tasks", "get_tasks", "relabeled_resource_email", "reassign_resource_email", "previous_record", "new_mentions_in_resource_email", "change_branch", "change_assignee", "change_issue_assignees", "closed_without_fork?", "merge_from_quick_action", "mergeable_with_quick_action?", "source_project_missing?", "for_fork?", "in_fork_network_of?", "forked_from?", "resolve_all_discussions", "resolve_all_discussions", "resolved_all_discussions_email", "setup_merge_request_mail", "merge_request_thread_options", "mail_answer_thread", "mail_thread", "add_unsubscription_headers_and_links", "unsubscribable?", "recipient", "reload_diff", "update_diff_discussion_positions", "new_diff_notes", "close_upon_missing_source_branch_ref", "post_merge_manually_merged", "reload_merge_requests", "mark_pending_todos_done", "comment_mr_branch_presence_changed", "notify_about_push", "mark_mr_as_wip_from_commits", "execute_mr_web_hooks", "cache_merge_requests_closing_issues", "branch_added?", "branch_removed?", "add_merge_request_wip_from_commit", "push_to_merge_request", "add_commits", "commits_list", "diff_comparison_url", "new_commit_summary", "existing_commit_summary", "target_project_namespace", "change_branch_presence", "merge_request_push", "by_source_or_target_branch", "force_push?", "filter_merge_requests", "rebase", "rebase", "rebase", "rebase_in_progress?", "merge_merge_request", "in_locked_state", "error_check!", "after_merge", "clean_merge_jid", "handle_merge_error", "branch_deletion_user", "delete_source_branch?", "can_remove_source_branch?", "force_remove_source_branch?", "root_ref?", "opened_merge_requests_from_source_branches", "get_branches", "url_for_new_merge_request", "url_for_existing_merge_request", "merge_requests_enabled?", "from_source_branches", "set_projects!", "resolve", "resolve", "render_json_with_notes_serializer", "serialize_notes?", "resolve!", "resolve!", "resolve_without_save", "has_vue_discussions_cookie?", "render_discussion", "render_json_with_discussions_serializer", "render_json_with_html", "close_merge_request", "find_source_project", "find_target_project", "find_target_branch", "branches_valid?", "compare_branches", "assign_title_and_description", "append_closes_description", "assign_title_and_description_from_single_commit", "assign_title_from_issue", "validate_branches", "source_branch_specified?", "target_branch_specified?", "validate_branches", "add_error", "branches_present?", "same_source_and_target?", "default_merge_request_target", "can_allow_maintainer_to_push?", "maintainer_push_possible?", "assignable_issues", "merge_request_build_failed", "create_build_failed_todo", "after_execute", "action_member_permission", "update_member_permission", "update_member_permission", "update_member_permission", "update_member_permission", "override_member_permission", "can_request_access?", "last_owner?", "can_destroy_member?", "decline_access_request", "member_access_denied_email", "member_source_class", "destroy_member_permission", "destroy_member_permission", "destroy_member_permission", "destroy_member_permission", "add_users", "add_users", "add_users", "user_limit", "parse_users_list", "accept_request", "can_update_access_requester?", "after_accept_request", "mattermost_team_params", "unlock_file", "can_be_unlocked_by?", "lock", "find_locks", "current_lock", "create_lock!", "convert_color_name_to_hex", "labels_to_transfer", "group_labels_applied_to_issues", "group_labels_applied_to_merge_requests", "find_or_create_label!", "update_label_links", "update_label_priorities", "subscribe_users", "label_ids_for_merge", "update_issuables", "update_issue_board_lists", "update_priorities", "update_project_labels", "clone_label_to_group_label", "find_or_create_label", "find_or_create_label", "available_labels", "available_labels", "parent_type", "parent_is_group?", "update?", "update?", "update?", "redis_lease", "new_key", "new_key", "new_ssh_key_email", "create_confidentiality_note", "new_mentions_in_issue", "reassigned_issue", "relabeled_issue", "update_issue", "reassigned_issue", "change_issue_confidentiality", "handle_move_between_ids", "change_issue_duplicate", "move_issue_to_new_project", "move_between", "get_issue_if_allowed", "move_after", "move_before", "prev_relative_position", "shift_before?", "next_relative_position", "shift_after?", "reopen_issue", "reopen_issue", "update_new_issue", "update_old_issue", "create_new_issue", "notify_participants", "issue_moved", "issue_moved_email", "setup_issue_mail", "issue_thread_options", "serializable_hash", "assignee_ids", "cloneable_label_ids", "cloneable_milestone_id", "rewrite_content", "add_note_moved_to", "mark_as_moved", "noteable_moved", "rewrite_notes", "rewrite_issue_award_emoji", "add_note_moved_from", "rewrite_award_emoji", "notes_with_associations", "notes_with_associations", "notes_with_associations", "authors_loaded?", "award_emojis_loaded?", "referenced_merge_requests", "referenced_merge_requests", "closed_by_merge_requests", "merge_requests_readable_by_user", "apply_filters_if_needed", "close_service", "create_issue_duplicate_note", "create_issue_canonical_note", "close_service", "mark_canonical_issue_of_duplicate", "mark_duplicate_issue", "filter_resolve_discussion_params", "toggle_award_emoji", "toggle_award_emoji", "new_award_emoji", "awarded_emoji?", "create_award_emoji", "remove_award_emoji", "emoji_awardable?", "normalize_name", "emoji_awardable?", "to_todoable", "user_can_award?", "awardable_by_user?", "awardable_votes?", "user_authored?", "unsubscribe", "subscribe", "unsubscribe", "unsubscribe_from_other_levels", "find_or_initialize_subscription", "unsubscribe_and_redirect", "issue_path", "issue_path", "issue_path", "reopen_service", "reopen_service", "filter_assignee", "filter_milestone", "filter_labels", "filter_assignee", "assignee_can_read?", "filter_labels_in_param", "find_or_create_label_ids", "for_projects_and_groups", "handle_time_tracking_note", "handle_description_change_note", "create_labels_note", "create_title_change_note", "create_milestone_note", "create_discussion_lock_note", "discussion_lock", "change_milestone", "wipless_title_changed", "wipless_title_changed", "create_wip_note", "change_title", "handle_merge_request_wip", "change_label", "create_description_change_note", "create_task_status_note", "change_task_status", "change_description", "create_time_estimate_note", "create_time_spent_note", "change_time_spent", "change_time_estimate", "permitted_attrs", "clean_up_export_files", "reject_parent_id!", "valid_share_with_group_lock_change?", "changing_share_with_group_lock?", "proceed_to_transfer", "ensure_allowed_transfer", "group_is_already_root?", "same_parent?", "valid_policies?", "namespace_with_same_path?", "raise_transfer_error", "update_group_attributes", "update_children_and_projects_visibility", "create_group_path", "namespace_or_group", "remove_mattermost_team", "create_chat_team?", "can_use_visibility_level?", "gravatar_url", "gravatar_config", "new_gpg_key", "new_gpg_key_email", "before_push_tag", "build_system_push_data", "after_push_commit", "after_remove_branch", "update_gitattributes", "update_caches", "update_signatures", "process_commit_messages", "execute_related_hooks", "perform_housekeeping", "process_default_branch", "push_to_existing_branch?", "push_to_new_branch?", "push_remove_branch?", "default_branch?", "commit_count_for_ref", "needed?", "period_match?", "housekeeping_enabled?", "repack_period", "render_notes", "render_options", "update_secondary_emails!", "update_secondary_emails!", "set_notification_email", "set_public_email", "all_emails", "resend_confirmation_instructions", "tracer", "diff_discussion_outdated", "version_params_for", "viewable", "merge_request_diff_for", "viewable_diffs", "resolve_discussion", "can_resolve?", "follow_up_issue", "discussion_continued_in_issue", "merge_request_branch_names", "origin_merge_requests", "find_branch", "rm_branch", "before_remove_branch", "executable?", "deploy", "expanded_environment_url", "deploy", "on_stop", "add_branch", "create_master_branch", "create_file", "compare_source_branch", "create_commit!", "create_commit!", "create_commit!", "create_commit!", "create_commit!", "create_commit!", "create_commit!", "create_commit!", "actions_after_lfs_transformation", "commit_actions!", "delete_file", "create_transformed_commit", "create_dir", "create_dir", "commit_change", "cohorts", "running_totals", "counts_by_month", "column_to_date", "continue_creation", "finalize_creation", "request_operation", "elapsed_time_from_creation", "get_operation_id", "api_client", "configure_provider", "configure_kubernetes", "request_kubernetes_token", "gke_cluster", "create_cluster", "can_create_cluster?", "cluster_params", "application_class", "application_class", "install_command", "install_command", "install_command", "install_command", "helm_api", "install_command", "chart", "chart", "chart", "on_success", "on_failed", "check_timeout", "installation_phase", "timeouted?", "remove_installation_pod", "installation_errors", "ingress_ip", "shared", "can_pick?", "tick_runner_queue", "shared_runners_enabled?", "with_shared_runners", "runner_queue_key", "assignable_for?", "accepting_tags?", "ref_protected?", "stop_action?", "stop_action?", "stop_with_action!", "play", "play", "play", "stop_action", "manual_actions", "manual_actions", "playable?", "playable?", "playable?", "playable?", "process!", "reprocess!", "close_all", "retried", "retried", "mark_as_processable_after_stage", "after_stage", "matches_tag_ids", "with_any_tags", "builds_for_shared_runner", "builds_for_specific_runner", "register_failure", "register_success", "register_failure", "pages_deployments_failed_total_counter", "jobs_running_for_project", "attempt_counter", "job_queue_duration_seconds", "failed_attempt_counter", "with_builds_enabled", "new_builds", "unstarted", "ref_protected", "running_builds_for_shared_runners", "process_stage", "stage_indexes_of_created_builds", "update_retried", "created_builds", "process_build", "status_for_prior_stages", "created_builds_in_stage", "valid_statuses_for_when", "retry", "retry", "retry", "retry", "retry", "retry_failed", "retryable?", "retryable?", "retryable?", "retryable?", "failed?", "hook_log", "set_hook_execution_notice", "hook_log", "create_pipeline_from_trigger", "trigger_from_token", "read_secrets", "extract_sections", "find_or_create_name", "ensure_stage", "find_stage", "create_stage", "cancel_pending_pipelines", "pipeline_created_counter", "schedule_head_pipeline_update", "related_merge_requests", "auto_cancel_running", "auto_cancelable_pipelines", "created_or_pending", "pipeline_schedule_params", "update_last_used_at", "update_last_used_at", "find_chat_name", "update_last_used_at?", "request_token", "valid_move?", "reorder_intermediate_lists", "update_list_position", "decrement_intermediate_lists", "increment_intermediate_lists", "create_list", "create_list", "destroyable?", "decrement_higher_lists", "remove_list", "available_labels_for", "next_position", "create_board!", "create_board!", "set_parent", "set_state", "set_scope", "list", "list", "list", "ls_files", "order_by_position_and_priority", "movable_list?", "closed_list?", "without_board_labels", "with_list_label", "board_label_ids", "issues_label_links", "create_issue", "can_create_board?", "authorized_token", "stop_environments", "invalidate_issue_cache_counts", "invalidate_merge_request_cache_counts", "invalidate_todos_done_count", "invalidate_todos_pending_count", "build_url", "build_url", "allowed_branch?", "should_pipeline_be_notified?", "should_pipeline_be_notified?", "should_pipeline_be_notified?", "retrieve_recipients", "notify_for_ref?", "notify_for_pipeline?", "settings", "settings", "ssh_algorithms_hashes", "gitlab_pages", "gitlab_ci", "resolv_dns", "ssh_algorithm_hashes", "ssh_algorithm_file_content", "ssh_algorithm_md5", "ssh_algorithm_sha256", "ssh_algorithm_file", "gate", "message_options", "create_message", "create_push_message", "create_issue_message", "create_merge_request_message", "create_note_message", "create_pipeline_message", "message_color", "pipeline_status_color", "disable_diffs?", "tag_push_valid?", "push_valid?", "merge_request_valid?", "custom_data", "get_message", "get_channel_field", "custom_data", "event_channel_name", "auth", "auth", "speak", "build_message", "base_uri", "rooms", "auth_params", "get_path", "get_path", "check_commit", "with_associations", "relation_without_join_lateral", "relation_with_join_lateral", "with_associations", "filtered_events", "paginate_events", "base_relation", "limit_for_join_lateral", "detect_mentionable_changes", "pipeline_data", "running_or_pending_build_count", "running_or_pending", "by_created_at", "by_custom_attributes", "by_search", "by_username", "by_search", "by_username", "by_search", "by_blocked", "by_active", "by_external_identity", "by_external", "by_2fa", "with_extern_uid", "with_provider", "normalize_uid", "full_search", "created_before", "created_after", "scoped_table", "scoped_table", "recent_events", "limit_recent", "by_action", "by_state", "by_project", "by_author", "by_state", "by_state", "by_author", "by_action", "by_action_id", "by_author", "by_project", "by_state", "by_type", "type?", "done", "public_or_visible_to_user", "public_or_visible_to_user", "action_id?", "action_id", "inactive", "inactive", "filter_by_state", "closed", "closed", "no_author?", "references_project", "references_project", "filter_by_name", "filter_by_name", "tags_sorted_by", "tags_sorted_by_committed_date", "init_collection", "init_collection", "init_collection", "init_collection", "init_collection", "init_collection", "by_visibility", "visibility_from_scope", "authorized_snippets_from_project", "authorized_snippets", "feature_available_projects", "not_project_related", "table", "projects_for_user", "collection_with_user", "collection_without_user", "collection_with_user", "collection_without_user", "owned_projects?", "private_only?", "owned_projects", "owned_projects", "owned_projects_union", "include_subgroups?", "self_and_descendants", "only_owned?", "only_shared?", "notes_of_target_type", "notes_of_any_type", "notes_on_target", "related_notes", "notes_for_type", "with_confidentiality_access_check", "public_only?", "user_can_see_all_confidential_issues?", "user_cannot_see_confidential_issues?", "by_status", "by_status", "by_visibilty_level", "by_archived", "by_personal", "by_ids", "by_personal", "by_starred", "by_trending", "by_visibilty_level", "by_tags", "by_archived", "trending", "trending", "starred_by", "personal", "by_name", "by_scope", "by_scope", "by_ref", "by_name", "by_yaml_errors", "sort_items", "ids_for_ref", "from_ids", "assigned_to", "assigned_to", "by_user", "by_impersonation", "with_impersonation", "without_impersonation", "since_fetch_at", "updated_after", "updated_after", "excluding_project", "projects_where_can_admin_issues", "with_issues_enabled", "by_groups_and_projects", "by_title", "group_ids", "distinct_on", "authorized_to_read_labels?", "group_ids_for", "only_group_labels?", "groups_to_include", "groups_user_can_read_labels", "include_ancestor_groups?", "include_descendant_groups?", "with_title", "with_title", "filter_items", "filter_items", "filter_items", "by_source_branch", "by_target_branch", "by_due_date", "filter_by_no_due_date?", "filter_by_overdue?", "filter_by_due_this_week?", "filter_by_due_this_month?", "due_date?", "without_due_date", "due_before", "due_between", "by_updated_at", "by_group", "by_iids", "by_assignee", "by_milestone", "by_label", "by_my_reaction_emoji", "by_non_archived", "by_assignee", "by_milestone", "no_assignee?", "unassigned", "unassigned", "awarded", "without_label", "with_label", "grouping_columns", "filter_by_no_milestone?", "filter_by_upcoming_milestone?", "filter_by_started_milestone?", "with_milestone", "upcoming_ids_by_projects", "updated_before", "by_parent", "ancestors_of_filtered_projects", "ancestors_of_filtered_subgroups", "ancestors_of_groups", "by_current_user_access", "by_target_type", "by_created_at_before", "by_created_at_after", "includes_commit?", "order_by_last_deployed_at", "recently_updated_on_branch?", "includes_commit?", "can_read_cross_project?", "filter_by_scope", "disabled", "disabled", "branches_sorted_by", "local_branches", "find_users", "todo_authors", "users_from_project", "users_with_parents", "by_namespace_id", "by_with_push", "by_abandoned", "by_last_repository_check_failed", "abandoned", "set_default_state", "set_sort_order_from_cookie", "default_sort_order", "valid_params", "scalar_params", "array_params", "scalar_params", "update_cookie_value", "update_page", "initialize_raw_repository", "render_variables", "variables_params", "variable_params_attributes", "variable_params_attributes", "update_params", "update_params", "update_params", "update_params", "update_params", "run_autodevops_pipeline", "runner_path", "runner_status_icon", "belongs_to_one_project?", "specific?", "run_auto_devops_pipeline?", "gitlab_ci_yml", "managed?", "service_params", "success_message", "add_to_breadcrumbs", "service_save_button", "can_test?", "deprecation_message", "can_test?", "can_test?", "can_test?", "can_test?", "can_test?", "can_test?", "deprecation_message", "deprecated_message_content", "deprecated?", "deprecated?", "event_channel_names", "event_channel_names", "event_names", "runner_params", "runner_params", "release", "release_params", "update_service_class", "define_edit_vars", "group_link_params", "after_edit_path", "preferences_params", "dropdown_tag", "can_change_share_with_group_lock?", "remove_group_message", "share_with_group_lock_help_text", "parent_group_options", "default_help", "ancestor_locked_but_you_can_override", "ancestor_locked_so_ask_the_owner", "ancestor_locked_and_has_been_overridden", "ancestor_group", "oldest_consecutively_locked_ancestor", "remove_the_share_with_group_lock_from_ancestor", "render_group_variables", "group_variables_params", "redirect_back_or_group_labels_path", "previous_labels_path", "fallback_path", "root_params_key", "recaptcha_check_if_spammable", "render_entity_json", "update_service", "update_service", "move_params", "move_params", "changing_own_password?", "assign_builds_and_projects", "detailed_status", "detailed_status", "detailed_status", "detailed_status", "detailed_status", "detailed_status", "detailed_status", "detailed_status", "detailed_status", "detailed_status", "detailed_status", "application_setting_params", "visible_application_setting_attributes", "button_based_providers", "auth_providers", "form_based_provider?", "visible_attributes", "application_name", "start_date", "start_date", "set_attributes", "page_specific_javascript_tag", "mattermost_teams_options", "suggested_colors", "link_to_discussions_to_resolve", "allow_maintainer_push_unavailable_reason", "discussions_can_be_resolved_by?", "contribution_guide_path", "tree_join", "contribution_guide", "import_will_timeout_message", "import_svn_message", "import_failed?", "time_interval_in_words", "manageable_namespaces", "manageable_groups", "github_import_configured?", "logged_in_with_provider?", "go_to_provider_for_permissions", "status_import_url", "logged_in_with_provider?", "import_github_authorize_message", "import_github_personal_access_token_message", "import_configure_github_admin_message", "extra_import_params", "callback_import_url", "allowed_appearance_params"]
CLASSES: ["FormHelper", "Commit", "CommitRange", "WikiPage", "AkismetService", "CycleAnalyticsParams", "Clusters::Concerns::ApplicationCore", "BlobLike", "Project", "JiraService", "SnippetBlob", "SpamLog", "Auth::ContainerRegistryAuthenticationService", "BaseService", "DeleteBranchService", "Lfs::LockFileService", "Projects::UpdatePagesService", "Tags::DestroyService", "TestHooks::BaseService", "Repository", "MergeRequestMetricsService", "Milestone", "IssuableActions", "MembershipActions", "NotesActions", "MergeRequestsFinder", "ResolvableDiscussion", "Boards::Issues::MoveService", "Ci::UpdateRunnerService", "IssuableBaseService", "IssuableCollections", "MergeRequestsAction", "AccessRequestsFinder", "Admin::ProjectsFinder", "AutocompleteUsersFinder", "BranchesFinder", "ClustersFinder", "FinderWithCrossProjectAccess", "ContributedProjectsFinder", "EnvironmentsFinder", "EventsFinder", "GroupDescendantsFinder", "GroupFinder", "GroupMembersFinder", "GroupsFinder", "IssuableFinder", "JoinedGroupsFinder", "LabelsFinder", "MembersFinder", "MergeRequestTargetProjectFinder", "MilestonesFinder", "MoveToProjectFinder", "NotesFinder", "PersonalAccessTokensFinder", "PersonalProjectsFinder", "PipelineSchedulesFinder", "PipelinesFinder", "ProjectsFinder", "RunnerJobsFinder", "SnippetsFinder", "TagsFinder", "TodosFinder", "UserRecentEventsFinder", "UsersFinder", "Ci::Build", "Ci::Pipeline", "Mentionable::ClassMethods", "DeployToken", "EventCollection", "ExternalIssue", "ServiceHook", "WebHook", "Issue", "ProjectMember", "MergeRequest", "MergeRequestDiff", "AsanaService", "AssemblaService", "BambooService", "BuildkiteService", "CampfireService", "ChatNotificationService", "DroneCiService", "EmailsOnPushService", "ExternalWikiService", "FlowdockService", "GemnasiumService", "HipchatService", "IrkerService", "IssueTrackerService", "PackagistService", "PipelinesEmailService", "PivotaltrackerService", "PushoverService", "TeamcityService", "Service", "User", "ProjectPolicy", "BuildArtifactEntity", "BuildDetailsEntity", "ContainerRepositoryEntity", "ContainerTagEntity", "RunnerEntity", "AfterBranchDeleteService", "ApplicationSettings::UpdateService", "Applications::CreateService", "Badges::BuildService", "Badges::CreateService", "Badges::UpdateService", "Boards::CreateService", "Boards::Issues::CreateService", "Boards::Issues::ListService", "Boards::ListService", "Boards::Lists::CreateService", "Boards::Lists::DestroyService", "Boards::Lists::GenerateService", "Boards::Lists::ListService", "Boards::Lists::MoveService", "ChatNames::AuthorizeUserService", "ChatNames::FindUserService", "CheckGcpProjectBillingService", "Ci::CreatePipelineScheduleService", "Ci::CreatePipelineService", "Ci::EnsureStageService", "Ci::ExtractSectionsFromBuildTraceService", "Ci::FetchKubernetesTokenService", "Ci::PipelineTriggerService", "Ci::PlayBuildService", "Ci::ProcessPipelineService", "Ci::RegisterJobService", "Ci::RetryBuildService", "Ci::RetryPipelineService", "Ci::StopEnvironmentsService", "Ci::UpdateBuildQueueService", "Clusters::Applications::CheckIngressIpAddressService", "Clusters::Applications::CheckInstallationProgressService", "Clusters::Applications::InstallService", "Clusters::Applications::ScheduleInstallationService", "Clusters::CreateService", "Clusters::Gcp::FetchOperationService", "Clusters::Gcp::FinalizeCreationService", "Clusters::Gcp::ProvisionService", "Clusters::Gcp::VerifyProvisionStatusService", "Clusters::UpdateService", "CohortsService", "Commits::CreateService", "CompareService", "CreateBranchService", "CreateDeploymentService", "CreateReleaseService", "CreateSnippetService", "DeleteMergedBranchesService", "DeployKeys::CreateService", "DeployTokens::CreateService", "Discussions::ResolveService", "Discussions::UpdateDiffPositionService", "Emails::ConfirmService", "Emails::CreateService", "Emails::DestroyService", "Events::RenderService", "GitPushService", "GitTagPushService", "GpgKeys::CreateService", "GravatarService", "Groups::CreateService", "Groups::DestroyService", "Groups::NestedCreateService", "Groups::TransferService", "Groups::UpdateService", "ImportExportCleanUpService", "Issuable::BulkUpdateService", "Issuable::CommonSystemNotesService", "Issuable::DestroyService", "Issues::BaseService", "Issues::BuildService", "Issues::CloseService", "Issues::CreateService", "Issues::DuplicateService", "Issues::FetchReferencedMergeRequestsService", "Issues::MoveService", "Issues::ReopenService", "Issues::UpdateService", "Keys::CreateService", "Keys::LastUsedService", "Labels::CreateService", "Labels::FindOrCreateService", "Labels::PromoteService", "Labels::TransferService", "Labels::UpdateService", "Lfs::LocksFinderService", "Lfs::UnlockFileService", "Mattermost::CreateTeamService", "Members::ApproveAccessRequestService", "Members::CreateService", "Members::DestroyService", "Members::RequestAccessService", "Members::UpdateService", "MergeRequests::AddTodoWhenBuildFailsService", "MergeRequests::AssignIssuesService", "MergeRequests::BaseService", "MergeRequests::BuildService", "MergeRequests::CloseService", "MergeRequests::Conflicts::ResolveService", "MergeRequests::CreateFromIssueService", "MergeRequests::CreateService", "MergeRequests::GetUrlsService", "MergeRequests::MergeRequestDiffCacheService", "MergeRequests::MergeService", "MergeRequests::MergeWhenPipelineSucceedsService", "MergeRequests::PostMergeService", "MergeRequests::RebaseService", "MergeRequests::RefreshService", "MergeRequests::ReopenService", "MergeRequests::ResolvedDiscussionNotificationService", "MergeRequests::UpdateService", "Milestones::CloseService", "Milestones::CreateService", "Milestones::DestroyService", "Milestones::PromoteService", "Milestones::ReopenService", "Milestones::UpdateService", "Notes::BuildService", "Notes::CreateService", "Notes::DestroyService", "Notes::PostProcessService", "Notes::QuickActionsService", "Notes::RenderService", "Notes::UpdateService", "NotificationRecipientService::Builder::Base", "NotificationRecipientService::Builder::NewNote", "PagesService", "PreviewMarkdownService", "Projects::AfterImportService", "Projects::BaseMoveRelationsService", "Projects::CreateFromTemplateService", "Projects::CreateService", "Projects::DestroyService", "Projects::DownloadService", "Projects::EnableDeployKeyService", "Projects::ForkService", "Projects::GitlabProjectsImportService", "Projects::GroupLinks::CreateService", "Projects::GroupLinks::DestroyService", "Projects::HashedStorage::MigrateAttachmentsService", "Projects::HashedStorage::MigrateRepositoryService", "Projects::HashedStorageMigrationService", "Projects::HousekeepingService::LeaseTaken", "Projects::ImportExport::ExportService", "Projects::ImportService", "Projects::MoveAccessService", "Projects::MoveDeployKeysProjectsService", "Projects::MoveForksService", "Projects::MoveLfsObjectsProjectsService", "Projects::MoveNotificationSettingsService", "Projects::MoveProjectAuthorizationsService", "Projects::MoveProjectGroupLinksService", "Projects::MoveProjectMembersService", "Projects::MoveUsersStarProjectsService", "Projects::OverwriteProjectService", "Projects::ParticipantsService", "Projects::TransferService", "Projects::UnlinkForkService", "Projects::UpdatePagesConfigurationService", "Projects::UpdateService", "ProtectedBranches::CreateService", "ProtectedBranches::DestroyService", "ProtectedBranches::LegacyApiCreateService", "ProtectedBranches::LegacyApiUpdateService", "ProtectedBranches::UpdateService", "ProtectedTags::CreateService", "ProtectedTags::DestroyService", "ProtectedTags::UpdateService", "PushEventPayloadService", "QuickActions::InterpretService", "RepairLdapBlockedUserService", "RepositoryArchiveCleanUpService", "ResetProjectCacheService", "Search::GlobalService", "Search::ProjectService", "Search::SnippetService", "SearchService", "SubmitUsagePingService", "SystemHooksService", "Tags::CreateService", "TestHooks::ProjectService", "UpdateReleaseService", "UpdateSnippetService", "UploadService", "UserProjectAccessChangedService", "Users::ActivityService", "Users::BuildService", "Users::CreateService", "Users::DestroyService", "Users::MigrateToGhostUserService", "Users::RefreshAuthorizedProjectsService", "Users::UpdateService", "ValidateNewBranchService", "VerifyPagesDomainService", "WebHookService::InternalErrorResponse", "WikiPages::BaseService", "WikiPages::CreateService", "WikiPages::DestroyService", "WikiPages::UpdateService", "FileMover", "UploadsActions", "ObjectStorage::Extension::RecordsUploads", "ObjectStorage::Concern", "RecordsUploads::Concern", "FinderMethods", "AvatarUploader", "FileUploader", "GitlabUploader", "Ci::ArtifactBlob", "ObjectStorage::MigrateUploadsWorker::MigrationResult", "ObjectStorage::MigrateUploadsWorker::Report::MigrationFailures", "Ci::LegacyStage", "Discussion", "WebHookLog", "ChatMessage::BaseMessage", "ChatMessage::IssueMessage", "ChatMessage::MergeMessage", "ChatMessage::NoteMessage", "ChatMessage::PipelineMessage", "ChatMessage::PushMessage", "ChatMessage::WikiPageMessage", "List", "BugzillaService", "CustomIssueTrackerService", "KubernetesService", "MattermostService", "MattermostSlashCommandsService", "MicrosoftTeamsService", "MockCiService", "MockDeploymentService", "MockMonitoringService", "PrometheusService", "RedmineService", "SlackService", "SlackSlashCommandsService", "MergeRequestPresenter", "GlobalMilestone", "GroupMilestone", "GroupMember", "ProjectTeam", "BaseMailer", "Guest", "Ability", "BroadcastMessage", "HasStatus", "NoteOnDiff", "DiffNote", "LegacyDiffDiscussion", "LegacyDiffNote", "Note::SpecialRole", "PersonalAccessToken", "Expirable", "Milestoneish", "Event", "PagesDomain", "Appearance", "ApplicationSetting", "Blob", "ProjectWiki", "ContainerRepository", "ThrottledTouch", "SentNotification", "Todo", "ForkProjectsFinder", "GroupProjectsFinder", "IssuesFinder", "AbuseReportMailer", "EmailRejectionMailer", "Notify", "RepositoryCheckMailer", "GroupBadge", "ProjectBadge", "BlobViewer::GitlabCiYml", "BlobViewer::RouteMap", "DashboardMilestone", "DeployKey", "DiffDiscussion", "GenericCommitStatus", "Group", "GroupLabel", "ProjectHook", "SystemHook", "IndividualNoteDiscussion", "OutOfContextDiscussion", "PersonalSnippet", "ProjectLabel", "BuildsEmailService", "CiService", "DeploymentService", "GitlabIssueTrackerService", "MonitoringService", "SlashCommandsService", "ProjectSnippet", "PushEvent", "SecurityEvent", "CommitStatusPolicy", "DeployKeyPolicy", "DeployTokenPolicy", "DeploymentPolicy", "EnvironmentPolicy", "ExternalIssuePolicy", "GlobalPolicy", "GroupLabelPolicy", "GroupMemberPolicy", "GroupPolicy", "IssuablePolicy", "IssuePolicy", "MergeRequestPolicy", "NamespacePolicy", "NilPolicy", "NotePolicy", "PersonalSnippetPolicy", "ProjectLabelPolicy", "ProjectMemberPolicy", "ProjectSnippetPolicy", "ProtectedBranchPolicy", "UserPolicy", "GroupMemberPresenter", "ProjectMemberPresenter", "AnalyticsBuildSerializer", "AnalyticsCommitEntity", "AnalyticsCommitSerializer", "AnalyticsGenericSerializer", "AnalyticsIssueSerializer", "AnalyticsMergeRequestEntity", "AnalyticsMergeRequestSerializer", "AnalyticsStageSerializer", "AnalyticsSummarySerializer", "BuildSerializer", "ClusterSerializer", "CohortsSerializer", "ContainerRepositoriesSerializer", "ContainerTagsSerializer", "DeployKeySerializer", "DeploymentSerializer", "DiscussionSerializer", "EnvironmentSerializer", "GroupChildSerializer", "GroupSerializer", "GroupVariableSerializer", "IssueEntity", "IssueSerializer", "IssueSidebarEntity", "LabelSerializer", "LfsFileLockSerializer", "MergeRequestBasicEntity", "MergeRequestBasicSerializer", "MergeRequestCreateSerializer", "MergeRequestSerializer", "MergeRequestWidgetEntity", "NoteUserEntity", "PipelineDetailsEntity", "PipelineSerializer", "ProjectNoteEntity", "ProjectNoteSerializer", "ProjectSerializer", "TreeSerializer", "UserSerializer", "VariableSerializer", "AttachmentUploader", "JobArtifactUploader", "LegacyArtifactUploader", "LfsObjectUploader", "NamespaceFileUploader", "PersonalFileUploader", "NamespacePathValidator", "ProjectPathValidator", "UrlPlaceholderValidator", "DeployTokensHelper", "LfsRequest", "Clusters::Cluster", "ProjectAutoDevops", "Flowdock::Git::Builder", "SystemNoteService", "Label", "NotificationReason", "RequiresWhitelistedMonitoringClient", "PageLayoutHelper", "ProjectsHelper", "Routable", "UserSyncedAttributesMetadata", "BoardsResponses", "IssuablesHelper", "Board", "Clusters::Applications::Runner", "Clusters::Concerns::ApplicationData", "Storage::LegacyProjectWiki", "Storage::HashedProject", "Storage::LegacyProject", "ApplicationHelper", "Upload", "ObjectStorage::MigrateUploadsWorker::Upload", "Namespace", "BreadcrumbsHelper", "GroupsHelper", "Avatarable::ShadowMethods", "Tree", "Compare", "ProtectedRef", "Deployment", "GpgSignature", "MergeRequests::FfMergeService", "Referable::ClassMethods", "Snippet", "Epic", "MergeRequests::WorkingCopyBaseService", "Ci::PipelineSchedule", "Ci::Runner", "Member", "Mentionable::ReferenceRegexes", "DirectlyAddressedUser", "ProjectFeature", "UnionFinder", "Uniquify", "Issuable::ClassMethods", "NoteSummary", "ProtectedBranches::ApiService", "UserAgentDetailService", "SpammableActions", "RequestAwareEntity", "ProtectedBranches::AccessLevelParams", "GroupChildEntity", "AuthenticatesWithTwoFactor", "ChecksCollaboration", "ContinueParams", "CreatesCommit", "DiffForPath", "EnforcesTwoFactorAuthentication", "GroupTree", "HooksExecution", "IssuesAction", "MembersPresentation", "MilestoneActions", "OauthApplications", "ParamsBackwardCompatibility", "PreviewMarkdown", "RendersBlob", "RendersCommits", "RendersMemberAccess", "RendersNotes", "RepositorySettingsRedirect", "RoutableActions", "SendFileUpload", "ServiceParams", "SnippetsActions", "ToggleAwardEmoji", "ToggleSubscriptionAction", "WithPerformanceBar", "WorkhorseRequest", "CreatedAtFilter", "CustomAttributesFilter", "AccountsHelper", "AppearancesHelper", "ApplicationSettingsHelper", "AuthHelper", "AutoDevopsHelper", "AvatarsHelper", "AwardEmojiHelper", "BlameHelper", "BlobHelper", "BoardsHelper", "BranchesHelper", "BroadcastMessagesHelper", "BuildsHelper", "ButtonHelper", "CiStatusHelper", "ClustersHelper", "CommitsHelper", "CompareHelper", "ComponentsHelper", "ConversationalDevelopmentIndexHelper", "DashboardHelper", "DeferScriptTagHelper", "DiffHelper", "DropdownsHelper", "EmailsHelper", "EmojiHelper", "EnvironmentHelper", "EnvironmentsHelper", "EventsHelper", "ExploreHelper", "ExternalWikiHelper", "GitHelper", "GitlabRoutingHelper", "GraphHelper", "HooksHelper", "IconsHelper", "ImportHelper", "InstanceConfigurationHelper", "IssuesHelper", "JavascriptHelper", "KerberosSpnegoHelper", "LabelsHelper", "LazyImageTagHelper", "MarkupHelper", "MattermostHelper", "MembersHelper", "MergeRequestsHelper", "MilestonesHelper", "MilestonesRoutingHelper", "NamespacesHelper", "NavHelper", "NotesHelper", "NotificationsHelper", "NumbersHelper", "PaginationHelper", "PerformanceBarHelper", "PipelineSchedulesHelper", "PreferencesHelper", "ProfilesHelper", "RssHelper", "RunnersHelper", "SafeParamsHelper", "SearchHelper", "SelectsHelper", "SentryHelper", "ServicesHelper", "SidekiqHelper", "SnippetsHelper", "SortingHelper", "StorageHealthHelper", "StorageHelper", "SubmoduleHelper", "SystemNoteHelper", "TabHelper", "TagsHelper", "TimeHelper", "TodosHelper", "TreeHelper", "TriggersHelper", "UserCalloutsHelper", "UsersHelper", "VersionCheckHelper", "VisibilityLevelHelper", "WebpackHelper", "WikiHelper", "WorkhorseHelper", "DeviseMailer", "Emails::Issues", "Emails::Members", "Emails::MergeRequests", "Emails::Notes", "Emails::PagesDomains", "Emails::Pipelines", "Emails::Profile", "Emails::Projects", "AbuseReport", "AuditEvent", "AwardEmoji", "Badge", "BlobViewer::Auxiliary", "BlobViewer::Balsamiq", "BlobViewer::Base", "BlobViewer::BinarySTL", "BlobViewer::Cartfile", "BlobViewer::Changelog", "BlobViewer::ClientSide", "BlobViewer::ComposerJson", "BlobViewer::Contributing", "BlobViewer::DependencyManager", "BlobViewer::Download", "BlobViewer::Empty", "BlobViewer::Gemfile", "BlobViewer::Gemspec", "BlobViewer::GodepsJson", "BlobViewer::Image", "BlobViewer::License", "BlobViewer::Markup", "BlobViewer::Notebook", "BlobViewer::PackageJson", "BlobViewer::PDF", "BlobViewer::Podfile", "BlobViewer::Podspec", "BlobViewer::PodspecJson", "BlobViewer::Readme", "BlobViewer::RequirementsTxt", "BlobViewer::Rich", "BlobViewer::ServerSide", "BlobViewer::Simple", "BlobViewer::Sketch", "BlobViewer::Static", "BlobViewer::SVG", "BlobViewer::Text", "BlobViewer::TextSTL", "BlobViewer::Video", "BlobViewer::YarnLock", "ChatName", "ChatTeam", "Ci::BuildMetadata", "Ci::BuildTraceSection", "Ci::BuildTraceSectionName", "Ci::Group", "Ci::GroupVariable", "Ci::JobArtifact", "Ci::PipelineScheduleVariable", "Ci::PipelineVariable", "Ci::RunnerProject", "Ci::Stage", "Ci::Trigger", "Ci::TriggerRequest", "Ci::Variable", "Clusters::Applications::Helm", "Clusters::Applications::Ingress", "Clusters::Applications::Prometheus", "Clusters::Concerns::ApplicationStatus", "Clusters::Platforms::Kubernetes", "Clusters::Project", "Clusters::Providers::Gcp", "CommitCollection", "CommitStatus", "AccessRequestable", "ArtifactMigratable", "AtomicInternalId::ClassMethods", "Awardable::ClassMethods", "BlocksJsonSerialization", "BulkMemberAccessLoad", "CacheMarkdownField::FieldData", "CaseSensitivity::ClassMethods", "ChronicDurationAttribute", "CreatedAtFilterable", "DeploymentPlatform", "DiscussionOnDiff", "EachBatch::ClassMethods", "Editable", "FasterCacheKeys", "FeatureGate", "GhostUser", "GroupDescendant", "HasVariable", "IgnorableColumn::ClassMethods", "Importable", "LoadedInGroupList::ClassMethods", "ManualInverseAssociation::ClassMethods", "Noteable", "Participable::ClassMethods", "Presentable", "ProjectFeaturesCompatibility", "PrometheusAdapter", "ProtectedBranchAccess", "ProtectedRefAccess", "ProtectedTagAccess", "ReactiveCaching", "ReactiveService", "RedisCacheable", "RelativePositioning", "ResolvableNote::ClassMethods", "SelectForProjectAuthorization::ClassMethods", "ShaAttribute::ClassMethods", "Sortable::ClassMethods", "Spammable::ClassMethods", "Storage::LegacyNamespace", "Storage::LegacyRepository", "StripAttribute::ClassMethods", "Subscribable", "Taskable", "TimeTrackable", "TokenAuthenticatable", "TriggerableHooks", "UpdatedAtFilterable", "ValidAttribute", "ConversationalDevelopmentIndex::Card", "ConversationalDevelopmentIndex::IdeaToProductionStep", "ConversationalDevelopmentIndex::Metric", "CycleAnalytics", "DeployKeysProject", "DiffViewer::Added", "DiffViewer::Base", "DiffViewer::ClientSide", "DiffViewer::Deleted", "DiffViewer::Image", "DiffViewer::ModeChanged", "DiffViewer::NoPreview", "DiffViewer::NotDiffable", "DiffViewer::Renamed", "DiffViewer::Rich", "DiffViewer::ServerSide", "DiffViewer::Simple", "DiffViewer::Static", "DiffViewer::Text", "DiscussionNote", "Email", "Environment", "ForkNetwork", "ForkNetworkMember", "ForkedProjectLink", "GlobalLabel", "GpgKey", "GpgKeySubkey", "GroupCustomAttribute", "Identity", "InstanceConfiguration", "InternalId::InternalIdGenerator", "Issue::Metrics", "IssueAssignee", "IssueCollection", "Key", "LabelLink", "LabelPriority", "LfsFileLock", "LfsObject", "LfsObjectsProject", "MergeRequest::Metrics", "MergeRequestDiffCommit", "MergeRequestDiffFile", "MergeRequestsClosingIssues", "Network::Commit", "Network::Graph", "NotificationRecipient", "NotificationSetting", "OauthAccessGrant", "OauthAccessToken", "ProjectAuthorization", "ProjectCustomAttribute", "ProjectDeployToken", "ProjectGroupLink", "ProjectImportData", "ProjectStatistics", "ProtectableDropdown", "ProtectedBranch::MergeAccessLevel", "ProtectedBranch::PushAccessLevel", "ProtectedBranch", "ProtectedRefMatcher", "ProtectedTag::CreateAccessLevel", "ProtectedTag", "PushEventPayload", "ReadmeBlob", "RedirectRoute", "Release", "Route", "Subscription", "SystemNoteMetadata", "Timelog", "TrendingProject", "U2fRegistration", "UserAgentDetail", "UserCallout", "UserCustomAttribute", "UserInteractedProject", "UsersStarProject", "WikiDirectory", "BasePolicy", "Ci::BuildPolicy", "Ci::PipelinePolicy", "Ci::PipelineSchedulePolicy", "Ci::RunnerPolicy", "Ci::TriggerPolicy", "Clusters::ClusterPolicy", "ProjectPolicy::ClassMethods", "Ci::BuildMetadataPresenter", "Ci::BuildPresenter", "Ci::GroupVariablePresenter", "Ci::PipelinePresenter", "Ci::VariablePresenter", "Clusters::ClusterPresenter", "ConversationalDevelopmentIndex::MetricPresenter", "MemberPresenter", "MembersPresenter", "ProjectPresenter", "Projects::Settings::DeployKeysPresenter", "AnalyticsBuildEntity", "AnalyticsIssueEntity", "AnalyticsStageEntity", "AnalyticsSummaryEntity", "AwardEmojiEntity", "BaseSerializer", "BlobEntity", "BuildActionEntity", "BuildMetadataEntity", "ClusterApplicationEntity", "ClusterEntity", "CohortActivityMonthEntity", "CohortEntity", "CohortsEntity", "CommitEntity", "WithPagination", "DeployKeyEntity", "DeployKeysProjectEntity", "DeploymentEntity", "DiffFileEntity", "DiscussionEntity", "EntityDateHelper", "EntityRequest", "EnvironmentEntity", "GroupEntity", "GroupVariableEntity", "IssuableEntity", "IssuableSidebarEntity", "JobEntity", "JobGroupEntity", "LabelEntity", "LfsFileLockEntity", "MergeRequestCreateEntity", "MergeRequestMetricsEntity", "NoteAttachmentEntity", "NoteEntity", "PipelineEntity", "ProjectEntity", "StageEntity", "StatusEntity", "SubmoduleEntity", "TimeTrackableEntity", "TreeEntity", "TreeRootEntity", "UserEntity", "VariableEntity", "AccessTokenValidationService", "ApplicationSettings::BaseService", "AuditEventService", "Badges::BaseService", "BaseCountService", "BaseRenderer", "Boards::BaseService", "Clusters::Applications::BaseHelmService", "Commits::ChangeService", "Commits::CherryPickService", "Commits::RevertService", "Issues::ResolveDiscussions", "UpdateVisibilityLevel", "Users::NewUserNotifier", "Discussions::BaseService", "Emails::BaseService", "EventCreateService", "Files::BaseService", "Files::CreateDirService", "Files::CreateService", "Files::DeleteService", "Files::MultiService", "Files::UpdateService", "Groups::BaseService", "HamService", "Keys::BaseService", "Labels::BaseService", "Lfs::FileTransformer::Result", "Members::BaseService", "MergeRequests::Conflicts::BaseService", "MergeRequests::Conflicts::ListService", "MetricsService", "Milestones::BaseService", "NotificationRecipientService::Builder::Default", "NotificationService", "Projects::AutocompleteService", "Projects::BatchCountService", "Projects::BatchForksCountService", "Projects::BatchOpenIssuesCountService", "Projects::CountService", "Projects::ForksCountService", "Projects::OpenIssuesCountService", "Projects::OpenMergeRequestsCountService", "Projects::PropagateServiceTemplate", "Prometheus::AdapterService", "Search::GroupService", "SpamCheckService", "SpamService", "TestHooks::SystemService", "TodoService", "Users::KeysCountService", "Users::LastPushEventService", "ObjectStorage::Store", "ObjectStorage::BackgroundMove", "UploaderHelper", "Workhorse::UploadPath", "AbstractPathValidator", "AddressableUrlValidator", "CertificateFingerprintValidator", "CertificateKeyValidator", "CertificateValidator", "ClusterNameValidator", "ColorValidator", "CronTimezoneValidator", "CronValidator", "DurationValidator", "EmailValidator", "ImportableUrlValidator", "KeyRestrictionValidator", "LineCodeValidator", "NamespaceNameValidator", "TopLevelGroupValidator", "UrlValidator", "VariableDuplicatesValidator", "AdminEmailWorker", "ArchiveTraceWorker", "AuthorizedProjectsWorker", "BackgroundMigrationWorker", "BuildCoverageWorker", "BuildFinishedWorker", "BuildHooksWorker", "BuildQueueWorker", "BuildSuccessWorker", "BuildTraceSectionsWorker", "CheckGcpProjectBillingWorker", "ClusterInstallAppWorker", "ClusterProvisionWorker", "ClusterWaitForAppInstallationWorker", "ClusterWaitForIngressIpAddressWorker", "ApplicationWorker::ClassMethods", "ClusterApplications", "ClusterQueue", "CronjobQueue", "ExceptionBacktrace", "Gitlab::GithubImport::NotifyUponDeath", "Gitlab::GithubImport::ObjectImporter", "Gitlab::GithubImport::Queue", "Gitlab::GithubImport::ReschedulingMethods", "Gitlab::GithubImport::StageMethods", "MailSchedulerQueue", "NewIssuable", "ObjectStorageQueue", "PipelineBackgroundQueue", "PipelineQueue", "ProjectImportOptions", "ProjectStartImport", "RepositoryCheckQueue", "WaitableWorker::ClassMethods", "CreateGpgSignatureWorker", "CreatePipelineWorker", "DeleteMergedBranchesWorker", "DeleteUserWorker", "EmailReceiverWorker", "EmailsOnPushWorker", "ExpireBuildArtifactsWorker", "ExpireBuildInstanceArtifactsWorker", "ExpireJobCacheWorker", "ExpirePipelineCacheWorker", "GitGarbageCollectWorker", "Gitlab::GithubImport::AdvanceStageWorker", "Gitlab::GithubImport::ImportDiffNoteWorker", "Gitlab::GithubImport::ImportIssueWorker", "Gitlab::GithubImport::ImportNoteWorker", "Gitlab::GithubImport::ImportPullRequestWorker", "Gitlab::GithubImport::RefreshImportJidWorker", "Gitlab::GithubImport::Stage::FinishImportWorker", "Gitlab::GithubImport::Stage::ImportBaseDataWorker", "Gitlab::GithubImport::Stage::ImportIssuesAndDiffNotesWorker", "Gitlab::GithubImport::Stage::ImportNotesWorker", "Gitlab::GithubImport::Stage::ImportPullRequestsWorker", "Gitlab::GithubImport::Stage::ImportRepositoryWorker", "GitlabShellWorker", "GitlabUsagePingWorker", "GroupDestroyWorker", "ImportExportProjectCleanupWorker", "InvalidGpgSignatureUpdateWorker", "IrkerWorker", "IssueDueSchedulerWorker", "MailScheduler::IssueDueWorker", "MergeWorker", "NamespacelessProjectDestroyWorker", "NewIssueWorker", "NewMergeRequestWorker", "NewNoteWorker", "ObjectStorage::BackgroundMoveWorker", "ObjectStorageUploadWorker", "PagesDomainVerificationCronWorker", "PagesDomainVerificationWorker", "PagesWorker", "PipelineHooksWorker", "PipelineMetricsWorker", "PipelineNotificationWorker", "PipelineProcessWorker", "PipelineScheduleWorker", "PipelineSuccessWorker", "PipelineUpdateWorker", "PluginWorker", "PostReceive", "ProcessCommitWorker", "ProjectCacheWorker", "ProjectDestroyWorker", "ProjectExportWorker", "ProjectMigrateHashedStorageWorker", "ProjectServiceWorker", "PropagateServiceTemplateWorker", "PruneOldEventsWorker", "ReactiveCachingWorker", "RebaseWorker", "RemoveExpiredGroupLinksWorker", "RemoveExpiredMembersWorker", "RemoveOldWebHookLogsWorker", "RemoveUnreferencedLfsObjectsWorker", "RepositoryArchiveCacheWorker", "RepositoryCheck::BatchWorker", "RepositoryCheck::ClearWorker", "RepositoryCheck::SingleRepositoryWorker", "RepositoryForkWorker", "RepositoryImportWorker", "RequestsProfilesWorker", "RunPipelineScheduleWorker", "ScheduleUpdateUserActivityWorker", "StageUpdateWorker", "StorageMigratorWorker", "StuckCiJobsWorker", "StuckImportJobsWorker", "StuckMergeJobsWorker", "SystemHookPushWorker", "TrendingProjectsWorker", "UpdateHeadPipelineForMergeRequestWorker", "UpdateMergeRequestsWorker", "UpdateUserActivityWorker", "UploadChecksumWorker", "WaitForClusterCreationWorker", "WebHookWorker", "CiCommit", "CiJob", "CiProject", "CiSession", "CiTagging", "CiTag", "CiWebHook", "Note", "OauthApplication", "Tagging", "Tag", "Admin::AppearancesController"]
AAA: read_ruby_files: 1890.593343
Dataflow file: ../applications/pw-gitlab//dataflow/finders/access_requests_finder.log matches class name AccessRequestsFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/admin/projects_finder.log matches class name Admin::ProjectsFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/autocomplete_users_finder.log matches class name AutocompleteUsersFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/branches_finder.log matches class name BranchesFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/clusters_finder.log matches class name ClustersFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/concerns/created_at_filter.log matches class name CreatedAtFilter
Dataflow file: ../applications/pw-gitlab//dataflow/finders/concerns/custom_attributes_filter.log matches class name CustomAttributesFilter
Dataflow file: ../applications/pw-gitlab//dataflow/finders/concerns/finder_methods.log matches class name FinderMethods
Dataflow file: ../applications/pw-gitlab//dataflow/finders/concerns/finder_with_cross_project_access.log matches class name FinderWithCrossProjectAccess
Dataflow file: ../applications/pw-gitlab//dataflow/finders/contributed_projects_finder.log matches class name ContributedProjectsFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/environments_finder.log matches class name EnvironmentsFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/events_finder.log matches class name EventsFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/fork_projects_finder.log matches class name ForkProjectsFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/group_descendants_finder.log matches class name GroupDescendantsFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/group_finder.log matches class name GroupFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/group_members_finder.log matches class name GroupMembersFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/group_projects_finder.log matches class name GroupProjectsFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/groups_finder.log matches class name GroupsFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/issuable_finder.log matches class name IssuableFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/issues_finder.log matches class name IssuesFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/joined_groups_finder.log matches class name JoinedGroupsFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/labels_finder.log matches class name LabelsFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/members_finder.log matches class name MembersFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/merge_request_target_project_finder.log matches class name MergeRequestTargetProjectFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/merge_requests_finder.log matches class name MergeRequestsFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/milestones_finder.log matches class name MilestonesFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/move_to_project_finder.log matches class name MoveToProjectFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/notes_finder.log matches class name NotesFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/personal_access_tokens_finder.log matches class name PersonalAccessTokensFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/personal_projects_finder.log matches class name PersonalProjectsFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/pipeline_schedules_finder.log matches class name PipelineSchedulesFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/pipelines_finder.log matches class name PipelinesFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/projects_finder.log matches class name ProjectsFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/runner_jobs_finder.log matches class name RunnerJobsFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/snippets_finder.log matches class name SnippetsFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/tags_finder.log matches class name TagsFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/todos_finder.log matches class name TodosFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/union_finder.log matches class name UnionFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/user_recent_events_finder.log matches class name UserRecentEventsFinder
Dataflow file: ../applications/pw-gitlab//dataflow/finders/users_finder.log matches class name UsersFinder
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/accounts_helper.log matches class name AccountsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/appearances_helper.log matches class name AppearancesHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/application_helper.log matches class name ApplicationHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/application_settings_helper.log matches class name ApplicationSettingsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/auth_helper.log matches class name AuthHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/auto_devops_helper.log matches class name AutoDevopsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/avatars_helper.log matches class name AvatarsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/award_emoji_helper.log matches class name AwardEmojiHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/blame_helper.log matches class name BlameHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/blob_helper.log matches class name BlobHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/boards_helper.log matches class name BoardsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/branches_helper.log matches class name BranchesHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/breadcrumbs_helper.log matches class name BreadcrumbsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/broadcast_messages_helper.log matches class name BroadcastMessagesHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/builds_helper.log matches class name BuildsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/button_helper.log matches class name ButtonHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/ci_status_helper.log matches class name CiStatusHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/clusters_helper.log matches class name ClustersHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/commits_helper.log matches class name CommitsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/compare_helper.log matches class name CompareHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/components_helper.log matches class name ComponentsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/conversational_development_index_helper.log matches class name ConversationalDevelopmentIndexHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/dashboard_helper.log matches class name DashboardHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/defer_script_tag_helper.log matches class name DeferScriptTagHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/deploy_tokens_helper.log matches class name DeployTokensHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/diff_helper.log matches class name DiffHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/dropdowns_helper.log matches class name DropdownsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/emails_helper.log matches class name EmailsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/emoji_helper.log matches class name EmojiHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/environment_helper.log matches class name EnvironmentHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/environments_helper.log matches class name EnvironmentsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/events_helper.log matches class name EventsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/explore_helper.log matches class name ExploreHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/external_wiki_helper.log matches class name ExternalWikiHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/form_helper.log matches class name FormHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/git_helper.log matches class name GitHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/gitlab_routing_helper.log matches class name GitlabRoutingHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/graph_helper.log matches class name GraphHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/groups_helper.log matches class name GroupsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/hooks_helper.log matches class name HooksHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/icons_helper.log matches class name IconsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/import_helper.log matches class name ImportHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/instance_configuration_helper.log matches class name InstanceConfigurationHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/issuables_helper.log matches class name IssuablesHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/issues_helper.log matches class name IssuesHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/javascript_helper.log matches class name JavascriptHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/kerberos_spnego_helper.log matches class name KerberosSpnegoHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/labels_helper.log matches class name LabelsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/lazy_image_tag_helper.log matches class name LazyImageTagHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/markup_helper.log matches class name MarkupHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/mattermost_helper.log matches class name MattermostHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/members_helper.log matches class name MembersHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/merge_requests_helper.log matches class name MergeRequestsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/milestones_helper.log matches class name MilestonesHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/milestones_routing_helper.log matches class name MilestonesRoutingHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/namespaces_helper.log matches class name NamespacesHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/nav_helper.log matches class name NavHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/notes_helper.log matches class name NotesHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/notifications_helper.log matches class name NotificationsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/numbers_helper.log matches class name NumbersHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/page_layout_helper.log matches class name PageLayoutHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/pagination_helper.log matches class name PaginationHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/performance_bar_helper.log matches class name PerformanceBarHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/pipeline_schedules_helper.log matches class name PipelineSchedulesHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/preferences_helper.log matches class name PreferencesHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/profiles_helper.log matches class name ProfilesHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/projects_helper.log matches class name ProjectsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/rss_helper.log matches class name RssHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/runners_helper.log matches class name RunnersHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/safe_params_helper.log matches class name SafeParamsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/search_helper.log matches class name SearchHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/selects_helper.log matches class name SelectsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/sentry_helper.log matches class name SentryHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/services_helper.log matches class name ServicesHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/sidekiq_helper.log matches class name SidekiqHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/snippets_helper.log matches class name SnippetsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/sorting_helper.log matches class name SortingHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/storage_health_helper.log matches class name StorageHealthHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/storage_helper.log matches class name StorageHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/submodule_helper.log matches class name SubmoduleHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/system_note_helper.log matches class name SystemNoteHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/tab_helper.log matches class name TabHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/tags_helper.log matches class name TagsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/time_helper.log matches class name TimeHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/todos_helper.log matches class name TodosHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/tree_helper.log matches class name TreeHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/triggers_helper.log matches class name TriggersHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/user_callouts_helper.log matches class name UserCalloutsHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/users_helper.log matches class name UsersHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/version_check_helper.log matches class name VersionCheckHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/visibility_level_helper.log matches class name VisibilityLevelHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/webpack_helper.log matches class name WebpackHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/wiki_helper.log matches class name WikiHelper
Dataflow file: ../applications/pw-gitlab//dataflow/helpers/workhorse_helper.log matches class name WorkhorseHelper
Dataflow file: ../applications/pw-gitlab//dataflow/mailers/abuse_report_mailer.log matches class name AbuseReportMailer
Dataflow file: ../applications/pw-gitlab//dataflow/mailers/base_mailer.log matches class name BaseMailer
Dataflow file: ../applications/pw-gitlab//dataflow/mailers/devise_mailer.log matches class name DeviseMailer
Dataflow file: ../applications/pw-gitlab//dataflow/mailers/email_rejection_mailer.log matches class name EmailRejectionMailer
Dataflow file: ../applications/pw-gitlab//dataflow/mailers/emails/issues.log matches class name Emails::Issues
Dataflow file: ../applications/pw-gitlab//dataflow/mailers/emails/members.log matches class name Emails::Members
Dataflow file: ../applications/pw-gitlab//dataflow/mailers/emails/merge_requests.log matches class name Emails::MergeRequests
Dataflow file: ../applications/pw-gitlab//dataflow/mailers/emails/notes.log matches class name Emails::Notes
Dataflow file: ../applications/pw-gitlab//dataflow/mailers/emails/pages_domains.log matches class name Emails::PagesDomains
Dataflow file: ../applications/pw-gitlab//dataflow/mailers/emails/pipelines.log matches class name Emails::Pipelines
Dataflow file: ../applications/pw-gitlab//dataflow/mailers/emails/profile.log matches class name Emails::Profile
Dataflow file: ../applications/pw-gitlab//dataflow/mailers/emails/projects.log matches class name Emails::Projects
Dataflow file: ../applications/pw-gitlab//dataflow/mailers/notify.log matches class name Notify
Dataflow file: ../applications/pw-gitlab//dataflow/mailers/repository_check_mailer.log matches class name RepositoryCheckMailer
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/admin/appearances_controller.log matches class name Admin::AppearancesController
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/authenticates_with_two_factor.log matches class name AuthenticatesWithTwoFactor
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/boards_responses.log matches class name BoardsResponses
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/checks_collaboration.log matches class name ChecksCollaboration
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/continue_params.log matches class name ContinueParams
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/creates_commit.log matches class name CreatesCommit
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/cycle_analytics_params.log matches class name CycleAnalyticsParams
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/diff_for_path.log matches class name DiffForPath
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/enforces_two_factor_authentication.log matches class name EnforcesTwoFactorAuthentication
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/group_tree.log matches class name GroupTree
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/hooks_execution.log matches class name HooksExecution
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/issuable_actions.log matches class name IssuableActions
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/issuable_collections.log matches class name IssuableCollections
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/issues_action.log matches class name IssuesAction
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/lfs_request.log matches class name LfsRequest
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/members_presentation.log matches class name MembersPresentation
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/membership_actions.log matches class name MembershipActions
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/merge_requests_action.log matches class name MergeRequestsAction
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/milestone_actions.log matches class name MilestoneActions
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/notes_actions.log matches class name NotesActions
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/oauth_applications.log matches class name OauthApplications
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/params_backward_compatibility.log matches class name ParamsBackwardCompatibility
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/preview_markdown.log matches class name PreviewMarkdown
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/renders_blob.log matches class name RendersBlob
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/renders_commits.log matches class name RendersCommits
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/renders_member_access.log matches class name RendersMemberAccess
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/renders_notes.log matches class name RendersNotes
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/repository_settings_redirect.log matches class name RepositorySettingsRedirect
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/requires_whitelisted_monitoring_client.log matches class name RequiresWhitelistedMonitoringClient
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/routable_actions.log matches class name RoutableActions
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/send_file_upload.log matches class name SendFileUpload
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/service_params.log matches class name ServiceParams
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/snippets_actions.log matches class name SnippetsActions
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/spammable_actions.log matches class name SpammableActions
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/toggle_award_emoji.log matches class name ToggleAwardEmoji
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/toggle_subscription_action.log matches class name ToggleSubscriptionAction
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/uploads_actions.log matches class name UploadsActions
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/with_performance_bar.log matches class name WithPerformanceBar
Dataflow file: ../applications/pw-gitlab//dataflow/merged_controllers/concerns/workhorse_request.log matches class name WorkhorseRequest
Dataflow file: ../applications/pw-gitlab//dataflow/models/ability.log matches class name Ability
Dataflow file: ../applications/pw-gitlab//dataflow/models/abuse_report.log matches class name AbuseReport
Dataflow file: ../applications/pw-gitlab//dataflow/models/appearance.log matches class name Appearance
Dataflow file: ../applications/pw-gitlab//dataflow/models/application_setting.log matches class name ApplicationSetting
Dataflow file: ../applications/pw-gitlab//dataflow/models/audit_event.log matches class name AuditEvent
Dataflow file: ../applications/pw-gitlab//dataflow/models/award_emoji.log matches class name AwardEmoji
Dataflow file: ../applications/pw-gitlab//dataflow/models/badge.log matches class name Badge
Dataflow file: ../applications/pw-gitlab//dataflow/models/badges/group_badge.log matches class name GroupBadge
Dataflow file: ../applications/pw-gitlab//dataflow/models/badges/project_badge.log matches class name ProjectBadge
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob.log matches class name Blob
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/auxiliary.log matches class name BlobViewer::Auxiliary
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/balsamiq.log matches class name BlobViewer::Balsamiq
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/base.log matches class name BlobViewer::Base
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/binary_stl.log matches class name BlobViewer::BinarySTL
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/cartfile.log matches class name BlobViewer::Cartfile
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/changelog.log matches class name BlobViewer::Changelog
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/client_side.log matches class name BlobViewer::ClientSide
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/composer_json.log matches class name BlobViewer::ComposerJson
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/contributing.log matches class name BlobViewer::Contributing
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/dependency_manager.log matches class name BlobViewer::DependencyManager
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/download.log matches class name BlobViewer::Download
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/empty.log matches class name BlobViewer::Empty
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/gemfile.log matches class name BlobViewer::Gemfile
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/gemspec.log matches class name BlobViewer::Gemspec
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/gitlab_ci_yml.log matches class name BlobViewer::GitlabCiYml
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/godeps_json.log matches class name BlobViewer::GodepsJson
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/image.log matches class name BlobViewer::Image
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/license.log matches class name BlobViewer::License
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/markup.log matches class name BlobViewer::Markup
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/notebook.log matches class name BlobViewer::Notebook
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/package_json.log matches class name BlobViewer::PackageJson
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/pdf.log matches class name BlobViewer::PDF
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/podfile.log matches class name BlobViewer::Podfile
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/podspec.log matches class name BlobViewer::Podspec
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/podspec_json.log matches class name BlobViewer::PodspecJson
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/readme.log matches class name BlobViewer::Readme
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/requirements_txt.log matches class name BlobViewer::RequirementsTxt
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/rich.log matches class name BlobViewer::Rich
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/route_map.log matches class name BlobViewer::RouteMap
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/server_side.log matches class name BlobViewer::ServerSide
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/simple.log matches class name BlobViewer::Simple
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/sketch.log matches class name BlobViewer::Sketch
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/static.log matches class name BlobViewer::Static
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/svg.log matches class name BlobViewer::SVG
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/text.log matches class name BlobViewer::Text
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/text_stl.log matches class name BlobViewer::TextSTL
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/video.log matches class name BlobViewer::Video
Dataflow file: ../applications/pw-gitlab//dataflow/models/blob_viewer/yarn_lock.log matches class name BlobViewer::YarnLock
Dataflow file: ../applications/pw-gitlab//dataflow/models/board.log matches class name Board
Dataflow file: ../applications/pw-gitlab//dataflow/models/broadcast_message.log matches class name BroadcastMessage
Dataflow file: ../applications/pw-gitlab//dataflow/models/chat_name.log matches class name ChatName
Dataflow file: ../applications/pw-gitlab//dataflow/models/chat_team.log matches class name ChatTeam
Dataflow file: ../applications/pw-gitlab//dataflow/models/ci/artifact_blob.log matches class name Ci::ArtifactBlob
Dataflow file: ../applications/pw-gitlab//dataflow/models/ci/build.log matches class name Ci::Build
Dataflow file: ../applications/pw-gitlab//dataflow/models/ci/build_metadata.log matches class name Ci::BuildMetadata
Dataflow file: ../applications/pw-gitlab//dataflow/models/ci/build_trace_section.log matches class name Ci::BuildTraceSection
Dataflow file: ../applications/pw-gitlab//dataflow/models/ci/build_trace_section_name.log matches class name Ci::BuildTraceSectionName
Dataflow file: ../applications/pw-gitlab//dataflow/models/ci/group.log matches class name Ci::Group
Dataflow file: ../applications/pw-gitlab//dataflow/models/ci/group_variable.log matches class name Ci::GroupVariable
Dataflow file: ../applications/pw-gitlab//dataflow/models/ci/job_artifact.log matches class name Ci::JobArtifact
Dataflow file: ../applications/pw-gitlab//dataflow/models/ci/legacy_stage.log matches class name Ci::LegacyStage
Dataflow file: ../applications/pw-gitlab//dataflow/models/ci/pipeline.log matches class name Ci::Pipeline
Dataflow file: ../applications/pw-gitlab//dataflow/models/ci/pipeline_schedule.log matches class name Ci::PipelineSchedule
Dataflow file: ../applications/pw-gitlab//dataflow/models/ci/pipeline_schedule_variable.log matches class name Ci::PipelineScheduleVariable
Dataflow file: ../applications/pw-gitlab//dataflow/models/ci/pipeline_variable.log matches class name Ci::PipelineVariable
Dataflow file: ../applications/pw-gitlab//dataflow/models/ci/runner.log matches class name Ci::Runner
Dataflow file: ../applications/pw-gitlab//dataflow/models/ci/runner_project.log matches class name Ci::RunnerProject
Dataflow file: ../applications/pw-gitlab//dataflow/models/ci/stage.log matches class name Ci::Stage
Dataflow file: ../applications/pw-gitlab//dataflow/models/ci/trigger.log matches class name Ci::Trigger
Dataflow file: ../applications/pw-gitlab//dataflow/models/ci/trigger_request.log matches class name Ci::TriggerRequest
Dataflow file: ../applications/pw-gitlab//dataflow/models/ci/variable.log matches class name Ci::Variable
Dataflow file: ../applications/pw-gitlab//dataflow/models/clusters/applications/helm.log matches class name Clusters::Applications::Helm
Dataflow file: ../applications/pw-gitlab//dataflow/models/clusters/applications/ingress.log matches class name Clusters::Applications::Ingress
Dataflow file: ../applications/pw-gitlab//dataflow/models/clusters/applications/prometheus.log matches class name Clusters::Applications::Prometheus
Dataflow file: ../applications/pw-gitlab//dataflow/models/clusters/applications/runner.log matches class name Clusters::Applications::Runner
Dataflow file: ../applications/pw-gitlab//dataflow/models/clusters/cluster.log matches class name Clusters::Cluster
Dataflow file: ../applications/pw-gitlab//dataflow/models/clusters/concerns/application_core.log matches class name Clusters::Concerns::ApplicationCore
Dataflow file: ../applications/pw-gitlab//dataflow/models/clusters/concerns/application_data.log matches class name Clusters::Concerns::ApplicationData
Dataflow file: ../applications/pw-gitlab//dataflow/models/clusters/concerns/application_status.log matches class name Clusters::Concerns::ApplicationStatus
Dataflow file: ../applications/pw-gitlab//dataflow/models/clusters/platforms/kubernetes.log matches class name Clusters::Platforms::Kubernetes
Dataflow file: ../applications/pw-gitlab//dataflow/models/clusters/project.log matches class name Clusters::Project
Dataflow file: ../applications/pw-gitlab//dataflow/models/clusters/providers/gcp.log matches class name Clusters::Providers::Gcp
Dataflow file: ../applications/pw-gitlab//dataflow/models/commit.log matches class name Commit
Dataflow file: ../applications/pw-gitlab//dataflow/models/commit_collection.log matches class name CommitCollection
Dataflow file: ../applications/pw-gitlab//dataflow/models/commit_range.log matches class name CommitRange
Dataflow file: ../applications/pw-gitlab//dataflow/models/commit_status.log matches class name CommitStatus
Dataflow file: ../applications/pw-gitlab//dataflow/models/compare.log matches class name Compare
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/access_requestable.log matches class name AccessRequestable
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/artifact_migratable.log matches class name ArtifactMigratable
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/atomic_internal_id.log matches class name AtomicInternalId::ClassMethods
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/avatarable.log matches class name Avatarable::ShadowMethods
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/awardable.log matches class name Awardable::ClassMethods
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/blob_like.log matches class name BlobLike
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/blocks_json_serialization.log matches class name BlocksJsonSerialization
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/bulk_member_access_load.log matches class name BulkMemberAccessLoad
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/cache_markdown_field.log matches class name CacheMarkdownField::FieldData
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/case_sensitivity.log matches class name CaseSensitivity::ClassMethods
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/chronic_duration_attribute.log matches class name ChronicDurationAttribute
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/created_at_filterable.log matches class name CreatedAtFilterable
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/deployment_platform.log matches class name DeploymentPlatform
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/discussion_on_diff.log matches class name DiscussionOnDiff
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/each_batch.log matches class name EachBatch::ClassMethods
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/editable.log matches class name Editable
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/expirable.log matches class name Expirable
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/faster_cache_keys.log matches class name FasterCacheKeys
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/feature_gate.log matches class name FeatureGate
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/ghost_user.log matches class name GhostUser
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/group_descendant.log matches class name GroupDescendant
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/has_status.log matches class name HasStatus
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/has_variable.log matches class name HasVariable
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/ignorable_column.log matches class name IgnorableColumn::ClassMethods
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/importable.log matches class name Importable
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/issuable.log matches class name Issuable::ClassMethods
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/loaded_in_group_list.log matches class name LoadedInGroupList::ClassMethods
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/manual_inverse_association.log matches class name ManualInverseAssociation::ClassMethods
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/mentionable/reference_regexes.log matches class name Mentionable::ReferenceRegexes
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/mentionable.log matches class name Mentionable::ClassMethods
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/milestoneish.log matches class name Milestoneish
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/note_on_diff.log matches class name NoteOnDiff
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/noteable.log matches class name Noteable
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/participable.log matches class name Participable::ClassMethods
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/presentable.log matches class name Presentable
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/project_features_compatibility.log matches class name ProjectFeaturesCompatibility
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/prometheus_adapter.log matches class name PrometheusAdapter
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/protected_branch_access.log matches class name ProtectedBranchAccess
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/protected_ref.log matches class name ProtectedRef
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/protected_ref_access.log matches class name ProtectedRefAccess
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/protected_tag_access.log matches class name ProtectedTagAccess
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/reactive_caching.log matches class name ReactiveCaching
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/reactive_service.log matches class name ReactiveService
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/redis_cacheable.log matches class name RedisCacheable
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/referable.log matches class name Referable::ClassMethods
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/relative_positioning.log matches class name RelativePositioning
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/resolvable_discussion.log matches class name ResolvableDiscussion
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/resolvable_note.log matches class name ResolvableNote::ClassMethods
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/routable.log matches class name Routable
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/select_for_project_authorization.log matches class name SelectForProjectAuthorization::ClassMethods
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/sha_attribute.log matches class name ShaAttribute::ClassMethods
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/sortable.log matches class name Sortable::ClassMethods
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/spammable.log matches class name Spammable::ClassMethods
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/storage/legacy_namespace.log matches class name Storage::LegacyNamespace
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/storage/legacy_project_wiki.log matches class name Storage::LegacyProjectWiki
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/storage/legacy_repository.log matches class name Storage::LegacyRepository
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/strip_attribute.log matches class name StripAttribute::ClassMethods
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/subscribable.log matches class name Subscribable
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/taskable.log matches class name Taskable
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/throttled_touch.log matches class name ThrottledTouch
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/time_trackable.log matches class name TimeTrackable
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/token_authenticatable.log matches class name TokenAuthenticatable
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/triggerable_hooks.log matches class name TriggerableHooks
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/uniquify.log matches class name Uniquify
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/updated_at_filterable.log matches class name UpdatedAtFilterable
Dataflow file: ../applications/pw-gitlab//dataflow/models/concerns/valid_attribute.log matches class name ValidAttribute
Dataflow file: ../applications/pw-gitlab//dataflow/models/container_repository.log matches class name ContainerRepository
Dataflow file: ../applications/pw-gitlab//dataflow/models/conversational_development_index/card.log matches class name ConversationalDevelopmentIndex::Card
Dataflow file: ../applications/pw-gitlab//dataflow/models/conversational_development_index/idea_to_production_step.log matches class name ConversationalDevelopmentIndex::IdeaToProductionStep
Dataflow file: ../applications/pw-gitlab//dataflow/models/conversational_development_index/metric.log matches class name ConversationalDevelopmentIndex::Metric
Dataflow file: ../applications/pw-gitlab//dataflow/models/cycle_analytics.log matches class name CycleAnalytics
Dataflow file: ../applications/pw-gitlab//dataflow/models/dashboard_milestone.log matches class name DashboardMilestone
Dataflow file: ../applications/pw-gitlab//dataflow/models/deploy_key.log matches class name DeployKey
Dataflow file: ../applications/pw-gitlab//dataflow/models/deploy_keys_project.log matches class name DeployKeysProject
Dataflow file: ../applications/pw-gitlab//dataflow/models/deploy_token.log matches class name DeployToken
Dataflow file: ../applications/pw-gitlab//dataflow/models/deployment.log matches class name Deployment
Dataflow file: ../applications/pw-gitlab//dataflow/models/diff_discussion.log matches class name DiffDiscussion
Dataflow file: ../applications/pw-gitlab//dataflow/models/diff_note.log matches class name DiffNote
Dataflow file: ../applications/pw-gitlab//dataflow/models/diff_viewer/added.log matches class name DiffViewer::Added
Dataflow file: ../applications/pw-gitlab//dataflow/models/diff_viewer/base.log matches class name DiffViewer::Base
Dataflow file: ../applications/pw-gitlab//dataflow/models/diff_viewer/client_side.log matches class name DiffViewer::ClientSide
Dataflow file: ../applications/pw-gitlab//dataflow/models/diff_viewer/deleted.log matches class name DiffViewer::Deleted
Dataflow file: ../applications/pw-gitlab//dataflow/models/diff_viewer/image.log matches class name DiffViewer::Image
Dataflow file: ../applications/pw-gitlab//dataflow/models/diff_viewer/mode_changed.log matches class name DiffViewer::ModeChanged
Dataflow file: ../applications/pw-gitlab//dataflow/models/diff_viewer/no_preview.log matches class name DiffViewer::NoPreview
Dataflow file: ../applications/pw-gitlab//dataflow/models/diff_viewer/not_diffable.log matches class name DiffViewer::NotDiffable
Dataflow file: ../applications/pw-gitlab//dataflow/models/diff_viewer/renamed.log matches class name DiffViewer::Renamed
Dataflow file: ../applications/pw-gitlab//dataflow/models/diff_viewer/rich.log matches class name DiffViewer::Rich
Dataflow file: ../applications/pw-gitlab//dataflow/models/diff_viewer/server_side.log matches class name DiffViewer::ServerSide
Dataflow file: ../applications/pw-gitlab//dataflow/models/diff_viewer/simple.log matches class name DiffViewer::Simple
Dataflow file: ../applications/pw-gitlab//dataflow/models/diff_viewer/static.log matches class name DiffViewer::Static
Dataflow file: ../applications/pw-gitlab//dataflow/models/diff_viewer/text.log matches class name DiffViewer::Text
Dataflow file: ../applications/pw-gitlab//dataflow/models/directly_addressed_user.log matches class name DirectlyAddressedUser
Dataflow file: ../applications/pw-gitlab//dataflow/models/discussion.log matches class name Discussion
Dataflow file: ../applications/pw-gitlab//dataflow/models/discussion_note.log matches class name DiscussionNote
Dataflow file: ../applications/pw-gitlab//dataflow/models/email.log matches class name Email
Dataflow file: ../applications/pw-gitlab//dataflow/models/environment.log matches class name Environment
Dataflow file: ../applications/pw-gitlab//dataflow/models/epic.log matches class name Epic
Dataflow file: ../applications/pw-gitlab//dataflow/models/event.log matches class name Event
Dataflow file: ../applications/pw-gitlab//dataflow/models/event_collection.log matches class name EventCollection
Dataflow file: ../applications/pw-gitlab//dataflow/models/external_issue.log matches class name ExternalIssue
Dataflow file: ../applications/pw-gitlab//dataflow/models/fork_network.log matches class name ForkNetwork
Dataflow file: ../applications/pw-gitlab//dataflow/models/fork_network_member.log matches class name ForkNetworkMember
Dataflow file: ../applications/pw-gitlab//dataflow/models/forked_project_link.log matches class name ForkedProjectLink
Dataflow file: ../applications/pw-gitlab//dataflow/models/generic_commit_status.log matches class name GenericCommitStatus
Dataflow file: ../applications/pw-gitlab//dataflow/models/global_label.log matches class name GlobalLabel
Dataflow file: ../applications/pw-gitlab//dataflow/models/global_milestone.log matches class name GlobalMilestone
Dataflow file: ../applications/pw-gitlab//dataflow/models/gpg_key.log matches class name GpgKey
Dataflow file: ../applications/pw-gitlab//dataflow/models/gpg_key_subkey.log matches class name GpgKeySubkey
Dataflow file: ../applications/pw-gitlab//dataflow/models/gpg_signature.log matches class name GpgSignature
Dataflow file: ../applications/pw-gitlab//dataflow/models/group.log matches class name Group
Dataflow file: ../applications/pw-gitlab//dataflow/models/group_custom_attribute.log matches class name GroupCustomAttribute
Dataflow file: ../applications/pw-gitlab//dataflow/models/group_label.log matches class name GroupLabel
Dataflow file: ../applications/pw-gitlab//dataflow/models/group_milestone.log matches class name GroupMilestone
Dataflow file: ../applications/pw-gitlab//dataflow/models/guest.log matches class name Guest
Dataflow file: ../applications/pw-gitlab//dataflow/models/hooks/project_hook.log matches class name ProjectHook
Dataflow file: ../applications/pw-gitlab//dataflow/models/hooks/service_hook.log matches class name ServiceHook
Dataflow file: ../applications/pw-gitlab//dataflow/models/hooks/system_hook.log matches class name SystemHook
Dataflow file: ../applications/pw-gitlab//dataflow/models/hooks/web_hook.log matches class name WebHook
Dataflow file: ../applications/pw-gitlab//dataflow/models/hooks/web_hook_log.log matches class name WebHookLog
Dataflow file: ../applications/pw-gitlab//dataflow/models/identity.log matches class name Identity
Dataflow file: ../applications/pw-gitlab//dataflow/models/individual_note_discussion.log matches class name IndividualNoteDiscussion
Dataflow file: ../applications/pw-gitlab//dataflow/models/instance_configuration.log matches class name InstanceConfiguration
Dataflow file: ../applications/pw-gitlab//dataflow/models/internal_id.log matches class name InternalId::InternalIdGenerator
Dataflow file: ../applications/pw-gitlab//dataflow/models/issue/metrics.log matches class name Issue::Metrics
Dataflow file: ../applications/pw-gitlab//dataflow/models/issue.log matches class name Issue
Dataflow file: ../applications/pw-gitlab//dataflow/models/issue_assignee.log matches class name IssueAssignee
Dataflow file: ../applications/pw-gitlab//dataflow/models/issue_collection.log matches class name IssueCollection
Dataflow file: ../applications/pw-gitlab//dataflow/models/key.log matches class name Key
Dataflow file: ../applications/pw-gitlab//dataflow/models/label.log matches class name Label
Dataflow file: ../applications/pw-gitlab//dataflow/models/label_link.log matches class name LabelLink
Dataflow file: ../applications/pw-gitlab//dataflow/models/label_priority.log matches class name LabelPriority
Dataflow file: ../applications/pw-gitlab//dataflow/models/legacy_diff_discussion.log matches class name LegacyDiffDiscussion
Dataflow file: ../applications/pw-gitlab//dataflow/models/legacy_diff_note.log matches class name LegacyDiffNote
Dataflow file: ../applications/pw-gitlab//dataflow/models/lfs_file_lock.log matches class name LfsFileLock
Dataflow file: ../applications/pw-gitlab//dataflow/models/lfs_object.log matches class name LfsObject
Dataflow file: ../applications/pw-gitlab//dataflow/models/lfs_objects_project.log matches class name LfsObjectsProject
Dataflow file: ../applications/pw-gitlab//dataflow/models/list.log matches class name List
Dataflow file: ../applications/pw-gitlab//dataflow/models/member.log matches class name Member
Dataflow file: ../applications/pw-gitlab//dataflow/models/members/group_member.log matches class name GroupMember
Dataflow file: ../applications/pw-gitlab//dataflow/models/members/project_member.log matches class name ProjectMember
Dataflow file: ../applications/pw-gitlab//dataflow/models/merge_request/metrics.log matches class name MergeRequest::Metrics
Dataflow file: ../applications/pw-gitlab//dataflow/models/merge_request.log matches class name MergeRequest
Dataflow file: ../applications/pw-gitlab//dataflow/models/merge_request_diff.log matches class name MergeRequestDiff
Dataflow file: ../applications/pw-gitlab//dataflow/models/merge_request_diff_commit.log matches class name MergeRequestDiffCommit
Dataflow file: ../applications/pw-gitlab//dataflow/models/merge_request_diff_file.log matches class name MergeRequestDiffFile
Dataflow file: ../applications/pw-gitlab//dataflow/models/merge_requests_closing_issues.log matches class name MergeRequestsClosingIssues
Dataflow file: ../applications/pw-gitlab//dataflow/models/milestone.log matches class name Milestone
Dataflow file: ../applications/pw-gitlab//dataflow/models/namespace.log matches class name Namespace
Dataflow file: ../applications/pw-gitlab//dataflow/models/network/commit.log matches class name Network::Commit
Dataflow file: ../applications/pw-gitlab//dataflow/models/network/graph.log matches class name Network::Graph
Dataflow file: ../applications/pw-gitlab//dataflow/models/note.log matches class name Note::SpecialRole
Dataflow file: ../applications/pw-gitlab//dataflow/models/notification_reason.log matches class name NotificationReason
Dataflow file: ../applications/pw-gitlab//dataflow/models/notification_recipient.log matches class name NotificationRecipient
Dataflow file: ../applications/pw-gitlab//dataflow/models/notification_setting.log matches class name NotificationSetting
Dataflow file: ../applications/pw-gitlab//dataflow/models/oauth_access_grant.log matches class name OauthAccessGrant
Dataflow file: ../applications/pw-gitlab//dataflow/models/oauth_access_token.log matches class name OauthAccessToken
Dataflow file: ../applications/pw-gitlab//dataflow/models/out_of_context_discussion.log matches class name OutOfContextDiscussion
Dataflow file: ../applications/pw-gitlab//dataflow/models/pages_domain.log matches class name PagesDomain
Dataflow file: ../applications/pw-gitlab//dataflow/models/personal_access_token.log matches class name PersonalAccessToken
Dataflow file: ../applications/pw-gitlab//dataflow/models/personal_snippet.log matches class name PersonalSnippet
Dataflow file: ../applications/pw-gitlab//dataflow/models/project.log matches class name Project
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_authorization.log matches class name ProjectAuthorization
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_auto_devops.log matches class name ProjectAutoDevops
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_custom_attribute.log matches class name ProjectCustomAttribute
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_deploy_token.log matches class name ProjectDeployToken
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_feature.log matches class name ProjectFeature
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_group_link.log matches class name ProjectGroupLink
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_import_data.log matches class name ProjectImportData
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_label.log matches class name ProjectLabel
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/asana_service.log matches class name AsanaService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/assembla_service.log matches class name AssemblaService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/bamboo_service.log matches class name BambooService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/bugzilla_service.log matches class name BugzillaService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/buildkite_service.log matches class name BuildkiteService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/builds_email_service.log matches class name BuildsEmailService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/campfire_service.log matches class name CampfireService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/chat_message/base_message.log matches class name ChatMessage::BaseMessage
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/chat_message/issue_message.log matches class name ChatMessage::IssueMessage
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/chat_message/merge_message.log matches class name ChatMessage::MergeMessage
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/chat_message/note_message.log matches class name ChatMessage::NoteMessage
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/chat_message/pipeline_message.log matches class name ChatMessage::PipelineMessage
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/chat_message/push_message.log matches class name ChatMessage::PushMessage
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/chat_message/wiki_page_message.log matches class name ChatMessage::WikiPageMessage
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/chat_notification_service.log matches class name ChatNotificationService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/ci_service.log matches class name CiService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/custom_issue_tracker_service.log matches class name CustomIssueTrackerService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/deployment_service.log matches class name DeploymentService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/drone_ci_service.log matches class name DroneCiService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/emails_on_push_service.log matches class name EmailsOnPushService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/external_wiki_service.log matches class name ExternalWikiService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/flowdock_service.log matches class name Flowdock::Git::Builder
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/gemnasium_service.log matches class name GemnasiumService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/gitlab_issue_tracker_service.log matches class name GitlabIssueTrackerService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/hipchat_service.log matches class name HipchatService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/irker_service.log matches class name IrkerService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/issue_tracker_service.log matches class name IssueTrackerService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/jira_service.log matches class name JiraService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/kubernetes_service.log matches class name KubernetesService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/mattermost_service.log matches class name MattermostService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/mattermost_slash_commands_service.log matches class name MattermostSlashCommandsService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/microsoft_teams_service.log matches class name MicrosoftTeamsService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/mock_ci_service.log matches class name MockCiService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/mock_deployment_service.log matches class name MockDeploymentService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/mock_monitoring_service.log matches class name MockMonitoringService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/monitoring_service.log matches class name MonitoringService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/packagist_service.log matches class name PackagistService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/pipelines_email_service.log matches class name PipelinesEmailService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/pivotaltracker_service.log matches class name PivotaltrackerService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/prometheus_service.log matches class name PrometheusService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/pushover_service.log matches class name PushoverService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/redmine_service.log matches class name RedmineService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/slack_service.log matches class name SlackService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/slack_slash_commands_service.log matches class name SlackSlashCommandsService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/slash_commands_service.log matches class name SlashCommandsService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_services/teamcity_service.log matches class name TeamcityService
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_snippet.log matches class name ProjectSnippet
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_statistics.log matches class name ProjectStatistics
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_team.log matches class name ProjectTeam
Dataflow file: ../applications/pw-gitlab//dataflow/models/project_wiki.log matches class name ProjectWiki
Dataflow file: ../applications/pw-gitlab//dataflow/models/protectable_dropdown.log matches class name ProtectableDropdown
Dataflow file: ../applications/pw-gitlab//dataflow/models/protected_branch/merge_access_level.log matches class name ProtectedBranch::MergeAccessLevel
Dataflow file: ../applications/pw-gitlab//dataflow/models/protected_branch/push_access_level.log matches class name ProtectedBranch::PushAccessLevel
Dataflow file: ../applications/pw-gitlab//dataflow/models/protected_branch.log matches class name ProtectedBranch
Dataflow file: ../applications/pw-gitlab//dataflow/models/protected_ref_matcher.log matches class name ProtectedRefMatcher
Dataflow file: ../applications/pw-gitlab//dataflow/models/protected_tag/create_access_level.log matches class name ProtectedTag::CreateAccessLevel
Dataflow file: ../applications/pw-gitlab//dataflow/models/protected_tag.log matches class name ProtectedTag
Dataflow file: ../applications/pw-gitlab//dataflow/models/push_event.log matches class name PushEvent
Dataflow file: ../applications/pw-gitlab//dataflow/models/push_event_payload.log matches class name PushEventPayload
Dataflow file: ../applications/pw-gitlab//dataflow/models/readme_blob.log matches class name ReadmeBlob
Dataflow file: ../applications/pw-gitlab//dataflow/models/redirect_route.log matches class name RedirectRoute
Dataflow file: ../applications/pw-gitlab//dataflow/models/release.log matches class name Release
Dataflow file: ../applications/pw-gitlab//dataflow/models/repository.log matches class name Repository
Dataflow file: ../applications/pw-gitlab//dataflow/models/route.log matches class name Route
Dataflow file: ../applications/pw-gitlab//dataflow/models/security_event.log matches class name SecurityEvent
Dataflow file: ../applications/pw-gitlab//dataflow/models/sent_notification.log matches class name SentNotification
Dataflow file: ../applications/pw-gitlab//dataflow/models/service.log matches class name Service
Dataflow file: ../applications/pw-gitlab//dataflow/models/snippet.log matches class name Snippet
Dataflow file: ../applications/pw-gitlab//dataflow/models/snippet_blob.log matches class name SnippetBlob
Dataflow file: ../applications/pw-gitlab//dataflow/models/spam_log.log matches class name SpamLog
Dataflow file: ../applications/pw-gitlab//dataflow/models/storage/hashed_project.log matches class name Storage::HashedProject
Dataflow file: ../applications/pw-gitlab//dataflow/models/storage/legacy_project.log matches class name Storage::LegacyProject
Dataflow file: ../applications/pw-gitlab//dataflow/models/subscription.log matches class name Subscription
Dataflow file: ../applications/pw-gitlab//dataflow/models/system_note_metadata.log matches class name SystemNoteMetadata
Dataflow file: ../applications/pw-gitlab//dataflow/models/timelog.log matches class name Timelog
Dataflow file: ../applications/pw-gitlab//dataflow/models/todo.log matches class name Todo
Dataflow file: ../applications/pw-gitlab//dataflow/models/tree.log matches class name Tree
Dataflow file: ../applications/pw-gitlab//dataflow/models/trending_project.log matches class name TrendingProject
Dataflow file: ../applications/pw-gitlab//dataflow/models/u2f_registration.log matches class name U2fRegistration
Dataflow file: ../applications/pw-gitlab//dataflow/models/upload.log matches class name Upload
Dataflow file: ../applications/pw-gitlab//dataflow/models/user.log matches class name User
Dataflow file: ../applications/pw-gitlab//dataflow/models/user_agent_detail.log matches class name UserAgentDetail
Dataflow file: ../applications/pw-gitlab//dataflow/models/user_callout.log matches class name UserCallout
Dataflow file: ../applications/pw-gitlab//dataflow/models/user_custom_attribute.log matches class name UserCustomAttribute
Dataflow file: ../applications/pw-gitlab//dataflow/models/user_interacted_project.log matches class name UserInteractedProject
Dataflow file: ../applications/pw-gitlab//dataflow/models/user_synced_attributes_metadata.log matches class name UserSyncedAttributesMetadata
Dataflow file: ../applications/pw-gitlab//dataflow/models/users_star_project.log matches class name UsersStarProject
Dataflow file: ../applications/pw-gitlab//dataflow/models/wiki_directory.log matches class name WikiDirectory
Dataflow file: ../applications/pw-gitlab//dataflow/models/wiki_page.log matches class name WikiPage
Dataflow file: ../applications/pw-gitlab//dataflow/policies/base_policy.log matches class name BasePolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/ci/build_policy.log matches class name Ci::BuildPolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/ci/pipeline_policy.log matches class name Ci::PipelinePolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/ci/pipeline_schedule_policy.log matches class name Ci::PipelineSchedulePolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/ci/runner_policy.log matches class name Ci::RunnerPolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/ci/trigger_policy.log matches class name Ci::TriggerPolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/clusters/cluster_policy.log matches class name Clusters::ClusterPolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/commit_status_policy.log matches class name CommitStatusPolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/deploy_key_policy.log matches class name DeployKeyPolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/deploy_token_policy.log matches class name DeployTokenPolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/deployment_policy.log matches class name DeploymentPolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/environment_policy.log matches class name EnvironmentPolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/external_issue_policy.log matches class name ExternalIssuePolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/global_policy.log matches class name GlobalPolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/group_label_policy.log matches class name GroupLabelPolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/group_member_policy.log matches class name GroupMemberPolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/group_policy.log matches class name GroupPolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/issuable_policy.log matches class name IssuablePolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/issue_policy.log matches class name IssuePolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/merge_request_policy.log matches class name MergeRequestPolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/namespace_policy.log matches class name NamespacePolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/nil_policy.log matches class name NilPolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/note_policy.log matches class name NotePolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/personal_snippet_policy.log matches class name PersonalSnippetPolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/project_label_policy.log matches class name ProjectLabelPolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/project_member_policy.log matches class name ProjectMemberPolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/project_policy/class_methods.log matches class name ProjectPolicy::ClassMethods
Dataflow file: ../applications/pw-gitlab//dataflow/policies/project_policy.log matches class name ProjectPolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/project_snippet_policy.log matches class name ProjectSnippetPolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/protected_branch_policy.log matches class name ProtectedBranchPolicy
Dataflow file: ../applications/pw-gitlab//dataflow/policies/user_policy.log matches class name UserPolicy
Dataflow file: ../applications/pw-gitlab//dataflow/presenters/ci/build_metadata_presenter.log matches class name Ci::BuildMetadataPresenter
Dataflow file: ../applications/pw-gitlab//dataflow/presenters/ci/build_presenter.log matches class name Ci::BuildPresenter
Dataflow file: ../applications/pw-gitlab//dataflow/presenters/ci/group_variable_presenter.log matches class name Ci::GroupVariablePresenter
Dataflow file: ../applications/pw-gitlab//dataflow/presenters/ci/pipeline_presenter.log matches class name Ci::PipelinePresenter
Dataflow file: ../applications/pw-gitlab//dataflow/presenters/ci/variable_presenter.log matches class name Ci::VariablePresenter
Dataflow file: ../applications/pw-gitlab//dataflow/presenters/clusters/cluster_presenter.log matches class name Clusters::ClusterPresenter
Dataflow file: ../applications/pw-gitlab//dataflow/presenters/conversational_development_index/metric_presenter.log matches class name ConversationalDevelopmentIndex::MetricPresenter
Dataflow file: ../applications/pw-gitlab//dataflow/presenters/group_member_presenter.log matches class name GroupMemberPresenter
Dataflow file: ../applications/pw-gitlab//dataflow/presenters/member_presenter.log matches class name MemberPresenter
Dataflow file: ../applications/pw-gitlab//dataflow/presenters/members_presenter.log matches class name MembersPresenter
Dataflow file: ../applications/pw-gitlab//dataflow/presenters/merge_request_presenter.log matches class name MergeRequestPresenter
Dataflow file: ../applications/pw-gitlab//dataflow/presenters/project_member_presenter.log matches class name ProjectMemberPresenter
Dataflow file: ../applications/pw-gitlab//dataflow/presenters/project_presenter.log matches class name ProjectPresenter
Dataflow file: ../applications/pw-gitlab//dataflow/presenters/projects/settings/deploy_keys_presenter.log matches class name Projects::Settings::DeployKeysPresenter
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/analytics_build_entity.log matches class name AnalyticsBuildEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/analytics_build_serializer.log matches class name AnalyticsBuildSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/analytics_commit_entity.log matches class name AnalyticsCommitEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/analytics_commit_serializer.log matches class name AnalyticsCommitSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/analytics_generic_serializer.log matches class name AnalyticsGenericSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/analytics_issue_entity.log matches class name AnalyticsIssueEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/analytics_issue_serializer.log matches class name AnalyticsIssueSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/analytics_merge_request_entity.log matches class name AnalyticsMergeRequestEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/analytics_merge_request_serializer.log matches class name AnalyticsMergeRequestSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/analytics_stage_entity.log matches class name AnalyticsStageEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/analytics_stage_serializer.log matches class name AnalyticsStageSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/analytics_summary_entity.log matches class name AnalyticsSummaryEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/analytics_summary_serializer.log matches class name AnalyticsSummarySerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/award_emoji_entity.log matches class name AwardEmojiEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/base_serializer.log matches class name BaseSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/blob_entity.log matches class name BlobEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/build_action_entity.log matches class name BuildActionEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/build_artifact_entity.log matches class name BuildArtifactEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/build_details_entity.log matches class name BuildDetailsEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/build_metadata_entity.log matches class name BuildMetadataEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/build_serializer.log matches class name BuildSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/cluster_application_entity.log matches class name ClusterApplicationEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/cluster_entity.log matches class name ClusterEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/cluster_serializer.log matches class name ClusterSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/cohort_activity_month_entity.log matches class name CohortActivityMonthEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/cohort_entity.log matches class name CohortEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/cohorts_entity.log matches class name CohortsEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/cohorts_serializer.log matches class name CohortsSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/commit_entity.log matches class name CommitEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/concerns/with_pagination.log matches class name WithPagination
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/container_repositories_serializer.log matches class name ContainerRepositoriesSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/container_repository_entity.log matches class name ContainerRepositoryEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/container_tag_entity.log matches class name ContainerTagEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/container_tags_serializer.log matches class name ContainerTagsSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/deploy_key_entity.log matches class name DeployKeyEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/deploy_key_serializer.log matches class name DeployKeySerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/deploy_keys_project_entity.log matches class name DeployKeysProjectEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/deployment_entity.log matches class name DeploymentEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/deployment_serializer.log matches class name DeploymentSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/diff_file_entity.log matches class name DiffFileEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/discussion_entity.log matches class name DiscussionEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/discussion_serializer.log matches class name DiscussionSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/entity_date_helper.log matches class name EntityDateHelper
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/entity_request.log matches class name EntityRequest
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/environment_entity.log matches class name EnvironmentEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/environment_serializer.log matches class name EnvironmentSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/group_child_entity.log matches class name GroupChildEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/group_child_serializer.log matches class name GroupChildSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/group_entity.log matches class name GroupEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/group_serializer.log matches class name GroupSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/group_variable_entity.log matches class name GroupVariableEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/group_variable_serializer.log matches class name GroupVariableSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/issuable_entity.log matches class name IssuableEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/issuable_sidebar_entity.log matches class name IssuableSidebarEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/issue_entity.log matches class name IssueEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/issue_serializer.log matches class name IssueSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/issue_sidebar_entity.log matches class name IssueSidebarEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/job_entity.log matches class name JobEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/job_group_entity.log matches class name JobGroupEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/label_entity.log matches class name LabelEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/label_serializer.log matches class name LabelSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/lfs_file_lock_entity.log matches class name LfsFileLockEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/lfs_file_lock_serializer.log matches class name LfsFileLockSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/merge_request_basic_entity.log matches class name MergeRequestBasicEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/merge_request_basic_serializer.log matches class name MergeRequestBasicSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/merge_request_create_entity.log matches class name MergeRequestCreateEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/merge_request_create_serializer.log matches class name MergeRequestCreateSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/merge_request_metrics_entity.log matches class name MergeRequestMetricsEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/merge_request_serializer.log matches class name MergeRequestSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/merge_request_widget_entity.log matches class name MergeRequestWidgetEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/note_attachment_entity.log matches class name NoteAttachmentEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/note_entity.log matches class name NoteEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/note_user_entity.log matches class name NoteUserEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/pipeline_details_entity.log matches class name PipelineDetailsEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/pipeline_entity.log matches class name PipelineEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/pipeline_serializer.log matches class name PipelineSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/project_entity.log matches class name ProjectEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/project_note_entity.log matches class name ProjectNoteEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/project_note_serializer.log matches class name ProjectNoteSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/project_serializer.log matches class name ProjectSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/request_aware_entity.log matches class name RequestAwareEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/runner_entity.log matches class name RunnerEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/stage_entity.log matches class name StageEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/status_entity.log matches class name StatusEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/submodule_entity.log matches class name SubmoduleEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/time_trackable_entity.log matches class name TimeTrackableEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/tree_entity.log matches class name TreeEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/tree_root_entity.log matches class name TreeRootEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/tree_serializer.log matches class name TreeSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/user_entity.log matches class name UserEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/user_serializer.log matches class name UserSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/variable_entity.log matches class name VariableEntity
Dataflow file: ../applications/pw-gitlab//dataflow/serializers/variable_serializer.log matches class name VariableSerializer
Dataflow file: ../applications/pw-gitlab//dataflow/services/access_token_validation_service.log matches class name AccessTokenValidationService
Dataflow file: ../applications/pw-gitlab//dataflow/services/after_branch_delete_service.log matches class name AfterBranchDeleteService
Dataflow file: ../applications/pw-gitlab//dataflow/services/akismet_service.log matches class name AkismetService
Dataflow file: ../applications/pw-gitlab//dataflow/services/application_settings/base_service.log matches class name ApplicationSettings::BaseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/application_settings/update_service.log matches class name ApplicationSettings::UpdateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/applications/create_service.log matches class name Applications::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/audit_event_service.log matches class name AuditEventService
Dataflow file: ../applications/pw-gitlab//dataflow/services/auth/container_registry_authentication_service.log matches class name Auth::ContainerRegistryAuthenticationService
Dataflow file: ../applications/pw-gitlab//dataflow/services/badges/base_service.log matches class name Badges::BaseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/badges/build_service.log matches class name Badges::BuildService
Dataflow file: ../applications/pw-gitlab//dataflow/services/badges/create_service.log matches class name Badges::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/badges/update_service.log matches class name Badges::UpdateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/base_count_service.log matches class name BaseCountService
Dataflow file: ../applications/pw-gitlab//dataflow/services/base_renderer.log matches class name BaseRenderer
Dataflow file: ../applications/pw-gitlab//dataflow/services/base_service.log matches class name BaseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/boards/base_service.log matches class name Boards::BaseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/boards/create_service.log matches class name Boards::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/boards/issues/create_service.log matches class name Boards::Issues::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/boards/issues/list_service.log matches class name Boards::Issues::ListService
Dataflow file: ../applications/pw-gitlab//dataflow/services/boards/issues/move_service.log matches class name Boards::Issues::MoveService
Dataflow file: ../applications/pw-gitlab//dataflow/services/boards/list_service.log matches class name Boards::ListService
Dataflow file: ../applications/pw-gitlab//dataflow/services/boards/lists/create_service.log matches class name Boards::Lists::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/boards/lists/destroy_service.log matches class name Boards::Lists::DestroyService
Dataflow file: ../applications/pw-gitlab//dataflow/services/boards/lists/generate_service.log matches class name Boards::Lists::GenerateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/boards/lists/list_service.log matches class name Boards::Lists::ListService
Dataflow file: ../applications/pw-gitlab//dataflow/services/boards/lists/move_service.log matches class name Boards::Lists::MoveService
Dataflow file: ../applications/pw-gitlab//dataflow/services/chat_names/authorize_user_service.log matches class name ChatNames::AuthorizeUserService
Dataflow file: ../applications/pw-gitlab//dataflow/services/chat_names/find_user_service.log matches class name ChatNames::FindUserService
Dataflow file: ../applications/pw-gitlab//dataflow/services/check_gcp_project_billing_service.log matches class name CheckGcpProjectBillingService
Dataflow file: ../applications/pw-gitlab//dataflow/services/ci/create_pipeline_schedule_service.log matches class name Ci::CreatePipelineScheduleService
Dataflow file: ../applications/pw-gitlab//dataflow/services/ci/create_pipeline_service.log matches class name Ci::CreatePipelineService
Dataflow file: ../applications/pw-gitlab//dataflow/services/ci/ensure_stage_service.log matches class name Ci::EnsureStageService
Dataflow file: ../applications/pw-gitlab//dataflow/services/ci/extract_sections_from_build_trace_service.log matches class name Ci::ExtractSectionsFromBuildTraceService
Dataflow file: ../applications/pw-gitlab//dataflow/services/ci/fetch_kubernetes_token_service.log matches class name Ci::FetchKubernetesTokenService
Dataflow file: ../applications/pw-gitlab//dataflow/services/ci/pipeline_trigger_service.log matches class name Ci::PipelineTriggerService
Dataflow file: ../applications/pw-gitlab//dataflow/services/ci/play_build_service.log matches class name Ci::PlayBuildService
Dataflow file: ../applications/pw-gitlab//dataflow/services/ci/process_pipeline_service.log matches class name Ci::ProcessPipelineService
Dataflow file: ../applications/pw-gitlab//dataflow/services/ci/register_job_service.log matches class name Ci::RegisterJobService
Dataflow file: ../applications/pw-gitlab//dataflow/services/ci/retry_build_service.log matches class name Ci::RetryBuildService
Dataflow file: ../applications/pw-gitlab//dataflow/services/ci/retry_pipeline_service.log matches class name Ci::RetryPipelineService
Dataflow file: ../applications/pw-gitlab//dataflow/services/ci/stop_environments_service.log matches class name Ci::StopEnvironmentsService
Dataflow file: ../applications/pw-gitlab//dataflow/services/ci/update_build_queue_service.log matches class name Ci::UpdateBuildQueueService
Dataflow file: ../applications/pw-gitlab//dataflow/services/ci/update_runner_service.log matches class name Ci::UpdateRunnerService
Dataflow file: ../applications/pw-gitlab//dataflow/services/clusters/applications/base_helm_service.log matches class name Clusters::Applications::BaseHelmService
Dataflow file: ../applications/pw-gitlab//dataflow/services/clusters/applications/check_ingress_ip_address_service.log matches class name Clusters::Applications::CheckIngressIpAddressService
Dataflow file: ../applications/pw-gitlab//dataflow/services/clusters/applications/check_installation_progress_service.log matches class name Clusters::Applications::CheckInstallationProgressService
Dataflow file: ../applications/pw-gitlab//dataflow/services/clusters/applications/install_service.log matches class name Clusters::Applications::InstallService
Dataflow file: ../applications/pw-gitlab//dataflow/services/clusters/applications/schedule_installation_service.log matches class name Clusters::Applications::ScheduleInstallationService
Dataflow file: ../applications/pw-gitlab//dataflow/services/clusters/create_service.log matches class name Clusters::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/clusters/gcp/fetch_operation_service.log matches class name Clusters::Gcp::FetchOperationService
Dataflow file: ../applications/pw-gitlab//dataflow/services/clusters/gcp/finalize_creation_service.log matches class name Clusters::Gcp::FinalizeCreationService
Dataflow file: ../applications/pw-gitlab//dataflow/services/clusters/gcp/provision_service.log matches class name Clusters::Gcp::ProvisionService
Dataflow file: ../applications/pw-gitlab//dataflow/services/clusters/gcp/verify_provision_status_service.log matches class name Clusters::Gcp::VerifyProvisionStatusService
Dataflow file: ../applications/pw-gitlab//dataflow/services/clusters/update_service.log matches class name Clusters::UpdateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/cohorts_service.log matches class name CohortsService
Dataflow file: ../applications/pw-gitlab//dataflow/services/commits/change_service.log matches class name Commits::ChangeService
Dataflow file: ../applications/pw-gitlab//dataflow/services/commits/cherry_pick_service.log matches class name Commits::CherryPickService
Dataflow file: ../applications/pw-gitlab//dataflow/services/commits/create_service.log matches class name Commits::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/commits/revert_service.log matches class name Commits::RevertService
Dataflow file: ../applications/pw-gitlab//dataflow/services/compare_service.log matches class name CompareService
Dataflow file: ../applications/pw-gitlab//dataflow/services/concerns/issues/resolve_discussions.log matches class name Issues::ResolveDiscussions
Dataflow file: ../applications/pw-gitlab//dataflow/services/concerns/update_visibility_level.log matches class name UpdateVisibilityLevel
Dataflow file: ../applications/pw-gitlab//dataflow/services/concerns/users/new_user_notifier.log matches class name Users::NewUserNotifier
Dataflow file: ../applications/pw-gitlab//dataflow/services/create_branch_service.log matches class name CreateBranchService
Dataflow file: ../applications/pw-gitlab//dataflow/services/create_deployment_service.log matches class name CreateDeploymentService
Dataflow file: ../applications/pw-gitlab//dataflow/services/create_release_service.log matches class name CreateReleaseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/create_snippet_service.log matches class name CreateSnippetService
Dataflow file: ../applications/pw-gitlab//dataflow/services/delete_branch_service.log matches class name DeleteBranchService
Dataflow file: ../applications/pw-gitlab//dataflow/services/delete_merged_branches_service.log matches class name DeleteMergedBranchesService
Dataflow file: ../applications/pw-gitlab//dataflow/services/deploy_keys/create_service.log matches class name DeployKeys::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/deploy_tokens/create_service.log matches class name DeployTokens::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/discussions/base_service.log matches class name Discussions::BaseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/discussions/resolve_service.log matches class name Discussions::ResolveService
Dataflow file: ../applications/pw-gitlab//dataflow/services/discussions/update_diff_position_service.log matches class name Discussions::UpdateDiffPositionService
Dataflow file: ../applications/pw-gitlab//dataflow/services/emails/base_service.log matches class name Emails::BaseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/emails/confirm_service.log matches class name Emails::ConfirmService
Dataflow file: ../applications/pw-gitlab//dataflow/services/emails/create_service.log matches class name Emails::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/emails/destroy_service.log matches class name Emails::DestroyService
Dataflow file: ../applications/pw-gitlab//dataflow/services/event_create_service.log matches class name EventCreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/events/render_service.log matches class name Events::RenderService
Dataflow file: ../applications/pw-gitlab//dataflow/services/files/base_service.log matches class name Files::BaseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/files/create_dir_service.log matches class name Files::CreateDirService
Dataflow file: ../applications/pw-gitlab//dataflow/services/files/create_service.log matches class name Files::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/files/delete_service.log matches class name Files::DeleteService
Dataflow file: ../applications/pw-gitlab//dataflow/services/files/multi_service.log matches class name Files::MultiService
Dataflow file: ../applications/pw-gitlab//dataflow/services/files/update_service.log matches class name Files::UpdateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/git_push_service.log matches class name GitPushService
Dataflow file: ../applications/pw-gitlab//dataflow/services/git_tag_push_service.log matches class name GitTagPushService
Dataflow file: ../applications/pw-gitlab//dataflow/services/gpg_keys/create_service.log matches class name GpgKeys::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/gravatar_service.log matches class name GravatarService
Dataflow file: ../applications/pw-gitlab//dataflow/services/groups/base_service.log matches class name Groups::BaseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/groups/create_service.log matches class name Groups::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/groups/destroy_service.log matches class name Groups::DestroyService
Dataflow file: ../applications/pw-gitlab//dataflow/services/groups/nested_create_service.log matches class name Groups::NestedCreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/groups/transfer_service.log matches class name Groups::TransferService
Dataflow file: ../applications/pw-gitlab//dataflow/services/groups/update_service.log matches class name Groups::UpdateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/ham_service.log matches class name HamService
Dataflow file: ../applications/pw-gitlab//dataflow/services/import_export_clean_up_service.log matches class name ImportExportCleanUpService
Dataflow file: ../applications/pw-gitlab//dataflow/services/issuable/bulk_update_service.log matches class name Issuable::BulkUpdateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/issuable/common_system_notes_service.log matches class name Issuable::CommonSystemNotesService
Dataflow file: ../applications/pw-gitlab//dataflow/services/issuable/destroy_service.log matches class name Issuable::DestroyService
Dataflow file: ../applications/pw-gitlab//dataflow/services/issuable_base_service.log matches class name IssuableBaseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/issues/base_service.log matches class name Issues::BaseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/issues/build_service.log matches class name Issues::BuildService
Dataflow file: ../applications/pw-gitlab//dataflow/services/issues/close_service.log matches class name Issues::CloseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/issues/create_service.log matches class name Issues::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/issues/duplicate_service.log matches class name Issues::DuplicateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/issues/fetch_referenced_merge_requests_service.log matches class name Issues::FetchReferencedMergeRequestsService
Dataflow file: ../applications/pw-gitlab//dataflow/services/issues/move_service.log matches class name Issues::MoveService
Dataflow file: ../applications/pw-gitlab//dataflow/services/issues/reopen_service.log matches class name Issues::ReopenService
Dataflow file: ../applications/pw-gitlab//dataflow/services/issues/update_service.log matches class name Issues::UpdateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/keys/base_service.log matches class name Keys::BaseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/keys/create_service.log matches class name Keys::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/keys/last_used_service.log matches class name Keys::LastUsedService
Dataflow file: ../applications/pw-gitlab//dataflow/services/labels/base_service.log matches class name Labels::BaseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/labels/create_service.log matches class name Labels::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/labels/find_or_create_service.log matches class name Labels::FindOrCreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/labels/promote_service.log matches class name Labels::PromoteService
Dataflow file: ../applications/pw-gitlab//dataflow/services/labels/transfer_service.log matches class name Labels::TransferService
Dataflow file: ../applications/pw-gitlab//dataflow/services/labels/update_service.log matches class name Labels::UpdateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/lfs/file_transformer.log matches class name Lfs::FileTransformer::Result
Dataflow file: ../applications/pw-gitlab//dataflow/services/lfs/lock_file_service.log matches class name Lfs::LockFileService
Dataflow file: ../applications/pw-gitlab//dataflow/services/lfs/locks_finder_service.log matches class name Lfs::LocksFinderService
Dataflow file: ../applications/pw-gitlab//dataflow/services/lfs/unlock_file_service.log matches class name Lfs::UnlockFileService
Dataflow file: ../applications/pw-gitlab//dataflow/services/mattermost/create_team_service.log matches class name Mattermost::CreateTeamService
Dataflow file: ../applications/pw-gitlab//dataflow/services/members/approve_access_request_service.log matches class name Members::ApproveAccessRequestService
Dataflow file: ../applications/pw-gitlab//dataflow/services/members/base_service.log matches class name Members::BaseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/members/create_service.log matches class name Members::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/members/destroy_service.log matches class name Members::DestroyService
Dataflow file: ../applications/pw-gitlab//dataflow/services/members/request_access_service.log matches class name Members::RequestAccessService
Dataflow file: ../applications/pw-gitlab//dataflow/services/members/update_service.log matches class name Members::UpdateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/merge_request_metrics_service.log matches class name MergeRequestMetricsService
Dataflow file: ../applications/pw-gitlab//dataflow/services/merge_requests/add_todo_when_build_fails_service.log matches class name MergeRequests::AddTodoWhenBuildFailsService
Dataflow file: ../applications/pw-gitlab//dataflow/services/merge_requests/assign_issues_service.log matches class name MergeRequests::AssignIssuesService
Dataflow file: ../applications/pw-gitlab//dataflow/services/merge_requests/base_service.log matches class name MergeRequests::BaseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/merge_requests/build_service.log matches class name MergeRequests::BuildService
Dataflow file: ../applications/pw-gitlab//dataflow/services/merge_requests/close_service.log matches class name MergeRequests::CloseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/merge_requests/conflicts/base_service.log matches class name MergeRequests::Conflicts::BaseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/merge_requests/conflicts/list_service.log matches class name MergeRequests::Conflicts::ListService
Dataflow file: ../applications/pw-gitlab//dataflow/services/merge_requests/conflicts/resolve_service.log matches class name MergeRequests::Conflicts::ResolveService
Dataflow file: ../applications/pw-gitlab//dataflow/services/merge_requests/create_from_issue_service.log matches class name MergeRequests::CreateFromIssueService
Dataflow file: ../applications/pw-gitlab//dataflow/services/merge_requests/create_service.log matches class name MergeRequests::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/merge_requests/ff_merge_service.log matches class name MergeRequests::FfMergeService
Dataflow file: ../applications/pw-gitlab//dataflow/services/merge_requests/get_urls_service.log matches class name MergeRequests::GetUrlsService
Dataflow file: ../applications/pw-gitlab//dataflow/services/merge_requests/merge_request_diff_cache_service.log matches class name MergeRequests::MergeRequestDiffCacheService
Dataflow file: ../applications/pw-gitlab//dataflow/services/merge_requests/merge_service.log matches class name MergeRequests::MergeService
Dataflow file: ../applications/pw-gitlab//dataflow/services/merge_requests/merge_when_pipeline_succeeds_service.log matches class name MergeRequests::MergeWhenPipelineSucceedsService
Dataflow file: ../applications/pw-gitlab//dataflow/services/merge_requests/post_merge_service.log matches class name MergeRequests::PostMergeService
Dataflow file: ../applications/pw-gitlab//dataflow/services/merge_requests/rebase_service.log matches class name MergeRequests::RebaseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/merge_requests/refresh_service.log matches class name MergeRequests::RefreshService
Dataflow file: ../applications/pw-gitlab//dataflow/services/merge_requests/reopen_service.log matches class name MergeRequests::ReopenService
Dataflow file: ../applications/pw-gitlab//dataflow/services/merge_requests/resolved_discussion_notification_service.log matches class name MergeRequests::ResolvedDiscussionNotificationService
Dataflow file: ../applications/pw-gitlab//dataflow/services/merge_requests/update_service.log matches class name MergeRequests::UpdateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/merge_requests/working_copy_base_service.log matches class name MergeRequests::WorkingCopyBaseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/metrics_service.log matches class name MetricsService
Dataflow file: ../applications/pw-gitlab//dataflow/services/milestones/base_service.log matches class name Milestones::BaseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/milestones/close_service.log matches class name Milestones::CloseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/milestones/create_service.log matches class name Milestones::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/milestones/destroy_service.log matches class name Milestones::DestroyService
Dataflow file: ../applications/pw-gitlab//dataflow/services/milestones/promote_service.log matches class name Milestones::PromoteService
Dataflow file: ../applications/pw-gitlab//dataflow/services/milestones/reopen_service.log matches class name Milestones::ReopenService
Dataflow file: ../applications/pw-gitlab//dataflow/services/milestones/update_service.log matches class name Milestones::UpdateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/note_summary.log matches class name NoteSummary
Dataflow file: ../applications/pw-gitlab//dataflow/services/notes/build_service.log matches class name Notes::BuildService
Dataflow file: ../applications/pw-gitlab//dataflow/services/notes/create_service.log matches class name Notes::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/notes/destroy_service.log matches class name Notes::DestroyService
Dataflow file: ../applications/pw-gitlab//dataflow/services/notes/post_process_service.log matches class name Notes::PostProcessService
Dataflow file: ../applications/pw-gitlab//dataflow/services/notes/quick_actions_service.log matches class name Notes::QuickActionsService
Dataflow file: ../applications/pw-gitlab//dataflow/services/notes/render_service.log matches class name Notes::RenderService
Dataflow file: ../applications/pw-gitlab//dataflow/services/notes/update_service.log matches class name Notes::UpdateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/notification_recipient_service.log matches class name NotificationRecipientService::Builder::Base
Dataflow file: ../applications/pw-gitlab//dataflow/services/notification_service.log matches class name NotificationService
Dataflow file: ../applications/pw-gitlab//dataflow/services/pages_service.log matches class name PagesService
Dataflow file: ../applications/pw-gitlab//dataflow/services/preview_markdown_service.log matches class name PreviewMarkdownService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/after_import_service.log matches class name Projects::AfterImportService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/autocomplete_service.log matches class name Projects::AutocompleteService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/base_move_relations_service.log matches class name Projects::BaseMoveRelationsService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/batch_count_service.log matches class name Projects::BatchCountService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/batch_forks_count_service.log matches class name Projects::BatchForksCountService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/batch_open_issues_count_service.log matches class name Projects::BatchOpenIssuesCountService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/count_service.log matches class name Projects::CountService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/create_from_template_service.log matches class name Projects::CreateFromTemplateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/create_service.log matches class name Projects::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/destroy_service.log matches class name Projects::DestroyService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/download_service.log matches class name Projects::DownloadService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/enable_deploy_key_service.log matches class name Projects::EnableDeployKeyService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/fork_service.log matches class name Projects::ForkService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/forks_count_service.log matches class name Projects::ForksCountService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/gitlab_projects_import_service.log matches class name Projects::GitlabProjectsImportService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/group_links/create_service.log matches class name Projects::GroupLinks::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/group_links/destroy_service.log matches class name Projects::GroupLinks::DestroyService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/hashed_storage/migrate_attachments_service.log matches class name Projects::HashedStorage::MigrateAttachmentsService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/hashed_storage/migrate_repository_service.log matches class name Projects::HashedStorage::MigrateRepositoryService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/hashed_storage_migration_service.log matches class name Projects::HashedStorageMigrationService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/housekeeping_service.log matches class name Projects::HousekeepingService::LeaseTaken
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/import_export/export_service.log matches class name Projects::ImportExport::ExportService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/import_service.log matches class name Projects::ImportService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/move_access_service.log matches class name Projects::MoveAccessService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/move_deploy_keys_projects_service.log matches class name Projects::MoveDeployKeysProjectsService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/move_forks_service.log matches class name Projects::MoveForksService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/move_lfs_objects_projects_service.log matches class name Projects::MoveLfsObjectsProjectsService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/move_notification_settings_service.log matches class name Projects::MoveNotificationSettingsService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/move_project_authorizations_service.log matches class name Projects::MoveProjectAuthorizationsService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/move_project_group_links_service.log matches class name Projects::MoveProjectGroupLinksService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/move_project_members_service.log matches class name Projects::MoveProjectMembersService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/move_users_star_projects_service.log matches class name Projects::MoveUsersStarProjectsService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/open_issues_count_service.log matches class name Projects::OpenIssuesCountService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/open_merge_requests_count_service.log matches class name Projects::OpenMergeRequestsCountService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/overwrite_project_service.log matches class name Projects::OverwriteProjectService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/participants_service.log matches class name Projects::ParticipantsService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/propagate_service_template.log matches class name Projects::PropagateServiceTemplate
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/transfer_service.log matches class name Projects::TransferService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/unlink_fork_service.log matches class name Projects::UnlinkForkService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/update_pages_configuration_service.log matches class name Projects::UpdatePagesConfigurationService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/update_pages_service.log matches class name Projects::UpdatePagesService
Dataflow file: ../applications/pw-gitlab//dataflow/services/projects/update_service.log matches class name Projects::UpdateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/prometheus/adapter_service.log matches class name Prometheus::AdapterService
Dataflow file: ../applications/pw-gitlab//dataflow/services/protected_branches/access_level_params.log matches class name ProtectedBranches::AccessLevelParams
Dataflow file: ../applications/pw-gitlab//dataflow/services/protected_branches/api_service.log matches class name ProtectedBranches::ApiService
Dataflow file: ../applications/pw-gitlab//dataflow/services/protected_branches/create_service.log matches class name ProtectedBranches::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/protected_branches/destroy_service.log matches class name ProtectedBranches::DestroyService
Dataflow file: ../applications/pw-gitlab//dataflow/services/protected_branches/legacy_api_create_service.log matches class name ProtectedBranches::LegacyApiCreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/protected_branches/legacy_api_update_service.log matches class name ProtectedBranches::LegacyApiUpdateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/protected_branches/update_service.log matches class name ProtectedBranches::UpdateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/protected_tags/create_service.log matches class name ProtectedTags::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/protected_tags/destroy_service.log matches class name ProtectedTags::DestroyService
Dataflow file: ../applications/pw-gitlab//dataflow/services/protected_tags/update_service.log matches class name ProtectedTags::UpdateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/push_event_payload_service.log matches class name PushEventPayloadService
Dataflow file: ../applications/pw-gitlab//dataflow/services/quick_actions/interpret_service.log matches class name QuickActions::InterpretService
Dataflow file: ../applications/pw-gitlab//dataflow/services/repair_ldap_blocked_user_service.log matches class name RepairLdapBlockedUserService
Dataflow file: ../applications/pw-gitlab//dataflow/services/repository_archive_clean_up_service.log matches class name RepositoryArchiveCleanUpService
Dataflow file: ../applications/pw-gitlab//dataflow/services/reset_project_cache_service.log matches class name ResetProjectCacheService
Dataflow file: ../applications/pw-gitlab//dataflow/services/search/global_service.log matches class name Search::GlobalService
Dataflow file: ../applications/pw-gitlab//dataflow/services/search/group_service.log matches class name Search::GroupService
Dataflow file: ../applications/pw-gitlab//dataflow/services/search/project_service.log matches class name Search::ProjectService
Dataflow file: ../applications/pw-gitlab//dataflow/services/search/snippet_service.log matches class name Search::SnippetService
Dataflow file: ../applications/pw-gitlab//dataflow/services/search_service.log matches class name SearchService
Dataflow file: ../applications/pw-gitlab//dataflow/services/spam_check_service.log matches class name SpamCheckService
Dataflow file: ../applications/pw-gitlab//dataflow/services/spam_service.log matches class name SpamService
Dataflow file: ../applications/pw-gitlab//dataflow/services/submit_usage_ping_service.log matches class name SubmitUsagePingService
Dataflow file: ../applications/pw-gitlab//dataflow/services/system_hooks_service.log matches class name SystemHooksService
Dataflow file: ../applications/pw-gitlab//dataflow/services/system_note_service.log matches class name SystemNoteService
Dataflow file: ../applications/pw-gitlab//dataflow/services/tags/create_service.log matches class name Tags::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/tags/destroy_service.log matches class name Tags::DestroyService
Dataflow file: ../applications/pw-gitlab//dataflow/services/test_hooks/base_service.log matches class name TestHooks::BaseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/test_hooks/project_service.log matches class name TestHooks::ProjectService
Dataflow file: ../applications/pw-gitlab//dataflow/services/test_hooks/system_service.log matches class name TestHooks::SystemService
Dataflow file: ../applications/pw-gitlab//dataflow/services/todo_service.log matches class name TodoService
Dataflow file: ../applications/pw-gitlab//dataflow/services/update_release_service.log matches class name UpdateReleaseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/update_snippet_service.log matches class name UpdateSnippetService
Dataflow file: ../applications/pw-gitlab//dataflow/services/upload_service.log matches class name UploadService
Dataflow file: ../applications/pw-gitlab//dataflow/services/user_agent_detail_service.log matches class name UserAgentDetailService
Dataflow file: ../applications/pw-gitlab//dataflow/services/user_project_access_changed_service.log matches class name UserProjectAccessChangedService
Dataflow file: ../applications/pw-gitlab//dataflow/services/users/activity_service.log matches class name Users::ActivityService
Dataflow file: ../applications/pw-gitlab//dataflow/services/users/build_service.log matches class name Users::BuildService
Dataflow file: ../applications/pw-gitlab//dataflow/services/users/create_service.log matches class name Users::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/users/destroy_service.log matches class name Users::DestroyService
Dataflow file: ../applications/pw-gitlab//dataflow/services/users/keys_count_service.log matches class name Users::KeysCountService
Dataflow file: ../applications/pw-gitlab//dataflow/services/users/last_push_event_service.log matches class name Users::LastPushEventService
Dataflow file: ../applications/pw-gitlab//dataflow/services/users/migrate_to_ghost_user_service.log matches class name Users::MigrateToGhostUserService
Dataflow file: ../applications/pw-gitlab//dataflow/services/users/refresh_authorized_projects_service.log matches class name Users::RefreshAuthorizedProjectsService
Dataflow file: ../applications/pw-gitlab//dataflow/services/users/update_service.log matches class name Users::UpdateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/validate_new_branch_service.log matches class name ValidateNewBranchService
Dataflow file: ../applications/pw-gitlab//dataflow/services/verify_pages_domain_service.log matches class name VerifyPagesDomainService
Dataflow file: ../applications/pw-gitlab//dataflow/services/web_hook_service.log matches class name WebHookService::InternalErrorResponse
Dataflow file: ../applications/pw-gitlab//dataflow/services/wiki_pages/base_service.log matches class name WikiPages::BaseService
Dataflow file: ../applications/pw-gitlab//dataflow/services/wiki_pages/create_service.log matches class name WikiPages::CreateService
Dataflow file: ../applications/pw-gitlab//dataflow/services/wiki_pages/destroy_service.log matches class name WikiPages::DestroyService
Dataflow file: ../applications/pw-gitlab//dataflow/services/wiki_pages/update_service.log matches class name WikiPages::UpdateService
Dataflow file: ../applications/pw-gitlab//dataflow/uploaders/attachment_uploader.log matches class name AttachmentUploader
Dataflow file: ../applications/pw-gitlab//dataflow/uploaders/avatar_uploader.log matches class name AvatarUploader
Dataflow file: ../applications/pw-gitlab//dataflow/uploaders/file_mover.log matches class name FileMover
Dataflow file: ../applications/pw-gitlab//dataflow/uploaders/file_uploader.log matches class name FileUploader
Dataflow file: ../applications/pw-gitlab//dataflow/uploaders/gitlab_uploader.log matches class name GitlabUploader
Dataflow file: ../applications/pw-gitlab//dataflow/uploaders/job_artifact_uploader.log matches class name JobArtifactUploader
Dataflow file: ../applications/pw-gitlab//dataflow/uploaders/legacy_artifact_uploader.log matches class name LegacyArtifactUploader
Dataflow file: ../applications/pw-gitlab//dataflow/uploaders/lfs_object_uploader.log matches class name LfsObjectUploader
Dataflow file: ../applications/pw-gitlab//dataflow/uploaders/namespace_file_uploader.log matches class name NamespaceFileUploader
Dataflow file: ../applications/pw-gitlab//dataflow/uploaders/object_storage.log matches class name ObjectStorage::Store
Dataflow file: ../applications/pw-gitlab//dataflow/uploaders/personal_file_uploader.log matches class name PersonalFileUploader
Dataflow file: ../applications/pw-gitlab//dataflow/uploaders/records_uploads.log matches class name RecordsUploads::Concern
Dataflow file: ../applications/pw-gitlab//dataflow/uploaders/uploader_helper.log matches class name UploaderHelper
Dataflow file: ../applications/pw-gitlab//dataflow/uploaders/workhorse.log matches class name Workhorse::UploadPath
Dataflow file: ../applications/pw-gitlab//dataflow/validators/abstract_path_validator.log matches class name AbstractPathValidator
Dataflow file: ../applications/pw-gitlab//dataflow/validators/addressable_url_validator.log matches class name AddressableUrlValidator
Dataflow file: ../applications/pw-gitlab//dataflow/validators/certificate_fingerprint_validator.log matches class name CertificateFingerprintValidator
Dataflow file: ../applications/pw-gitlab//dataflow/validators/certificate_key_validator.log matches class name CertificateKeyValidator
Dataflow file: ../applications/pw-gitlab//dataflow/validators/certificate_validator.log matches class name CertificateValidator
Dataflow file: ../applications/pw-gitlab//dataflow/validators/cluster_name_validator.log matches class name ClusterNameValidator
Dataflow file: ../applications/pw-gitlab//dataflow/validators/color_validator.log matches class name ColorValidator
Dataflow file: ../applications/pw-gitlab//dataflow/validators/cron_timezone_validator.log matches class name CronTimezoneValidator
Dataflow file: ../applications/pw-gitlab//dataflow/validators/cron_validator.log matches class name CronValidator
Dataflow file: ../applications/pw-gitlab//dataflow/validators/duration_validator.log matches class name DurationValidator
Dataflow file: ../applications/pw-gitlab//dataflow/validators/email_validator.log matches class name EmailValidator
Dataflow file: ../applications/pw-gitlab//dataflow/validators/importable_url_validator.log matches class name ImportableUrlValidator
Dataflow file: ../applications/pw-gitlab//dataflow/validators/key_restriction_validator.log matches class name KeyRestrictionValidator
Dataflow file: ../applications/pw-gitlab//dataflow/validators/line_code_validator.log matches class name LineCodeValidator
Dataflow file: ../applications/pw-gitlab//dataflow/validators/namespace_name_validator.log matches class name NamespaceNameValidator
Dataflow file: ../applications/pw-gitlab//dataflow/validators/namespace_path_validator.log matches class name NamespacePathValidator
Dataflow file: ../applications/pw-gitlab//dataflow/validators/project_path_validator.log matches class name ProjectPathValidator
Dataflow file: ../applications/pw-gitlab//dataflow/validators/top_level_group_validator.log matches class name TopLevelGroupValidator
Dataflow file: ../applications/pw-gitlab//dataflow/validators/url_placeholder_validator.log matches class name UrlPlaceholderValidator
Dataflow file: ../applications/pw-gitlab//dataflow/validators/url_validator.log matches class name UrlValidator
Dataflow file: ../applications/pw-gitlab//dataflow/validators/variable_duplicates_validator.log matches class name VariableDuplicatesValidator
Dataflow file: ../applications/pw-gitlab//dataflow/workers/admin_email_worker.log matches class name AdminEmailWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/archive_trace_worker.log matches class name ArchiveTraceWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/authorized_projects_worker.log matches class name AuthorizedProjectsWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/background_migration_worker.log matches class name BackgroundMigrationWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/build_coverage_worker.log matches class name BuildCoverageWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/build_finished_worker.log matches class name BuildFinishedWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/build_hooks_worker.log matches class name BuildHooksWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/build_queue_worker.log matches class name BuildQueueWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/build_success_worker.log matches class name BuildSuccessWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/build_trace_sections_worker.log matches class name BuildTraceSectionsWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/check_gcp_project_billing_worker.log matches class name CheckGcpProjectBillingWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/cluster_install_app_worker.log matches class name ClusterInstallAppWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/cluster_provision_worker.log matches class name ClusterProvisionWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/cluster_wait_for_app_installation_worker.log matches class name ClusterWaitForAppInstallationWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/cluster_wait_for_ingress_ip_address_worker.log matches class name ClusterWaitForIngressIpAddressWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/concerns/application_worker.log matches class name ApplicationWorker::ClassMethods
Dataflow file: ../applications/pw-gitlab//dataflow/workers/concerns/cluster_applications.log matches class name ClusterApplications
Dataflow file: ../applications/pw-gitlab//dataflow/workers/concerns/cluster_queue.log matches class name ClusterQueue
Dataflow file: ../applications/pw-gitlab//dataflow/workers/concerns/cronjob_queue.log matches class name CronjobQueue
Dataflow file: ../applications/pw-gitlab//dataflow/workers/concerns/exception_backtrace.log matches class name ExceptionBacktrace
Dataflow file: ../applications/pw-gitlab//dataflow/workers/concerns/gitlab/github_import/notify_upon_death.log matches class name Gitlab::GithubImport::NotifyUponDeath
Dataflow file: ../applications/pw-gitlab//dataflow/workers/concerns/gitlab/github_import/object_importer.log matches class name Gitlab::GithubImport::ObjectImporter
Dataflow file: ../applications/pw-gitlab//dataflow/workers/concerns/gitlab/github_import/queue.log matches class name Gitlab::GithubImport::Queue
Dataflow file: ../applications/pw-gitlab//dataflow/workers/concerns/gitlab/github_import/rescheduling_methods.log matches class name Gitlab::GithubImport::ReschedulingMethods
Dataflow file: ../applications/pw-gitlab//dataflow/workers/concerns/gitlab/github_import/stage_methods.log matches class name Gitlab::GithubImport::StageMethods
Dataflow file: ../applications/pw-gitlab//dataflow/workers/concerns/mail_scheduler_queue.log matches class name MailSchedulerQueue
Dataflow file: ../applications/pw-gitlab//dataflow/workers/concerns/new_issuable.log matches class name NewIssuable
Dataflow file: ../applications/pw-gitlab//dataflow/workers/concerns/object_storage_queue.log matches class name ObjectStorageQueue
Dataflow file: ../applications/pw-gitlab//dataflow/workers/concerns/pipeline_background_queue.log matches class name PipelineBackgroundQueue
Dataflow file: ../applications/pw-gitlab//dataflow/workers/concerns/pipeline_queue.log matches class name PipelineQueue
Dataflow file: ../applications/pw-gitlab//dataflow/workers/concerns/project_import_options.log matches class name ProjectImportOptions
Dataflow file: ../applications/pw-gitlab//dataflow/workers/concerns/project_start_import.log matches class name ProjectStartImport
Dataflow file: ../applications/pw-gitlab//dataflow/workers/concerns/repository_check_queue.log matches class name RepositoryCheckQueue
Dataflow file: ../applications/pw-gitlab//dataflow/workers/concerns/waitable_worker.log matches class name WaitableWorker::ClassMethods
Dataflow file: ../applications/pw-gitlab//dataflow/workers/create_gpg_signature_worker.log matches class name CreateGpgSignatureWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/create_pipeline_worker.log matches class name CreatePipelineWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/delete_merged_branches_worker.log matches class name DeleteMergedBranchesWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/delete_user_worker.log matches class name DeleteUserWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/email_receiver_worker.log matches class name EmailReceiverWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/emails_on_push_worker.log matches class name EmailsOnPushWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/expire_build_artifacts_worker.log matches class name ExpireBuildArtifactsWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/expire_build_instance_artifacts_worker.log matches class name ExpireBuildInstanceArtifactsWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/expire_job_cache_worker.log matches class name ExpireJobCacheWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/expire_pipeline_cache_worker.log matches class name ExpirePipelineCacheWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/git_garbage_collect_worker.log matches class name GitGarbageCollectWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/gitlab/github_import/advance_stage_worker.log matches class name Gitlab::GithubImport::AdvanceStageWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/gitlab/github_import/import_diff_note_worker.log matches class name Gitlab::GithubImport::ImportDiffNoteWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/gitlab/github_import/import_issue_worker.log matches class name Gitlab::GithubImport::ImportIssueWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/gitlab/github_import/import_note_worker.log matches class name Gitlab::GithubImport::ImportNoteWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/gitlab/github_import/import_pull_request_worker.log matches class name Gitlab::GithubImport::ImportPullRequestWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/gitlab/github_import/refresh_import_jid_worker.log matches class name Gitlab::GithubImport::RefreshImportJidWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/gitlab/github_import/stage/finish_import_worker.log matches class name Gitlab::GithubImport::Stage::FinishImportWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/gitlab/github_import/stage/import_base_data_worker.log matches class name Gitlab::GithubImport::Stage::ImportBaseDataWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/gitlab/github_import/stage/import_issues_and_diff_notes_worker.log matches class name Gitlab::GithubImport::Stage::ImportIssuesAndDiffNotesWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/gitlab/github_import/stage/import_notes_worker.log matches class name Gitlab::GithubImport::Stage::ImportNotesWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/gitlab/github_import/stage/import_pull_requests_worker.log matches class name Gitlab::GithubImport::Stage::ImportPullRequestsWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/gitlab/github_import/stage/import_repository_worker.log matches class name Gitlab::GithubImport::Stage::ImportRepositoryWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/gitlab_shell_worker.log matches class name GitlabShellWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/gitlab_usage_ping_worker.log matches class name GitlabUsagePingWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/group_destroy_worker.log matches class name GroupDestroyWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/import_export_project_cleanup_worker.log matches class name ImportExportProjectCleanupWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/invalid_gpg_signature_update_worker.log matches class name InvalidGpgSignatureUpdateWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/irker_worker.log matches class name IrkerWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/issue_due_scheduler_worker.log matches class name IssueDueSchedulerWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/mail_scheduler/issue_due_worker.log matches class name MailScheduler::IssueDueWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/merge_worker.log matches class name MergeWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/namespaceless_project_destroy_worker.log matches class name NamespacelessProjectDestroyWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/new_issue_worker.log matches class name NewIssueWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/new_merge_request_worker.log matches class name NewMergeRequestWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/new_note_worker.log matches class name NewNoteWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/object_storage/background_move_worker.log matches class name ObjectStorage::BackgroundMoveWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/object_storage/migrate_uploads_worker.log matches class name ObjectStorage::MigrateUploadsWorker::Upload
Dataflow file: ../applications/pw-gitlab//dataflow/workers/object_storage_upload_worker.log matches class name ObjectStorageUploadWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/pages_domain_verification_cron_worker.log matches class name PagesDomainVerificationCronWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/pages_domain_verification_worker.log matches class name PagesDomainVerificationWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/pages_worker.log matches class name PagesWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/pipeline_hooks_worker.log matches class name PipelineHooksWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/pipeline_metrics_worker.log matches class name PipelineMetricsWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/pipeline_notification_worker.log matches class name PipelineNotificationWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/pipeline_process_worker.log matches class name PipelineProcessWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/pipeline_schedule_worker.log matches class name PipelineScheduleWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/pipeline_success_worker.log matches class name PipelineSuccessWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/pipeline_update_worker.log matches class name PipelineUpdateWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/plugin_worker.log matches class name PluginWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/post_receive.log matches class name PostReceive
Dataflow file: ../applications/pw-gitlab//dataflow/workers/process_commit_worker.log matches class name ProcessCommitWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/project_cache_worker.log matches class name ProjectCacheWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/project_destroy_worker.log matches class name ProjectDestroyWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/project_export_worker.log matches class name ProjectExportWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/project_migrate_hashed_storage_worker.log matches class name ProjectMigrateHashedStorageWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/project_service_worker.log matches class name ProjectServiceWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/propagate_service_template_worker.log matches class name PropagateServiceTemplateWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/prune_old_events_worker.log matches class name PruneOldEventsWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/reactive_caching_worker.log matches class name ReactiveCachingWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/rebase_worker.log matches class name RebaseWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/remove_expired_group_links_worker.log matches class name RemoveExpiredGroupLinksWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/remove_expired_members_worker.log matches class name RemoveExpiredMembersWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/remove_old_web_hook_logs_worker.log matches class name RemoveOldWebHookLogsWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/remove_unreferenced_lfs_objects_worker.log matches class name RemoveUnreferencedLfsObjectsWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/repository_archive_cache_worker.log matches class name RepositoryArchiveCacheWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/repository_check/batch_worker.log matches class name RepositoryCheck::BatchWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/repository_check/clear_worker.log matches class name RepositoryCheck::ClearWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/repository_check/single_repository_worker.log matches class name RepositoryCheck::SingleRepositoryWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/repository_fork_worker.log matches class name RepositoryForkWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/repository_import_worker.log matches class name RepositoryImportWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/requests_profiles_worker.log matches class name RequestsProfilesWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/run_pipeline_schedule_worker.log matches class name RunPipelineScheduleWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/schedule_update_user_activity_worker.log matches class name ScheduleUpdateUserActivityWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/stage_update_worker.log matches class name StageUpdateWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/storage_migrator_worker.log matches class name StorageMigratorWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/stuck_ci_jobs_worker.log matches class name StuckCiJobsWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/stuck_import_jobs_worker.log matches class name StuckImportJobsWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/stuck_merge_jobs_worker.log matches class name StuckMergeJobsWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/system_hook_push_worker.log matches class name SystemHookPushWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/trending_projects_worker.log matches class name TrendingProjectsWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/update_head_pipeline_for_merge_request_worker.log matches class name UpdateHeadPipelineForMergeRequestWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/update_merge_requests_worker.log matches class name UpdateMergeRequestsWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/update_user_activity_worker.log matches class name UpdateUserActivityWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/upload_checksum_worker.log matches class name UploadChecksumWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/wait_for_cluster_creation_worker.log matches class name WaitForClusterCreationWorker
Dataflow file: ../applications/pw-gitlab//dataflow/workers/web_hook_worker.log matches class name WebHookWorker
read_dataflow: 2019.804782
	TIME-read_util_function: 0.000141
	TIME-read_repeatable_function: 5.0e-06
	TIME-Fill in the empty CFG: 0.192348
in MilestoneActions Reject ApplicationController . view_to_html_string
in RendersBlob Reject ApplicationController . view_to_html_string
in RoutableActions Reject ApplicationController . route_not_found
in AccessRequestable Reject UsersController . exists
in TokenAuthenticatable Reject UsersController . exists
in ValidAttribute Reject UsersController . exists
in ProjectFeaturesCompatibility Reject UsersController . exists
in Presentable Reject UsersController . exists
in Routable Reject UsersController . exists
in GroupDescendant Reject UsersController . exists
in DeploymentPlatform Reject UsersController . exists
in ChronicDurationAttribute Reject UsersController . exists
in RunnerJobsFinder Reject Admin::RunnersController . runner
Find caller_type = deploy_token, DeployToken, in func DeployTokensHelper.expand_deploy_tokens_section?
Find caller_type = external_wiki_service, ExternalWikiService, in func ExternalWikiHelper.get_project_wiki_path
in BlobLike Reject Projects::ArtifactsController . entry
in Ci::ArtifactBlob Reject Projects::ArtifactsController . entry
in BlobLike Reject Projects::ArtifactsController . entry
in Ci::ArtifactBlob Reject Projects::ArtifactsController . entry
